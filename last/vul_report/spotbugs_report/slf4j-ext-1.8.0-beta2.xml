<?xml version="1.0" encoding="UTF-8"?>

<BugCollection version="4.8.1" sequence="0" timestamp="1702013724749" analysisTimestamp="1702018837922" release="">
  <Project projectName="">
    <Jar>vul_jar\\slf4j-ext-1.8.0-beta2.jar</Jar>
  </Project>
  <BugInstance type="DM_DEFAULT_ENCODING" priority="1" rank="19" abbrev="Dm" category="I18N" instanceHash="53ca7580c8616f61bb0d07b61acd11cd" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Reliance on default encoding</ShortMessage>
    <LongMessage>Found reliance on default encoding in org.slf4j.agent.AgentPremain.parseArguments(String, String): String.getBytes()</LongMessage>
    <Class classname="org.slf4j.agent.AgentPremain" primary="true">
      <SourceLine classname="org.slf4j.agent.AgentPremain" start="39" end="125" sourcefile="AgentPremain.java" sourcepath="org/slf4j/agent/AgentPremain.java">
        <Message>At AgentPremain.java:[lines 39-125]</Message>
      </SourceLine>
      <Message>In class org.slf4j.agent.AgentPremain</Message>
    </Class>
    <Method classname="org.slf4j.agent.AgentPremain" name="parseArguments" signature="(Ljava/lang/String;Ljava/lang/String;)Ljava/util/Properties;" isStatic="true" primary="true">
      <SourceLine classname="org.slf4j.agent.AgentPremain" start="95" end="103" startBytecode="0" endBytecode="207" sourcefile="AgentPremain.java" sourcepath="org/slf4j/agent/AgentPremain.java"/>
      <Message>In method org.slf4j.agent.AgentPremain.parseArguments(String, String)</Message>
    </Method>
    <Method classname="java.lang.String" name="getBytes" signature="()[B" isStatic="false" role="METHOD_CALLED">
      <SourceLine classname="java.lang.String" start="1807" end="1807" startBytecode="0" endBytecode="56" sourcefile="String.java" sourcepath="java/lang/String.java"/>
      <Message>Called method String.getBytes()</Message>
    </Method>
    <SourceLine classname="org.slf4j.agent.AgentPremain" primary="true" start="98" end="98" startBytecode="22" endBytecode="22" sourcefile="AgentPremain.java" sourcepath="org/slf4j/agent/AgentPremain.java">
      <Message>At AgentPremain.java:[line 98]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="CT_CONSTRUCTOR_THROW" priority="2" rank="16" abbrev="CT" category="BAD_PRACTICE" instanceHash="241e0db0961c2601f76ab030f9b4495d" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Be wary of letting constructors throw exceptions.</ShortMessage>
    <LongMessage>Exception thrown in class org.slf4j.cal10n.LocLogger at new org.slf4j.cal10n.LocLogger(Logger, IMessageConveyor) will leave the constructor. The object under construction remains partially initialized and may be vulnerable to Finalizer attacks.</LongMessage>
    <Class classname="org.slf4j.cal10n.LocLogger" primary="true">
      <SourceLine classname="org.slf4j.cal10n.LocLogger" start="44" end="171" sourcefile="LocLogger.java" sourcepath="org/slf4j/cal10n/LocLogger.java">
        <Message>At LocLogger.java:[lines 44-171]</Message>
      </SourceLine>
      <Message>In class org.slf4j.cal10n.LocLogger</Message>
    </Class>
    <Method classname="org.slf4j.cal10n.LocLogger" name="&lt;init&gt;" signature="(Lorg/slf4j/Logger;Lch/qos/cal10n/IMessageConveyor;)V" isStatic="false" primary="true">
      <SourceLine classname="org.slf4j.cal10n.LocLogger" start="56" end="61" startBytecode="0" endBytecode="132" sourcefile="LocLogger.java" sourcepath="org/slf4j/cal10n/LocLogger.java"/>
      <Message>In method new org.slf4j.cal10n.LocLogger(Logger, IMessageConveyor)</Message>
    </Method>
    <SourceLine classname="org.slf4j.cal10n.LocLogger" primary="true" start="58" end="58" startBytecode="24" endBytecode="24" sourcefile="LocLogger.java" sourcepath="org/slf4j/cal10n/LocLogger.java">
      <Message>At LocLogger.java:[line 58]</Message>
    </SourceLine>
    <SourceLine classname="org.slf4j.cal10n.LocLogger" start="58" end="58" startBytecode="24" endBytecode="24" sourcefile="LocLogger.java" sourcepath="org/slf4j/cal10n/LocLogger.java">
      <Message>At LocLogger.java:[line 58]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="CT_CONSTRUCTOR_THROW" priority="2" rank="16" abbrev="CT" category="BAD_PRACTICE" instanceHash="528aee02a339a0538701ea0b5051f1f2" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Be wary of letting constructors throw exceptions.</ShortMessage>
    <LongMessage>Exception thrown in class org.slf4j.ext.EventData at new org.slf4j.ext.EventData(String) will leave the constructor. The object under construction remains partially initialized and may be vulnerable to Finalizer attacks.</LongMessage>
    <Class classname="org.slf4j.ext.EventData" primary="true">
      <SourceLine classname="org.slf4j.ext.EventData" start="50" end="305" sourcefile="EventData.java" sourcepath="org/slf4j/ext/EventData.java">
        <Message>At EventData.java:[lines 50-305]</Message>
      </SourceLine>
      <Message>In class org.slf4j.ext.EventData</Message>
    </Class>
    <Method classname="org.slf4j.ext.EventData" name="&lt;init&gt;" signature="(Ljava/lang/String;)V" isStatic="false" primary="true">
      <SourceLine classname="org.slf4j.ext.EventData" start="80" end="88" startBytecode="0" endBytecode="229" sourcefile="EventData.java" sourcepath="org/slf4j/ext/EventData.java"/>
      <Message>In method new org.slf4j.ext.EventData(String)</Message>
    </Method>
    <SourceLine classname="org.slf4j.ext.EventData" primary="true" start="86" end="86" startBytecode="78" endBytecode="78" sourcefile="EventData.java" sourcepath="org/slf4j/ext/EventData.java">
      <Message>At EventData.java:[line 86]</Message>
    </SourceLine>
    <SourceLine classname="org.slf4j.ext.EventData" start="86" end="86" startBytecode="78" endBytecode="78" sourcefile="EventData.java" sourcepath="org/slf4j/ext/EventData.java">
      <Message>At EventData.java:[line 86]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DM_DEFAULT_ENCODING" priority="1" rank="19" abbrev="Dm" category="I18N" instanceHash="f0309c832322880ee067b75cb3db23a5" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Reliance on default encoding</ShortMessage>
    <LongMessage>Found reliance on default encoding in new org.slf4j.ext.EventData(String): String.getBytes()</LongMessage>
    <Class classname="org.slf4j.ext.EventData" primary="true">
      <SourceLine classname="org.slf4j.ext.EventData" start="50" end="305" sourcefile="EventData.java" sourcepath="org/slf4j/ext/EventData.java">
        <Message>At EventData.java:[lines 50-305]</Message>
      </SourceLine>
      <Message>In class org.slf4j.ext.EventData</Message>
    </Class>
    <Method classname="org.slf4j.ext.EventData" name="&lt;init&gt;" signature="(Ljava/lang/String;)V" isStatic="false" primary="true">
      <SourceLine classname="org.slf4j.ext.EventData" start="80" end="88" startBytecode="0" endBytecode="229" sourcefile="EventData.java" sourcepath="org/slf4j/ext/EventData.java"/>
      <Message>In method new org.slf4j.ext.EventData(String)</Message>
    </Method>
    <Method classname="java.lang.String" name="getBytes" signature="()[B" isStatic="false" role="METHOD_CALLED">
      <SourceLine classname="java.lang.String" start="1807" end="1807" startBytecode="0" endBytecode="56" sourcefile="String.java" sourcepath="java/lang/String.java"/>
      <Message>Called method String.getBytes()</Message>
    </Method>
    <SourceLine classname="org.slf4j.ext.EventData" primary="true" start="81" end="81" startBytecode="20" endBytecode="20" sourcefile="EventData.java" sourcepath="org/slf4j/ext/EventData.java">
      <Message>At EventData.java:[line 81]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DM_DEFAULT_ENCODING" priority="1" rank="19" abbrev="Dm" category="I18N" instanceHash="b86b56a856e0f203b7f3a332f626a50b" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Reliance on default encoding</ShortMessage>
    <LongMessage>Found reliance on default encoding in org.slf4j.ext.EventData.toXML(Map): java.io.ByteArrayOutputStream.toString()</LongMessage>
    <Class classname="org.slf4j.ext.EventData" primary="true">
      <SourceLine classname="org.slf4j.ext.EventData" start="50" end="305" sourcefile="EventData.java" sourcepath="org/slf4j/ext/EventData.java">
        <Message>At EventData.java:[lines 50-305]</Message>
      </SourceLine>
      <Message>In class org.slf4j.ext.EventData</Message>
    </Class>
    <Method classname="org.slf4j.ext.EventData" name="toXML" signature="(Ljava/util/Map;)Ljava/lang/String;" isStatic="true" primary="true">
      <SourceLine classname="org.slf4j.ext.EventData" start="106" end="119" startBytecode="0" endBytecode="202" sourcefile="EventData.java" sourcepath="org/slf4j/ext/EventData.java"/>
      <Message>In method org.slf4j.ext.EventData.toXML(Map)</Message>
    </Method>
    <Method classname="java.io.ByteArrayOutputStream" name="toString" signature="()Ljava/lang/String;" isStatic="false" role="METHOD_CALLED">
      <SourceLine classname="java.io.ByteArrayOutputStream" start="215" end="215" startBytecode="0" endBytecode="58" sourcefile="ByteArrayOutputStream.java" sourcepath="java/io/ByteArrayOutputStream.java"/>
      <Message>Called method java.io.ByteArrayOutputStream.toString()</Message>
    </Method>
    <SourceLine classname="org.slf4j.ext.EventData" primary="true" start="116" end="116" startBytecode="38" endBytecode="38" sourcefile="EventData.java" sourcepath="org/slf4j/ext/EventData.java">
      <Message>At EventData.java:[line 116]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="6694b2118314d8ee274dae0427338a8f" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.slf4j.ext.EventData.getEventMap() may expose internal representation by returning EventData.eventData</LongMessage>
    <Class classname="org.slf4j.ext.EventData" primary="true">
      <SourceLine classname="org.slf4j.ext.EventData" start="50" end="305" sourcefile="EventData.java" sourcepath="org/slf4j/ext/EventData.java">
        <Message>At EventData.java:[lines 50-305]</Message>
      </SourceLine>
      <Message>In class org.slf4j.ext.EventData</Message>
    </Class>
    <Method classname="org.slf4j.ext.EventData" name="getEventMap" signature="()Ljava/util/Map;" isStatic="false" primary="true">
      <SourceLine classname="org.slf4j.ext.EventData" start="263" end="263" startBytecode="0" endBytecode="46" sourcefile="EventData.java" sourcepath="org/slf4j/ext/EventData.java"/>
      <Message>In method org.slf4j.ext.EventData.getEventMap()</Message>
    </Method>
    <Field classname="org.slf4j.ext.EventData" name="eventData" signature="Ljava/util/Map;" isStatic="false" primary="true">
      <SourceLine classname="org.slf4j.ext.EventData" sourcefile="EventData.java" sourcepath="org/slf4j/ext/EventData.java">
        <Message>In EventData.java</Message>
      </SourceLine>
      <Message>Field org.slf4j.ext.EventData.eventData</Message>
    </Field>
    <SourceLine classname="org.slf4j.ext.EventData" primary="true" start="263" end="263" startBytecode="4" endBytecode="4" sourcefile="EventData.java" sourcepath="org/slf4j/ext/EventData.java">
      <Message>At EventData.java:[line 263]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EQ_CHECK_FOR_OPERAND_NOT_COMPATIBLE_WITH_THIS" priority="1" rank="14" abbrev="Eq" category="BAD_PRACTICE" instanceHash="b28de4c9407851a27744cacc794c435a" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Equals checks for incompatible operand</ShortMessage>
    <LongMessage>org.slf4j.ext.EventData.equals(Object) checks for operand being a java.util.Map</LongMessage>
    <Class classname="org.slf4j.ext.EventData" primary="true">
      <SourceLine classname="org.slf4j.ext.EventData" start="50" end="305" sourcefile="EventData.java" sourcepath="org/slf4j/ext/EventData.java">
        <Message>At EventData.java:[lines 50-305]</Message>
      </SourceLine>
      <Message>In class org.slf4j.ext.EventData</Message>
    </Class>
    <Method classname="org.slf4j.ext.EventData" name="equals" signature="(Ljava/lang/Object;)Z" isStatic="false" primary="true">
      <SourceLine classname="org.slf4j.ext.EventData" start="287" end="295" startBytecode="0" endBytecode="170" sourcefile="EventData.java" sourcepath="org/slf4j/ext/EventData.java"/>
      <Message>In method org.slf4j.ext.EventData.equals(Object)</Message>
    </Method>
    <Type descriptor="Ljava/util/Map;" role="TYPE_FOUND">
      <SourceLine classname="java.util.Map" start="671" end="1734" sourcefile="Map.java" sourcepath="java/util/Map.java">
        <Message>At Map.java:[lines 671-1734]</Message>
      </SourceLine>
      <Message>Actual type java.util.Map</Message>
    </Type>
    <SourceLine classname="org.slf4j.ext.EventData" primary="true" start="290" end="290" startBytecode="15" endBytecode="15" sourcefile="EventData.java" sourcepath="org/slf4j/ext/EventData.java">
      <Message>At EventData.java:[line 290]</Message>
    </SourceLine>
    <SourceLine classname="org.slf4j.ext.EventData" start="293" end="293" startBytecode="41" endBytecode="41" sourcefile="EventData.java" sourcepath="org/slf4j/ext/EventData.java" role="SOURCE_LINE_ANOTHER_INSTANCE">
      <Message>Another occurrence at EventData.java:[line 293]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DM_CONVERT_CASE" priority="3" rank="20" abbrev="Dm" category="I18N" instanceHash="95d5c6c8977e837193501563a84231f7" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Consider using Locale parameterized version of invoked method</ShortMessage>
    <LongMessage>Use of non-localized String.toUpperCase() or String.toLowerCase() in new org.slf4j.instrumentation.LogTransformer(LogTransformer$Builder)</LongMessage>
    <Class classname="org.slf4j.instrumentation.LogTransformer" primary="true">
      <SourceLine classname="org.slf4j.instrumentation.LogTransformer" start="55" end="311" sourcefile="LogTransformer.java" sourcepath="org/slf4j/instrumentation/LogTransformer.java">
        <Message>At LogTransformer.java:[lines 55-311]</Message>
      </SourceLine>
      <Message>In class org.slf4j.instrumentation.LogTransformer</Message>
    </Class>
    <Method classname="org.slf4j.instrumentation.LogTransformer" name="&lt;init&gt;" signature="(Lorg/slf4j/instrumentation/LogTransformer$Builder;)V" isStatic="false" primary="true">
      <SourceLine classname="org.slf4j.instrumentation.LogTransformer" start="141" end="157" startBytecode="0" endBytecode="272" sourcefile="LogTransformer.java" sourcepath="org/slf4j/instrumentation/LogTransformer.java"/>
      <Message>In method new org.slf4j.instrumentation.LogTransformer(LogTransformer$Builder)</Message>
    </Method>
    <SourceLine classname="org.slf4j.instrumentation.LogTransformer" primary="true" start="156" end="156" startBytecode="87" endBytecode="87" sourcefile="LogTransformer.java" sourcepath="org/slf4j/instrumentation/LogTransformer.java">
      <Message>At LogTransformer.java:[line 156]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="REC_CATCH_EXCEPTION" priority="3" rank="20" abbrev="REC" category="STYLE" instanceHash="156bf0753baa7e8536e74583f4892cdb" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="396">
    <ShortMessage>Exception is caught when Exception is not thrown</ShortMessage>
    <LongMessage>Exception is caught when Exception is not thrown in org.slf4j.instrumentation.LogTransformer.doClass(String, Class, byte[])</LongMessage>
    <Class classname="org.slf4j.instrumentation.LogTransformer" primary="true">
      <SourceLine classname="org.slf4j.instrumentation.LogTransformer" start="55" end="311" sourcefile="LogTransformer.java" sourcepath="org/slf4j/instrumentation/LogTransformer.java">
        <Message>At LogTransformer.java:[lines 55-311]</Message>
      </SourceLine>
      <Message>In class org.slf4j.instrumentation.LogTransformer</Message>
    </Class>
    <Method classname="org.slf4j.instrumentation.LogTransformer" name="doClass" signature="(Ljava/lang/String;Ljava/lang/Class;[B)[B" isStatic="false" primary="true">
      <SourceLine classname="org.slf4j.instrumentation.LogTransformer" start="237" end="281" startBytecode="0" endBytecode="729" sourcefile="LogTransformer.java" sourcepath="org/slf4j/instrumentation/LogTransformer.java"/>
      <Message>In method org.slf4j.instrumentation.LogTransformer.doClass(String, Class, byte[])</Message>
    </Method>
    <SourceLine classname="org.slf4j.instrumentation.LogTransformer" primary="true" start="273" end="273" startBytecode="162" endBytecode="162" sourcefile="LogTransformer.java" sourcepath="org/slf4j/instrumentation/LogTransformer.java">
      <Message>At LogTransformer.java:[line 273]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DM_CONVERT_CASE" priority="3" rank="20" abbrev="Dm" category="I18N" instanceHash="3f5a4e6bae68dd1986eef49253cd7e5a" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Consider using Locale parameterized version of invoked method</ShortMessage>
    <LongMessage>Use of non-localized String.toUpperCase() or String.toLowerCase() in org.slf4j.instrumentation.LogTransformer$Builder.level(String)</LongMessage>
    <Class classname="org.slf4j.instrumentation.LogTransformer$Builder" primary="true">
      <SourceLine classname="org.slf4j.instrumentation.LogTransformer$Builder" start="64" end="134" sourcefile="LogTransformer.java" sourcepath="org/slf4j/instrumentation/LogTransformer.java">
        <Message>At LogTransformer.java:[lines 64-134]</Message>
      </SourceLine>
      <Message>In class org.slf4j.instrumentation.LogTransformer$Builder</Message>
    </Class>
    <Method classname="org.slf4j.instrumentation.LogTransformer$Builder" name="level" signature="(Ljava/lang/String;)Lorg/slf4j/instrumentation/LogTransformer$Builder;" isStatic="false" primary="true">
      <SourceLine classname="org.slf4j.instrumentation.LogTransformer$Builder" start="126" end="134" startBytecode="0" endBytecode="156" sourcefile="LogTransformer.java" sourcepath="org/slf4j/instrumentation/LogTransformer.java"/>
      <Message>In method org.slf4j.instrumentation.LogTransformer$Builder.level(String)</Message>
    </Method>
    <SourceLine classname="org.slf4j.instrumentation.LogTransformer$Builder" primary="true" start="126" end="126" startBytecode="1" endBytecode="1" sourcefile="LogTransformer.java" sourcepath="org/slf4j/instrumentation/LogTransformer.java">
      <Message>At LogTransformer.java:[line 126]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="9f1d249c6fb88bcd4b4d6bbdce75eb22" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>org.slf4j.instrumentation.LogTransformer$Builder.ignore(String[]) may expose internal representation by storing an externally mutable object into LogTransformer$Builder.ignore</LongMessage>
    <Class classname="org.slf4j.instrumentation.LogTransformer$Builder" primary="true">
      <SourceLine classname="org.slf4j.instrumentation.LogTransformer$Builder" start="64" end="134" sourcefile="LogTransformer.java" sourcepath="org/slf4j/instrumentation/LogTransformer.java">
        <Message>At LogTransformer.java:[lines 64-134]</Message>
      </SourceLine>
      <Message>In class org.slf4j.instrumentation.LogTransformer$Builder</Message>
    </Class>
    <Method classname="org.slf4j.instrumentation.LogTransformer$Builder" name="ignore" signature="([Ljava/lang/String;)Lorg/slf4j/instrumentation/LogTransformer$Builder;" isStatic="false" primary="true">
      <SourceLine classname="org.slf4j.instrumentation.LogTransformer$Builder" start="119" end="120" startBytecode="0" endBytecode="62" sourcefile="LogTransformer.java" sourcepath="org/slf4j/instrumentation/LogTransformer.java"/>
      <Message>In method org.slf4j.instrumentation.LogTransformer$Builder.ignore(String[])</Message>
    </Method>
    <Field classname="org.slf4j.instrumentation.LogTransformer$Builder" name="ignore" signature="[Ljava/lang/String;" isStatic="false" primary="true">
      <SourceLine classname="org.slf4j.instrumentation.LogTransformer$Builder" sourcefile="LogTransformer.java" sourcepath="org/slf4j/instrumentation/LogTransformer.java">
        <Message>In LogTransformer.java</Message>
      </SourceLine>
      <Message>Field org.slf4j.instrumentation.LogTransformer$Builder.ignore</Message>
    </Field>
    <LocalVariable name="strings" register="1" pc="2" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named strings</Message>
    </LocalVariable>
    <SourceLine classname="org.slf4j.instrumentation.LogTransformer$Builder" primary="true" start="119" end="119" startBytecode="2" endBytecode="2" sourcefile="LogTransformer.java" sourcepath="org/slf4j/instrumentation/LogTransformer.java">
      <Message>At LogTransformer.java:[line 119]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="UUF_UNUSED_FIELD" priority="2" rank="18" abbrev="UuF" category="PERFORMANCE" instanceHash="5f799ecc9e5bd1f471aa8db3658593d0" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Unused field</ShortMessage>
    <LongMessage>Unused field: org.slf4j.instrumentation.LogTransformer$Builder.addVariableAssignment</LongMessage>
    <Class classname="org.slf4j.instrumentation.LogTransformer$Builder" primary="true">
      <SourceLine classname="org.slf4j.instrumentation.LogTransformer$Builder" start="64" end="134" sourcefile="LogTransformer.java" sourcepath="org/slf4j/instrumentation/LogTransformer.java">
        <Message>At LogTransformer.java:[lines 64-134]</Message>
      </SourceLine>
      <Message>In class org.slf4j.instrumentation.LogTransformer$Builder</Message>
    </Class>
    <Field classname="org.slf4j.instrumentation.LogTransformer$Builder" name="addVariableAssignment" signature="Z" isStatic="false" primary="true">
      <SourceLine classname="org.slf4j.instrumentation.LogTransformer$Builder" sourcefile="LogTransformer.java" sourcepath="org/slf4j/instrumentation/LogTransformer.java">
        <Message>In LogTransformer.java</Message>
      </SourceLine>
      <Message>Field org.slf4j.instrumentation.LogTransformer$Builder.addVariableAssignment</Message>
    </Field>
    <SourceLine classname="org.slf4j.instrumentation.LogTransformer$Builder" sourcefile="LogTransformer.java" sourcepath="org/slf4j/instrumentation/LogTransformer.java" synthetic="true">
      <Message>In LogTransformer.java</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DM_NUMBER_CTOR" priority="2" rank="18" abbrev="Bx" category="PERFORMANCE" instanceHash="429100041aa755e11c9a9a198b632592" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Method invokes inefficient Number constructor; use static valueOf instead</ShortMessage>
    <LongMessage>org.slf4j.instrumentation.ToStringHelper.render(Object) invokes inefficient new Long(long) constructor; use Long.valueOf(long) instead</LongMessage>
    <Class classname="org.slf4j.instrumentation.ToStringHelper" primary="true">
      <SourceLine classname="org.slf4j.instrumentation.ToStringHelper" start="30" end="189" sourcefile="ToStringHelper.java" sourcepath="org/slf4j/instrumentation/ToStringHelper.java">
        <Message>At ToStringHelper.java:[lines 30-189]</Message>
      </SourceLine>
      <Message>In class org.slf4j.instrumentation.ToStringHelper</Message>
    </Class>
    <Method classname="org.slf4j.instrumentation.ToStringHelper" name="render" signature="(Ljava/lang/Object;)Ljava/lang/String;" isStatic="true" primary="true">
      <SourceLine classname="org.slf4j.instrumentation.ToStringHelper" start="74" end="95" startBytecode="0" endBytecode="331" sourcefile="ToStringHelper.java" sourcepath="org/slf4j/instrumentation/ToStringHelper.java"/>
      <Message>In method org.slf4j.instrumentation.ToStringHelper.render(Object)</Message>
    </Method>
    <Method classname="java.lang.Long" name="&lt;init&gt;" signature="(J)V" isStatic="false" role="METHOD_CALLED" classAnnotationNames="jdk.internal.ValueBased">
      <SourceLine classname="java.lang.Long" start="1324" end="1326" startBytecode="0" endBytecode="69" sourcefile="Long.java" sourcepath="java/lang/Long.java"/>
      <Message>Called method new Long(long)</Message>
    </Method>
    <Method classname="java.lang.Long" name="valueOf" signature="(J)Ljava/lang/Long;" isStatic="true" role="SHOULD_CALL" classAnnotationNames="jdk.internal.ValueBased">
      <SourceLine classname="java.lang.Long" start="1207" end="1211" startBytecode="0" endBytecode="115" sourcefile="Long.java" sourcepath="java/lang/Long.java"/>
      <Message>Should call Long.valueOf(long) instead</Message>
    </Method>
    <SourceLine classname="org.slf4j.instrumentation.ToStringHelper" primary="true" start="87" end="87" startBytecode="55" endBytecode="55" sourcefile="ToStringHelper.java" sourcepath="org/slf4j/instrumentation/ToStringHelper.java">
      <Message>At ToStringHelper.java:[line 87]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="NP_LOAD_OF_KNOWN_NULL_VALUE" priority="2" rank="16" abbrev="NP" category="STYLE" instanceHash="7f29815a4a6419f59464e4dffb0fffe7" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="476">
    <ShortMessage>Load of known null value</ShortMessage>
    <LongMessage>Load of known null value in org.slf4j.instrumentation.ToStringHelper.render(Object)</LongMessage>
    <Class classname="org.slf4j.instrumentation.ToStringHelper" primary="true">
      <SourceLine classname="org.slf4j.instrumentation.ToStringHelper" start="30" end="189" sourcefile="ToStringHelper.java" sourcepath="org/slf4j/instrumentation/ToStringHelper.java">
        <Message>At ToStringHelper.java:[lines 30-189]</Message>
      </SourceLine>
      <Message>In class org.slf4j.instrumentation.ToStringHelper</Message>
    </Class>
    <Method classname="org.slf4j.instrumentation.ToStringHelper" name="render" signature="(Ljava/lang/Object;)Ljava/lang/String;" isStatic="true" primary="true">
      <SourceLine classname="org.slf4j.instrumentation.ToStringHelper" start="74" end="95" startBytecode="0" endBytecode="66" sourcefile="ToStringHelper.java" sourcepath="org/slf4j/instrumentation/ToStringHelper.java"/>
      <Message>In method org.slf4j.instrumentation.ToStringHelper.render(Object)</Message>
    </Method>
    <LocalVariable name="o" register="0" pc="1" role="LOCAL_VARIABLE_VALUE_OF">
      <Message>Value loaded from o</Message>
    </LocalVariable>
    <SourceLine classname="org.slf4j.instrumentation.ToStringHelper" primary="true" start="75" end="75" startBytecode="4" endBytecode="4" sourcefile="ToStringHelper.java" sourcepath="org/slf4j/instrumentation/ToStringHelper.java">
      <Message>At ToStringHelper.java:[line 75]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="de6eea8c4b34cf67729c6413f73dcf02" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.slf4j.profiler.Profiler.getProfilerRegistry() may expose internal representation by returning Profiler.profilerRegistry</LongMessage>
    <Class classname="org.slf4j.profiler.Profiler" primary="true">
      <SourceLine classname="org.slf4j.profiler.Profiler" start="60" end="261" sourcefile="Profiler.java" sourcepath="org/slf4j/profiler/Profiler.java">
        <Message>At Profiler.java:[lines 60-261]</Message>
      </SourceLine>
      <Message>In class org.slf4j.profiler.Profiler</Message>
    </Class>
    <Method classname="org.slf4j.profiler.Profiler" name="getProfilerRegistry" signature="()Lorg/slf4j/profiler/ProfilerRegistry;" isStatic="false" primary="true">
      <SourceLine classname="org.slf4j.profiler.Profiler" start="77" end="77" startBytecode="0" endBytecode="46" sourcefile="Profiler.java" sourcepath="org/slf4j/profiler/Profiler.java"/>
      <Message>In method org.slf4j.profiler.Profiler.getProfilerRegistry()</Message>
    </Method>
    <Field classname="org.slf4j.profiler.Profiler" name="profilerRegistry" signature="Lorg/slf4j/profiler/ProfilerRegistry;" isStatic="false" primary="true">
      <SourceLine classname="org.slf4j.profiler.Profiler" sourcefile="Profiler.java" sourcepath="org/slf4j/profiler/Profiler.java">
        <Message>In Profiler.java</Message>
      </SourceLine>
      <Message>Field org.slf4j.profiler.Profiler.profilerRegistry</Message>
    </Field>
    <SourceLine classname="org.slf4j.profiler.Profiler" primary="true" start="77" end="77" startBytecode="4" endBytecode="4" sourcefile="Profiler.java" sourcepath="org/slf4j/profiler/Profiler.java">
      <Message>At Profiler.java:[line 77]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="87550207f9230778ed0f50b1a89b77fe" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>org.slf4j.profiler.Profiler.registerWith(ProfilerRegistry) may expose internal representation by storing an externally mutable object into Profiler.profilerRegistry</LongMessage>
    <Class classname="org.slf4j.profiler.Profiler" primary="true">
      <SourceLine classname="org.slf4j.profiler.Profiler" start="60" end="261" sourcefile="Profiler.java" sourcepath="org/slf4j/profiler/Profiler.java">
        <Message>At Profiler.java:[lines 60-261]</Message>
      </SourceLine>
      <Message>In class org.slf4j.profiler.Profiler</Message>
    </Class>
    <Method classname="org.slf4j.profiler.Profiler" name="registerWith" signature="(Lorg/slf4j/profiler/ProfilerRegistry;)V" isStatic="false" primary="true">
      <SourceLine classname="org.slf4j.profiler.Profiler" start="81" end="86" startBytecode="0" endBytecode="92" sourcefile="Profiler.java" sourcepath="org/slf4j/profiler/Profiler.java"/>
      <Message>In method org.slf4j.profiler.Profiler.registerWith(ProfilerRegistry)</Message>
    </Method>
    <Field classname="org.slf4j.profiler.Profiler" name="profilerRegistry" signature="Lorg/slf4j/profiler/ProfilerRegistry;" isStatic="false" primary="true">
      <SourceLine classname="org.slf4j.profiler.Profiler" sourcefile="Profiler.java" sourcepath="org/slf4j/profiler/Profiler.java">
        <Message>In Profiler.java</Message>
      </SourceLine>
      <Message>Field org.slf4j.profiler.Profiler.profilerRegistry</Message>
    </Field>
    <LocalVariable name="profilerRegistry" register="1" pc="7" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named profilerRegistry</Message>
    </LocalVariable>
    <SourceLine classname="org.slf4j.profiler.Profiler" primary="true" start="84" end="84" startBytecode="7" endBytecode="7" sourcefile="Profiler.java" sourcepath="org/slf4j/profiler/Profiler.java">
      <Message>At Profiler.java:[line 84]</Message>
    </SourceLine>
  </BugInstance>
  <BugCategory category="BAD_PRACTICE">
    <Description>Bad practice</Description>
  </BugCategory>
  <BugCategory category="MALICIOUS_CODE">
    <Description>Malicious code vulnerability</Description>
  </BugCategory>
  <BugCategory category="PERFORMANCE">
    <Description>Performance</Description>
  </BugCategory>
  <BugCategory category="STYLE">
    <Description>Dodgy code</Description>
  </BugCategory>
  <BugCategory category="I18N">
    <Description>Internationalization</Description>
  </BugCategory>
  <BugPattern type="EI_EXPOSE_REP2" abbrev="EI2" category="MALICIOUS_CODE" cweid="374">
    <ShortDescription>May expose internal representation by incorporating reference to mutable object</ShortDescription>
    <Details><![CDATA[

  <p> This code stores a reference to an externally mutable object into the
  internal representation of the object.&nbsp;
   If instances
   are accessed by untrusted code, and unchecked changes to
   the mutable object would compromise security or other
   important properties, you will need to do something different.
  Storing a copy of the object is better approach in many situations.</p>

    ]]></Details>
  </BugPattern>
  <BugPattern type="EI_EXPOSE_REP" abbrev="EI" category="MALICIOUS_CODE" cweid="374">
    <ShortDescription>May expose internal representation by returning reference to mutable object</ShortDescription>
    <Details><![CDATA[

  <p> Returning a reference to a mutable object value stored in one of the object's fields
  exposes the internal representation of the object.&nbsp;
   If instances
   are accessed by untrusted code, and unchecked changes to
   the mutable object would compromise security or other
   important properties, you will need to do something different.
  Returning a new copy of the object is better approach in many situations.</p>

    ]]></Details>
  </BugPattern>
  <BugPattern type="EQ_CHECK_FOR_OPERAND_NOT_COMPATIBLE_WITH_THIS" abbrev="Eq" category="BAD_PRACTICE">
    <ShortDescription>Equals checks for incompatible operand</ShortDescription>
    <Details><![CDATA[

  <p> This equals method is checking to see if the argument is some incompatible type
(i.e., a class that is neither a supertype nor subtype of the class that defines
the equals method). For example, the Foo class might have an equals method
that looks like:
</p>
<pre><code>public boolean equals(Object o) {
    if (o instanceof Foo)
        return name.equals(((Foo)o).name);
    else if (o instanceof String)
        return name.equals(o);
    else return false;
}
</code></pre>

<p>This is considered bad practice, as it makes it very hard to implement an equals method that
is symmetric and transitive. Without those properties, very unexpected behaviors are possible.
</p>

    ]]></Details>
  </BugPattern>
  <BugPattern type="NP_LOAD_OF_KNOWN_NULL_VALUE" abbrev="NP" category="STYLE">
    <ShortDescription>Load of known null value</ShortDescription>
    <Details><![CDATA[

  <p> The variable referenced at this point is known to be null due to an earlier
   check against null. Although this is valid, it might be a mistake (perhaps you
intended to refer to a different variable, or perhaps the earlier check to see if the
variable is null should have been a check to see if it was non-null).
</p>

    ]]></Details>
  </BugPattern>
  <BugPattern type="UUF_UNUSED_FIELD" abbrev="UuF" category="PERFORMANCE">
    <ShortDescription>Unused field</ShortDescription>
    <Details><![CDATA[

  <p> This field is never used.&nbsp; Consider removing it from the class.</p>

    ]]></Details>
  </BugPattern>
  <BugPattern type="DM_DEFAULT_ENCODING" abbrev="Dm" category="I18N">
    <ShortDescription>Reliance on default encoding</ShortDescription>
    <Details><![CDATA[

<p> Found a call to a method which will perform a byte to String (or String to byte) conversion,
and will assume that the default platform encoding is suitable. This will cause the application
behavior to vary between platforms. Use an alternative API and specify a charset name or Charset
object explicitly.</p>

      ]]></Details>
  </BugPattern>
  <BugPattern type="REC_CATCH_EXCEPTION" abbrev="REC" category="STYLE" cweid="396">
    <ShortDescription>Exception is caught when Exception is not thrown</ShortDescription>
    <Details><![CDATA[
  
  <p>
  This method uses a try-catch block that catches Exception objects, but Exception is not
  thrown within the try block, and RuntimeException is not explicitly caught.  It is a common bug pattern to
  say try { ... } catch (Exception e) { something } as a shorthand for catching a number of types of exception
  each of whose catch blocks is identical, but this construct also accidentally catches RuntimeException as well,
  masking potential bugs.
  </p>
  <p>A better approach is to either explicitly catch the specific exceptions that are thrown,
  or to explicitly catch RuntimeException exception, rethrow it, and then catch all non-Runtime Exceptions, as shown below:</p>
<pre><code>try {
    ...
} catch (RuntimeException e) {
    throw e;
} catch (Exception e) {
    ... deal with all non-runtime exceptions ...
}
</code></pre>
  
     ]]></Details>
  </BugPattern>
  <BugPattern type="DM_NUMBER_CTOR" abbrev="Bx" category="PERFORMANCE">
    <ShortDescription>Method invokes inefficient Number constructor; use static valueOf instead</ShortDescription>
    <Details><![CDATA[
      
      <p>
      Using <code>new Integer(int)</code> is guaranteed to always result in a new object whereas
      <code>Integer.valueOf(int)</code> allows caching of values to be done by the compiler, class library, or JVM.
      Using of cached values avoids object allocation and the code will be faster.
      </p>
      <p>
      Values between -128 and 127 are guaranteed to have corresponding cached instances
      and using <code>valueOf</code> is approximately 3.5 times faster than using constructor.
      For values outside the constant range the performance of both styles is the same.
      </p>
      <p>
      Unless the class must be compatible with JVMs predating Java 5,
      use either autoboxing or the <code>valueOf()</code> method when creating instances of
      <code>Long</code>, <code>Integer</code>, <code>Short</code>, <code>Character</code>, and <code>Byte</code>.
      </p>
      
    ]]></Details>
  </BugPattern>
  <BugPattern type="CT_CONSTRUCTOR_THROW" abbrev="CT" category="BAD_PRACTICE">
    <ShortDescription>Be wary of letting constructors throw exceptions.</ShortDescription>
    <Details><![CDATA[
      
            <p>Classes that throw exceptions in their constructors are vulnerable to Finalizer attacks</p>

            <p>A finalizer attack can be prevented, by declaring the class final, using an empty finalizer declared as final, or by a clever use of a private constructor.</p>

            <p>See <a href="https://wiki.sei.cmu.edu/confluence/display/java/OBJ11-J.+Be+wary+of+letting+constructors+throw+exceptions"><code>SEI CERT Rule OBJ-11</code></a>
            for more information.
            </p>
            
    ]]></Details>
  </BugPattern>
  <BugPattern type="DM_CONVERT_CASE" abbrev="Dm" category="I18N">
    <ShortDescription>Consider using Locale parameterized version of invoked method</ShortDescription>
    <Details><![CDATA[

  <p> A String is being converted to upper or lowercase, using the platform's default encoding. This may
      result in improper conversions when used with international characters. Use the </p>
      <ul>
    <li>String.toUpperCase( Locale l )</li>
    <li>String.toLowerCase( Locale l )</li>
    </ul>
      <p>versions instead.</p>

    ]]></Details>
  </BugPattern>
  <BugCode abbrev="CT">
    <Description>Constructor throws</Description>
  </BugCode>
  <BugCode abbrev="REC">
    <Description>RuntimeException capture</Description>
  </BugCode>
  <BugCode abbrev="NP" cweid="476">
    <Description>Null pointer dereference</Description>
  </BugCode>
  <BugCode abbrev="EI">
    <Description>Method returning array may expose internal representation</Description>
  </BugCode>
  <BugCode abbrev="Bx">
    <Description>Questionable Boxing of primitive value</Description>
  </BugCode>
  <BugCode abbrev="UuF">
    <Description>Unused field</Description>
  </BugCode>
  <BugCode abbrev="Dm">
    <Description>Dubious method used</Description>
  </BugCode>
  <BugCode abbrev="Eq">
    <Description>Problems with implementation of equals()</Description>
  </BugCode>
  <BugCode abbrev="EI2">
    <Description>Storing reference to mutable object</Description>
  </BugCode>
  <Errors errors="0" missingClasses="22">
    <MissingClass>ch.qos.cal10n.IMessageConveyor</MissingClass>
    <MissingClass>ch.qos.cal10n.MessageParameterObj</MissingClass>
    <MissingClass>javassist.CannotCompileException</MissingClass>
    <MissingClass>javassist.ClassPool</MissingClass>
    <MissingClass>javassist.CtBehavior</MissingClass>
    <MissingClass>javassist.CtClass</MissingClass>
    <MissingClass>javassist.CtField</MissingClass>
    <MissingClass>javassist.CtMethod</MissingClass>
    <MissingClass>javassist.Modifier</MissingClass>
    <MissingClass>javassist.NotFoundException</MissingClass>
    <MissingClass>javassist.bytecode.CodeAttribute</MissingClass>
    <MissingClass>javassist.bytecode.LocalVariableAttribute</MissingClass>
    <MissingClass>javassist.bytecode.MethodInfo</MissingClass>
    <MissingClass>org.apache.commons.lang.text.StrLookup</MissingClass>
    <MissingClass>org.slf4j.Logger</MissingClass>
    <MissingClass>org.slf4j.LoggerFactory</MissingClass>
    <MissingClass>org.slf4j.MDC</MissingClass>
    <MissingClass>org.slf4j.Marker</MissingClass>
    <MissingClass>org.slf4j.MarkerFactory</MissingClass>
    <MissingClass>org.slf4j.helpers.FormattingTuple</MissingClass>
    <MissingClass>org.slf4j.helpers.MessageFormatter</MissingClass>
    <MissingClass>org.slf4j.spi.LocationAwareLogger</MissingClass>
  </Errors>
  <FindBugsSummary timestamp="Fri, 8 Dec 2023 14:35:24 +0900" total_classes="30" referenced_classes="138" total_bugs="16" total_size="1462" num_packages="6" java_version="17.0.9" vm_version="17.0.9+11-LTS-201" cpu_seconds="1.83" clock_seconds="2.06" peak_mbytes="242.51" alloc_mbytes="4078.00" gc_seconds="0.04" priority_3="3" priority_2="9" priority_1="4">
    <FileStats path="org/slf4j/NDC.java" bugCount="0" size="24"/>
    <FileStats path="org/slf4j/agent/AgentOptions.java" bugCount="0" size="7"/>
    <FileStats path="org/slf4j/agent/AgentPremain.java" bugCount="1" size="42" bugHash="dfdf67ed15cb2075a205550c47e9063a"/>
    <FileStats path="org/slf4j/cal10n/LocLogger.java" bugCount="1" size="58" bugHash="dc5cb8f614833709c8b18a6e4c30052c"/>
    <FileStats path="org/slf4j/cal10n/LocLoggerFactory.java" bugCount="0" size="10"/>
    <FileStats path="org/slf4j/ext/EventData.java" bugCount="5" size="89" bugHash="4fb80b219cc78b453f607b63cc186183"/>
    <FileStats path="org/slf4j/ext/EventException.java" bugCount="0" size="14"/>
    <FileStats path="org/slf4j/ext/EventLogger.java" bugCount="0" size="16"/>
    <FileStats path="org/slf4j/ext/LoggerWrapper.java" bugCount="0" size="444"/>
    <FileStats path="org/slf4j/ext/MDCStrLookup.java" bugCount="0" size="7"/>
    <FileStats path="org/slf4j/ext/XLogger.java" bugCount="0" size="115"/>
    <FileStats path="org/slf4j/ext/XLoggerFactory.java" bugCount="0" size="7"/>
    <FileStats path="org/slf4j/instrumentation/JavassistHelper.java" bugCount="0" size="58"/>
    <FileStats path="org/slf4j/instrumentation/LogTransformer.java" bugCount="5" size="119" bugHash="a56ac744a307311680260550b2e18d40"/>
    <FileStats path="org/slf4j/instrumentation/ToStringHelper.java" bugCount="2" size="84" bugHash="78564dfd883ec0338ebb9b5c4d75afc4"/>
    <FileStats path="org/slf4j/profiler/DurationUnit.java" bugCount="0" size="12"/>
    <FileStats path="org/slf4j/profiler/Profiler.java" bugCount="2" size="137" bugHash="9a5514c93f6c70ca2e99af6006fd5d46"/>
    <FileStats path="org/slf4j/profiler/ProfilerRegistry.java" bugCount="0" size="25"/>
    <FileStats path="org/slf4j/profiler/SpacePadder.java" bugCount="0" size="60"/>
    <FileStats path="org/slf4j/profiler/StopWatch.java" bugCount="0" size="59"/>
    <FileStats path="org/slf4j/profiler/TimeInstrument.java" bugCount="0" size="8"/>
    <FileStats path="org/slf4j/profiler/TimeInstrumentStatus.java" bugCount="0" size="10"/>
    <FileStats path="org/slf4j/profiler/Util.java" bugCount="0" size="57"/>
    <PackageStats package="org.slf4j" total_bugs="0" total_types="1" total_size="24">
      <ClassStats class="org.slf4j.NDC" sourceFile="NDC.java" interface="false" size="24" bugs="0"/>
    </PackageStats>
    <PackageStats package="org.slf4j.agent" total_bugs="1" total_types="3" total_size="49" priority_1="1">
      <ClassStats class="org.slf4j.agent.AgentOptions" sourceFile="AgentOptions.java" interface="false" size="7" bugs="0"/>
      <ClassStats class="org.slf4j.agent.AgentPremain" sourceFile="AgentPremain.java" interface="false" size="34" bugs="1" priority_1="1"/>
      <ClassStats class="org.slf4j.agent.AgentPremain$1" sourceFile="AgentPremain.java" interface="false" size="8" bugs="0"/>
    </PackageStats>
    <PackageStats package="org.slf4j.cal10n" total_bugs="1" total_types="2" total_size="68" priority_2="1">
      <ClassStats class="org.slf4j.cal10n.LocLogger" sourceFile="LocLogger.java" interface="false" size="58" bugs="1" priority_2="1"/>
      <ClassStats class="org.slf4j.cal10n.LocLoggerFactory" sourceFile="LocLoggerFactory.java" interface="false" size="10" bugs="0"/>
    </PackageStats>
    <PackageStats package="org.slf4j.ext" total_bugs="5" total_types="9" total_size="692" priority_2="2" priority_1="3">
      <ClassStats class="org.slf4j.ext.EventData" sourceFile="EventData.java" interface="false" size="83" bugs="5" priority_2="2" priority_1="3"/>
      <ClassStats class="org.slf4j.ext.EventData$1" sourceFile="EventData.java" interface="false" size="6" bugs="0"/>
      <ClassStats class="org.slf4j.ext.EventException" sourceFile="EventException.java" interface="false" size="14" bugs="0"/>
      <ClassStats class="org.slf4j.ext.EventLogger" sourceFile="EventLogger.java" interface="false" size="16" bugs="0"/>
      <ClassStats class="org.slf4j.ext.LoggerWrapper" sourceFile="LoggerWrapper.java" interface="false" size="444" bugs="0"/>
      <ClassStats class="org.slf4j.ext.MDCStrLookup" sourceFile="MDCStrLookup.java" interface="false" size="7" bugs="0"/>
      <ClassStats class="org.slf4j.ext.XLogger" sourceFile="XLogger.java" interface="false" size="90" bugs="0"/>
      <ClassStats class="org.slf4j.ext.XLogger$Level" sourceFile="XLogger.java" interface="false" size="25" bugs="0"/>
      <ClassStats class="org.slf4j.ext.XLoggerFactory" sourceFile="XLoggerFactory.java" interface="false" size="7" bugs="0"/>
    </PackageStats>
    <PackageStats package="org.slf4j.instrumentation" total_bugs="7" total_types="5" total_size="261" priority_3="3" priority_2="4">
      <ClassStats class="org.slf4j.instrumentation.JavassistHelper" sourceFile="JavassistHelper.java" interface="false" size="58" bugs="0"/>
      <ClassStats class="org.slf4j.instrumentation.LogTransformer" sourceFile="LogTransformer.java" interface="false" size="87" bugs="2" priority_3="2"/>
      <ClassStats class="org.slf4j.instrumentation.LogTransformer$1" sourceFile="LogTransformer.java" interface="false" size="1" bugs="0"/>
      <ClassStats class="org.slf4j.instrumentation.LogTransformer$Builder" sourceFile="LogTransformer.java" interface="false" size="31" bugs="3" priority_3="1" priority_2="2"/>
      <ClassStats class="org.slf4j.instrumentation.ToStringHelper" sourceFile="ToStringHelper.java" interface="false" size="84" bugs="2" priority_2="2"/>
    </PackageStats>
    <PackageStats package="org.slf4j.profiler" total_bugs="2" total_types="10" total_size="368" priority_2="2">
      <ClassStats class="org.slf4j.profiler.DurationUnit" sourceFile="DurationUnit.java" interface="false" size="12" bugs="0"/>
      <ClassStats class="org.slf4j.profiler.Profiler" sourceFile="Profiler.java" interface="false" size="137" bugs="2" priority_2="2"/>
      <ClassStats class="org.slf4j.profiler.ProfilerRegistry" sourceFile="ProfilerRegistry.java" interface="false" size="25" bugs="0"/>
      <ClassStats class="org.slf4j.profiler.SpacePadder" sourceFile="SpacePadder.java" interface="false" size="60" bugs="0"/>
      <ClassStats class="org.slf4j.profiler.StopWatch" sourceFile="StopWatch.java" interface="false" size="55" bugs="0"/>
      <ClassStats class="org.slf4j.profiler.StopWatch$1" sourceFile="StopWatch.java" interface="false" size="4" bugs="0"/>
      <ClassStats class="org.slf4j.profiler.TimeInstrument" sourceFile="TimeInstrument.java" interface="true" size="8" bugs="0"/>
      <ClassStats class="org.slf4j.profiler.TimeInstrumentStatus" sourceFile="TimeInstrumentStatus.java" interface="false" size="10" bugs="0"/>
      <ClassStats class="org.slf4j.profiler.Util" sourceFile="Util.java" interface="false" size="53" bugs="0"/>
      <ClassStats class="org.slf4j.profiler.Util$1" sourceFile="Util.java" interface="false" size="4" bugs="0"/>
    </PackageStats>
    <FindBugsProfile>
      <ClassProfile name="edu.umd.cs.findbugs.classfile.engine.ClassInfoAnalysisEngine" totalMilliseconds="229" invocations="839" avgMicrosecondsPerInvocation="273" maxMicrosecondsPerInvocation="11778" standardDeviationMicrosecondsPerInvocation="767"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.FieldItemSummary" totalMilliseconds="93" invocations="138" avgMicrosecondsPerInvocation="677" maxMicrosecondsPerInvocation="8463" standardDeviationMicrosecondsPerInvocation="1269"/>
      <ClassProfile name="edu.umd.cs.findbugs.classfile.engine.bcel.IsNullValueDataflowFactory" totalMilliseconds="89" invocations="226" avgMicrosecondsPerInvocation="394" maxMicrosecondsPerInvocation="15545" standardDeviationMicrosecondsPerInvocation="1209"/>
      <ClassProfile name="edu.umd.cs.findbugs.OpcodeStack$JumpInfoFactory" totalMilliseconds="79" invocations="532" avgMicrosecondsPerInvocation="150" maxMicrosecondsPerInvocation="3568" standardDeviationMicrosecondsPerInvocation="280"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.FindNoSideEffectMethods" totalMilliseconds="78" invocations="138" avgMicrosecondsPerInvocation="569" maxMicrosecondsPerInvocation="6538" standardDeviationMicrosecondsPerInvocation="1042"/>
      <ClassProfile name="edu.umd.cs.findbugs.ba.npe.NullDerefAndRedundantComparisonFinder" totalMilliseconds="68" invocations="226" avgMicrosecondsPerInvocation="301" maxMicrosecondsPerInvocation="4763" standardDeviationMicrosecondsPerInvocation="459"/>
      <ClassProfile name="edu.umd.cs.findbugs.classfile.engine.bcel.ValueNumberDataflowFactory" totalMilliseconds="65" invocations="231" avgMicrosecondsPerInvocation="284" maxMicrosecondsPerInvocation="7357" standardDeviationMicrosecondsPerInvocation="740"/>
      <ClassProfile name="edu.umd.cs.findbugs.classfile.engine.bcel.TypeDataflowFactory" totalMilliseconds="60" invocations="229" avgMicrosecondsPerInvocation="262" maxMicrosecondsPerInvocation="7422" standardDeviationMicrosecondsPerInvocation="630"/>
      <ClassProfile name="edu.umd.cs.findbugs.classfile.engine.bcel.UnconditionalValueDerefDataflowFactory" totalMilliseconds="58" invocations="226" avgMicrosecondsPerInvocation="258" maxMicrosecondsPerInvocation="6198" standardDeviationMicrosecondsPerInvocation="587"/>
      <ClassProfile name="edu.umd.cs.findbugs.classfile.engine.bcel.CFGFactory" totalMilliseconds="44" invocations="226" avgMicrosecondsPerInvocation="197" maxMicrosecondsPerInvocation="5558" standardDeviationMicrosecondsPerInvocation="400"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.FindRefComparison$SpecialTypeAnalysis" totalMilliseconds="38" invocations="205" avgMicrosecondsPerInvocation="186" maxMicrosecondsPerInvocation="3718" standardDeviationMicrosecondsPerInvocation="419"/>
      <ClassProfile name="edu.umd.cs.findbugs.classfile.engine.ClassDataAnalysisEngine" totalMilliseconds="35" invocations="845" avgMicrosecondsPerInvocation="42" maxMicrosecondsPerInvocation="2385" standardDeviationMicrosecondsPerInvocation="107"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.NoteDirectlyRelevantTypeQualifiers" totalMilliseconds="33" invocations="138" avgMicrosecondsPerInvocation="246" maxMicrosecondsPerInvocation="5519" standardDeviationMicrosecondsPerInvocation="550"/>
      <ClassProfile name="edu.umd.cs.findbugs.classfile.engine.bcel.JavaClassAnalysisEngine" totalMilliseconds="32" invocations="208" avgMicrosecondsPerInvocation="157" maxMicrosecondsPerInvocation="12132" standardDeviationMicrosecondsPerInvocation="853"/>
      <ClassProfile name="edu.umd.cs.findbugs.classfile.engine.bcel.MethodGenFactory" totalMilliseconds="30" invocations="233" avgMicrosecondsPerInvocation="132" maxMicrosecondsPerInvocation="13703" standardDeviationMicrosecondsPerInvocation="896"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.EqualsOperandShouldHaveClassCompatibleWithThis" totalMilliseconds="26" invocations="138" avgMicrosecondsPerInvocation="189" maxMicrosecondsPerInvocation="15982" standardDeviationMicrosecondsPerInvocation="1355"/>
      <ClassProfile name="edu.umd.cs.findbugs.util.TopologicalSort" totalMilliseconds="22" invocations="767" avgMicrosecondsPerInvocation="29" maxMicrosecondsPerInvocation="703" standardDeviationMicrosecondsPerInvocation="57"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.CalledMethods" totalMilliseconds="22" invocations="138" avgMicrosecondsPerInvocation="162" maxMicrosecondsPerInvocation="2583" standardDeviationMicrosecondsPerInvocation="312"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.FunctionsThatMightBeMistakenForProcedures" totalMilliseconds="21" invocations="138" avgMicrosecondsPerInvocation="156" maxMicrosecondsPerInvocation="2854" standardDeviationMicrosecondsPerInvocation="368"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.BuildStringPassthruGraph" totalMilliseconds="21" invocations="138" avgMicrosecondsPerInvocation="154" maxMicrosecondsPerInvocation="3473" standardDeviationMicrosecondsPerInvocation="405"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.BuildObligationPolicyDatabase" totalMilliseconds="19" invocations="138" avgMicrosecondsPerInvocation="144" maxMicrosecondsPerInvocation="1775" standardDeviationMicrosecondsPerInvocation="244"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.ConstructorThrow" totalMilliseconds="19" invocations="30" avgMicrosecondsPerInvocation="664" maxMicrosecondsPerInvocation="4125" standardDeviationMicrosecondsPerInvocation="879"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.OverridingEqualsNotSymmetrical" totalMilliseconds="19" invocations="138" avgMicrosecondsPerInvocation="143" maxMicrosecondsPerInvocation="6169" standardDeviationMicrosecondsPerInvocation="537"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.FindUnsatisfiedObligation" totalMilliseconds="18" invocations="30" avgMicrosecondsPerInvocation="615" maxMicrosecondsPerInvocation="12584" standardDeviationMicrosecondsPerInvocation="2231"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.FindOpenStream" totalMilliseconds="17" invocations="30" avgMicrosecondsPerInvocation="568" maxMicrosecondsPerInvocation="4404" standardDeviationMicrosecondsPerInvocation="1166"/>
      <ClassProfile name="edu.umd.cs.findbugs.classfile.engine.bcel.ConstantDataflowFactory" totalMilliseconds="16" invocations="226" avgMicrosecondsPerInvocation="75" maxMicrosecondsPerInvocation="1768" standardDeviationMicrosecondsPerInvocation="170"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.UnreadFields" totalMilliseconds="14" invocations="30" avgMicrosecondsPerInvocation="492" maxMicrosecondsPerInvocation="2628" standardDeviationMicrosecondsPerInvocation="632"/>
      <ClassProfile name="edu.umd.cs.findbugs.ba.npe.TypeQualifierNullnessAnnotationDatabase" totalMilliseconds="14" invocations="3552" avgMicrosecondsPerInvocation="4" maxMicrosecondsPerInvocation="522" standardDeviationMicrosecondsPerInvocation="14"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.FindBadCast2" totalMilliseconds="14" invocations="30" avgMicrosecondsPerInvocation="487" maxMicrosecondsPerInvocation="5631" standardDeviationMicrosecondsPerInvocation="1265"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.LoadOfKnownNullValue" totalMilliseconds="13" invocations="30" avgMicrosecondsPerInvocation="449" maxMicrosecondsPerInvocation="4587" standardDeviationMicrosecondsPerInvocation="869"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.ReflectiveClasses" totalMilliseconds="12" invocations="138" avgMicrosecondsPerInvocation="91" maxMicrosecondsPerInvocation="1338" standardDeviationMicrosecondsPerInvocation="169"/>
    </FindBugsProfile>
  </FindBugsSummary>
  <ClassFeatures></ClassFeatures>
  <History></History>
</BugCollection>
