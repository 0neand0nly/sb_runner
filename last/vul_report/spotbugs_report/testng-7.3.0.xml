<?xml version="1.0" encoding="UTF-8"?>

<BugCollection version="4.8.1" sequence="0" timestamp="1702013200276" analysisTimestamp="1702019012870" release="">
  <Project projectName="">
    <Jar>vul_jar\\testng-7.3.0.jar</Jar>
  </Project>
  <BugInstance type="RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE" priority="2" rank="18" abbrev="RCN" category="STYLE" instanceHash="31d7a4058a397105af50c9ec9618c147" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="476">
    <ShortMessage>Redundant nullcheck of value known to be non-null</ShortMessage>
    <LongMessage>Redundant nullcheck of actual, which is known to be non-null in org.testng.Assert.assertEquals(Object[], Object[], String)</LongMessage>
    <Class classname="org.testng.Assert" primary="true">
      <SourceLine classname="org.testng.Assert" start="32" end="1730" sourcefile="Assert.java" sourcepath="org/testng/Assert.java">
        <Message>At Assert.java:[lines 32-1730]</Message>
      </SourceLine>
      <Message>In class org.testng.Assert</Message>
    </Class>
    <Method classname="org.testng.Assert" name="assertEquals" signature="([Ljava/lang/Object;[Ljava/lang/Object;Ljava/lang/String;)V" isStatic="true" primary="true">
      <SourceLine classname="org.testng.Assert" start="1213" end="1248" startBytecode="0" endBytecode="544" sourcefile="Assert.java" sourcepath="org/testng/Assert.java"/>
      <Message>In method org.testng.Assert.assertEquals(Object[], Object[], String)</Message>
    </Method>
    <LocalVariable name="actual" register="0" pc="14" role="LOCAL_VARIABLE_VALUE_OF">
      <Message>Value loaded from actual</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.Assert" primary="true" start="1217" end="1217" startBytecode="15" endBytecode="15" sourcefile="Assert.java" sourcepath="org/testng/Assert.java" role="SOURCE_REDUNDANT_NULL_CHECK">
      <Message>Redundant null check at Assert.java:[line 1217]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE" priority="2" rank="18" abbrev="RCN" category="STYLE" instanceHash="724da85d3cf634f2ef4d590f9d0c6ba6" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="476">
    <ShortMessage>Redundant nullcheck of value known to be non-null</ShortMessage>
    <LongMessage>Redundant nullcheck of expected, which is known to be non-null in org.testng.Assert.assertEquals(Object[], Object[], String)</LongMessage>
    <Class classname="org.testng.Assert" primary="true">
      <SourceLine classname="org.testng.Assert" start="32" end="1730" sourcefile="Assert.java" sourcepath="org/testng/Assert.java">
        <Message>At Assert.java:[lines 32-1730]</Message>
      </SourceLine>
      <Message>In class org.testng.Assert</Message>
    </Class>
    <Method classname="org.testng.Assert" name="assertEquals" signature="([Ljava/lang/Object;[Ljava/lang/Object;Ljava/lang/String;)V" isStatic="true" primary="true">
      <SourceLine classname="org.testng.Assert" start="1213" end="1248" startBytecode="0" endBytecode="544" sourcefile="Assert.java" sourcepath="org/testng/Assert.java"/>
      <Message>In method org.testng.Assert.assertEquals(Object[], Object[], String)</Message>
    </Method>
    <LocalVariable name="expected" register="1" pc="10" role="LOCAL_VARIABLE_VALUE_OF">
      <Message>Value loaded from expected</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.Assert" primary="true" start="1217" end="1217" startBytecode="11" endBytecode="11" sourcefile="Assert.java" sourcepath="org/testng/Assert.java" role="SOURCE_REDUNDANT_NULL_CHECK">
      <Message>Redundant null check at Assert.java:[line 1217]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE" priority="2" rank="18" abbrev="RCN" category="STYLE" instanceHash="ec9c52b8a6677a84447af1cb5282eb06" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="476">
    <ShortMessage>Redundant nullcheck of value known to be non-null</ShortMessage>
    <LongMessage>Redundant nullcheck of actual, which is known to be non-null in org.testng.Assert.assertEqualsNoOrder(Object[], Object[], String)</LongMessage>
    <Class classname="org.testng.Assert" primary="true">
      <SourceLine classname="org.testng.Assert" start="32" end="1730" sourcefile="Assert.java" sourcepath="org/testng/Assert.java">
        <Message>At Assert.java:[lines 32-1730]</Message>
      </SourceLine>
      <Message>In class org.testng.Assert</Message>
    </Class>
    <Method classname="org.testng.Assert" name="assertEqualsNoOrder" signature="([Ljava/lang/Object;[Ljava/lang/Object;Ljava/lang/String;)V" isStatic="true" primary="true">
      <SourceLine classname="org.testng.Assert" start="1259" end="1284" startBytecode="0" endBytecode="412" sourcefile="Assert.java" sourcepath="org/testng/Assert.java"/>
      <Message>In method org.testng.Assert.assertEqualsNoOrder(Object[], Object[], String)</Message>
    </Method>
    <LocalVariable name="actual" register="0" pc="14" role="LOCAL_VARIABLE_VALUE_OF">
      <Message>Value loaded from actual</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.Assert" primary="true" start="1263" end="1263" startBytecode="15" endBytecode="15" sourcefile="Assert.java" sourcepath="org/testng/Assert.java" role="SOURCE_REDUNDANT_NULL_CHECK">
      <Message>Redundant null check at Assert.java:[line 1263]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE" priority="2" rank="18" abbrev="RCN" category="STYLE" instanceHash="b584580fe8d6a690588994093e193477" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="476">
    <ShortMessage>Redundant nullcheck of value known to be non-null</ShortMessage>
    <LongMessage>Redundant nullcheck of expected, which is known to be non-null in org.testng.Assert.assertEqualsNoOrder(Object[], Object[], String)</LongMessage>
    <Class classname="org.testng.Assert" primary="true">
      <SourceLine classname="org.testng.Assert" start="32" end="1730" sourcefile="Assert.java" sourcepath="org/testng/Assert.java">
        <Message>At Assert.java:[lines 32-1730]</Message>
      </SourceLine>
      <Message>In class org.testng.Assert</Message>
    </Class>
    <Method classname="org.testng.Assert" name="assertEqualsNoOrder" signature="([Ljava/lang/Object;[Ljava/lang/Object;Ljava/lang/String;)V" isStatic="true" primary="true">
      <SourceLine classname="org.testng.Assert" start="1259" end="1284" startBytecode="0" endBytecode="412" sourcefile="Assert.java" sourcepath="org/testng/Assert.java"/>
      <Message>In method org.testng.Assert.assertEqualsNoOrder(Object[], Object[], String)</Message>
    </Method>
    <LocalVariable name="expected" register="1" pc="10" role="LOCAL_VARIABLE_VALUE_OF">
      <Message>Value loaded from expected</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.Assert" primary="true" start="1263" end="1263" startBytecode="11" endBytecode="11" sourcefile="Assert.java" sourcepath="org/testng/Assert.java" role="SOURCE_REDUNDANT_NULL_CHECK">
      <Message>Redundant null check at Assert.java:[line 1263]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="23eda7e72ff57a774d8acebd4f77bf44" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.ClassMethodMap.getInvokedAfterClassMethods() may expose internal representation by returning ClassMethodMap.afterClassMethods</LongMessage>
    <Class classname="org.testng.ClassMethodMap" primary="true">
      <SourceLine classname="org.testng.ClassMethodMap" start="20" end="85" sourcefile="ClassMethodMap.java" sourcepath="org/testng/ClassMethodMap.java">
        <Message>At ClassMethodMap.java:[lines 20-85]</Message>
      </SourceLine>
      <Message>In class org.testng.ClassMethodMap</Message>
    </Class>
    <Method classname="org.testng.ClassMethodMap" name="getInvokedAfterClassMethods" signature="()Ljava/util/Map;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.ClassMethodMap" start="73" end="73" startBytecode="0" endBytecode="46" sourcefile="ClassMethodMap.java" sourcepath="org/testng/ClassMethodMap.java"/>
      <Message>In method org.testng.ClassMethodMap.getInvokedAfterClassMethods()</Message>
    </Method>
    <Field classname="org.testng.ClassMethodMap" name="afterClassMethods" signature="Ljava/util/Map;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.ClassMethodMap" sourcefile="ClassMethodMap.java" sourcepath="org/testng/ClassMethodMap.java">
        <Message>In ClassMethodMap.java</Message>
      </SourceLine>
      <Message>Field org.testng.ClassMethodMap.afterClassMethods</Message>
    </Field>
    <SourceLine classname="org.testng.ClassMethodMap" primary="true" start="73" end="73" startBytecode="4" endBytecode="4" sourcefile="ClassMethodMap.java" sourcepath="org/testng/ClassMethodMap.java">
      <Message>At ClassMethodMap.java:[line 73]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="dd0fc5e25790b064cf1a2639a02a279b" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.ClassMethodMap.getInvokedBeforeClassMethods() may expose internal representation by returning ClassMethodMap.beforeClassMethods</LongMessage>
    <Class classname="org.testng.ClassMethodMap" primary="true">
      <SourceLine classname="org.testng.ClassMethodMap" start="20" end="85" sourcefile="ClassMethodMap.java" sourcepath="org/testng/ClassMethodMap.java">
        <Message>At ClassMethodMap.java:[lines 20-85]</Message>
      </SourceLine>
      <Message>In class org.testng.ClassMethodMap</Message>
    </Class>
    <Method classname="org.testng.ClassMethodMap" name="getInvokedBeforeClassMethods" signature="()Ljava/util/Map;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.ClassMethodMap" start="69" end="69" startBytecode="0" endBytecode="46" sourcefile="ClassMethodMap.java" sourcepath="org/testng/ClassMethodMap.java"/>
      <Message>In method org.testng.ClassMethodMap.getInvokedBeforeClassMethods()</Message>
    </Method>
    <Field classname="org.testng.ClassMethodMap" name="beforeClassMethods" signature="Ljava/util/Map;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.ClassMethodMap" sourcefile="ClassMethodMap.java" sourcepath="org/testng/ClassMethodMap.java">
        <Message>In ClassMethodMap.java</Message>
      </SourceLine>
      <Message>Field org.testng.ClassMethodMap.beforeClassMethods</Message>
    </Field>
    <SourceLine classname="org.testng.ClassMethodMap" primary="true" start="69" end="69" startBytecode="4" endBytecode="4" sourcefile="ClassMethodMap.java" sourcepath="org/testng/ClassMethodMap.java">
      <Message>At ClassMethodMap.java:[line 69]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="URF_UNREAD_PUBLIC_OR_PROTECTED_FIELD" priority="2" rank="18" abbrev="UrF" category="STYLE" instanceHash="565fc4fba927d604b26d515bcc1b20f3" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Unread public/protected field</ShortMessage>
    <LongMessage>Unread public/protected field: org.testng.CommandLineArgs.debug</LongMessage>
    <Class classname="org.testng.CommandLineArgs" primary="true">
      <SourceLine classname="org.testng.CommandLineArgs" start="11" end="234" sourcefile="CommandLineArgs.java" sourcepath="org/testng/CommandLineArgs.java">
        <Message>At CommandLineArgs.java:[lines 11-234]</Message>
      </SourceLine>
      <Message>In class org.testng.CommandLineArgs</Message>
    </Class>
    <Field classname="org.testng.CommandLineArgs" name="debug" signature="Ljava/lang/Boolean;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.CommandLineArgs" sourcefile="CommandLineArgs.java" sourcepath="org/testng/CommandLineArgs.java">
        <Message>In CommandLineArgs.java</Message>
      </SourceLine>
      <Message>Field org.testng.CommandLineArgs.debug</Message>
    </Field>
    <SourceLine classname="org.testng.CommandLineArgs" primary="true" start="201" end="201" startBytecode="66" endBytecode="66" sourcefile="CommandLineArgs.java" sourcepath="org/testng/CommandLineArgs.java">
      <Message>At CommandLineArgs.java:[line 201]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="REC_CATCH_EXCEPTION" priority="3" rank="20" abbrev="REC" category="STYLE" instanceHash="3c61e6686a697f595a9835f6f586d36f" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="396">
    <ShortMessage>Exception is caught when Exception is not thrown</ShortMessage>
    <LongMessage>Exception is caught when Exception is not thrown in org.testng.ConversionUtils.wrapDataProvider(Class, Collection)</LongMessage>
    <Class classname="org.testng.ConversionUtils" primary="true">
      <SourceLine classname="org.testng.ConversionUtils" start="14" end="47" sourcefile="ConversionUtils.java" sourcepath="org/testng/ConversionUtils.java">
        <Message>At ConversionUtils.java:[lines 14-47]</Message>
      </SourceLine>
      <Message>In class org.testng.ConversionUtils</Message>
    </Class>
    <Method classname="org.testng.ConversionUtils" name="wrapDataProvider" signature="(Ljava/lang/Class;Ljava/util/Collection;)[Ljava/lang/Object;" isStatic="true" primary="true">
      <SourceLine classname="org.testng.ConversionUtils" start="24" end="47" startBytecode="0" endBytecode="477" sourcefile="ConversionUtils.java" sourcepath="org/testng/ConversionUtils.java"/>
      <Message>In method org.testng.ConversionUtils.wrapDataProvider(Class, Collection)</Message>
    </Method>
    <SourceLine classname="org.testng.ConversionUtils" primary="true" start="43" end="43" startBytecode="144" endBytecode="144" sourcefile="ConversionUtils.java" sourcepath="org/testng/ConversionUtils.java">
      <Message>At ConversionUtils.java:[line 43]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DM_DEFAULT_ENCODING" priority="1" rank="19" abbrev="Dm" category="I18N" instanceHash="56652530c88aaeeae511eaf53853f814" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Reliance on default encoding</ShortMessage>
    <LongMessage>Found reliance on default encoding in org.testng.Converter.writeFile(File, String): new java.io.FileWriter(File)</LongMessage>
    <Class classname="org.testng.Converter" primary="true">
      <SourceLine classname="org.testng.Converter" start="25" end="89" sourcefile="Converter.java" sourcepath="org/testng/Converter.java">
        <Message>At Converter.java:[lines 25-89]</Message>
      </SourceLine>
      <Message>In class org.testng.Converter</Message>
    </Class>
    <Method classname="org.testng.Converter" name="writeFile" signature="(Ljava/io/File;Ljava/lang/String;)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.Converter" start="85" end="89" startBytecode="0" endBytecode="234" sourcefile="Converter.java" sourcepath="org/testng/Converter.java"/>
      <Message>In method org.testng.Converter.writeFile(File, String)</Message>
    </Method>
    <Method classname="java.io.FileWriter" name="&lt;init&gt;" signature="(Ljava/io/File;)V" isStatic="false" role="METHOD_CALLED">
      <SourceLine classname="java.io.FileWriter" start="96" end="97" startBytecode="0" endBytecode="68" sourcefile="FileWriter.java" sourcepath="java/io/FileWriter.java"/>
      <Message>Called method new java.io.FileWriter(File)</Message>
    </Method>
    <SourceLine classname="org.testng.Converter" primary="true" start="85" end="85" startBytecode="5" endBytecode="5" sourcefile="Converter.java" sourcepath="org/testng/Converter.java">
      <Message>At Converter.java:[line 85]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="RV_RETURN_VALUE_IGNORED_BAD_PRACTICE" priority="2" rank="16" abbrev="RV" category="BAD_PRACTICE" instanceHash="f1ecbdeda97bdeeaf6c346b5d6662a2" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="253">
    <ShortMessage>Method ignores exceptional return value</ShortMessage>
    <LongMessage>Exceptional return value of java.io.File.mkdir() ignored in org.testng.Converter.run(String[])</LongMessage>
    <Class classname="org.testng.Converter" primary="true">
      <SourceLine classname="org.testng.Converter" start="25" end="89" sourcefile="Converter.java" sourcepath="org/testng/Converter.java">
        <Message>At Converter.java:[lines 25-89]</Message>
      </SourceLine>
      <Message>In class org.testng.Converter</Message>
    </Class>
    <Method classname="org.testng.Converter" name="run" signature="([Ljava/lang/String;)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.Converter" start="48" end="82" startBytecode="0" endBytecode="873" sourcefile="Converter.java" sourcepath="org/testng/Converter.java"/>
      <Message>In method org.testng.Converter.run(String[])</Message>
    </Method>
    <Method classname="java.io.File" name="mkdir" signature="()Z" isStatic="false" role="METHOD_CALLED">
      <SourceLine classname="java.io.File" start="1372" end="1379" startBytecode="0" endBytecode="119" sourcefile="File.java" sourcepath="java/io/File.java"/>
      <Message>Called method java.io.File.mkdir()</Message>
    </Method>
    <SourceLine classname="org.testng.Converter" primary="true" start="52" end="52" startBytecode="34" endBytecode="34" sourcefile="Converter.java" sourcepath="org/testng/Converter.java">
      <Message>At Converter.java:[line 52]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="BC_UNCONFIRMED_CAST_OF_RETURN_VALUE" priority="3" rank="20" abbrev="BC" category="STYLE" instanceHash="9b944bee24a5f60afcbc966762d70cd2" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Unchecked/unconfirmed cast of return value from method</ShortMessage>
    <LongMessage>Unchecked/unconfirmed cast from java.util.Collection to java.util.List of return value in org.testng.DependencyMap.getMethodDependingOn(String, ITestNGMethod)</LongMessage>
    <Class classname="org.testng.DependencyMap" primary="true">
      <SourceLine classname="org.testng.DependencyMap" start="15" end="103" sourcefile="DependencyMap.java" sourcepath="org/testng/DependencyMap.java">
        <Message>At DependencyMap.java:[lines 15-103]</Message>
      </SourceLine>
      <Message>In class org.testng.DependencyMap</Message>
    </Class>
    <Method classname="org.testng.DependencyMap" name="getMethodDependingOn" signature="(Ljava/lang/String;Lorg/testng/ITestNGMethod;)Lorg/testng/ITestNGMethod;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.DependencyMap" start="51" end="72" startBytecode="0" endBytecode="67" sourcefile="DependencyMap.java" sourcepath="org/testng/DependencyMap.java"/>
      <Message>In method org.testng.DependencyMap.getMethodDependingOn(String, ITestNGMethod)</Message>
    </Method>
    <Type descriptor="Ljava/util/Collection;" role="TYPE_FOUND">
      <SourceLine classname="java.util.Collection" start="413" end="764" sourcefile="Collection.java" sourcepath="java/util/Collection.java">
        <Message>At Collection.java:[lines 413-764]</Message>
      </SourceLine>
      <Message>Actual type java.util.Collection</Message>
    </Type>
    <Type descriptor="Ljava/util/List;" role="TYPE_EXPECTED">
      <SourceLine classname="java.util.List" start="441" end="1068" sourcefile="List.java" sourcepath="java/util/List.java">
        <Message>At List.java:[lines 441-1068]</Message>
      </SourceLine>
      <Message>Expected java.util.List</Message>
    </Type>
    <SourceLine classname="org.testng.DependencyMap" primary="true" start="51" end="51" startBytecode="8" endBytecode="8" sourcefile="DependencyMap.java" sourcepath="org/testng/DependencyMap.java">
      <Message>At DependencyMap.java:[line 51]</Message>
    </SourceLine>
    <SourceLine classname="org.testng.DependencyMap" start="57" end="57" startBytecode="33" endBytecode="33" sourcefile="DependencyMap.java" sourcepath="org/testng/DependencyMap.java" role="SOURCE_LINE_ANOTHER_INSTANCE">
      <Message>Another occurrence at DependencyMap.java:[line 57]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="NP_NULL_ON_SOME_PATH_FROM_RETURN_VALUE" priority="2" rank="13" abbrev="NP" category="STYLE" instanceHash="aff60fa79543dbaf9f9e7569bf0c5c37" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="476">
    <ShortMessage>Possible null pointer dereference due to return value of called method</ShortMessage>
    <LongMessage>Possible null pointer dereference in org.testng.FileAssert.assertLength(File, long, String) due to return value of called method</LongMessage>
    <Class classname="org.testng.FileAssert" primary="true">
      <SourceLine classname="org.testng.FileAssert" start="17" end="356" sourcefile="FileAssert.java" sourcepath="org/testng/FileAssert.java">
        <Message>At FileAssert.java:[lines 17-356]</Message>
      </SourceLine>
      <Message>In class org.testng.FileAssert</Message>
    </Class>
    <Method classname="org.testng.FileAssert" name="assertLength" signature="(Ljava/io/File;JLjava/lang/String;)V" isStatic="true" primary="true">
      <SourceLine classname="org.testng.FileAssert" start="81" end="90" startBytecode="0" endBytecode="207" sourcefile="FileAssert.java" sourcepath="org/testng/FileAssert.java"/>
      <Message>In method org.testng.FileAssert.assertLength(File, long, String)</Message>
    </Method>
    <LocalVariable name="?" register="-1" pc="16" role="LOCAL_VARIABLE_UNKNOWN">
      <Message>Local variable stored in JVM register ?</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.FileAssert" primary="true" start="83" end="83" startBytecode="16" endBytecode="16" sourcefile="FileAssert.java" sourcepath="org/testng/FileAssert.java" role="SOURCE_LINE_DEREF">
      <Message>Dereferenced at FileAssert.java:[line 83]</Message>
    </SourceLine>
    <SourceLine classname="org.testng.FileAssert" start="83" end="83" startBytecode="13" endBytecode="13" sourcefile="FileAssert.java" sourcepath="org/testng/FileAssert.java" role="SOURCE_LINE_KNOWN_NULL">
      <Message>Known null at FileAssert.java:[line 83]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="NP_NULL_ON_SOME_PATH_FROM_RETURN_VALUE" priority="2" rank="13" abbrev="NP" category="STYLE" instanceHash="27f1f65893eb114dfc873eea3cbd7740" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="476">
    <ShortMessage>Possible null pointer dereference due to return value of called method</ShortMessage>
    <LongMessage>Possible null pointer dereference in org.testng.FileAssert.assertMaxLength(File, long, String) due to return value of called method</LongMessage>
    <Class classname="org.testng.FileAssert" primary="true">
      <SourceLine classname="org.testng.FileAssert" start="17" end="356" sourcefile="FileAssert.java" sourcepath="org/testng/FileAssert.java">
        <Message>At FileAssert.java:[lines 17-356]</Message>
      </SourceLine>
      <Message>In class org.testng.FileAssert</Message>
    </Class>
    <Method classname="org.testng.FileAssert" name="assertMaxLength" signature="(Ljava/io/File;JLjava/lang/String;)V" isStatic="true" primary="true">
      <SourceLine classname="org.testng.FileAssert" start="142" end="152" startBytecode="0" endBytecode="251" sourcefile="FileAssert.java" sourcepath="org/testng/FileAssert.java"/>
      <Message>In method org.testng.FileAssert.assertMaxLength(File, long, String)</Message>
    </Method>
    <LocalVariable name="?" register="-1" pc="16" role="LOCAL_VARIABLE_UNKNOWN">
      <Message>Local variable stored in JVM register ?</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.FileAssert" primary="true" start="144" end="144" startBytecode="16" endBytecode="16" sourcefile="FileAssert.java" sourcepath="org/testng/FileAssert.java" role="SOURCE_LINE_DEREF">
      <Message>Dereferenced at FileAssert.java:[line 144]</Message>
    </SourceLine>
    <SourceLine classname="org.testng.FileAssert" start="144" end="144" startBytecode="13" endBytecode="13" sourcefile="FileAssert.java" sourcepath="org/testng/FileAssert.java" role="SOURCE_LINE_KNOWN_NULL">
      <Message>Known null at FileAssert.java:[line 144]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="NP_NULL_ON_SOME_PATH_FROM_RETURN_VALUE" priority="2" rank="13" abbrev="NP" category="STYLE" instanceHash="9adf31c33b0c425db6182272bdc2d9d3" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="476">
    <ShortMessage>Possible null pointer dereference due to return value of called method</ShortMessage>
    <LongMessage>Possible null pointer dereference in org.testng.FileAssert.assertMinLength(File, long, String) due to return value of called method</LongMessage>
    <Class classname="org.testng.FileAssert" primary="true">
      <SourceLine classname="org.testng.FileAssert" start="17" end="356" sourcefile="FileAssert.java" sourcepath="org/testng/FileAssert.java">
        <Message>At FileAssert.java:[lines 17-356]</Message>
      </SourceLine>
      <Message>In class org.testng.FileAssert</Message>
    </Class>
    <Method classname="org.testng.FileAssert" name="assertMinLength" signature="(Ljava/io/File;JLjava/lang/String;)V" isStatic="true" primary="true">
      <SourceLine classname="org.testng.FileAssert" start="111" end="121" startBytecode="0" endBytecode="251" sourcefile="FileAssert.java" sourcepath="org/testng/FileAssert.java"/>
      <Message>In method org.testng.FileAssert.assertMinLength(File, long, String)</Message>
    </Method>
    <LocalVariable name="?" register="-1" pc="16" role="LOCAL_VARIABLE_UNKNOWN">
      <Message>Local variable stored in JVM register ?</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.FileAssert" primary="true" start="113" end="113" startBytecode="16" endBytecode="16" sourcefile="FileAssert.java" sourcepath="org/testng/FileAssert.java" role="SOURCE_LINE_DEREF">
      <Message>Dereferenced at FileAssert.java:[line 113]</Message>
    </SourceLine>
    <SourceLine classname="org.testng.FileAssert" start="113" end="113" startBytecode="13" endBytecode="13" sourcefile="FileAssert.java" sourcepath="org/testng/FileAssert.java" role="SOURCE_LINE_KNOWN_NULL">
      <Message>Known null at FileAssert.java:[line 113]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DM_CONVERT_CASE" priority="3" rank="20" abbrev="Dm" category="I18N" instanceHash="2fdb8cb2d4e1c25fbf4f089a29851340" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Consider using Locale parameterized version of invoked method</ShortMessage>
    <LongMessage>Use of non-localized String.toUpperCase() or String.toLowerCase() in org.testng.JarFileUtils.testngXmlExistsInJar(File, List)</LongMessage>
    <Class classname="org.testng.JarFileUtils" primary="true">
      <SourceLine classname="org.testng.JarFileUtils" start="28" end="129" sourcefile="JarFileUtils.java" sourcepath="org/testng/JarFileUtils.java">
        <Message>At JarFileUtils.java:[lines 28-129]</Message>
      </SourceLine>
      <Message>In class org.testng.JarFileUtils</Message>
    </Class>
    <Method classname="org.testng.JarFileUtils" name="testngXmlExistsInJar" signature="(Ljava/io/File;Ljava/util/List;)Z" isStatic="false" primary="true">
      <SourceLine classname="org.testng.JarFileUtils" start="69" end="107" startBytecode="0" endBytecode="877" sourcefile="JarFileUtils.java" sourcepath="org/testng/JarFileUtils.java"/>
      <Message>In method org.testng.JarFileUtils.testngXmlExistsInJar(File, List)</Message>
    </Method>
    <SourceLine classname="org.testng.JarFileUtils" primary="true" start="76" end="76" startBytecode="65" endBytecode="65" sourcefile="JarFileUtils.java" sourcepath="org/testng/JarFileUtils.java">
      <Message>At JarFileUtils.java:[line 76]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="NP_NULL_ON_SOME_PATH_FROM_RETURN_VALUE" priority="2" rank="13" abbrev="NP" category="STYLE" instanceHash="65067d76208e1cb99fdda2eb90f7d484" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="476">
    <ShortMessage>Possible null pointer dereference due to return value of called method</ShortMessage>
    <LongMessage>Possible null pointer dereference in org.testng.JarFileUtils.delete(File) due to return value of called method</LongMessage>
    <Class classname="org.testng.JarFileUtils" primary="true">
      <SourceLine classname="org.testng.JarFileUtils" start="28" end="129" sourcefile="JarFileUtils.java" sourcepath="org/testng/JarFileUtils.java">
        <Message>At JarFileUtils.java:[lines 28-129]</Message>
      </SourceLine>
      <Message>In class org.testng.JarFileUtils</Message>
    </Class>
    <Method classname="org.testng.JarFileUtils" name="delete" signature="(Ljava/io/File;)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.JarFileUtils" start="111" end="117" startBytecode="0" endBytecode="182" sourcefile="JarFileUtils.java" sourcepath="org/testng/JarFileUtils.java"/>
      <Message>In method org.testng.JarFileUtils.delete(File)</Message>
    </Method>
    <LocalVariable name="?" register="2" pc="13" role="LOCAL_VARIABLE_VALUE_OF">
      <Message>Value loaded from ?</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.JarFileUtils" primary="true" start="112" end="112" startBytecode="13" endBytecode="13" sourcefile="JarFileUtils.java" sourcepath="org/testng/JarFileUtils.java" role="SOURCE_LINE_DEREF">
      <Message>Dereferenced at JarFileUtils.java:[line 112]</Message>
    </SourceLine>
    <SourceLine classname="org.testng.JarFileUtils" start="112" end="112" startBytecode="8" endBytecode="8" sourcefile="JarFileUtils.java" sourcepath="org/testng/JarFileUtils.java" role="SOURCE_LINE_KNOWN_NULL">
      <Message>Known null at JarFileUtils.java:[line 112]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="MS_EXPOSE_REP" priority="2" rank="18" abbrev="MS" category="MALICIOUS_CODE" instanceHash="f13ded8ad6472ed781b2f73e3eeb5476" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="218">
    <ShortMessage>Public static method may expose internal representation by returning a mutable object or array</ShortMessage>
    <LongMessage>Public static org.testng.Reporter.getOutput() may expose internal representation by returning Reporter.m_output</LongMessage>
    <Class classname="org.testng.Reporter" primary="true">
      <SourceLine classname="org.testng.Reporter" start="27" end="173" sourcefile="Reporter.java" sourcepath="org/testng/Reporter.java">
        <Message>At Reporter.java:[lines 27-173]</Message>
      </SourceLine>
      <Message>In class org.testng.Reporter</Message>
    </Class>
    <Method classname="org.testng.Reporter" name="getOutput" signature="()Ljava/util/List;" isStatic="true" primary="true">
      <SourceLine classname="org.testng.Reporter" start="49" end="49" startBytecode="0" endBytecode="27" sourcefile="Reporter.java" sourcepath="org/testng/Reporter.java"/>
      <Message>In method org.testng.Reporter.getOutput()</Message>
    </Method>
    <Field classname="org.testng.Reporter" name="m_output" signature="Ljava/util/List;" isStatic="true" primary="true">
      <SourceLine classname="org.testng.Reporter" sourcefile="Reporter.java" sourcepath="org/testng/Reporter.java">
        <Message>In Reporter.java</Message>
      </SourceLine>
      <Message>Field org.testng.Reporter.m_output</Message>
    </Field>
    <SourceLine classname="org.testng.Reporter" primary="true" start="49" end="49" startBytecode="3" endBytecode="3" sourcefile="Reporter.java" sourcepath="org/testng/Reporter.java">
      <Message>At Reporter.java:[line 49]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="NM_SAME_SIMPLE_NAME_AS_SUPERCLASS" priority="1" rank="14" abbrev="Nm" category="BAD_PRACTICE" instanceHash="46adcc25a7dbf279364935914a46bf96" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Class names shouldn&apos;t shadow simple name of superclass</ShortMessage>
    <LongMessage>The class name org.testng.ReporterConfig shadows the simple name of the superclass org.testng.internal.ReporterConfig</LongMessage>
    <Class classname="org.testng.ReporterConfig" primary="true" classAnnotationNames="java.lang.Deprecated">
      <SourceLine classname="org.testng.ReporterConfig" start="10" end="34" sourcefile="ReporterConfig.java" sourcepath="org/testng/ReporterConfig.java">
        <Message>At ReporterConfig.java:[lines 10-34]</Message>
      </SourceLine>
      <Message>In class org.testng.ReporterConfig</Message>
    </Class>
    <Class classname="org.testng.internal.ReporterConfig">
      <SourceLine classname="org.testng.internal.ReporterConfig" start="22" end="126" sourcefile="ReporterConfig.java" sourcepath="org/testng/internal/ReporterConfig.java">
        <Message>At ReporterConfig.java:[lines 22-126]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.ReporterConfig</Message>
    </Class>
    <SourceLine classname="org.testng.ReporterConfig" start="10" end="34" sourcefile="ReporterConfig.java" sourcepath="org/testng/ReporterConfig.java" synthetic="true">
      <Message>At ReporterConfig.java:[lines 10-34]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="IS2_INCONSISTENT_SYNC" priority="2" rank="17" abbrev="IS" category="MT_CORRECTNESS" instanceHash="1e6695c6e9bfb0aaaf4a6cf96f280e15" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="366">
    <ShortMessage>Inconsistent synchronization</ShortMessage>
    <LongMessage>Inconsistent synchronization of org.testng.SkipException.m_stackTrace; locked 66% of time</LongMessage>
    <Class classname="org.testng.SkipException" primary="true">
      <SourceLine classname="org.testng.SkipException" start="18" end="68" sourcefile="SkipException.java" sourcepath="org/testng/SkipException.java">
        <Message>At SkipException.java:[lines 18-68]</Message>
      </SourceLine>
      <Message>In class org.testng.SkipException</Message>
    </Class>
    <Field classname="org.testng.SkipException" name="m_stackTrace" signature="[Ljava/lang/StackTraceElement;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.SkipException" sourcefile="SkipException.java" sourcepath="org/testng/SkipException.java">
        <Message>In SkipException.java</Message>
      </SourceLine>
      <Message>Field org.testng.SkipException.m_stackTrace</Message>
    </Field>
    <Int value="66" role="INT_SYNC_PERCENT">
      <Message>Synchronized 66% of the time</Message>
    </Int>
    <SourceLine classname="org.testng.SkipException" primary="true" start="62" end="62" startBytecode="9" endBytecode="9" sourcefile="SkipException.java" sourcepath="org/testng/SkipException.java" role="SOURCE_LINE_UNSYNC_ACCESS">
      <Message>Unsynchronized access at SkipException.java:[line 62]</Message>
    </SourceLine>
    <SourceLine classname="org.testng.SkipException" start="64" end="64" startBytecode="21" endBytecode="21" sourcefile="SkipException.java" sourcepath="org/testng/SkipException.java" role="SOURCE_LINE_SYNC_ACCESS">
      <Message>Synchronized access at SkipException.java:[line 64]</Message>
    </SourceLine>
    <SourceLine classname="org.testng.SkipException" start="48" end="48" startBytecode="28" endBytecode="28" sourcefile="SkipException.java" sourcepath="org/testng/SkipException.java" role="SOURCE_LINE_SYNC_ACCESS">
      <Message>Synchronized access at SkipException.java:[line 48]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EQ_COMPARETO_USE_OBJECT_EQUALS" priority="2" rank="16" abbrev="Eq" category="BAD_PRACTICE" instanceHash="ed98079758d73c99553de6f51288ecf3" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Class defines compareTo(...) and uses Object.equals()</ShortMessage>
    <LongMessage>org.testng.SuiteResult defines compareTo(Object) and uses Object.equals()</LongMessage>
    <Class classname="org.testng.SuiteResult" primary="true">
      <SourceLine classname="org.testng.SuiteResult" start="12" end="56" sourcefile="SuiteResult.java" sourcepath="org/testng/SuiteResult.java">
        <Message>At SuiteResult.java:[lines 12-56]</Message>
      </SourceLine>
      <Message>In class org.testng.SuiteResult</Message>
    </Class>
    <Method classname="org.testng.SuiteResult" name="compareTo" signature="(Ljava/lang/Object;)I" isStatic="false" primary="true">
      <SourceLine classname="org.testng.SuiteResult" start="39" end="50" startBytecode="0" endBytecode="231" sourcefile="SuiteResult.java" sourcepath="org/testng/SuiteResult.java"/>
      <Message>In method org.testng.SuiteResult.compareTo(Object)</Message>
    </Method>
    <SourceLine classname="org.testng.SuiteResult" start="39" end="50" startBytecode="0" endBytecode="231" sourcefile="SuiteResult.java" sourcepath="org/testng/SuiteResult.java" synthetic="true">
      <Message>At SuiteResult.java:[lines 39-50]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="UWF_NULL_FIELD" priority="3" rank="15" abbrev="UwF" category="CORRECTNESS" instanceHash="996639519a043553b5201cc284475494" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Field only ever set to null</ShortMessage>
    <LongMessage>Field only ever set to null: org.testng.SuiteResult.m_propertyFileName</LongMessage>
    <Class classname="org.testng.SuiteResult" primary="true">
      <SourceLine classname="org.testng.SuiteResult" start="12" end="56" sourcefile="SuiteResult.java" sourcepath="org/testng/SuiteResult.java">
        <Message>At SuiteResult.java:[lines 12-56]</Message>
      </SourceLine>
      <Message>In class org.testng.SuiteResult</Message>
    </Class>
    <Field classname="org.testng.SuiteResult" name="m_propertyFileName" signature="Ljava/lang/String;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.SuiteResult" sourcefile="SuiteResult.java" sourcepath="org/testng/SuiteResult.java">
        <Message>In SuiteResult.java</Message>
      </SourceLine>
      <Message>Field org.testng.SuiteResult.m_propertyFileName</Message>
    </Field>
    <SourceLine classname="org.testng.SuiteResult" primary="true" start="12" end="12" startBytecode="6" endBytecode="6" sourcefile="SuiteResult.java" sourcepath="org/testng/SuiteResult.java">
      <Message>At SuiteResult.java:[line 12]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="646cc2ced424eb1a650c43a7d83d3e7d" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.SuiteRunner.getAllMethods() may expose internal representation by returning SuiteRunner.allTestMethods</LongMessage>
    <Class classname="org.testng.SuiteRunner" primary="true">
      <SourceLine classname="org.testng.SuiteRunner" start="28" end="755" sourcefile="SuiteRunner.java" sourcepath="org/testng/SuiteRunner.java">
        <Message>At SuiteRunner.java:[lines 28-755]</Message>
      </SourceLine>
      <Message>In class org.testng.SuiteRunner</Message>
    </Class>
    <Method classname="org.testng.SuiteRunner" name="getAllMethods" signature="()Ljava/util/List;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.SuiteRunner" start="755" end="755" startBytecode="0" endBytecode="46" sourcefile="SuiteRunner.java" sourcepath="org/testng/SuiteRunner.java"/>
      <Message>In method org.testng.SuiteRunner.getAllMethods()</Message>
    </Method>
    <Field classname="org.testng.SuiteRunner" name="allTestMethods" signature="Ljava/util/List;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.SuiteRunner" sourcefile="SuiteRunner.java" sourcepath="org/testng/SuiteRunner.java">
        <Message>In SuiteRunner.java</Message>
      </SourceLine>
      <Message>Field org.testng.SuiteRunner.allTestMethods</Message>
    </Field>
    <SourceLine classname="org.testng.SuiteRunner" primary="true" start="755" end="755" startBytecode="4" endBytecode="4" sourcefile="SuiteRunner.java" sourcepath="org/testng/SuiteRunner.java">
      <Message>At SuiteRunner.java:[line 755]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="60559edb8050dd9fed3300eb3fb94af0" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.SuiteRunner.getReporters() may expose internal representation by returning SuiteRunner.reporters</LongMessage>
    <Class classname="org.testng.SuiteRunner" primary="true">
      <SourceLine classname="org.testng.SuiteRunner" start="28" end="755" sourcefile="SuiteRunner.java" sourcepath="org/testng/SuiteRunner.java">
        <Message>At SuiteRunner.java:[lines 28-755]</Message>
      </SourceLine>
      <Message>In class org.testng.SuiteRunner</Message>
    </Class>
    <Method classname="org.testng.SuiteRunner" name="getReporters" signature="()Ljava/util/List;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.SuiteRunner" start="369" end="369" startBytecode="0" endBytecode="46" sourcefile="SuiteRunner.java" sourcepath="org/testng/SuiteRunner.java"/>
      <Message>In method org.testng.SuiteRunner.getReporters()</Message>
    </Method>
    <Field classname="org.testng.SuiteRunner" name="reporters" signature="Ljava/util/List;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.SuiteRunner" sourcefile="SuiteRunner.java" sourcepath="org/testng/SuiteRunner.java">
        <Message>In SuiteRunner.java</Message>
      </SourceLine>
      <Message>Field org.testng.SuiteRunner.reporters</Message>
    </Field>
    <SourceLine classname="org.testng.SuiteRunner" primary="true" start="369" end="369" startBytecode="4" endBytecode="4" sourcefile="SuiteRunner.java" sourcepath="org/testng/SuiteRunner.java">
      <Message>At SuiteRunner.java:[line 369]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="a5058ca56e10df4d9c3fc908b5ac7836" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.SuiteRunner.getResults() may expose internal representation by returning SuiteRunner.suiteResults</LongMessage>
    <Class classname="org.testng.SuiteRunner" primary="true">
      <SourceLine classname="org.testng.SuiteRunner" start="28" end="755" sourcefile="SuiteRunner.java" sourcepath="org/testng/SuiteRunner.java">
        <Message>At SuiteRunner.java:[lines 28-755]</Message>
      </SourceLine>
      <Message>In class org.testng.SuiteRunner</Message>
    </Class>
    <Method classname="org.testng.SuiteRunner" name="getResults" signature="()Ljava/util/Map;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.SuiteRunner" start="482" end="482" startBytecode="0" endBytecode="46" sourcefile="SuiteRunner.java" sourcepath="org/testng/SuiteRunner.java"/>
      <Message>In method org.testng.SuiteRunner.getResults()</Message>
    </Method>
    <Field classname="org.testng.SuiteRunner" name="suiteResults" signature="Ljava/util/Map;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.SuiteRunner" sourcefile="SuiteRunner.java" sourcepath="org/testng/SuiteRunner.java">
        <Message>In SuiteRunner.java</Message>
      </SourceLine>
      <Message>Field org.testng.SuiteRunner.suiteResults</Message>
    </Field>
    <SourceLine classname="org.testng.SuiteRunner" primary="true" start="482" end="482" startBytecode="4" endBytecode="4" sourcefile="SuiteRunner.java" sourcepath="org/testng/SuiteRunner.java">
      <Message>At SuiteRunner.java:[line 482]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="bc1578ac34b37f176e5da015796d89d6" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.SuiteRunner.getXmlSuite() may expose internal representation by returning SuiteRunner.xmlSuite</LongMessage>
    <Class classname="org.testng.SuiteRunner" primary="true">
      <SourceLine classname="org.testng.SuiteRunner" start="28" end="755" sourcefile="SuiteRunner.java" sourcepath="org/testng/SuiteRunner.java">
        <Message>At SuiteRunner.java:[lines 28-755]</Message>
      </SourceLine>
      <Message>In class org.testng.SuiteRunner</Message>
    </Class>
    <Method classname="org.testng.SuiteRunner" name="getXmlSuite" signature="()Lorg/testng/xml/XmlSuite;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.SuiteRunner" start="204" end="204" startBytecode="0" endBytecode="46" sourcefile="SuiteRunner.java" sourcepath="org/testng/SuiteRunner.java"/>
      <Message>In method org.testng.SuiteRunner.getXmlSuite()</Message>
    </Method>
    <Field classname="org.testng.SuiteRunner" name="xmlSuite" signature="Lorg/testng/xml/XmlSuite;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.SuiteRunner" sourcefile="SuiteRunner.java" sourcepath="org/testng/SuiteRunner.java">
        <Message>In SuiteRunner.java</Message>
      </SourceLine>
      <Message>Field org.testng.SuiteRunner.xmlSuite</Message>
    </Field>
    <SourceLine classname="org.testng.SuiteRunner" primary="true" start="204" end="204" startBytecode="4" endBytecode="4" sourcefile="SuiteRunner.java" sourcepath="org/testng/SuiteRunner.java">
      <Message>At SuiteRunner.java:[line 204]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="77537c569831e69c3109b49c0512d713" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>new org.testng.SuiteRunnerWorker(ISuite, SuiteRunnerMap, int, String) may expose internal representation by storing an externally mutable object into SuiteRunnerWorker.m_suiteRunner</LongMessage>
    <Class classname="org.testng.SuiteRunnerWorker" primary="true">
      <SourceLine classname="org.testng.SuiteRunnerWorker" start="21" end="130" sourcefile="SuiteRunnerWorker.java" sourcepath="org/testng/SuiteRunnerWorker.java">
        <Message>At SuiteRunnerWorker.java:[lines 21-130]</Message>
      </SourceLine>
      <Message>In class org.testng.SuiteRunnerWorker</Message>
    </Class>
    <Method classname="org.testng.SuiteRunnerWorker" name="&lt;init&gt;" signature="(Lorg/testng/ISuite;Lorg/testng/internal/SuiteRunnerMap;ILjava/lang/String;)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.SuiteRunnerWorker" start="30" end="35" startBytecode="0" endBytecode="133" sourcefile="SuiteRunnerWorker.java" sourcepath="org/testng/SuiteRunnerWorker.java"/>
      <Message>In method new org.testng.SuiteRunnerWorker(ISuite, SuiteRunnerMap, int, String)</Message>
    </Method>
    <Field classname="org.testng.SuiteRunnerWorker" name="m_suiteRunner" signature="Lorg/testng/SuiteRunner;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.SuiteRunnerWorker" sourcefile="SuiteRunnerWorker.java" sourcepath="org/testng/SuiteRunnerWorker.java">
        <Message>In SuiteRunnerWorker.java</Message>
      </SourceLine>
      <Message>Field org.testng.SuiteRunnerWorker.m_suiteRunner</Message>
    </Field>
    <LocalVariable name="suiteRunner" register="1" pc="14" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named suiteRunner</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.SuiteRunnerWorker" primary="true" start="32" end="32" startBytecode="14" endBytecode="14" sourcefile="SuiteRunnerWorker.java" sourcepath="org/testng/SuiteRunnerWorker.java">
      <Message>At SuiteRunnerWorker.java:[line 32]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="35c0b854547137524ee6d15ac9325d06" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>new org.testng.SuiteRunnerWorker(ISuite, SuiteRunnerMap, int, String) may expose internal representation by storing an externally mutable object into SuiteRunnerWorker.m_suiteRunnerMap</LongMessage>
    <Class classname="org.testng.SuiteRunnerWorker" primary="true">
      <SourceLine classname="org.testng.SuiteRunnerWorker" start="21" end="130" sourcefile="SuiteRunnerWorker.java" sourcepath="org/testng/SuiteRunnerWorker.java">
        <Message>At SuiteRunnerWorker.java:[lines 21-130]</Message>
      </SourceLine>
      <Message>In class org.testng.SuiteRunnerWorker</Message>
    </Class>
    <Method classname="org.testng.SuiteRunnerWorker" name="&lt;init&gt;" signature="(Lorg/testng/ISuite;Lorg/testng/internal/SuiteRunnerMap;ILjava/lang/String;)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.SuiteRunnerWorker" start="30" end="35" startBytecode="0" endBytecode="133" sourcefile="SuiteRunnerWorker.java" sourcepath="org/testng/SuiteRunnerWorker.java"/>
      <Message>In method new org.testng.SuiteRunnerWorker(ISuite, SuiteRunnerMap, int, String)</Message>
    </Method>
    <Field classname="org.testng.SuiteRunnerWorker" name="m_suiteRunnerMap" signature="Lorg/testng/internal/SuiteRunnerMap;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.SuiteRunnerWorker" sourcefile="SuiteRunnerWorker.java" sourcepath="org/testng/SuiteRunnerWorker.java">
        <Message>In SuiteRunnerWorker.java</Message>
      </SourceLine>
      <Message>Field org.testng.SuiteRunnerWorker.m_suiteRunnerMap</Message>
    </Field>
    <LocalVariable name="suiteRunnerMap" register="2" pc="6" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named suiteRunnerMap</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.SuiteRunnerWorker" primary="true" start="31" end="31" startBytecode="6" endBytecode="6" sourcefile="SuiteRunnerWorker.java" sourcepath="org/testng/SuiteRunnerWorker.java">
      <Message>At SuiteRunnerWorker.java:[line 31]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EQ_COMPARETO_USE_OBJECT_EQUALS" priority="2" rank="16" abbrev="Eq" category="BAD_PRACTICE" instanceHash="63b6cfa077148514bd9f17c312968afb" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Class defines compareTo(...) and uses Object.equals()</ShortMessage>
    <LongMessage>org.testng.SuiteRunnerWorker defines compareTo(Object) and uses Object.equals()</LongMessage>
    <Class classname="org.testng.SuiteRunnerWorker" primary="true">
      <SourceLine classname="org.testng.SuiteRunnerWorker" start="21" end="130" sourcefile="SuiteRunnerWorker.java" sourcepath="org/testng/SuiteRunnerWorker.java">
        <Message>At SuiteRunnerWorker.java:[lines 21-130]</Message>
      </SourceLine>
      <Message>In class org.testng.SuiteRunnerWorker</Message>
    </Class>
    <Method classname="org.testng.SuiteRunnerWorker" name="compareTo" signature="(Ljava/lang/Object;)I" isStatic="false" primary="true">
      <SourceLine classname="org.testng.SuiteRunnerWorker" start="21" end="21" startBytecode="0" endBytecode="50" sourcefile="SuiteRunnerWorker.java" sourcepath="org/testng/SuiteRunnerWorker.java"/>
      <Message>In method org.testng.SuiteRunnerWorker.compareTo(Object)</Message>
    </Method>
    <SourceLine classname="org.testng.SuiteRunnerWorker" start="21" end="21" startBytecode="0" endBytecode="50" sourcefile="SuiteRunnerWorker.java" sourcepath="org/testng/SuiteRunnerWorker.java" synthetic="true">
      <Message>At SuiteRunnerWorker.java:[line 21]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="RI_REDUNDANT_INTERFACES" priority="3" rank="20" abbrev="RI" category="STYLE" instanceHash="ca922c13c86ebc8347d693db69055269" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Class implements same interface as superclass</ShortMessage>
    <LongMessage>Class org.testng.TestClass implements same interface as superclass</LongMessage>
    <Class classname="org.testng.TestClass" primary="true">
      <SourceLine classname="org.testng.TestClass" start="19" end="235" sourcefile="TestClass.java" sourcepath="org/testng/TestClass.java">
        <Message>At TestClass.java:[lines 19-235]</Message>
      </SourceLine>
      <Message>In class org.testng.TestClass</Message>
    </Class>
    <Class classname="org.testng.ITestClass" role="INTERFACE_TYPE">
      <SourceLine classname="org.testng.ITestClass" sourcefile="ITestClass.java" sourcepath="org/testng/ITestClass.java">
        <Message>In ITestClass.java</Message>
      </SourceLine>
      <Message>Interface org.testng.ITestClass</Message>
    </Class>
    <SourceLine classname="org.testng.TestClass" start="19" end="235" sourcefile="TestClass.java" sourcepath="org/testng/TestClass.java" synthetic="true">
      <Message>At TestClass.java:[lines 19-235]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="6a94533cc54efd129c96d554b240a8fb" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>org.testng.TestListenerAdapter.setAllTestMethods(List) may expose internal representation by storing an externally mutable object into TestListenerAdapter.m_allTestMethods</LongMessage>
    <Class classname="org.testng.TestListenerAdapter" primary="true">
      <SourceLine classname="org.testng.TestListenerAdapter" start="21" end="166" sourcefile="TestListenerAdapter.java" sourcepath="org/testng/TestListenerAdapter.java">
        <Message>At TestListenerAdapter.java:[lines 21-166]</Message>
      </SourceLine>
      <Message>In class org.testng.TestListenerAdapter</Message>
    </Class>
    <Method classname="org.testng.TestListenerAdapter" name="setAllTestMethods" signature="(Ljava/util/List;)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.TestListenerAdapter" start="102" end="103" startBytecode="0" endBytecode="79" sourcefile="TestListenerAdapter.java" sourcepath="org/testng/TestListenerAdapter.java"/>
      <Message>In method org.testng.TestListenerAdapter.setAllTestMethods(List)</Message>
    </Method>
    <Field classname="org.testng.TestListenerAdapter" name="m_allTestMethods" signature="Ljava/util/Collection;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.TestListenerAdapter" sourcefile="TestListenerAdapter.java" sourcepath="org/testng/TestListenerAdapter.java">
        <Message>In TestListenerAdapter.java</Message>
      </SourceLine>
      <Message>Field org.testng.TestListenerAdapter.m_allTestMethods</Message>
    </Field>
    <LocalVariable name="allTestMethods" register="1" pc="2" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named allTestMethods</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.TestListenerAdapter" primary="true" start="102" end="102" startBytecode="2" endBytecode="2" sourcefile="TestListenerAdapter.java" sourcepath="org/testng/TestListenerAdapter.java">
      <Message>At TestListenerAdapter.java:[line 102]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="5992430216911997e13941c6ef6387" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>org.testng.TestListenerAdapter.setFailedButWithinSuccessPercentageTests(List) may expose internal representation by storing an externally mutable object into TestListenerAdapter.m_failedButWSPerTests</LongMessage>
    <Class classname="org.testng.TestListenerAdapter" primary="true">
      <SourceLine classname="org.testng.TestListenerAdapter" start="21" end="166" sourcefile="TestListenerAdapter.java" sourcepath="org/testng/TestListenerAdapter.java">
        <Message>At TestListenerAdapter.java:[lines 21-166]</Message>
      </SourceLine>
      <Message>In class org.testng.TestListenerAdapter</Message>
    </Class>
    <Method classname="org.testng.TestListenerAdapter" name="setFailedButWithinSuccessPercentageTests" signature="(Ljava/util/List;)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.TestListenerAdapter" start="109" end="110" startBytecode="0" endBytecode="79" sourcefile="TestListenerAdapter.java" sourcepath="org/testng/TestListenerAdapter.java"/>
      <Message>In method org.testng.TestListenerAdapter.setFailedButWithinSuccessPercentageTests(List)</Message>
    </Method>
    <Field classname="org.testng.TestListenerAdapter" name="m_failedButWSPerTests" signature="Ljava/util/Collection;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.TestListenerAdapter" sourcefile="TestListenerAdapter.java" sourcepath="org/testng/TestListenerAdapter.java">
        <Message>In TestListenerAdapter.java</Message>
      </SourceLine>
      <Message>Field org.testng.TestListenerAdapter.m_failedButWSPerTests</Message>
    </Field>
    <LocalVariable name="failedButWithinSuccessPercentageTests" register="1" pc="2" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named failedButWithinSuccessPercentageTests</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.TestListenerAdapter" primary="true" start="109" end="109" startBytecode="2" endBytecode="2" sourcefile="TestListenerAdapter.java" sourcepath="org/testng/TestListenerAdapter.java">
      <Message>At TestListenerAdapter.java:[line 109]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="99bdbdb8bdf7c7063b924f56d7b3b769" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>org.testng.TestListenerAdapter.setFailedTests(List) may expose internal representation by storing an externally mutable object into TestListenerAdapter.m_failedTests</LongMessage>
    <Class classname="org.testng.TestListenerAdapter" primary="true">
      <SourceLine classname="org.testng.TestListenerAdapter" start="21" end="166" sourcefile="TestListenerAdapter.java" sourcepath="org/testng/TestListenerAdapter.java">
        <Message>At TestListenerAdapter.java:[lines 21-166]</Message>
      </SourceLine>
      <Message>In class org.testng.TestListenerAdapter</Message>
    </Class>
    <Method classname="org.testng.TestListenerAdapter" name="setFailedTests" signature="(Ljava/util/List;)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.TestListenerAdapter" start="113" end="114" startBytecode="0" endBytecode="79" sourcefile="TestListenerAdapter.java" sourcepath="org/testng/TestListenerAdapter.java"/>
      <Message>In method org.testng.TestListenerAdapter.setFailedTests(List)</Message>
    </Method>
    <Field classname="org.testng.TestListenerAdapter" name="m_failedTests" signature="Ljava/util/Collection;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.TestListenerAdapter" sourcefile="TestListenerAdapter.java" sourcepath="org/testng/TestListenerAdapter.java">
        <Message>In TestListenerAdapter.java</Message>
      </SourceLine>
      <Message>Field org.testng.TestListenerAdapter.m_failedTests</Message>
    </Field>
    <LocalVariable name="failedTests" register="1" pc="2" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named failedTests</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.TestListenerAdapter" primary="true" start="113" end="113" startBytecode="2" endBytecode="2" sourcefile="TestListenerAdapter.java" sourcepath="org/testng/TestListenerAdapter.java">
      <Message>At TestListenerAdapter.java:[line 113]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="a8a259d26da64af49bd6ee919f298681" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>org.testng.TestListenerAdapter.setPassedTests(List) may expose internal representation by storing an externally mutable object into TestListenerAdapter.m_passedTests</LongMessage>
    <Class classname="org.testng.TestListenerAdapter" primary="true">
      <SourceLine classname="org.testng.TestListenerAdapter" start="21" end="166" sourcefile="TestListenerAdapter.java" sourcepath="org/testng/TestListenerAdapter.java">
        <Message>At TestListenerAdapter.java:[lines 21-166]</Message>
      </SourceLine>
      <Message>In class org.testng.TestListenerAdapter</Message>
    </Class>
    <Method classname="org.testng.TestListenerAdapter" name="setPassedTests" signature="(Ljava/util/List;)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.TestListenerAdapter" start="117" end="118" startBytecode="0" endBytecode="79" sourcefile="TestListenerAdapter.java" sourcepath="org/testng/TestListenerAdapter.java"/>
      <Message>In method org.testng.TestListenerAdapter.setPassedTests(List)</Message>
    </Method>
    <Field classname="org.testng.TestListenerAdapter" name="m_passedTests" signature="Ljava/util/Collection;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.TestListenerAdapter" sourcefile="TestListenerAdapter.java" sourcepath="org/testng/TestListenerAdapter.java">
        <Message>In TestListenerAdapter.java</Message>
      </SourceLine>
      <Message>Field org.testng.TestListenerAdapter.m_passedTests</Message>
    </Field>
    <LocalVariable name="passedTests" register="1" pc="2" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named passedTests</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.TestListenerAdapter" primary="true" start="117" end="117" startBytecode="2" endBytecode="2" sourcefile="TestListenerAdapter.java" sourcepath="org/testng/TestListenerAdapter.java">
      <Message>At TestListenerAdapter.java:[line 117]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="2d653763051986eb0f67e94cd9662661" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>org.testng.TestListenerAdapter.setSkippedTests(List) may expose internal representation by storing an externally mutable object into TestListenerAdapter.m_skippedTests</LongMessage>
    <Class classname="org.testng.TestListenerAdapter" primary="true">
      <SourceLine classname="org.testng.TestListenerAdapter" start="21" end="166" sourcefile="TestListenerAdapter.java" sourcepath="org/testng/TestListenerAdapter.java">
        <Message>At TestListenerAdapter.java:[lines 21-166]</Message>
      </SourceLine>
      <Message>In class org.testng.TestListenerAdapter</Message>
    </Class>
    <Method classname="org.testng.TestListenerAdapter" name="setSkippedTests" signature="(Ljava/util/List;)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.TestListenerAdapter" start="121" end="122" startBytecode="0" endBytecode="79" sourcefile="TestListenerAdapter.java" sourcepath="org/testng/TestListenerAdapter.java"/>
      <Message>In method org.testng.TestListenerAdapter.setSkippedTests(List)</Message>
    </Method>
    <Field classname="org.testng.TestListenerAdapter" name="m_skippedTests" signature="Ljava/util/Collection;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.TestListenerAdapter" sourcefile="TestListenerAdapter.java" sourcepath="org/testng/TestListenerAdapter.java">
        <Message>In TestListenerAdapter.java</Message>
      </SourceLine>
      <Message>Field org.testng.TestListenerAdapter.m_skippedTests</Message>
    </Field>
    <LocalVariable name="skippedTests" register="1" pc="2" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named skippedTests</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.TestListenerAdapter" primary="true" start="121" end="121" startBytecode="2" endBytecode="2" sourcefile="TestListenerAdapter.java" sourcepath="org/testng/TestListenerAdapter.java">
      <Message>At TestListenerAdapter.java:[line 121]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="54a84143d1a62d897dfbb58079da10eb" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>org.testng.TestNG.setServiceLoaderClassLoader(URLClassLoader) may expose internal representation by storing an externally mutable object into TestNG.m_serviceLoaderClassLoader</LongMessage>
    <Class classname="org.testng.TestNG" primary="true">
      <SourceLine classname="org.testng.TestNG" start="108" end="1911" sourcefile="TestNG.java" sourcepath="org/testng/TestNG.java">
        <Message>At TestNG.java:[lines 108-1911]</Message>
      </SourceLine>
      <Message>In class org.testng.TestNG</Message>
    </Class>
    <Method classname="org.testng.TestNG" name="setServiceLoaderClassLoader" signature="(Ljava/net/URLClassLoader;)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.TestNG" start="1890" end="1891" startBytecode="0" endBytecode="61" sourcefile="TestNG.java" sourcepath="org/testng/TestNG.java"/>
      <Message>In method org.testng.TestNG.setServiceLoaderClassLoader(URLClassLoader)</Message>
    </Method>
    <Field classname="org.testng.TestNG" name="m_serviceLoaderClassLoader" signature="Ljava/net/URLClassLoader;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.TestNG" sourcefile="TestNG.java" sourcepath="org/testng/TestNG.java">
        <Message>In TestNG.java</Message>
      </SourceLine>
      <Message>Field org.testng.TestNG.m_serviceLoaderClassLoader</Message>
    </Field>
    <LocalVariable name="ucl" register="1" pc="2" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named ucl</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.TestNG" primary="true" start="1890" end="1890" startBytecode="2" endBytecode="2" sourcefile="TestNG.java" sourcepath="org/testng/TestNG.java">
      <Message>At TestNG.java:[line 1890]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="ea023d41faaf0363c515f05536b61a22" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>org.testng.TestNG.setTestClasses(Class[]) may expose internal representation by storing an externally mutable object into TestNG.m_commandLineTestClasses</LongMessage>
    <Class classname="org.testng.TestNG" primary="true">
      <SourceLine classname="org.testng.TestNG" start="108" end="1911" sourcefile="TestNG.java" sourcepath="org/testng/TestNG.java">
        <Message>At TestNG.java:[lines 108-1911]</Message>
      </SourceLine>
      <Message>In class org.testng.TestNG</Message>
    </Class>
    <Method classname="org.testng.TestNG" name="setTestClasses" signature="([Ljava/lang/Class;)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.TestNG" start="449" end="451" startBytecode="0" endBytecode="74" sourcefile="TestNG.java" sourcepath="org/testng/TestNG.java"/>
      <Message>In method org.testng.TestNG.setTestClasses(Class[])</Message>
    </Method>
    <Field classname="org.testng.TestNG" name="m_commandLineTestClasses" signature="[Ljava/lang/Class;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.TestNG" sourcefile="TestNG.java" sourcepath="org/testng/TestNG.java">
        <Message>In TestNG.java</Message>
      </SourceLine>
      <Message>Field org.testng.TestNG.m_commandLineTestClasses</Message>
    </Field>
    <LocalVariable name="classes" register="1" pc="11" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named classes</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.TestNG" primary="true" start="450" end="450" startBytecode="11" endBytecode="11" sourcefile="TestNG.java" sourcepath="org/testng/TestNG.java">
      <Message>At TestNG.java:[line 450]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="c7086b3008ddb5e645430e3bfccf16e2" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>org.testng.TestNG.setTestNames(List) may expose internal representation by storing an externally mutable object into TestNG.m_testNames</LongMessage>
    <Class classname="org.testng.TestNG" primary="true">
      <SourceLine classname="org.testng.TestNG" start="108" end="1911" sourcefile="TestNG.java" sourcepath="org/testng/TestNG.java">
        <Message>At TestNG.java:[lines 108-1911]</Message>
      </SourceLine>
      <Message>In class org.testng.TestNG</Message>
    </Class>
    <Method classname="org.testng.TestNG" name="setTestNames" signature="(Ljava/util/List;)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.TestNG" start="1670" end="1671" startBytecode="0" endBytecode="79" sourcefile="TestNG.java" sourcepath="org/testng/TestNG.java"/>
      <Message>In method org.testng.TestNG.setTestNames(List)</Message>
    </Method>
    <Field classname="org.testng.TestNG" name="m_testNames" signature="Ljava/util/List;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.TestNG" sourcefile="TestNG.java" sourcepath="org/testng/TestNG.java">
        <Message>In TestNG.java</Message>
      </SourceLine>
      <Message>Field org.testng.TestNG.m_testNames</Message>
    </Field>
    <LocalVariable name="testNames" register="1" pc="2" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named testNames</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.TestNG" primary="true" start="1670" end="1670" startBytecode="2" endBytecode="2" sourcefile="TestNG.java" sourcepath="org/testng/TestNG.java">
      <Message>At TestNG.java:[line 1670]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="49bb7b79c6c79fa59a64371b9941cb48" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>org.testng.TestNG.setTestSuites(List) may expose internal representation by storing an externally mutable object into TestNG.m_stringSuites</LongMessage>
    <Class classname="org.testng.TestNG" primary="true">
      <SourceLine classname="org.testng.TestNG" start="108" end="1911" sourcefile="TestNG.java" sourcepath="org/testng/TestNG.java">
        <Message>At TestNG.java:[lines 108-1911]</Message>
      </SourceLine>
      <Message>In class org.testng.TestNG</Message>
    </Class>
    <Method classname="org.testng.TestNG" name="setTestSuites" signature="(Ljava/util/List;)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.TestNG" start="593" end="594" startBytecode="0" endBytecode="79" sourcefile="TestNG.java" sourcepath="org/testng/TestNG.java"/>
      <Message>In method org.testng.TestNG.setTestSuites(List)</Message>
    </Method>
    <Field classname="org.testng.TestNG" name="m_stringSuites" signature="Ljava/util/List;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.TestNG" sourcefile="TestNG.java" sourcepath="org/testng/TestNG.java">
        <Message>In TestNG.java</Message>
      </SourceLine>
      <Message>Field org.testng.TestNG.m_stringSuites</Message>
    </Field>
    <LocalVariable name="suites" register="1" pc="2" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named suites</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.TestNG" primary="true" start="593" end="593" startBytecode="2" endBytecode="2" sourcefile="TestNG.java" sourcepath="org/testng/TestNG.java">
      <Message>At TestNG.java:[line 593]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="abd4f45ec483a87215d4246a2b258cea" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>org.testng.TestNG.setXmlSuites(List) may expose internal representation by storing an externally mutable object into TestNG.m_suites</LongMessage>
    <Class classname="org.testng.TestNG" primary="true">
      <SourceLine classname="org.testng.TestNG" start="108" end="1911" sourcefile="TestNG.java" sourcepath="org/testng/TestNG.java">
        <Message>At TestNG.java:[lines 108-1911]</Message>
      </SourceLine>
      <Message>In class org.testng.TestNG</Message>
    </Class>
    <Method classname="org.testng.TestNG" name="setXmlSuites" signature="(Ljava/util/List;)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.TestNG" start="603" end="604" startBytecode="0" endBytecode="79" sourcefile="TestNG.java" sourcepath="org/testng/TestNG.java"/>
      <Message>In method org.testng.TestNG.setXmlSuites(List)</Message>
    </Method>
    <Field classname="org.testng.TestNG" name="m_suites" signature="Ljava/util/List;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.TestNG" sourcefile="TestNG.java" sourcepath="org/testng/TestNG.java">
        <Message>In TestNG.java</Message>
      </SourceLine>
      <Message>Field org.testng.TestNG.m_suites</Message>
    </Field>
    <LocalVariable name="suites" register="1" pc="2" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named suites</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.TestNG" primary="true" start="603" end="603" startBytecode="2" endBytecode="2" sourcefile="TestNG.java" sourcepath="org/testng/TestNG.java">
      <Message>At TestNG.java:[line 603]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="LI_LAZY_INIT_STATIC" priority="2" rank="14" abbrev="LI" category="MT_CORRECTNESS" instanceHash="151f791e495dbfa197b1d0a1a267b546" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="543">
    <ShortMessage>Incorrect lazy initialization of static field</ShortMessage>
    <LongMessage>Incorrect lazy initialization of static field org.testng.TestNG.m_jCommander in org.testng.TestNG.usage()</LongMessage>
    <Class classname="org.testng.TestNG" primary="true">
      <SourceLine classname="org.testng.TestNG" start="108" end="1911" sourcefile="TestNG.java" sourcepath="org/testng/TestNG.java">
        <Message>At TestNG.java:[lines 108-1911]</Message>
      </SourceLine>
      <Message>In class org.testng.TestNG</Message>
    </Class>
    <Method classname="org.testng.TestNG" name="usage" signature="()V" isStatic="true" primary="true">
      <SourceLine classname="org.testng.TestNG" start="1089" end="1093" startBytecode="0" endBytecode="11" sourcefile="TestNG.java" sourcepath="org/testng/TestNG.java"/>
      <Message>In method org.testng.TestNG.usage()</Message>
    </Method>
    <Field classname="org.testng.TestNG" name="m_jCommander" signature="Lcom/beust/jcommander/JCommander;" isStatic="true" primary="true" role="FIELD_ON">
      <SourceLine classname="org.testng.TestNG" sourcefile="TestNG.java" sourcepath="org/testng/TestNG.java">
        <Message>In TestNG.java</Message>
      </SourceLine>
      <Message>On field org.testng.TestNG.m_jCommander</Message>
    </Field>
    <SourceLine classname="org.testng.TestNG" primary="true" start="1089" end="1090" startBytecode="0" endBytecode="20" sourcefile="TestNG.java" sourcepath="org/testng/TestNG.java">
      <Message>At TestNG.java:[lines 1089-1090]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="MS_EXPOSE_REP" priority="2" rank="18" abbrev="MS" category="MALICIOUS_CODE" instanceHash="60e4d49c2df3324e584837c0bcc2ce0e" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="218">
    <ShortMessage>Public static method may expose internal representation by returning a mutable object or array</ShortMessage>
    <LongMessage>Public static org.testng.TestNG.getDefault() may expose internal representation by returning TestNG.m_instance</LongMessage>
    <Class classname="org.testng.TestNG" primary="true">
      <SourceLine classname="org.testng.TestNG" start="108" end="1911" sourcefile="TestNG.java" sourcepath="org/testng/TestNG.java">
        <Message>At TestNG.java:[lines 108-1911]</Message>
      </SourceLine>
      <Message>In class org.testng.TestNG</Message>
    </Class>
    <Method classname="org.testng.TestNG" name="getDefault" signature="()Lorg/testng/TestNG;" isStatic="true" primary="true">
      <SourceLine classname="org.testng.TestNG" start="1824" end="1824" startBytecode="0" endBytecode="27" sourcefile="TestNG.java" sourcepath="org/testng/TestNG.java"/>
      <Message>In method org.testng.TestNG.getDefault()</Message>
    </Method>
    <Field classname="org.testng.TestNG" name="m_instance" signature="Lorg/testng/TestNG;" isStatic="true" primary="true">
      <SourceLine classname="org.testng.TestNG" sourcefile="TestNG.java" sourcepath="org/testng/TestNG.java">
        <Message>In TestNG.java</Message>
      </SourceLine>
      <Message>Field org.testng.TestNG.m_instance</Message>
    </Field>
    <SourceLine classname="org.testng.TestNG" primary="true" start="1824" end="1824" startBytecode="3" endBytecode="3" sourcefile="TestNG.java" sourcepath="org/testng/TestNG.java">
      <Message>At TestNG.java:[line 1824]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="NM_CONFUSING" priority="3" rank="19" abbrev="Nm" category="BAD_PRACTICE" instanceHash="4c8999eb7527c4fcec4e12d07aa61b7b" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Confusing method names</ShortMessage>
    <LongMessage>Confusing to have methods org.testng.TestNG.setJUnit(Boolean) and org.testng.xml.XmlSuite.setJunit(Boolean)</LongMessage>
    <Class classname="org.testng.TestNG" primary="true">
      <SourceLine classname="org.testng.TestNG" start="108" end="1911" sourcefile="TestNG.java" sourcepath="org/testng/TestNG.java">
        <Message>At TestNG.java:[lines 108-1911]</Message>
      </SourceLine>
      <Message>In class org.testng.TestNG</Message>
    </Class>
    <Method classname="org.testng.TestNG" name="setJUnit" signature="(Ljava/lang/Boolean;)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.TestNG" start="1692" end="1693" startBytecode="0" endBytecode="61" sourcefile="TestNG.java" sourcepath="org/testng/TestNG.java"/>
      <Message>In method org.testng.TestNG.setJUnit(Boolean)</Message>
    </Method>
    <Class classname="org.testng.xml.XmlSuite">
      <SourceLine classname="org.testng.xml.XmlSuite" start="19" end="981" sourcefile="XmlSuite.java" sourcepath="org/testng/xml/XmlSuite.java">
        <Message>At XmlSuite.java:[lines 19-981]</Message>
      </SourceLine>
      <Message>In class org.testng.xml.XmlSuite</Message>
    </Class>
    <Method classname="org.testng.xml.XmlSuite" name="setJunit" signature="(Ljava/lang/Boolean;)V" isStatic="false">
      <SourceLine classname="org.testng.xml.XmlSuite" start="487" end="488" startBytecode="0" endBytecode="61" sourcefile="XmlSuite.java" sourcepath="org/testng/xml/XmlSuite.java"/>
      <Message>In method org.testng.xml.XmlSuite.setJunit(Boolean)</Message>
    </Method>
    <SourceLine classname="org.testng.TestNG" start="1692" end="1693" startBytecode="0" endBytecode="61" sourcefile="TestNG.java" sourcepath="org/testng/TestNG.java" synthetic="true">
      <Message>At TestNG.java:[lines 1692-1693]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="ST_WRITE_TO_STATIC_FROM_INSTANCE_METHOD" priority="2" rank="17" abbrev="ST" category="STYLE" instanceHash="741496816d277e370904d173f00ef5a2" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Write to static field from instance method</ShortMessage>
    <LongMessage>Write to static field org.testng.TestNG.m_instance from instance method org.testng.TestNG.run()</LongMessage>
    <Class classname="org.testng.TestNG" primary="true">
      <SourceLine classname="org.testng.TestNG" start="108" end="1911" sourcefile="TestNG.java" sourcepath="org/testng/TestNG.java">
        <Message>At TestNG.java:[lines 108-1911]</Message>
      </SourceLine>
      <Message>In class org.testng.TestNG</Message>
    </Class>
    <Method classname="org.testng.TestNG" name="run" signature="()V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.TestNG" start="1029" end="1057" startBytecode="0" endBytecode="252" sourcefile="TestNG.java" sourcepath="org/testng/TestNG.java"/>
      <Message>In method org.testng.TestNG.run()</Message>
    </Method>
    <Field classname="org.testng.TestNG" name="m_instance" signature="Lorg/testng/TestNG;" isStatic="true" primary="true">
      <SourceLine classname="org.testng.TestNG" sourcefile="TestNG.java" sourcepath="org/testng/TestNG.java">
        <Message>In TestNG.java</Message>
      </SourceLine>
      <Message>Field org.testng.TestNG.m_instance</Message>
    </Field>
    <SourceLine classname="org.testng.TestNG" primary="true" start="1055" end="1055" startBytecode="92" endBytecode="92" sourcefile="TestNG.java" sourcepath="org/testng/TestNG.java">
      <Message>At TestNG.java:[line 1055]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="ST_WRITE_TO_STATIC_FROM_INSTANCE_METHOD" priority="2" rank="17" abbrev="ST" category="STYLE" instanceHash="811d90e2e9c8b1972f411ad6eafc1926" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Write to static field from instance method</ShortMessage>
    <LongMessage>Write to static field org.testng.TestNG.m_jCommander from instance method org.testng.TestNG.run()</LongMessage>
    <Class classname="org.testng.TestNG" primary="true">
      <SourceLine classname="org.testng.TestNG" start="108" end="1911" sourcefile="TestNG.java" sourcepath="org/testng/TestNG.java">
        <Message>At TestNG.java:[lines 108-1911]</Message>
      </SourceLine>
      <Message>In class org.testng.TestNG</Message>
    </Class>
    <Method classname="org.testng.TestNG" name="run" signature="()V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.TestNG" start="1029" end="1057" startBytecode="0" endBytecode="252" sourcefile="TestNG.java" sourcepath="org/testng/TestNG.java"/>
      <Message>In method org.testng.TestNG.run()</Message>
    </Method>
    <Field classname="org.testng.TestNG" name="m_jCommander" signature="Lcom/beust/jcommander/JCommander;" isStatic="true" primary="true">
      <SourceLine classname="org.testng.TestNG" sourcefile="TestNG.java" sourcepath="org/testng/TestNG.java">
        <Message>In TestNG.java</Message>
      </SourceLine>
      <Message>Field org.testng.TestNG.m_jCommander</Message>
    </Field>
    <SourceLine classname="org.testng.TestNG" primary="true" start="1056" end="1056" startBytecode="96" endBytecode="96" sourcefile="TestNG.java" sourcepath="org/testng/TestNG.java">
      <Message>At TestNG.java:[line 1056]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="ST_WRITE_TO_STATIC_FROM_INSTANCE_METHOD" priority="3" rank="20" abbrev="ST" category="STYLE" instanceHash="1d6f52c77af9da6e5456739422d4e6c9" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Write to static field from instance method</ShortMessage>
    <LongMessage>Write to static field org.testng.TestNG.m_instance from instance method org.testng.TestNG.init(boolean)</LongMessage>
    <Class classname="org.testng.TestNG" primary="true">
      <SourceLine classname="org.testng.TestNG" start="108" end="1911" sourcefile="TestNG.java" sourcepath="org/testng/TestNG.java">
        <Message>At TestNG.java:[lines 108-1911]</Message>
      </SourceLine>
      <Message>In class org.testng.TestNG</Message>
    </Class>
    <Method classname="org.testng.TestNG" name="init" signature="(Z)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.TestNG" start="217" end="221" startBytecode="0" endBytecode="84" sourcefile="TestNG.java" sourcepath="org/testng/TestNG.java"/>
      <Message>In method org.testng.TestNG.init(boolean)</Message>
    </Method>
    <Field classname="org.testng.TestNG" name="m_instance" signature="Lorg/testng/TestNG;" isStatic="true" primary="true">
      <SourceLine classname="org.testng.TestNG" sourcefile="TestNG.java" sourcepath="org/testng/TestNG.java">
        <Message>In TestNG.java</Message>
      </SourceLine>
      <Message>Field org.testng.TestNG.m_instance</Message>
    </Field>
    <SourceLine classname="org.testng.TestNG" primary="true" start="217" end="217" startBytecode="1" endBytecode="1" sourcefile="TestNG.java" sourcepath="org/testng/TestNG.java">
      <Message>At TestNG.java:[line 217]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DM_DEFAULT_ENCODING" priority="1" rank="19" abbrev="Dm" category="I18N" instanceHash="5f47679a12ab529c5b086d605edc6c95" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Reliance on default encoding</ShortMessage>
    <LongMessage>Found reliance on default encoding in org.testng.TestNGAntTask.execute(): new java.io.FileWriter(File)</LongMessage>
    <Class classname="org.testng.TestNGAntTask" primary="true">
      <SourceLine classname="org.testng.TestNGAntTask" start="113" end="1080" sourcefile="TestNGAntTask.java" sourcepath="org/testng/TestNGAntTask.java">
        <Message>At TestNGAntTask.java:[lines 113-1080]</Message>
      </SourceLine>
      <Message>In class org.testng.TestNGAntTask</Message>
    </Class>
    <Method classname="org.testng.TestNGAntTask" name="execute" signature="()V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.TestNGAntTask" start="490" end="555" startBytecode="0" endBytecode="1077" sourcefile="TestNGAntTask.java" sourcepath="org/testng/TestNGAntTask.java"/>
      <Message>In method org.testng.TestNGAntTask.execute()</Message>
    </Method>
    <Method classname="java.io.FileWriter" name="&lt;init&gt;" signature="(Ljava/io/File;)V" isStatic="false" role="METHOD_CALLED">
      <SourceLine classname="java.io.FileWriter" start="96" end="97" startBytecode="0" endBytecode="68" sourcefile="FileWriter.java" sourcepath="java/io/FileWriter.java"/>
      <Message>Called method new java.io.FileWriter(File)</Message>
    </Method>
    <SourceLine classname="org.testng.TestNGAntTask" primary="true" start="519" end="519" startBytecode="126" endBytecode="126" sourcefile="TestNGAntTask.java" sourcepath="org/testng/TestNGAntTask.java">
      <Message>At TestNGAntTask.java:[line 519]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="NM_CONFUSING" priority="3" rank="19" abbrev="Nm" category="BAD_PRACTICE" instanceHash="a1b5a52d830262f9e923cbaeb06943be" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Confusing method names</ShortMessage>
    <LongMessage>Confusing to have methods org.testng.TestNGAntTask.setJUnit(boolean) and org.testng.xml.XmlTest.setJunit(boolean)</LongMessage>
    <Class classname="org.testng.TestNGAntTask" primary="true">
      <SourceLine classname="org.testng.TestNGAntTask" start="113" end="1080" sourcefile="TestNGAntTask.java" sourcepath="org/testng/TestNGAntTask.java">
        <Message>At TestNGAntTask.java:[lines 113-1080]</Message>
      </SourceLine>
      <Message>In class org.testng.TestNGAntTask</Message>
    </Class>
    <Method classname="org.testng.TestNGAntTask" name="setJUnit" signature="(Z)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.TestNGAntTask" start="393" end="394" startBytecode="0" endBytecode="102" sourcefile="TestNGAntTask.java" sourcepath="org/testng/TestNGAntTask.java"/>
      <Message>In method org.testng.TestNGAntTask.setJUnit(boolean)</Message>
    </Method>
    <Class classname="org.testng.xml.XmlTest">
      <SourceLine classname="org.testng.xml.XmlTest" start="19" end="670" sourcefile="XmlTest.java" sourcepath="org/testng/xml/XmlTest.java">
        <Message>At XmlTest.java:[lines 19-670]</Message>
      </SourceLine>
      <Message>In class org.testng.xml.XmlTest</Message>
    </Class>
    <Method classname="org.testng.xml.XmlTest" name="setJunit" signature="(Z)V" isStatic="false">
      <SourceLine classname="org.testng.xml.XmlTest" start="270" end="271" startBytecode="0" endBytecode="61" sourcefile="XmlTest.java" sourcepath="org/testng/xml/XmlTest.java"/>
      <Message>In method org.testng.xml.XmlTest.setJunit(boolean)</Message>
    </Method>
    <SourceLine classname="org.testng.TestNGAntTask" start="393" end="394" startBytecode="0" endBytecode="102" sourcefile="TestNGAntTask.java" sourcepath="org/testng/TestNGAntTask.java" synthetic="true">
      <Message>At TestNGAntTask.java:[lines 393-394]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="PA_PUBLIC_PRIMITIVE_ATTRIBUTE" priority="2" rank="16" abbrev="PA" category="BAD_PRACTICE" instanceHash="87418d77d65ce379e9560296e00acb64" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Primitive field is public</ShortMessage>
    <LongMessage>Primitive field org.testng.TestNGAntTask.m_useDefaultListeners is public and set from inside the class, which makes it too exposed. Consider making it private to limit external accessibility.</LongMessage>
    <Class classname="org.testng.TestNGAntTask" primary="true">
      <SourceLine classname="org.testng.TestNGAntTask" start="113" end="1080" sourcefile="TestNGAntTask.java" sourcepath="org/testng/TestNGAntTask.java">
        <Message>At TestNGAntTask.java:[lines 113-1080]</Message>
      </SourceLine>
      <Message>In class org.testng.TestNGAntTask</Message>
    </Class>
    <Field classname="org.testng.TestNGAntTask" name="m_useDefaultListeners" signature="Ljava/lang/String;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.TestNGAntTask" sourcefile="TestNGAntTask.java" sourcepath="org/testng/TestNGAntTask.java">
        <Message>In TestNGAntTask.java</Message>
      </SourceLine>
      <Message>Field org.testng.TestNGAntTask.m_useDefaultListeners</Message>
    </Field>
    <SourceLine classname="org.testng.TestNGAntTask" primary="true" start="193" end="193" startBytecode="2" endBytecode="2" sourcefile="TestNGAntTask.java" sourcepath="org/testng/TestNGAntTask.java">
      <Message>At TestNGAntTask.java:[line 193]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="RV_RETURN_VALUE_IGNORED_BAD_PRACTICE" priority="2" rank="16" abbrev="RV" category="BAD_PRACTICE" instanceHash="cfea79a9ce65b4efd62086baed77f0cc" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="253">
    <ShortMessage>Method ignores exceptional return value</ShortMessage>
    <LongMessage>Exceptional return value of java.io.File.mkdirs() ignored in org.testng.TestNGAntTask.addOutputDir(List)</LongMessage>
    <Class classname="org.testng.TestNGAntTask" primary="true">
      <SourceLine classname="org.testng.TestNGAntTask" start="113" end="1080" sourcefile="TestNGAntTask.java" sourcepath="org/testng/TestNGAntTask.java">
        <Message>At TestNGAntTask.java:[lines 113-1080]</Message>
      </SourceLine>
      <Message>In class org.testng.TestNGAntTask</Message>
    </Class>
    <Method classname="org.testng.TestNGAntTask" name="addOutputDir" signature="(Ljava/util/List;)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.TestNGAntTask" start="603" end="614" startBytecode="0" endBytecode="201" sourcefile="TestNGAntTask.java" sourcepath="org/testng/TestNGAntTask.java"/>
      <Message>In method org.testng.TestNGAntTask.addOutputDir(List)</Message>
    </Method>
    <Method classname="java.io.File" name="mkdirs" signature="()Z" isStatic="false" role="METHOD_CALLED">
      <SourceLine classname="java.io.File" start="1403" end="1417" startBytecode="0" endBytecode="230" sourcefile="File.java" sourcepath="java/io/File.java"/>
      <Message>Called method java.io.File.mkdirs()</Message>
    </Method>
    <SourceLine classname="org.testng.TestNGAntTask" primary="true" start="605" end="605" startBytecode="22" endBytecode="22" sourcefile="TestNGAntTask.java" sourcepath="org/testng/TestNGAntTask.java">
      <Message>At TestNGAntTask.java:[line 605]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="BC_UNCONFIRMED_CAST_OF_RETURN_VALUE" priority="3" rank="20" abbrev="BC" category="STYLE" instanceHash="d8106fc0a9142fb36d189934823ccba3" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Unchecked/unconfirmed cast of return value from method</ShortMessage>
    <LongMessage>Unchecked/unconfirmed cast from java.util.Collection to java.util.List of return value in org.testng.TestRunner.getGuiceModules(Class)</LongMessage>
    <Class classname="org.testng.TestRunner" primary="true">
      <SourceLine classname="org.testng.TestRunner" start="69" end="1243" sourcefile="TestRunner.java" sourcepath="org/testng/TestRunner.java">
        <Message>At TestRunner.java:[lines 69-1243]</Message>
      </SourceLine>
      <Message>In class org.testng.TestRunner</Message>
    </Class>
    <Method classname="org.testng.TestRunner" name="getGuiceModules" signature="(Ljava/lang/Class;)Ljava/util/List;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.TestRunner" start="1225" end="1225" startBytecode="0" endBytecode="5" sourcefile="TestRunner.java" sourcepath="org/testng/TestRunner.java"/>
      <Message>In method org.testng.TestRunner.getGuiceModules(Class)</Message>
    </Method>
    <Type descriptor="Ljava/util/Collection;" role="TYPE_FOUND">
      <SourceLine classname="java.util.Collection" start="413" end="764" sourcefile="Collection.java" sourcepath="java/util/Collection.java">
        <Message>At Collection.java:[lines 413-764]</Message>
      </SourceLine>
      <Message>Actual type java.util.Collection</Message>
    </Type>
    <Type descriptor="Ljava/util/List;" role="TYPE_EXPECTED">
      <SourceLine classname="java.util.List" start="441" end="1068" sourcefile="List.java" sourcepath="java/util/List.java">
        <Message>At List.java:[lines 441-1068]</Message>
      </SourceLine>
      <Message>Expected java.util.List</Message>
    </Type>
    <SourceLine classname="org.testng.TestRunner" primary="true" start="1225" end="1225" startBytecode="8" endBytecode="8" sourcefile="TestRunner.java" sourcepath="org/testng/TestRunner.java">
      <Message>At TestRunner.java:[line 1225]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="ec530260fe88f7b1593886e6b1d818d2" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.TestRunner.getAfterSuiteMethods() may expose internal representation by returning TestRunner.m_afterSuiteMethods</LongMessage>
    <Class classname="org.testng.TestRunner" primary="true">
      <SourceLine classname="org.testng.TestRunner" start="69" end="1243" sourcefile="TestRunner.java" sourcepath="org/testng/TestRunner.java">
        <Message>At TestRunner.java:[lines 69-1243]</Message>
      </SourceLine>
      <Message>In class org.testng.TestRunner</Message>
    </Class>
    <Method classname="org.testng.TestRunner" name="getAfterSuiteMethods" signature="()[Lorg/testng/ITestNGMethod;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.TestRunner" start="318" end="318" startBytecode="0" endBytecode="46" sourcefile="TestRunner.java" sourcepath="org/testng/TestRunner.java"/>
      <Message>In method org.testng.TestRunner.getAfterSuiteMethods()</Message>
    </Method>
    <Field classname="org.testng.TestRunner" name="m_afterSuiteMethods" signature="[Lorg/testng/ITestNGMethod;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.TestRunner" sourcefile="TestRunner.java" sourcepath="org/testng/TestRunner.java">
        <Message>In TestRunner.java</Message>
      </SourceLine>
      <Message>Field org.testng.TestRunner.m_afterSuiteMethods</Message>
    </Field>
    <SourceLine classname="org.testng.TestRunner" primary="true" start="318" end="318" startBytecode="4" endBytecode="4" sourcefile="TestRunner.java" sourcepath="org/testng/TestRunner.java">
      <Message>At TestRunner.java:[line 318]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="52c9f21396352b9f2a10a17b166233ed" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.TestRunner.getAfterTestConfigurationMethods() may expose internal representation by returning TestRunner.m_afterXmlTestMethods</LongMessage>
    <Class classname="org.testng.TestRunner" primary="true">
      <SourceLine classname="org.testng.TestRunner" start="69" end="1243" sourcefile="TestRunner.java" sourcepath="org/testng/TestRunner.java">
        <Message>At TestRunner.java:[lines 69-1243]</Message>
      </SourceLine>
      <Message>In class org.testng.TestRunner</Message>
    </Class>
    <Method classname="org.testng.TestRunner" name="getAfterTestConfigurationMethods" signature="()[Lorg/testng/ITestNGMethod;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.TestRunner" start="326" end="326" startBytecode="0" endBytecode="46" sourcefile="TestRunner.java" sourcepath="org/testng/TestRunner.java"/>
      <Message>In method org.testng.TestRunner.getAfterTestConfigurationMethods()</Message>
    </Method>
    <Field classname="org.testng.TestRunner" name="m_afterXmlTestMethods" signature="[Lorg/testng/ITestNGMethod;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.TestRunner" sourcefile="TestRunner.java" sourcepath="org/testng/TestRunner.java">
        <Message>In TestRunner.java</Message>
      </SourceLine>
      <Message>Field org.testng.TestRunner.m_afterXmlTestMethods</Message>
    </Field>
    <SourceLine classname="org.testng.TestRunner" primary="true" start="326" end="326" startBytecode="4" endBytecode="4" sourcefile="TestRunner.java" sourcepath="org/testng/TestRunner.java">
      <Message>At TestRunner.java:[line 326]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="3accf260183a7634bca7361c386e7b05" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.TestRunner.getAllTestMethods() may expose internal representation by returning TestRunner.m_allTestMethods</LongMessage>
    <Class classname="org.testng.TestRunner" primary="true">
      <SourceLine classname="org.testng.TestRunner" start="69" end="1243" sourcefile="TestRunner.java" sourcepath="org/testng/TestRunner.java">
        <Message>At TestRunner.java:[lines 69-1243]</Message>
      </SourceLine>
      <Message>In class org.testng.TestRunner</Message>
    </Class>
    <Method classname="org.testng.TestRunner" name="getAllTestMethods" signature="()[Lorg/testng/ITestNGMethod;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.TestRunner" start="963" end="963" startBytecode="0" endBytecode="46" sourcefile="TestRunner.java" sourcepath="org/testng/TestRunner.java"/>
      <Message>In method org.testng.TestRunner.getAllTestMethods()</Message>
    </Method>
    <Field classname="org.testng.TestRunner" name="m_allTestMethods" signature="[Lorg/testng/ITestNGMethod;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.TestRunner" sourcefile="TestRunner.java" sourcepath="org/testng/TestRunner.java">
        <Message>In TestRunner.java</Message>
      </SourceLine>
      <Message>Field org.testng.TestRunner.m_allTestMethods</Message>
    </Field>
    <SourceLine classname="org.testng.TestRunner" primary="true" start="963" end="963" startBytecode="4" endBytecode="4" sourcefile="TestRunner.java" sourcepath="org/testng/TestRunner.java">
      <Message>At TestRunner.java:[line 963]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="88e069f91851ba98c578dc454a0b931b" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.TestRunner.getBeforeSuiteMethods() may expose internal representation by returning TestRunner.m_beforeSuiteMethods</LongMessage>
    <Class classname="org.testng.TestRunner" primary="true">
      <SourceLine classname="org.testng.TestRunner" start="69" end="1243" sourcefile="TestRunner.java" sourcepath="org/testng/TestRunner.java">
        <Message>At TestRunner.java:[lines 69-1243]</Message>
      </SourceLine>
      <Message>In class org.testng.TestRunner</Message>
    </Class>
    <Method classname="org.testng.TestRunner" name="getBeforeSuiteMethods" signature="()[Lorg/testng/ITestNGMethod;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.TestRunner" start="314" end="314" startBytecode="0" endBytecode="46" sourcefile="TestRunner.java" sourcepath="org/testng/TestRunner.java"/>
      <Message>In method org.testng.TestRunner.getBeforeSuiteMethods()</Message>
    </Method>
    <Field classname="org.testng.TestRunner" name="m_beforeSuiteMethods" signature="[Lorg/testng/ITestNGMethod;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.TestRunner" sourcefile="TestRunner.java" sourcepath="org/testng/TestRunner.java">
        <Message>In TestRunner.java</Message>
      </SourceLine>
      <Message>Field org.testng.TestRunner.m_beforeSuiteMethods</Message>
    </Field>
    <SourceLine classname="org.testng.TestRunner" primary="true" start="314" end="314" startBytecode="4" endBytecode="4" sourcefile="TestRunner.java" sourcepath="org/testng/TestRunner.java">
      <Message>At TestRunner.java:[line 314]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="689af95f289c4253de64454769d1e698" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.TestRunner.getBeforeTestConfigurationMethods() may expose internal representation by returning TestRunner.m_beforeXmlTestMethods</LongMessage>
    <Class classname="org.testng.TestRunner" primary="true">
      <SourceLine classname="org.testng.TestRunner" start="69" end="1243" sourcefile="TestRunner.java" sourcepath="org/testng/TestRunner.java">
        <Message>At TestRunner.java:[lines 69-1243]</Message>
      </SourceLine>
      <Message>In class org.testng.TestRunner</Message>
    </Class>
    <Method classname="org.testng.TestRunner" name="getBeforeTestConfigurationMethods" signature="()[Lorg/testng/ITestNGMethod;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.TestRunner" start="322" end="322" startBytecode="0" endBytecode="46" sourcefile="TestRunner.java" sourcepath="org/testng/TestRunner.java"/>
      <Message>In method org.testng.TestRunner.getBeforeTestConfigurationMethods()</Message>
    </Method>
    <Field classname="org.testng.TestRunner" name="m_beforeXmlTestMethods" signature="[Lorg/testng/ITestNGMethod;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.TestRunner" sourcefile="TestRunner.java" sourcepath="org/testng/TestRunner.java">
        <Message>In TestRunner.java</Message>
      </SourceLine>
      <Message>Field org.testng.TestRunner.m_beforeXmlTestMethods</Message>
    </Field>
    <SourceLine classname="org.testng.TestRunner" primary="true" start="322" end="322" startBytecode="4" endBytecode="4" sourcefile="TestRunner.java" sourcepath="org/testng/TestRunner.java">
      <Message>At TestRunner.java:[line 322]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="82390d6d6c417d407f97fe49f401ee09" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.TestRunner.getCurrentXmlTest() may expose internal representation by returning TestRunner.m_xmlTest</LongMessage>
    <Class classname="org.testng.TestRunner" primary="true">
      <SourceLine classname="org.testng.TestRunner" start="69" end="1243" sourcefile="TestRunner.java" sourcepath="org/testng/TestRunner.java">
        <Message>At TestRunner.java:[lines 69-1243]</Message>
      </SourceLine>
      <Message>In class org.testng.TestRunner</Message>
    </Class>
    <Method classname="org.testng.TestRunner" name="getCurrentXmlTest" signature="()Lorg/testng/xml/XmlTest;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.TestRunner" start="1196" end="1196" startBytecode="0" endBytecode="46" sourcefile="TestRunner.java" sourcepath="org/testng/TestRunner.java"/>
      <Message>In method org.testng.TestRunner.getCurrentXmlTest()</Message>
    </Method>
    <Field classname="org.testng.TestRunner" name="m_xmlTest" signature="Lorg/testng/xml/XmlTest;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.TestRunner" sourcefile="TestRunner.java" sourcepath="org/testng/TestRunner.java">
        <Message>In TestRunner.java</Message>
      </SourceLine>
      <Message>Field org.testng.TestRunner.m_xmlTest</Message>
    </Field>
    <SourceLine classname="org.testng.TestRunner" primary="true" start="1196" end="1196" startBytecode="4" endBytecode="4" sourcefile="TestRunner.java" sourcepath="org/testng/TestRunner.java">
      <Message>At TestRunner.java:[line 1196]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="84bf0bb47910a6e8d3f61a5b5214c021" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.TestRunner.getEndDate() may expose internal representation by returning TestRunner.m_endDate</LongMessage>
    <Class classname="org.testng.TestRunner" primary="true">
      <SourceLine classname="org.testng.TestRunner" start="69" end="1243" sourcefile="TestRunner.java" sourcepath="org/testng/TestRunner.java">
        <Message>At TestRunner.java:[lines 69-1243]</Message>
      </SourceLine>
      <Message>In class org.testng.TestRunner</Message>
    </Class>
    <Method classname="org.testng.TestRunner" name="getEndDate" signature="()Ljava/util/Date;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.TestRunner" start="915" end="915" startBytecode="0" endBytecode="46" sourcefile="TestRunner.java" sourcepath="org/testng/TestRunner.java"/>
      <Message>In method org.testng.TestRunner.getEndDate()</Message>
    </Method>
    <Field classname="org.testng.TestRunner" name="m_endDate" signature="Ljava/util/Date;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.TestRunner" sourcefile="TestRunner.java" sourcepath="org/testng/TestRunner.java">
        <Message>In TestRunner.java</Message>
      </SourceLine>
      <Message>Field org.testng.TestRunner.m_endDate</Message>
    </Field>
    <SourceLine classname="org.testng.TestRunner" primary="true" start="915" end="915" startBytecode="4" endBytecode="4" sourcefile="TestRunner.java" sourcepath="org/testng/TestRunner.java">
      <Message>At TestRunner.java:[line 915]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="7e84d651e03047299f8c369311f26d68" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.TestRunner.getFailedButWithinSuccessPercentageTests() may expose internal representation by returning TestRunner.m_failedButWithinSuccessPercentageTests</LongMessage>
    <Class classname="org.testng.TestRunner" primary="true">
      <SourceLine classname="org.testng.TestRunner" start="69" end="1243" sourcefile="TestRunner.java" sourcepath="org/testng/TestRunner.java">
        <Message>At TestRunner.java:[lines 69-1243]</Message>
      </SourceLine>
      <Message>In class org.testng.TestRunner</Message>
    </Class>
    <Method classname="org.testng.TestRunner" name="getFailedButWithinSuccessPercentageTests" signature="()Lorg/testng/IResultMap;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.TestRunner" start="935" end="935" startBytecode="0" endBytecode="46" sourcefile="TestRunner.java" sourcepath="org/testng/TestRunner.java"/>
      <Message>In method org.testng.TestRunner.getFailedButWithinSuccessPercentageTests()</Message>
    </Method>
    <Field classname="org.testng.TestRunner" name="m_failedButWithinSuccessPercentageTests" signature="Lorg/testng/IResultMap;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.TestRunner" sourcefile="TestRunner.java" sourcepath="org/testng/TestRunner.java">
        <Message>In TestRunner.java</Message>
      </SourceLine>
      <Message>Field org.testng.TestRunner.m_failedButWithinSuccessPercentageTests</Message>
    </Field>
    <SourceLine classname="org.testng.TestRunner" primary="true" start="935" end="935" startBytecode="4" endBytecode="4" sourcefile="TestRunner.java" sourcepath="org/testng/TestRunner.java">
      <Message>At TestRunner.java:[line 935]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="4d8cef10bd050179569c6b6392c4cbab" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.TestRunner.getFailedConfigurations() may expose internal representation by returning TestRunner.m_failedConfigurations</LongMessage>
    <Class classname="org.testng.TestRunner" primary="true">
      <SourceLine classname="org.testng.TestRunner" start="69" end="1243" sourcefile="TestRunner.java" sourcepath="org/testng/TestRunner.java">
        <Message>At TestRunner.java:[lines 69-1243]</Message>
      </SourceLine>
      <Message>In class org.testng.TestRunner</Message>
    </Class>
    <Method classname="org.testng.TestRunner" name="getFailedConfigurations" signature="()Lorg/testng/IResultMap;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.TestRunner" start="985" end="985" startBytecode="0" endBytecode="46" sourcefile="TestRunner.java" sourcepath="org/testng/TestRunner.java"/>
      <Message>In method org.testng.TestRunner.getFailedConfigurations()</Message>
    </Method>
    <Field classname="org.testng.TestRunner" name="m_failedConfigurations" signature="Lorg/testng/IResultMap;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.TestRunner" sourcefile="TestRunner.java" sourcepath="org/testng/TestRunner.java">
        <Message>In TestRunner.java</Message>
      </SourceLine>
      <Message>Field org.testng.TestRunner.m_failedConfigurations</Message>
    </Field>
    <SourceLine classname="org.testng.TestRunner" primary="true" start="985" end="985" startBytecode="4" endBytecode="4" sourcefile="TestRunner.java" sourcepath="org/testng/TestRunner.java">
      <Message>At TestRunner.java:[line 985]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="2206dbbf8e196a5928b7191128b3bfe8" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.TestRunner.getFailedTests() may expose internal representation by returning TestRunner.m_failedTests</LongMessage>
    <Class classname="org.testng.TestRunner" primary="true">
      <SourceLine classname="org.testng.TestRunner" start="69" end="1243" sourcefile="TestRunner.java" sourcepath="org/testng/TestRunner.java">
        <Message>At TestRunner.java:[lines 69-1243]</Message>
      </SourceLine>
      <Message>In class org.testng.TestRunner</Message>
    </Class>
    <Method classname="org.testng.TestRunner" name="getFailedTests" signature="()Lorg/testng/IResultMap;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.TestRunner" start="930" end="930" startBytecode="0" endBytecode="46" sourcefile="TestRunner.java" sourcepath="org/testng/TestRunner.java"/>
      <Message>In method org.testng.TestRunner.getFailedTests()</Message>
    </Method>
    <Field classname="org.testng.TestRunner" name="m_failedTests" signature="Lorg/testng/IResultMap;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.TestRunner" sourcefile="TestRunner.java" sourcepath="org/testng/TestRunner.java">
        <Message>In TestRunner.java</Message>
      </SourceLine>
      <Message>Field org.testng.TestRunner.m_failedTests</Message>
    </Field>
    <SourceLine classname="org.testng.TestRunner" primary="true" start="930" end="930" startBytecode="4" endBytecode="4" sourcefile="TestRunner.java" sourcepath="org/testng/TestRunner.java">
      <Message>At TestRunner.java:[line 930]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="8a26da48424be0925822773b5d04b068" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.TestRunner.getPassedConfigurations() may expose internal representation by returning TestRunner.m_passedConfigurations</LongMessage>
    <Class classname="org.testng.TestRunner" primary="true">
      <SourceLine classname="org.testng.TestRunner" start="69" end="1243" sourcefile="TestRunner.java" sourcepath="org/testng/TestRunner.java">
        <Message>At TestRunner.java:[lines 69-1243]</Message>
      </SourceLine>
      <Message>In class org.testng.TestRunner</Message>
    </Class>
    <Method classname="org.testng.TestRunner" name="getPassedConfigurations" signature="()Lorg/testng/IResultMap;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.TestRunner" start="991" end="991" startBytecode="0" endBytecode="46" sourcefile="TestRunner.java" sourcepath="org/testng/TestRunner.java"/>
      <Message>In method org.testng.TestRunner.getPassedConfigurations()</Message>
    </Method>
    <Field classname="org.testng.TestRunner" name="m_passedConfigurations" signature="Lorg/testng/IResultMap;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.TestRunner" sourcefile="TestRunner.java" sourcepath="org/testng/TestRunner.java">
        <Message>In TestRunner.java</Message>
      </SourceLine>
      <Message>Field org.testng.TestRunner.m_passedConfigurations</Message>
    </Field>
    <SourceLine classname="org.testng.TestRunner" primary="true" start="991" end="991" startBytecode="4" endBytecode="4" sourcefile="TestRunner.java" sourcepath="org/testng/TestRunner.java">
      <Message>At TestRunner.java:[line 991]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="9eef32dff0a9273e7c72785b61147a27" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.TestRunner.getPassedTests() may expose internal representation by returning TestRunner.m_passedTests</LongMessage>
    <Class classname="org.testng.TestRunner" primary="true">
      <SourceLine classname="org.testng.TestRunner" start="69" end="1243" sourcefile="TestRunner.java" sourcepath="org/testng/TestRunner.java">
        <Message>At TestRunner.java:[lines 69-1243]</Message>
      </SourceLine>
      <Message>In class org.testng.TestRunner</Message>
    </Class>
    <Method classname="org.testng.TestRunner" name="getPassedTests" signature="()Lorg/testng/IResultMap;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.TestRunner" start="920" end="920" startBytecode="0" endBytecode="46" sourcefile="TestRunner.java" sourcepath="org/testng/TestRunner.java"/>
      <Message>In method org.testng.TestRunner.getPassedTests()</Message>
    </Method>
    <Field classname="org.testng.TestRunner" name="m_passedTests" signature="Lorg/testng/IResultMap;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.TestRunner" sourcefile="TestRunner.java" sourcepath="org/testng/TestRunner.java">
        <Message>In TestRunner.java</Message>
      </SourceLine>
      <Message>Field org.testng.TestRunner.m_passedTests</Message>
    </Field>
    <SourceLine classname="org.testng.TestRunner" primary="true" start="920" end="920" startBytecode="4" endBytecode="4" sourcefile="TestRunner.java" sourcepath="org/testng/TestRunner.java">
      <Message>At TestRunner.java:[line 920]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="5fcff03b821c964dcb3998e6afa5a73" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.TestRunner.getSkippedConfigurations() may expose internal representation by returning TestRunner.m_skippedConfigurations</LongMessage>
    <Class classname="org.testng.TestRunner" primary="true">
      <SourceLine classname="org.testng.TestRunner" start="69" end="1243" sourcefile="TestRunner.java" sourcepath="org/testng/TestRunner.java">
        <Message>At TestRunner.java:[lines 69-1243]</Message>
      </SourceLine>
      <Message>In class org.testng.TestRunner</Message>
    </Class>
    <Method classname="org.testng.TestRunner" name="getSkippedConfigurations" signature="()Lorg/testng/IResultMap;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.TestRunner" start="997" end="997" startBytecode="0" endBytecode="46" sourcefile="TestRunner.java" sourcepath="org/testng/TestRunner.java"/>
      <Message>In method org.testng.TestRunner.getSkippedConfigurations()</Message>
    </Method>
    <Field classname="org.testng.TestRunner" name="m_skippedConfigurations" signature="Lorg/testng/IResultMap;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.TestRunner" sourcefile="TestRunner.java" sourcepath="org/testng/TestRunner.java">
        <Message>In TestRunner.java</Message>
      </SourceLine>
      <Message>Field org.testng.TestRunner.m_skippedConfigurations</Message>
    </Field>
    <SourceLine classname="org.testng.TestRunner" primary="true" start="997" end="997" startBytecode="4" endBytecode="4" sourcefile="TestRunner.java" sourcepath="org/testng/TestRunner.java">
      <Message>At TestRunner.java:[line 997]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="5c349ad8c95046ae2162a827d409d2d3" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.TestRunner.getSkippedTests() may expose internal representation by returning TestRunner.m_skippedTests</LongMessage>
    <Class classname="org.testng.TestRunner" primary="true">
      <SourceLine classname="org.testng.TestRunner" start="69" end="1243" sourcefile="TestRunner.java" sourcepath="org/testng/TestRunner.java">
        <Message>At TestRunner.java:[lines 69-1243]</Message>
      </SourceLine>
      <Message>In class org.testng.TestRunner</Message>
    </Class>
    <Method classname="org.testng.TestRunner" name="getSkippedTests" signature="()Lorg/testng/IResultMap;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.TestRunner" start="925" end="925" startBytecode="0" endBytecode="46" sourcefile="TestRunner.java" sourcepath="org/testng/TestRunner.java"/>
      <Message>In method org.testng.TestRunner.getSkippedTests()</Message>
    </Method>
    <Field classname="org.testng.TestRunner" name="m_skippedTests" signature="Lorg/testng/IResultMap;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.TestRunner" sourcefile="TestRunner.java" sourcepath="org/testng/TestRunner.java">
        <Message>In TestRunner.java</Message>
      </SourceLine>
      <Message>Field org.testng.TestRunner.m_skippedTests</Message>
    </Field>
    <SourceLine classname="org.testng.TestRunner" primary="true" start="925" end="925" startBytecode="4" endBytecode="4" sourcefile="TestRunner.java" sourcepath="org/testng/TestRunner.java">
      <Message>At TestRunner.java:[line 925]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="4fceece468fd190f3534b425b03fbd1b" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.TestRunner.getStartDate() may expose internal representation by returning TestRunner.m_startDate</LongMessage>
    <Class classname="org.testng.TestRunner" primary="true">
      <SourceLine classname="org.testng.TestRunner" start="69" end="1243" sourcefile="TestRunner.java" sourcepath="org/testng/TestRunner.java">
        <Message>At TestRunner.java:[lines 69-1243]</Message>
      </SourceLine>
      <Message>In class org.testng.TestRunner</Message>
    </Class>
    <Method classname="org.testng.TestRunner" name="getStartDate" signature="()Ljava/util/Date;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.TestRunner" start="909" end="909" startBytecode="0" endBytecode="46" sourcefile="TestRunner.java" sourcepath="org/testng/TestRunner.java"/>
      <Message>In method org.testng.TestRunner.getStartDate()</Message>
    </Method>
    <Field classname="org.testng.TestRunner" name="m_startDate" signature="Ljava/util/Date;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.TestRunner" sourcefile="TestRunner.java" sourcepath="org/testng/TestRunner.java">
        <Message>In TestRunner.java</Message>
      </SourceLine>
      <Message>Field org.testng.TestRunner.m_startDate</Message>
    </Field>
    <SourceLine classname="org.testng.TestRunner" primary="true" start="909" end="909" startBytecode="4" endBytecode="4" sourcefile="TestRunner.java" sourcepath="org/testng/TestRunner.java">
      <Message>At TestRunner.java:[line 909]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="a6360c0a7b7e2b53eae561e844630d86" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.TestRunner.getSuite() may expose internal representation by returning TestRunner.m_suite</LongMessage>
    <Class classname="org.testng.TestRunner" primary="true">
      <SourceLine classname="org.testng.TestRunner" start="69" end="1243" sourcefile="TestRunner.java" sourcepath="org/testng/TestRunner.java">
        <Message>At TestRunner.java:[lines 69-1243]</Message>
      </SourceLine>
      <Message>In class org.testng.TestRunner</Message>
    </Class>
    <Method classname="org.testng.TestRunner" name="getSuite" signature="()Lorg/testng/ISuite;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.TestRunner" start="958" end="958" startBytecode="0" endBytecode="46" sourcefile="TestRunner.java" sourcepath="org/testng/TestRunner.java"/>
      <Message>In method org.testng.TestRunner.getSuite()</Message>
    </Method>
    <Field classname="org.testng.TestRunner" name="m_suite" signature="Lorg/testng/ISuite;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.TestRunner" sourcefile="TestRunner.java" sourcepath="org/testng/TestRunner.java">
        <Message>In TestRunner.java</Message>
      </SourceLine>
      <Message>Field org.testng.TestRunner.m_suite</Message>
    </Field>
    <SourceLine classname="org.testng.TestRunner" primary="true" start="958" end="958" startBytecode="4" endBytecode="4" sourcefile="TestRunner.java" sourcepath="org/testng/TestRunner.java">
      <Message>At TestRunner.java:[line 958]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="83d17a6340d88f443fae7cdfe80a7f83" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.TestRunner.getTest() may expose internal representation by returning TestRunner.m_xmlTest</LongMessage>
    <Class classname="org.testng.TestRunner" primary="true">
      <SourceLine classname="org.testng.TestRunner" start="69" end="1243" sourcefile="TestRunner.java" sourcepath="org/testng/TestRunner.java">
        <Message>At TestRunner.java:[lines 69-1243]</Message>
      </SourceLine>
      <Message>In class org.testng.TestRunner</Message>
    </Class>
    <Method classname="org.testng.TestRunner" name="getTest" signature="()Lorg/testng/xml/XmlTest;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.TestRunner" start="1043" end="1043" startBytecode="0" endBytecode="46" sourcefile="TestRunner.java" sourcepath="org/testng/TestRunner.java"/>
      <Message>In method org.testng.TestRunner.getTest()</Message>
    </Method>
    <Field classname="org.testng.TestRunner" name="m_xmlTest" signature="Lorg/testng/xml/XmlTest;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.TestRunner" sourcefile="TestRunner.java" sourcepath="org/testng/TestRunner.java">
        <Message>In TestRunner.java</Message>
      </SourceLine>
      <Message>Field org.testng.TestRunner.m_xmlTest</Message>
    </Field>
    <SourceLine classname="org.testng.TestRunner" primary="true" start="1043" end="1043" startBytecode="4" endBytecode="4" sourcefile="TestRunner.java" sourcepath="org/testng/TestRunner.java">
      <Message>At TestRunner.java:[line 1043]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="27b1284d62950f451722320fb12f775b" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.TestRunner.getTestListeners() may expose internal representation by returning TestRunner.m_testListeners</LongMessage>
    <Class classname="org.testng.TestRunner" primary="true">
      <SourceLine classname="org.testng.TestRunner" start="69" end="1243" sourcefile="TestRunner.java" sourcepath="org/testng/TestRunner.java">
        <Message>At TestRunner.java:[lines 69-1243]</Message>
      </SourceLine>
      <Message>In class org.testng.TestRunner</Message>
    </Class>
    <Method classname="org.testng.TestRunner" name="getTestListeners" signature="()Ljava/util/List;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.TestRunner" start="1048" end="1048" startBytecode="0" endBytecode="46" sourcefile="TestRunner.java" sourcepath="org/testng/TestRunner.java"/>
      <Message>In method org.testng.TestRunner.getTestListeners()</Message>
    </Method>
    <Field classname="org.testng.TestRunner" name="m_testListeners" signature="Ljava/util/List;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.TestRunner" sourcefile="TestRunner.java" sourcepath="org/testng/TestRunner.java">
        <Message>In TestRunner.java</Message>
      </SourceLine>
      <Message>Field org.testng.TestRunner.m_testListeners</Message>
    </Field>
    <SourceLine classname="org.testng.TestRunner" primary="true" start="1048" end="1048" startBytecode="4" endBytecode="4" sourcefile="TestRunner.java" sourcepath="org/testng/TestRunner.java">
      <Message>At TestRunner.java:[line 1048]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="ST_WRITE_TO_STATIC_FROM_INSTANCE_METHOD" priority="1" rank="15" abbrev="ST" category="STYLE" instanceHash="9e113068ce3bd3200ef50050861079bb" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Write to static field from instance method</ShortMessage>
    <LongMessage>Write to static field org.testng.TestRunner.m_verbose from instance method org.testng.TestRunner.setVerbose(int)</LongMessage>
    <Class classname="org.testng.TestRunner" primary="true">
      <SourceLine classname="org.testng.TestRunner" start="69" end="1243" sourcefile="TestRunner.java" sourcepath="org/testng/TestRunner.java">
        <Message>At TestRunner.java:[lines 69-1243]</Message>
      </SourceLine>
      <Message>In class org.testng.TestRunner</Message>
    </Class>
    <Method classname="org.testng.TestRunner" name="setVerbose" signature="(I)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.TestRunner" start="1088" end="1089" startBytecode="0" endBytecode="60" sourcefile="TestRunner.java" sourcepath="org/testng/TestRunner.java"/>
      <Message>In method org.testng.TestRunner.setVerbose(int)</Message>
    </Method>
    <Field classname="org.testng.TestRunner" name="m_verbose" signature="I" isStatic="true" primary="true">
      <SourceLine classname="org.testng.TestRunner" sourcefile="TestRunner.java" sourcepath="org/testng/TestRunner.java">
        <Message>In TestRunner.java</Message>
      </SourceLine>
      <Message>Field org.testng.TestRunner.m_verbose</Message>
    </Field>
    <SourceLine classname="org.testng.TestRunner" primary="true" start="1088" end="1088" startBytecode="1" endBytecode="1" sourcefile="TestRunner.java" sourcepath="org/testng/TestRunner.java">
      <Message>At TestRunner.java:[line 1088]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EQ_COMPARETO_USE_OBJECT_EQUALS" priority="2" rank="16" abbrev="Eq" category="BAD_PRACTICE" instanceHash="88f856712a23700f949686c78e55cd2d" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Class defines compareTo(...) and uses Object.equals()</ShortMessage>
    <LongMessage>org.testng.TestRunner$1 defines compareTo(Object) and uses Object.equals()</LongMessage>
    <Class classname="org.testng.TestRunner$1" primary="true">
      <SourceLine classname="org.testng.TestRunner$1" start="631" end="675" sourcefile="TestRunner.java" sourcepath="org/testng/TestRunner.java">
        <Message>At TestRunner.java:[lines 631-675]</Message>
      </SourceLine>
      <Message>In class org.testng.TestRunner$1</Message>
    </Class>
    <Method classname="org.testng.TestRunner$1" name="compareTo" signature="(Ljava/lang/Object;)I" isStatic="false" primary="true">
      <SourceLine classname="org.testng.TestRunner$1" start="631" end="631" startBytecode="0" endBytecode="50" sourcefile="TestRunner.java" sourcepath="org/testng/TestRunner.java"/>
      <Message>In method org.testng.TestRunner$1.compareTo(Object)</Message>
    </Method>
    <SourceLine classname="org.testng.TestRunner$1" start="631" end="631" startBytecode="0" endBytecode="50" sourcefile="TestRunner.java" sourcepath="org/testng/TestRunner.java" synthetic="true">
      <Message>At TestRunner.java:[line 631]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="2eb4350c5c8423ee2d4edb8207c27102" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.asserts.LoggingAssert.getMessages() may expose internal representation by returning LoggingAssert.m_messages</LongMessage>
    <Class classname="org.testng.asserts.LoggingAssert" primary="true">
      <SourceLine classname="org.testng.asserts.LoggingAssert" start="8" end="18" sourcefile="LoggingAssert.java" sourcepath="org/testng/asserts/LoggingAssert.java">
        <Message>At LoggingAssert.java:[lines 8-18]</Message>
      </SourceLine>
      <Message>In class org.testng.asserts.LoggingAssert</Message>
    </Class>
    <Method classname="org.testng.asserts.LoggingAssert" name="getMessages" signature="()Ljava/util/List;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.asserts.LoggingAssert" start="18" end="18" startBytecode="0" endBytecode="46" sourcefile="LoggingAssert.java" sourcepath="org/testng/asserts/LoggingAssert.java"/>
      <Message>In method org.testng.asserts.LoggingAssert.getMessages()</Message>
    </Method>
    <Field classname="org.testng.asserts.LoggingAssert" name="m_messages" signature="Ljava/util/List;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.asserts.LoggingAssert" sourcefile="LoggingAssert.java" sourcepath="org/testng/asserts/LoggingAssert.java">
        <Message>In LoggingAssert.java</Message>
      </SourceLine>
      <Message>Field org.testng.asserts.LoggingAssert.m_messages</Message>
    </Field>
    <SourceLine classname="org.testng.asserts.LoggingAssert" primary="true" start="18" end="18" startBytecode="4" endBytecode="4" sourcefile="LoggingAssert.java" sourcepath="org/testng/asserts/LoggingAssert.java">
      <Message>At LoggingAssert.java:[line 18]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="ceaf876a820b396c5db8effa3e7a9a0" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.internal.AbstractParallelWorker$Arguments.getClassMethodMap() may expose internal representation by returning AbstractParallelWorker$Arguments.classMethodMap</LongMessage>
    <Class classname="org.testng.internal.AbstractParallelWorker$Arguments" primary="true">
      <SourceLine classname="org.testng.internal.AbstractParallelWorker$Arguments" start="27" end="65" sourcefile="AbstractParallelWorker.java" sourcepath="org/testng/internal/AbstractParallelWorker.java">
        <Message>At AbstractParallelWorker.java:[lines 27-65]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.AbstractParallelWorker$Arguments</Message>
    </Class>
    <Method classname="org.testng.internal.AbstractParallelWorker$Arguments" name="getClassMethodMap" signature="()Lorg/testng/ClassMethodMap;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.AbstractParallelWorker$Arguments" start="53" end="53" startBytecode="0" endBytecode="46" sourcefile="AbstractParallelWorker.java" sourcepath="org/testng/internal/AbstractParallelWorker.java"/>
      <Message>In method org.testng.internal.AbstractParallelWorker$Arguments.getClassMethodMap()</Message>
    </Method>
    <Field classname="org.testng.internal.AbstractParallelWorker$Arguments" name="classMethodMap" signature="Lorg/testng/ClassMethodMap;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.AbstractParallelWorker$Arguments" sourcefile="AbstractParallelWorker.java" sourcepath="org/testng/internal/AbstractParallelWorker.java">
        <Message>In AbstractParallelWorker.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.AbstractParallelWorker$Arguments.classMethodMap</Message>
    </Field>
    <SourceLine classname="org.testng.internal.AbstractParallelWorker$Arguments" primary="true" start="53" end="53" startBytecode="4" endBytecode="4" sourcefile="AbstractParallelWorker.java" sourcepath="org/testng/internal/AbstractParallelWorker.java">
      <Message>At AbstractParallelWorker.java:[line 53]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="386de755bb273e295ff92aba84d27c0d" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.internal.AbstractParallelWorker$Arguments.getConfigMethods() may expose internal representation by returning AbstractParallelWorker$Arguments.configMethods</LongMessage>
    <Class classname="org.testng.internal.AbstractParallelWorker$Arguments" primary="true">
      <SourceLine classname="org.testng.internal.AbstractParallelWorker$Arguments" start="27" end="65" sourcefile="AbstractParallelWorker.java" sourcepath="org/testng/internal/AbstractParallelWorker.java">
        <Message>At AbstractParallelWorker.java:[lines 27-65]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.AbstractParallelWorker$Arguments</Message>
    </Class>
    <Method classname="org.testng.internal.AbstractParallelWorker$Arguments" name="getConfigMethods" signature="()Lorg/testng/internal/ConfigurationGroupMethods;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.AbstractParallelWorker$Arguments" start="49" end="49" startBytecode="0" endBytecode="46" sourcefile="AbstractParallelWorker.java" sourcepath="org/testng/internal/AbstractParallelWorker.java"/>
      <Message>In method org.testng.internal.AbstractParallelWorker$Arguments.getConfigMethods()</Message>
    </Method>
    <Field classname="org.testng.internal.AbstractParallelWorker$Arguments" name="configMethods" signature="Lorg/testng/internal/ConfigurationGroupMethods;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.AbstractParallelWorker$Arguments" sourcefile="AbstractParallelWorker.java" sourcepath="org/testng/internal/AbstractParallelWorker.java">
        <Message>In AbstractParallelWorker.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.AbstractParallelWorker$Arguments.configMethods</Message>
    </Field>
    <SourceLine classname="org.testng.internal.AbstractParallelWorker$Arguments" primary="true" start="49" end="49" startBytecode="4" endBytecode="4" sourcefile="AbstractParallelWorker.java" sourcepath="org/testng/internal/AbstractParallelWorker.java">
      <Message>At AbstractParallelWorker.java:[line 49]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="7277e335706a071a3bdd8f3c6dcb028c" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.internal.AbstractParallelWorker$Arguments.getTestContext() may expose internal representation by returning AbstractParallelWorker$Arguments.testContext</LongMessage>
    <Class classname="org.testng.internal.AbstractParallelWorker$Arguments" primary="true">
      <SourceLine classname="org.testng.internal.AbstractParallelWorker$Arguments" start="27" end="65" sourcefile="AbstractParallelWorker.java" sourcepath="org/testng/internal/AbstractParallelWorker.java">
        <Message>At AbstractParallelWorker.java:[lines 27-65]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.AbstractParallelWorker$Arguments</Message>
    </Class>
    <Method classname="org.testng.internal.AbstractParallelWorker$Arguments" name="getTestContext" signature="()Lorg/testng/ITestContext;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.AbstractParallelWorker$Arguments" start="61" end="61" startBytecode="0" endBytecode="46" sourcefile="AbstractParallelWorker.java" sourcepath="org/testng/internal/AbstractParallelWorker.java"/>
      <Message>In method org.testng.internal.AbstractParallelWorker$Arguments.getTestContext()</Message>
    </Method>
    <Field classname="org.testng.internal.AbstractParallelWorker$Arguments" name="testContext" signature="Lorg/testng/ITestContext;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.AbstractParallelWorker$Arguments" sourcefile="AbstractParallelWorker.java" sourcepath="org/testng/internal/AbstractParallelWorker.java">
        <Message>In AbstractParallelWorker.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.AbstractParallelWorker$Arguments.testContext</Message>
    </Field>
    <SourceLine classname="org.testng.internal.AbstractParallelWorker$Arguments" primary="true" start="61" end="61" startBytecode="4" endBytecode="4" sourcefile="AbstractParallelWorker.java" sourcepath="org/testng/internal/AbstractParallelWorker.java">
      <Message>At AbstractParallelWorker.java:[line 61]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="523c1c8808917623fb2abffb677f8150" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.internal.Arguments.getParameters() may expose internal representation by returning Arguments.params</LongMessage>
    <Class classname="org.testng.internal.Arguments" primary="true">
      <SourceLine classname="org.testng.internal.Arguments" start="12" end="27" sourcefile="Arguments.java" sourcepath="org/testng/internal/Arguments.java">
        <Message>At Arguments.java:[lines 12-27]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.Arguments</Message>
    </Class>
    <Method classname="org.testng.internal.Arguments" name="getParameters" signature="()Ljava/util/Map;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.Arguments" start="27" end="27" startBytecode="0" endBytecode="46" sourcefile="Arguments.java" sourcepath="org/testng/internal/Arguments.java"/>
      <Message>In method org.testng.internal.Arguments.getParameters()</Message>
    </Method>
    <Field classname="org.testng.internal.Arguments" name="params" signature="Ljava/util/Map;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.Arguments" sourcefile="Arguments.java" sourcepath="org/testng/internal/Arguments.java">
        <Message>In Arguments.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.Arguments.params</Message>
    </Field>
    <SourceLine classname="org.testng.internal.Arguments" primary="true" start="27" end="27" startBytecode="4" endBytecode="4" sourcefile="Arguments.java" sourcepath="org/testng/internal/Arguments.java">
      <Message>At Arguments.java:[line 27]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="89bfcc3f5432166248f030c8b4affa2a" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.internal.Arguments.getTestMethod() may expose internal representation by returning Arguments.tm</LongMessage>
    <Class classname="org.testng.internal.Arguments" primary="true">
      <SourceLine classname="org.testng.internal.Arguments" start="12" end="27" sourcefile="Arguments.java" sourcepath="org/testng/internal/Arguments.java">
        <Message>At Arguments.java:[lines 12-27]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.Arguments</Message>
    </Class>
    <Method classname="org.testng.internal.Arguments" name="getTestMethod" signature="()Lorg/testng/ITestNGMethod;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.Arguments" start="23" end="23" startBytecode="0" endBytecode="46" sourcefile="Arguments.java" sourcepath="org/testng/internal/Arguments.java"/>
      <Message>In method org.testng.internal.Arguments.getTestMethod()</Message>
    </Method>
    <Field classname="org.testng.internal.Arguments" name="tm" signature="Lorg/testng/ITestNGMethod;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.Arguments" sourcefile="Arguments.java" sourcepath="org/testng/internal/Arguments.java">
        <Message>In Arguments.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.Arguments.tm</Message>
    </Field>
    <SourceLine classname="org.testng.internal.Arguments" primary="true" start="23" end="23" startBytecode="4" endBytecode="4" sourcefile="Arguments.java" sourcepath="org/testng/internal/Arguments.java">
      <Message>At Arguments.java:[line 23]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="BC_UNCONFIRMED_CAST" priority="3" rank="20" abbrev="BC" category="STYLE" instanceHash="3d314a79866414f2a0f7065d3e92ca7f" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Unchecked/unconfirmed cast</ShortMessage>
    <LongMessage>Unchecked/unconfirmed cast from Throwable to org.testng.SkipException in org.testng.internal.BaseInvoker.isSkipExceptionAndSkip(Throwable)</LongMessage>
    <Class classname="org.testng.internal.BaseInvoker" primary="true">
      <SourceLine classname="org.testng.internal.BaseInvoker" start="27" end="89" sourcefile="BaseInvoker.java" sourcepath="org/testng/internal/BaseInvoker.java">
        <Message>At BaseInvoker.java:[lines 27-89]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.BaseInvoker</Message>
    </Class>
    <Method classname="org.testng.internal.BaseInvoker" name="isSkipExceptionAndSkip" signature="(Ljava/lang/Throwable;)Z" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.BaseInvoker" start="84" end="84" startBytecode="0" endBytecode="12" sourcefile="BaseInvoker.java" sourcepath="org/testng/internal/BaseInvoker.java"/>
      <Message>In method org.testng.internal.BaseInvoker.isSkipExceptionAndSkip(Throwable)</Message>
    </Method>
    <Type descriptor="Ljava/lang/Throwable;" role="TYPE_FOUND">
      <SourceLine classname="java.lang.Throwable" start="114" end="1107" sourcefile="Throwable.java" sourcepath="java/lang/Throwable.java">
        <Message>At Throwable.java:[lines 114-1107]</Message>
      </SourceLine>
      <Message>Actual type Throwable</Message>
    </Type>
    <Type descriptor="Lorg/testng/SkipException;" role="TYPE_EXPECTED">
      <SourceLine classname="org.testng.SkipException" start="18" end="68" sourcefile="SkipException.java" sourcepath="org/testng/SkipException.java">
        <Message>At SkipException.java:[lines 18-68]</Message>
      </SourceLine>
      <Message>Expected org.testng.SkipException</Message>
    </Type>
    <LocalVariable name="ite" register="1" pc="12" role="LOCAL_VARIABLE_VALUE_OF">
      <Message>Value loaded from ite</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.internal.BaseInvoker" primary="true" start="84" end="84" startBytecode="13" endBytecode="13" sourcefile="BaseInvoker.java" sourcepath="org/testng/internal/BaseInvoker.java">
      <Message>At BaseInvoker.java:[line 84]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="e8d6d24ce66b867c0018931a326cc3f0" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.internal.BaseTestMethod.getAfterGroups() may expose internal representation by returning BaseTestMethod.m_afterGroups</LongMessage>
    <Class classname="org.testng.internal.BaseTestMethod" primary="true">
      <SourceLine classname="org.testng.internal.BaseTestMethod" start="30" end="773" sourcefile="BaseTestMethod.java" sourcepath="org/testng/internal/BaseTestMethod.java">
        <Message>At BaseTestMethod.java:[lines 30-773]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.BaseTestMethod</Message>
    </Class>
    <Method classname="org.testng.internal.BaseTestMethod" name="getAfterGroups" signature="()[Ljava/lang/String;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.BaseTestMethod" start="574" end="574" startBytecode="0" endBytecode="46" sourcefile="BaseTestMethod.java" sourcepath="org/testng/internal/BaseTestMethod.java"/>
      <Message>In method org.testng.internal.BaseTestMethod.getAfterGroups()</Message>
    </Method>
    <Field classname="org.testng.internal.BaseTestMethod" name="m_afterGroups" signature="[Ljava/lang/String;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.BaseTestMethod" sourcefile="BaseTestMethod.java" sourcepath="org/testng/internal/BaseTestMethod.java">
        <Message>In BaseTestMethod.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.BaseTestMethod.m_afterGroups</Message>
    </Field>
    <SourceLine classname="org.testng.internal.BaseTestMethod" primary="true" start="574" end="574" startBytecode="4" endBytecode="4" sourcefile="BaseTestMethod.java" sourcepath="org/testng/internal/BaseTestMethod.java">
      <Message>At BaseTestMethod.java:[line 574]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="58f3375a24ae453689260ee9a01d01ef" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.internal.BaseTestMethod.getBeforeGroups() may expose internal representation by returning BaseTestMethod.m_beforeGroups</LongMessage>
    <Class classname="org.testng.internal.BaseTestMethod" primary="true">
      <SourceLine classname="org.testng.internal.BaseTestMethod" start="30" end="773" sourcefile="BaseTestMethod.java" sourcepath="org/testng/internal/BaseTestMethod.java">
        <Message>At BaseTestMethod.java:[lines 30-773]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.BaseTestMethod</Message>
    </Class>
    <Method classname="org.testng.internal.BaseTestMethod" name="getBeforeGroups" signature="()[Ljava/lang/String;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.BaseTestMethod" start="568" end="568" startBytecode="0" endBytecode="46" sourcefile="BaseTestMethod.java" sourcepath="org/testng/internal/BaseTestMethod.java"/>
      <Message>In method org.testng.internal.BaseTestMethod.getBeforeGroups()</Message>
    </Method>
    <Field classname="org.testng.internal.BaseTestMethod" name="m_beforeGroups" signature="[Ljava/lang/String;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.BaseTestMethod" sourcefile="BaseTestMethod.java" sourcepath="org/testng/internal/BaseTestMethod.java">
        <Message>In BaseTestMethod.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.BaseTestMethod.m_beforeGroups</Message>
    </Field>
    <SourceLine classname="org.testng.internal.BaseTestMethod" primary="true" start="568" end="568" startBytecode="4" endBytecode="4" sourcefile="BaseTestMethod.java" sourcepath="org/testng/internal/BaseTestMethod.java">
      <Message>At BaseTestMethod.java:[line 568]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="b6b778848832c62042a5dc4674bfba94" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.internal.BaseTestMethod.getConstructorOrMethod() may expose internal representation by returning BaseTestMethod.m_method</LongMessage>
    <Class classname="org.testng.internal.BaseTestMethod" primary="true">
      <SourceLine classname="org.testng.internal.BaseTestMethod" start="30" end="773" sourcefile="BaseTestMethod.java" sourcepath="org/testng/internal/BaseTestMethod.java">
        <Message>At BaseTestMethod.java:[lines 30-773]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.BaseTestMethod</Message>
    </Class>
    <Method classname="org.testng.internal.BaseTestMethod" name="getConstructorOrMethod" signature="()Lorg/testng/internal/ConstructorOrMethod;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.BaseTestMethod" start="724" end="724" startBytecode="0" endBytecode="46" sourcefile="BaseTestMethod.java" sourcepath="org/testng/internal/BaseTestMethod.java"/>
      <Message>In method org.testng.internal.BaseTestMethod.getConstructorOrMethod()</Message>
    </Method>
    <Field classname="org.testng.internal.BaseTestMethod" name="m_method" signature="Lorg/testng/internal/ConstructorOrMethod;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.BaseTestMethod" sourcefile="BaseTestMethod.java" sourcepath="org/testng/internal/BaseTestMethod.java">
        <Message>In BaseTestMethod.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.BaseTestMethod.m_method</Message>
    </Field>
    <SourceLine classname="org.testng.internal.BaseTestMethod" primary="true" start="724" end="724" startBytecode="4" endBytecode="4" sourcefile="BaseTestMethod.java" sourcepath="org/testng/internal/BaseTestMethod.java">
      <Message>At BaseTestMethod.java:[line 724]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="569d0023b844d509340eb8287a7efb5e" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.internal.BaseTestMethod.getGroups() may expose internal representation by returning BaseTestMethod.m_groups</LongMessage>
    <Class classname="org.testng.internal.BaseTestMethod" primary="true">
      <SourceLine classname="org.testng.internal.BaseTestMethod" start="30" end="773" sourcefile="BaseTestMethod.java" sourcepath="org/testng/internal/BaseTestMethod.java">
        <Message>At BaseTestMethod.java:[lines 30-773]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.BaseTestMethod</Message>
    </Class>
    <Method classname="org.testng.internal.BaseTestMethod" name="getGroups" signature="()[Ljava/lang/String;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.BaseTestMethod" start="155" end="155" startBytecode="0" endBytecode="46" sourcefile="BaseTestMethod.java" sourcepath="org/testng/internal/BaseTestMethod.java"/>
      <Message>In method org.testng.internal.BaseTestMethod.getGroups()</Message>
    </Method>
    <Field classname="org.testng.internal.BaseTestMethod" name="m_groups" signature="[Ljava/lang/String;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.BaseTestMethod" sourcefile="BaseTestMethod.java" sourcepath="org/testng/internal/BaseTestMethod.java">
        <Message>In BaseTestMethod.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.BaseTestMethod.m_groups</Message>
    </Field>
    <SourceLine classname="org.testng.internal.BaseTestMethod" primary="true" start="155" end="155" startBytecode="4" endBytecode="4" sourcefile="BaseTestMethod.java" sourcepath="org/testng/internal/BaseTestMethod.java">
      <Message>At BaseTestMethod.java:[line 155]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="d53b0a793333e8f84d108f5af8bb47ec" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.internal.BaseTestMethod.getGroupsDependedUpon() may expose internal representation by returning BaseTestMethod.m_groupsDependedUpon</LongMessage>
    <Class classname="org.testng.internal.BaseTestMethod" primary="true">
      <SourceLine classname="org.testng.internal.BaseTestMethod" start="30" end="773" sourcefile="BaseTestMethod.java" sourcepath="org/testng/internal/BaseTestMethod.java">
        <Message>At BaseTestMethod.java:[lines 30-773]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.BaseTestMethod</Message>
    </Class>
    <Method classname="org.testng.internal.BaseTestMethod" name="getGroupsDependedUpon" signature="()[Ljava/lang/String;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.BaseTestMethod" start="161" end="161" startBytecode="0" endBytecode="46" sourcefile="BaseTestMethod.java" sourcepath="org/testng/internal/BaseTestMethod.java"/>
      <Message>In method org.testng.internal.BaseTestMethod.getGroupsDependedUpon()</Message>
    </Method>
    <Field classname="org.testng.internal.BaseTestMethod" name="m_groupsDependedUpon" signature="[Ljava/lang/String;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.BaseTestMethod" sourcefile="BaseTestMethod.java" sourcepath="org/testng/internal/BaseTestMethod.java">
        <Message>In BaseTestMethod.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.BaseTestMethod.m_groupsDependedUpon</Message>
    </Field>
    <SourceLine classname="org.testng.internal.BaseTestMethod" primary="true" start="161" end="161" startBytecode="4" endBytecode="4" sourcefile="BaseTestMethod.java" sourcepath="org/testng/internal/BaseTestMethod.java">
      <Message>At BaseTestMethod.java:[line 161]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="9f2a5c51c4a69808da8831e5917f9df9" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.internal.BaseTestMethod.getInvocationNumbers() may expose internal representation by returning BaseTestMethod.m_invocationNumbers</LongMessage>
    <Class classname="org.testng.internal.BaseTestMethod" primary="true">
      <SourceLine classname="org.testng.internal.BaseTestMethod" start="30" end="773" sourcefile="BaseTestMethod.java" sourcepath="org/testng/internal/BaseTestMethod.java">
        <Message>At BaseTestMethod.java:[lines 30-773]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.BaseTestMethod</Message>
    </Class>
    <Method classname="org.testng.internal.BaseTestMethod" name="getInvocationNumbers" signature="()Ljava/util/List;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.BaseTestMethod" start="675" end="675" startBytecode="0" endBytecode="46" sourcefile="BaseTestMethod.java" sourcepath="org/testng/internal/BaseTestMethod.java"/>
      <Message>In method org.testng.internal.BaseTestMethod.getInvocationNumbers()</Message>
    </Method>
    <Field classname="org.testng.internal.BaseTestMethod" name="m_invocationNumbers" signature="Ljava/util/List;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.BaseTestMethod" sourcefile="BaseTestMethod.java" sourcepath="org/testng/internal/BaseTestMethod.java">
        <Message>In BaseTestMethod.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.BaseTestMethod.m_invocationNumbers</Message>
    </Field>
    <SourceLine classname="org.testng.internal.BaseTestMethod" primary="true" start="675" end="675" startBytecode="4" endBytecode="4" sourcefile="BaseTestMethod.java" sourcepath="org/testng/internal/BaseTestMethod.java">
      <Message>At BaseTestMethod.java:[line 675]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="e001465130edc07e60221fd25eecd3a" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.internal.BaseTestMethod.getMethodsDependedUpon() may expose internal representation by returning BaseTestMethod.m_methodsDependedUpon</LongMessage>
    <Class classname="org.testng.internal.BaseTestMethod" primary="true">
      <SourceLine classname="org.testng.internal.BaseTestMethod" start="30" end="773" sourcefile="BaseTestMethod.java" sourcepath="org/testng/internal/BaseTestMethod.java">
        <Message>At BaseTestMethod.java:[lines 30-773]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.BaseTestMethod</Message>
    </Class>
    <Method classname="org.testng.internal.BaseTestMethod" name="getMethodsDependedUpon" signature="()[Ljava/lang/String;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.BaseTestMethod" start="167" end="167" startBytecode="0" endBytecode="46" sourcefile="BaseTestMethod.java" sourcepath="org/testng/internal/BaseTestMethod.java"/>
      <Message>In method org.testng.internal.BaseTestMethod.getMethodsDependedUpon()</Message>
    </Method>
    <Field classname="org.testng.internal.BaseTestMethod" name="m_methodsDependedUpon" signature="[Ljava/lang/String;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.BaseTestMethod" sourcefile="BaseTestMethod.java" sourcepath="org/testng/internal/BaseTestMethod.java">
        <Message>In BaseTestMethod.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.BaseTestMethod.m_methodsDependedUpon</Message>
    </Field>
    <SourceLine classname="org.testng.internal.BaseTestMethod" primary="true" start="167" end="167" startBytecode="4" endBytecode="4" sourcefile="BaseTestMethod.java" sourcepath="org/testng/internal/BaseTestMethod.java">
      <Message>At BaseTestMethod.java:[line 167]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="5406fe6635f80ad6d039393105773c68" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.internal.BaseTestMethod.getXmlTest() may expose internal representation by returning BaseTestMethod.m_xmlTest</LongMessage>
    <Class classname="org.testng.internal.BaseTestMethod" primary="true">
      <SourceLine classname="org.testng.internal.BaseTestMethod" start="30" end="773" sourcefile="BaseTestMethod.java" sourcepath="org/testng/internal/BaseTestMethod.java">
        <Message>At BaseTestMethod.java:[lines 30-773]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.BaseTestMethod</Message>
    </Class>
    <Method classname="org.testng.internal.BaseTestMethod" name="getXmlTest" signature="()Lorg/testng/xml/XmlTest;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.BaseTestMethod" start="715" end="715" startBytecode="0" endBytecode="46" sourcefile="BaseTestMethod.java" sourcepath="org/testng/internal/BaseTestMethod.java"/>
      <Message>In method org.testng.internal.BaseTestMethod.getXmlTest()</Message>
    </Method>
    <Field classname="org.testng.internal.BaseTestMethod" name="m_xmlTest" signature="Lorg/testng/xml/XmlTest;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.BaseTestMethod" sourcefile="BaseTestMethod.java" sourcepath="org/testng/internal/BaseTestMethod.java">
        <Message>In BaseTestMethod.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.BaseTestMethod.m_xmlTest</Message>
    </Field>
    <SourceLine classname="org.testng.internal.BaseTestMethod" primary="true" start="715" end="715" startBytecode="4" endBytecode="4" sourcefile="BaseTestMethod.java" sourcepath="org/testng/internal/BaseTestMethod.java">
      <Message>At BaseTestMethod.java:[line 715]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="692980a851496f5425d66e401deb95dc" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>new org.testng.internal.BaseTestMethod(String, ConstructorOrMethod, IAnnotationFinder, Object) may expose internal representation by storing an externally mutable object into BaseTestMethod.m_method</LongMessage>
    <Class classname="org.testng.internal.BaseTestMethod" primary="true">
      <SourceLine classname="org.testng.internal.BaseTestMethod" start="30" end="773" sourcefile="BaseTestMethod.java" sourcepath="org/testng/internal/BaseTestMethod.java">
        <Message>At BaseTestMethod.java:[lines 30-773]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.BaseTestMethod</Message>
    </Class>
    <Method classname="org.testng.internal.BaseTestMethod" name="&lt;init&gt;" signature="(Ljava/lang/String;Lorg/testng/internal/ConstructorOrMethod;Lorg/testng/internal/annotations/IAnnotationFinder;Ljava/lang/Object;)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.BaseTestMethod" start="83" end="89" startBytecode="0" endBytecode="336" sourcefile="BaseTestMethod.java" sourcepath="org/testng/internal/BaseTestMethod.java"/>
      <Message>In method new org.testng.internal.BaseTestMethod(String, ConstructorOrMethod, IAnnotationFinder, Object)</Message>
    </Method>
    <Field classname="org.testng.internal.BaseTestMethod" name="m_method" signature="Lorg/testng/internal/ConstructorOrMethod;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.BaseTestMethod" sourcefile="BaseTestMethod.java" sourcepath="org/testng/internal/BaseTestMethod.java">
        <Message>In BaseTestMethod.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.BaseTestMethod.m_method</Message>
    </Field>
    <LocalVariable name="com" register="2" pc="139" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named com</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.internal.BaseTestMethod" primary="true" start="85" end="85" startBytecode="139" endBytecode="139" sourcefile="BaseTestMethod.java" sourcepath="org/testng/internal/BaseTestMethod.java">
      <Message>At BaseTestMethod.java:[line 85]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="79d770cd8dfc2f917f58b5879ffb965f" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>org.testng.internal.BaseTestMethod.setInvocationNumbers(List) may expose internal representation by storing an externally mutable object into BaseTestMethod.m_invocationNumbers</LongMessage>
    <Class classname="org.testng.internal.BaseTestMethod" primary="true">
      <SourceLine classname="org.testng.internal.BaseTestMethod" start="30" end="773" sourcefile="BaseTestMethod.java" sourcepath="org/testng/internal/BaseTestMethod.java">
        <Message>At BaseTestMethod.java:[lines 30-773]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.BaseTestMethod</Message>
    </Class>
    <Method classname="org.testng.internal.BaseTestMethod" name="setInvocationNumbers" signature="(Ljava/util/List;)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.BaseTestMethod" start="680" end="681" startBytecode="0" endBytecode="79" sourcefile="BaseTestMethod.java" sourcepath="org/testng/internal/BaseTestMethod.java"/>
      <Message>In method org.testng.internal.BaseTestMethod.setInvocationNumbers(List)</Message>
    </Method>
    <Field classname="org.testng.internal.BaseTestMethod" name="m_invocationNumbers" signature="Ljava/util/List;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.BaseTestMethod" sourcefile="BaseTestMethod.java" sourcepath="org/testng/internal/BaseTestMethod.java">
        <Message>In BaseTestMethod.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.BaseTestMethod.m_invocationNumbers</Message>
    </Field>
    <LocalVariable name="numbers" register="1" pc="2" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named numbers</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.internal.BaseTestMethod" primary="true" start="680" end="680" startBytecode="2" endBytecode="2" sourcefile="BaseTestMethod.java" sourcepath="org/testng/internal/BaseTestMethod.java">
      <Message>At BaseTestMethod.java:[line 680]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="1b88cc8a5a2f6fbc61a6c5ebc011fd74" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>org.testng.internal.BaseTestMethod.setXmlTest(XmlTest) may expose internal representation by storing an externally mutable object into BaseTestMethod.m_xmlTest</LongMessage>
    <Class classname="org.testng.internal.BaseTestMethod" primary="true">
      <SourceLine classname="org.testng.internal.BaseTestMethod" start="30" end="773" sourcefile="BaseTestMethod.java" sourcepath="org/testng/internal/BaseTestMethod.java">
        <Message>At BaseTestMethod.java:[lines 30-773]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.BaseTestMethod</Message>
    </Class>
    <Method classname="org.testng.internal.BaseTestMethod" name="setXmlTest" signature="(Lorg/testng/xml/XmlTest;)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.BaseTestMethod" start="719" end="720" startBytecode="0" endBytecode="61" sourcefile="BaseTestMethod.java" sourcepath="org/testng/internal/BaseTestMethod.java"/>
      <Message>In method org.testng.internal.BaseTestMethod.setXmlTest(XmlTest)</Message>
    </Method>
    <Field classname="org.testng.internal.BaseTestMethod" name="m_xmlTest" signature="Lorg/testng/xml/XmlTest;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.BaseTestMethod" sourcefile="BaseTestMethod.java" sourcepath="org/testng/internal/BaseTestMethod.java">
        <Message>In BaseTestMethod.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.BaseTestMethod.m_xmlTest</Message>
    </Field>
    <LocalVariable name="xmlTest" register="1" pc="2" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named xmlTest</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.internal.BaseTestMethod" primary="true" start="719" end="719" startBytecode="2" endBytecode="2" sourcefile="BaseTestMethod.java" sourcepath="org/testng/internal/BaseTestMethod.java">
      <Message>At BaseTestMethod.java:[line 719]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="dcbe8070b14e076dc647bb0516da9b64" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.internal.ClassImpl.getInstanceHashCodes() may expose internal representation by returning ClassImpl.m_instanceHashCodes</LongMessage>
    <Class classname="org.testng.internal.ClassImpl" primary="true">
      <SourceLine classname="org.testng.internal.ClassImpl" start="29" end="192" sourcefile="ClassImpl.java" sourcepath="org/testng/internal/ClassImpl.java">
        <Message>At ClassImpl.java:[lines 29-192]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.ClassImpl</Message>
    </Class>
    <Method classname="org.testng.internal.ClassImpl" name="getInstanceHashCodes" signature="()[J" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.ClassImpl" start="85" end="85" startBytecode="0" endBytecode="46" sourcefile="ClassImpl.java" sourcepath="org/testng/internal/ClassImpl.java"/>
      <Message>In method org.testng.internal.ClassImpl.getInstanceHashCodes()</Message>
    </Method>
    <Field classname="org.testng.internal.ClassImpl" name="m_instanceHashCodes" signature="[J" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.ClassImpl" sourcefile="ClassImpl.java" sourcepath="org/testng/internal/ClassImpl.java">
        <Message>In ClassImpl.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.ClassImpl.m_instanceHashCodes</Message>
    </Field>
    <SourceLine classname="org.testng.internal.ClassImpl" primary="true" start="85" end="85" startBytecode="4" endBytecode="4" sourcefile="ClassImpl.java" sourcepath="org/testng/internal/ClassImpl.java">
      <Message>At ClassImpl.java:[line 85]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="5a47a962bac587a4c4f775ab9839a2f2" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.internal.ClassImpl.getXmlClass() may expose internal representation by returning ClassImpl.m_xmlClass</LongMessage>
    <Class classname="org.testng.internal.ClassImpl" primary="true">
      <SourceLine classname="org.testng.internal.ClassImpl" start="29" end="192" sourcefile="ClassImpl.java" sourcepath="org/testng/internal/ClassImpl.java">
        <Message>At ClassImpl.java:[lines 29-192]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.ClassImpl</Message>
    </Class>
    <Method classname="org.testng.internal.ClassImpl" name="getXmlClass" signature="()Lorg/testng/xml/XmlClass;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.ClassImpl" start="95" end="95" startBytecode="0" endBytecode="46" sourcefile="ClassImpl.java" sourcepath="org/testng/internal/ClassImpl.java"/>
      <Message>In method org.testng.internal.ClassImpl.getXmlClass()</Message>
    </Method>
    <Field classname="org.testng.internal.ClassImpl" name="m_xmlClass" signature="Lorg/testng/xml/XmlClass;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.ClassImpl" sourcefile="ClassImpl.java" sourcepath="org/testng/internal/ClassImpl.java">
        <Message>In ClassImpl.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.ClassImpl.m_xmlClass</Message>
    </Field>
    <SourceLine classname="org.testng.internal.ClassImpl" primary="true" start="95" end="95" startBytecode="4" endBytecode="4" sourcefile="ClassImpl.java" sourcepath="org/testng/internal/ClassImpl.java">
      <Message>At ClassImpl.java:[line 95]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="fb3ccdb1899519f1e1b7720ac9138266" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>new org.testng.internal.ClassImpl(ITestContext, Class, XmlClass, Object, Map, IAnnotationFinder, ITestObjectFactory) may expose internal representation by storing an externally mutable object into ClassImpl.m_classes</LongMessage>
    <Class classname="org.testng.internal.ClassImpl" primary="true">
      <SourceLine classname="org.testng.internal.ClassImpl" start="29" end="192" sourcefile="ClassImpl.java" sourcepath="org/testng/internal/ClassImpl.java">
        <Message>At ClassImpl.java:[lines 29-192]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.ClassImpl</Message>
    </Class>
    <Method classname="org.testng.internal.ClassImpl" name="&lt;init&gt;" signature="(Lorg/testng/ITestContext;Ljava/lang/Class;Lorg/testng/xml/XmlClass;Ljava/lang/Object;Ljava/util/Map;Lorg/testng/internal/annotations/IAnnotationFinder;Lorg/testng/ITestObjectFactory;)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.ClassImpl" start="48" end="66" startBytecode="0" endBytecode="418" sourcefile="ClassImpl.java" sourcepath="org/testng/internal/ClassImpl.java"/>
      <Message>In method new org.testng.internal.ClassImpl(ITestContext, Class, XmlClass, Object, Map, IAnnotationFinder, ITestObjectFactory)</Message>
    </Method>
    <Field classname="org.testng.internal.ClassImpl" name="m_classes" signature="Ljava/util/Map;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.ClassImpl" sourcefile="ClassImpl.java" sourcepath="org/testng/internal/ClassImpl.java">
        <Message>In ClassImpl.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.ClassImpl.m_classes</Message>
    </Field>
    <LocalVariable name="classes" register="5" pc="34" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named classes</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.internal.ClassImpl" primary="true" start="51" end="51" startBytecode="34" endBytecode="34" sourcefile="ClassImpl.java" sourcepath="org/testng/internal/ClassImpl.java">
      <Message>At ClassImpl.java:[line 51]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="7b1b9414e43016dc910c4900fd7191a7" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>new org.testng.internal.ClassImpl(ITestContext, Class, XmlClass, Object, Map, IAnnotationFinder, ITestObjectFactory) may expose internal representation by storing an externally mutable object into ClassImpl.m_testContext</LongMessage>
    <Class classname="org.testng.internal.ClassImpl" primary="true">
      <SourceLine classname="org.testng.internal.ClassImpl" start="29" end="192" sourcefile="ClassImpl.java" sourcepath="org/testng/internal/ClassImpl.java">
        <Message>At ClassImpl.java:[lines 29-192]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.ClassImpl</Message>
    </Class>
    <Method classname="org.testng.internal.ClassImpl" name="&lt;init&gt;" signature="(Lorg/testng/ITestContext;Ljava/lang/Class;Lorg/testng/xml/XmlClass;Ljava/lang/Object;Ljava/util/Map;Lorg/testng/internal/annotations/IAnnotationFinder;Lorg/testng/ITestObjectFactory;)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.ClassImpl" start="48" end="66" startBytecode="0" endBytecode="418" sourcefile="ClassImpl.java" sourcepath="org/testng/internal/ClassImpl.java"/>
      <Message>In method new org.testng.internal.ClassImpl(ITestContext, Class, XmlClass, Object, Map, IAnnotationFinder, ITestObjectFactory)</Message>
    </Method>
    <Field classname="org.testng.internal.ClassImpl" name="m_testContext" signature="Lorg/testng/ITestContext;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.ClassImpl" sourcefile="ClassImpl.java" sourcepath="org/testng/internal/ClassImpl.java">
        <Message>In ClassImpl.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.ClassImpl.m_testContext</Message>
    </Field>
    <LocalVariable name="context" register="1" pc="23" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named context</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.internal.ClassImpl" primary="true" start="49" end="49" startBytecode="23" endBytecode="23" sourcefile="ClassImpl.java" sourcepath="org/testng/internal/ClassImpl.java">
      <Message>At ClassImpl.java:[line 49]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="cebc65e6b0ae8bdc074a3f593af4e7c2" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>new org.testng.internal.ClassImpl(ITestContext, Class, XmlClass, Object, Map, IAnnotationFinder, ITestObjectFactory) may expose internal representation by storing an externally mutable object into ClassImpl.m_xmlClass</LongMessage>
    <Class classname="org.testng.internal.ClassImpl" primary="true">
      <SourceLine classname="org.testng.internal.ClassImpl" start="29" end="192" sourcefile="ClassImpl.java" sourcepath="org/testng/internal/ClassImpl.java">
        <Message>At ClassImpl.java:[lines 29-192]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.ClassImpl</Message>
    </Class>
    <Method classname="org.testng.internal.ClassImpl" name="&lt;init&gt;" signature="(Lorg/testng/ITestContext;Ljava/lang/Class;Lorg/testng/xml/XmlClass;Ljava/lang/Object;Ljava/util/Map;Lorg/testng/internal/annotations/IAnnotationFinder;Lorg/testng/ITestObjectFactory;)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.ClassImpl" start="48" end="66" startBytecode="0" endBytecode="418" sourcefile="ClassImpl.java" sourcepath="org/testng/internal/ClassImpl.java"/>
      <Message>In method new org.testng.internal.ClassImpl(ITestContext, Class, XmlClass, Object, Map, IAnnotationFinder, ITestObjectFactory)</Message>
    </Method>
    <Field classname="org.testng.internal.ClassImpl" name="m_xmlClass" signature="Lorg/testng/xml/XmlClass;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.ClassImpl" sourcefile="ClassImpl.java" sourcepath="org/testng/internal/ClassImpl.java">
        <Message>In ClassImpl.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.ClassImpl.m_xmlClass</Message>
    </Field>
    <LocalVariable name="xmlClass" register="3" pc="39" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named xmlClass</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.internal.ClassImpl" primary="true" start="52" end="52" startBytecode="39" endBytecode="39" sourcefile="ClassImpl.java" sourcepath="org/testng/internal/ClassImpl.java">
      <Message>At ClassImpl.java:[line 52]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="URF_UNREAD_FIELD" priority="3" rank="20" abbrev="UrF" category="PERFORMANCE" instanceHash="28a56933292b1e9b32a627df51ccec10" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Unread field</ShortMessage>
    <LongMessage>Unread field: org.testng.internal.ClassImpl.m_hasParentModule</LongMessage>
    <Class classname="org.testng.internal.ClassImpl" primary="true">
      <SourceLine classname="org.testng.internal.ClassImpl" start="29" end="192" sourcefile="ClassImpl.java" sourcepath="org/testng/internal/ClassImpl.java">
        <Message>At ClassImpl.java:[lines 29-192]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.ClassImpl</Message>
    </Class>
    <Field classname="org.testng.internal.ClassImpl" name="m_hasParentModule" signature="Z" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.ClassImpl" sourcefile="ClassImpl.java" sourcepath="org/testng/internal/ClassImpl.java">
        <Message>In ClassImpl.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.ClassImpl.m_hasParentModule</Message>
    </Field>
    <SourceLine classname="org.testng.internal.ClassImpl" primary="true" start="65" end="65" startBytecode="153" endBytecode="153" sourcefile="ClassImpl.java" sourcepath="org/testng/internal/ClassImpl.java">
      <Message>At ClassImpl.java:[line 65]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="CT_CONSTRUCTOR_THROW" priority="2" rank="16" abbrev="CT" category="BAD_PRACTICE" instanceHash="e31a51a0c0df63d0be2f90adaf3b24f0" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Be wary of letting constructors throw exceptions.</ShortMessage>
    <LongMessage>Exception thrown in class org.testng.internal.ClassInfoMap at new org.testng.internal.ClassInfoMap(List, boolean) will leave the constructor. The object under construction remains partially initialized and may be vulnerable to Finalizer attacks.</LongMessage>
    <Class classname="org.testng.internal.ClassInfoMap" primary="true">
      <SourceLine classname="org.testng.internal.ClassInfoMap" start="13" end="73" sourcefile="ClassInfoMap.java" sourcepath="org/testng/internal/ClassInfoMap.java">
        <Message>At ClassInfoMap.java:[lines 13-73]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.ClassInfoMap</Message>
    </Class>
    <Method classname="org.testng.internal.ClassInfoMap" name="&lt;init&gt;" signature="(Ljava/util/List;Z)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.ClassInfoMap" start="24" end="43" startBytecode="0" endBytecode="361" sourcefile="ClassInfoMap.java" sourcepath="org/testng/internal/ClassInfoMap.java"/>
      <Message>In method new org.testng.internal.ClassInfoMap(List, boolean)</Message>
    </Method>
    <SourceLine classname="org.testng.internal.ClassInfoMap" primary="true" start="39" end="39" startBytecode="115" endBytecode="115" sourcefile="ClassInfoMap.java" sourcepath="org/testng/internal/ClassInfoMap.java">
      <Message>At ClassInfoMap.java:[line 39]</Message>
    </SourceLine>
    <SourceLine classname="org.testng.internal.ClassInfoMap" start="39" end="39" startBytecode="115" endBytecode="115" sourcefile="ClassInfoMap.java" sourcepath="org/testng/internal/ClassInfoMap.java">
      <Message>At ClassInfoMap.java:[line 39]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="CN_IDIOM_NO_SUPER_CALL" priority="2" rank="16" abbrev="CN" category="BAD_PRACTICE" instanceHash="11814d3186f48380b8541fb9e0e5c24d" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="580">
    <ShortMessage>clone method does not call super.clone()</ShortMessage>
    <LongMessage>org.testng.internal.ClonedMethod.clone() does not call super.clone()</LongMessage>
    <Class classname="org.testng.internal.ClonedMethod" primary="true">
      <SourceLine classname="org.testng.internal.ClonedMethod" start="17" end="369" sourcefile="ClonedMethod.java" sourcepath="org/testng/internal/ClonedMethod.java">
        <Message>At ClonedMethod.java:[lines 17-369]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.ClonedMethod</Message>
    </Class>
    <Method classname="org.testng.internal.ClonedMethod" name="clone" signature="()Lorg/testng/internal/ClonedMethod;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.ClonedMethod" start="302" end="302" startBytecode="0" endBytecode="57" sourcefile="ClonedMethod.java" sourcepath="org/testng/internal/ClonedMethod.java"/>
      <Message>In method org.testng.internal.ClonedMethod.clone()</Message>
    </Method>
    <SourceLine classname="org.testng.internal.ClonedMethod" start="302" end="302" startBytecode="0" endBytecode="57" sourcefile="ClonedMethod.java" sourcepath="org/testng/internal/ClonedMethod.java" synthetic="true">
      <Message>At ClonedMethod.java:[line 302]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="d479e4a5df7b46444dda3cfdb748d875" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.internal.ClonedMethod.getFailedInvocationNumbers() may expose internal representation by returning ClonedMethod.m_failedInvocationNumbers</LongMessage>
    <Class classname="org.testng.internal.ClonedMethod" primary="true">
      <SourceLine classname="org.testng.internal.ClonedMethod" start="17" end="369" sourcefile="ClonedMethod.java" sourcepath="org/testng/internal/ClonedMethod.java">
        <Message>At ClonedMethod.java:[lines 17-369]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.ClonedMethod</Message>
    </Class>
    <Method classname="org.testng.internal.ClonedMethod" name="getFailedInvocationNumbers" signature="()Ljava/util/List;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.ClonedMethod" start="324" end="324" startBytecode="0" endBytecode="46" sourcefile="ClonedMethod.java" sourcepath="org/testng/internal/ClonedMethod.java"/>
      <Message>In method org.testng.internal.ClonedMethod.getFailedInvocationNumbers()</Message>
    </Method>
    <Field classname="org.testng.internal.ClonedMethod" name="m_failedInvocationNumbers" signature="Ljava/util/List;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.ClonedMethod" sourcefile="ClonedMethod.java" sourcepath="org/testng/internal/ClonedMethod.java">
        <Message>In ClonedMethod.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.ClonedMethod.m_failedInvocationNumbers</Message>
    </Field>
    <SourceLine classname="org.testng.internal.ClonedMethod" primary="true" start="324" end="324" startBytecode="4" endBytecode="4" sourcefile="ClonedMethod.java" sourcepath="org/testng/internal/ClonedMethod.java">
      <Message>At ClonedMethod.java:[line 324]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="c02abb46517d9683416b9e6569cbbe1d" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.internal.ClonedMethod.getInvocationNumbers() may expose internal representation by returning ClonedMethod.m_invocationNumbers</LongMessage>
    <Class classname="org.testng.internal.ClonedMethod" primary="true">
      <SourceLine classname="org.testng.internal.ClonedMethod" start="17" end="369" sourcefile="ClonedMethod.java" sourcepath="org/testng/internal/ClonedMethod.java">
        <Message>At ClonedMethod.java:[lines 17-369]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.ClonedMethod</Message>
    </Class>
    <Method classname="org.testng.internal.ClonedMethod" name="getInvocationNumbers" signature="()Ljava/util/List;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.ClonedMethod" start="314" end="314" startBytecode="0" endBytecode="46" sourcefile="ClonedMethod.java" sourcepath="org/testng/internal/ClonedMethod.java"/>
      <Message>In method org.testng.internal.ClonedMethod.getInvocationNumbers()</Message>
    </Method>
    <Field classname="org.testng.internal.ClonedMethod" name="m_invocationNumbers" signature="Ljava/util/List;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.ClonedMethod" sourcefile="ClonedMethod.java" sourcepath="org/testng/internal/ClonedMethod.java">
        <Message>In ClonedMethod.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.ClonedMethod.m_invocationNumbers</Message>
    </Field>
    <SourceLine classname="org.testng.internal.ClonedMethod" primary="true" start="314" end="314" startBytecode="4" endBytecode="4" sourcefile="ClonedMethod.java" sourcepath="org/testng/internal/ClonedMethod.java">
      <Message>At ClonedMethod.java:[line 314]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="ab2bc13d6883c1fe17e53a6bce046c26" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>new org.testng.internal.ClonedMethod(ITestNGMethod, Method) may expose internal representation by storing an externally mutable object into ClonedMethod.m_javaMethod</LongMessage>
    <Class classname="org.testng.internal.ClonedMethod" primary="true">
      <SourceLine classname="org.testng.internal.ClonedMethod" start="17" end="369" sourcefile="ClonedMethod.java" sourcepath="org/testng/internal/ClonedMethod.java">
        <Message>At ClonedMethod.java:[lines 17-369]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.ClonedMethod</Message>
    </Class>
    <Method classname="org.testng.internal.ClonedMethod" name="&lt;init&gt;" signature="(Lorg/testng/ITestNGMethod;Ljava/lang/reflect/Method;)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.ClonedMethod" start="28" end="31" startBytecode="0" endBytecode="110" sourcefile="ClonedMethod.java" sourcepath="org/testng/internal/ClonedMethod.java"/>
      <Message>In method new org.testng.internal.ClonedMethod(ITestNGMethod, Method)</Message>
    </Method>
    <Field classname="org.testng.internal.ClonedMethod" name="m_javaMethod" signature="Ljava/lang/reflect/Method;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.ClonedMethod" sourcefile="ClonedMethod.java" sourcepath="org/testng/internal/ClonedMethod.java">
        <Message>In ClonedMethod.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.ClonedMethod.m_javaMethod</Message>
    </Field>
    <LocalVariable name="javaMethod" register="2" pc="25" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named javaMethod</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.internal.ClonedMethod" primary="true" start="30" end="30" startBytecode="25" endBytecode="25" sourcefile="ClonedMethod.java" sourcepath="org/testng/internal/ClonedMethod.java">
      <Message>At ClonedMethod.java:[line 30]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="a351c0409b3f4700c8fb79051e68f96b" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>new org.testng.internal.ClonedMethod(ITestNGMethod, Method) may expose internal representation by storing an externally mutable object into ClonedMethod.m_method</LongMessage>
    <Class classname="org.testng.internal.ClonedMethod" primary="true">
      <SourceLine classname="org.testng.internal.ClonedMethod" start="17" end="369" sourcefile="ClonedMethod.java" sourcepath="org/testng/internal/ClonedMethod.java">
        <Message>At ClonedMethod.java:[lines 17-369]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.ClonedMethod</Message>
    </Class>
    <Method classname="org.testng.internal.ClonedMethod" name="&lt;init&gt;" signature="(Lorg/testng/ITestNGMethod;Ljava/lang/reflect/Method;)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.ClonedMethod" start="28" end="31" startBytecode="0" endBytecode="110" sourcefile="ClonedMethod.java" sourcepath="org/testng/internal/ClonedMethod.java"/>
      <Message>In method new org.testng.internal.ClonedMethod(ITestNGMethod, Method)</Message>
    </Method>
    <Field classname="org.testng.internal.ClonedMethod" name="m_method" signature="Lorg/testng/ITestNGMethod;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.ClonedMethod" sourcefile="ClonedMethod.java" sourcepath="org/testng/internal/ClonedMethod.java">
        <Message>In ClonedMethod.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.ClonedMethod.m_method</Message>
    </Field>
    <LocalVariable name="method" register="1" pc="20" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named method</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.internal.ClonedMethod" primary="true" start="29" end="29" startBytecode="20" endBytecode="20" sourcefile="ClonedMethod.java" sourcepath="org/testng/internal/ClonedMethod.java">
      <Message>At ClonedMethod.java:[line 29]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="23d03e5b322730c941c0b46d502ea438" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>org.testng.internal.ClonedMethod.setInvocationNumbers(List) may expose internal representation by storing an externally mutable object into ClonedMethod.m_invocationNumbers</LongMessage>
    <Class classname="org.testng.internal.ClonedMethod" primary="true">
      <SourceLine classname="org.testng.internal.ClonedMethod" start="17" end="369" sourcefile="ClonedMethod.java" sourcepath="org/testng/internal/ClonedMethod.java">
        <Message>At ClonedMethod.java:[lines 17-369]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.ClonedMethod</Message>
    </Class>
    <Method classname="org.testng.internal.ClonedMethod" name="setInvocationNumbers" signature="(Ljava/util/List;)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.ClonedMethod" start="319" end="320" startBytecode="0" endBytecode="79" sourcefile="ClonedMethod.java" sourcepath="org/testng/internal/ClonedMethod.java"/>
      <Message>In method org.testng.internal.ClonedMethod.setInvocationNumbers(List)</Message>
    </Method>
    <Field classname="org.testng.internal.ClonedMethod" name="m_invocationNumbers" signature="Ljava/util/List;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.ClonedMethod" sourcefile="ClonedMethod.java" sourcepath="org/testng/internal/ClonedMethod.java">
        <Message>In ClonedMethod.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.ClonedMethod.m_invocationNumbers</Message>
    </Field>
    <LocalVariable name="count" register="1" pc="2" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named count</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.internal.ClonedMethod" primary="true" start="319" end="319" startBytecode="2" endBytecode="2" sourcefile="ClonedMethod.java" sourcepath="org/testng/internal/ClonedMethod.java">
      <Message>At ClonedMethod.java:[line 319]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="URF_UNREAD_FIELD" priority="2" rank="18" abbrev="UrF" category="PERFORMANCE" instanceHash="8dbee89dd5c35b230b5c649a67e628cd" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Unread field</ShortMessage>
    <LongMessage>Unread field: org.testng.internal.ClonedMethod.m_date</LongMessage>
    <Class classname="org.testng.internal.ClonedMethod" primary="true">
      <SourceLine classname="org.testng.internal.ClonedMethod" start="17" end="369" sourcefile="ClonedMethod.java" sourcepath="org/testng/internal/ClonedMethod.java">
        <Message>At ClonedMethod.java:[lines 17-369]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.ClonedMethod</Message>
    </Class>
    <Field classname="org.testng.internal.ClonedMethod" name="m_date" signature="J" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.ClonedMethod" sourcefile="ClonedMethod.java" sourcepath="org/testng/internal/ClonedMethod.java">
        <Message>In ClonedMethod.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.ClonedMethod.m_date</Message>
    </Field>
    <SourceLine classname="org.testng.internal.ClonedMethod" primary="true" start="263" end="263" startBytecode="2" endBytecode="2" sourcefile="ClonedMethod.java" sourcepath="org/testng/internal/ClonedMethod.java">
      <Message>At ClonedMethod.java:[line 263]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="WMI_WRONG_MAP_ITERATOR" priority="2" rank="18" abbrev="WMI" category="PERFORMANCE" instanceHash="dad26819b4dd35c90104493e6a88d565" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Inefficient use of keySet iterator instead of entrySet iterator</ShortMessage>
    <LongMessage>org.testng.internal.ConfigInvoker.hasConfigurationFailureFor(ITestNGMethod, String[], IClass, Object) makes inefficient use of keySet iterator instead of entrySet iterator</LongMessage>
    <Class classname="org.testng.internal.ConfigInvoker" primary="true">
      <SourceLine classname="org.testng.internal.ConfigInvoker" start="38" end="608" sourcefile="ConfigInvoker.java" sourcepath="org/testng/internal/ConfigInvoker.java">
        <Message>At ConfigInvoker.java:[lines 38-608]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.ConfigInvoker</Message>
    </Class>
    <Method classname="org.testng.internal.ConfigInvoker" name="hasConfigurationFailureFor" signature="(Lorg/testng/ITestNGMethod;[Ljava/lang/String;Lorg/testng/IClass;Ljava/lang/Object;)Z" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.ConfigInvoker" start="67" end="106" startBytecode="0" endBytecode="603" sourcefile="ConfigInvoker.java" sourcepath="org/testng/internal/ConfigInvoker.java"/>
      <Message>In method org.testng.internal.ConfigInvoker.hasConfigurationFailureFor(ITestNGMethod, String[], IClass, Object)</Message>
    </Method>
    <Field classname="org.testng.internal.ConfigInvoker" name="m_classInvocationResults" signature="Ljava/util/Map;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.ConfigInvoker" sourcefile="ConfigInvoker.java" sourcepath="org/testng/internal/ConfigInvoker.java">
        <Message>In ConfigInvoker.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.ConfigInvoker.m_classInvocationResults</Message>
    </Field>
    <SourceLine classname="org.testng.internal.ConfigInvoker" primary="true" start="91" end="91" startBytecode="185" endBytecode="185" sourcefile="ConfigInvoker.java" sourcepath="org/testng/internal/ConfigInvoker.java">
      <Message>At ConfigInvoker.java:[line 91]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="f3421fb67eb893ae82a0da405f344810" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.internal.ConfigMethodArguments.getConfigMethods() may expose internal representation by returning ConfigMethodArguments.allMethods</LongMessage>
    <Class classname="org.testng.internal.ConfigMethodArguments" primary="true">
      <SourceLine classname="org.testng.internal.ConfigMethodArguments" start="10" end="57" sourcefile="ConfigMethodArguments.java" sourcepath="org/testng/internal/ConfigMethodArguments.java">
        <Message>At ConfigMethodArguments.java:[lines 10-57]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.ConfigMethodArguments</Message>
    </Class>
    <Method classname="org.testng.internal.ConfigMethodArguments" name="getConfigMethods" signature="()[Lorg/testng/ITestNGMethod;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.ConfigMethodArguments" start="32" end="32" startBytecode="0" endBytecode="46" sourcefile="ConfigMethodArguments.java" sourcepath="org/testng/internal/ConfigMethodArguments.java"/>
      <Message>In method org.testng.internal.ConfigMethodArguments.getConfigMethods()</Message>
    </Method>
    <Field classname="org.testng.internal.ConfigMethodArguments" name="allMethods" signature="[Lorg/testng/ITestNGMethod;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.ConfigMethodArguments" sourcefile="ConfigMethodArguments.java" sourcepath="org/testng/internal/ConfigMethodArguments.java">
        <Message>In ConfigMethodArguments.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.ConfigMethodArguments.allMethods</Message>
    </Field>
    <SourceLine classname="org.testng.internal.ConfigMethodArguments" primary="true" start="32" end="32" startBytecode="4" endBytecode="4" sourcefile="ConfigMethodArguments.java" sourcepath="org/testng/internal/ConfigMethodArguments.java">
      <Message>At ConfigMethodArguments.java:[line 32]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="c95e1e08c808eeaef0251d851c531488" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.internal.ConfigMethodArguments.getParameterValues() may expose internal representation by returning MethodArguments.parameterValues</LongMessage>
    <Class classname="org.testng.internal.ConfigMethodArguments" primary="true">
      <SourceLine classname="org.testng.internal.ConfigMethodArguments" start="10" end="57" sourcefile="ConfigMethodArguments.java" sourcepath="org/testng/internal/ConfigMethodArguments.java">
        <Message>At ConfigMethodArguments.java:[lines 10-57]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.ConfigMethodArguments</Message>
    </Class>
    <Method classname="org.testng.internal.ConfigMethodArguments" name="getParameterValues" signature="()[Ljava/lang/Object;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.ConfigMethodArguments" start="44" end="44" startBytecode="0" endBytecode="46" sourcefile="ConfigMethodArguments.java" sourcepath="org/testng/internal/ConfigMethodArguments.java"/>
      <Message>In method org.testng.internal.ConfigMethodArguments.getParameterValues()</Message>
    </Method>
    <Field classname="org.testng.internal.MethodArguments" name="parameterValues" signature="[Ljava/lang/Object;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.MethodArguments" sourcefile="MethodArguments.java" sourcepath="org/testng/internal/MethodArguments.java">
        <Message>In MethodArguments.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.MethodArguments.parameterValues</Message>
    </Field>
    <SourceLine classname="org.testng.internal.ConfigMethodArguments" primary="true" start="44" end="44" startBytecode="4" endBytecode="4" sourcefile="ConfigMethodArguments.java" sourcepath="org/testng/internal/ConfigMethodArguments.java">
      <Message>At ConfigMethodArguments.java:[line 44]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="bcb5e34c9529c5b23d83d0cb8787e815" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.internal.ConfigMethodArguments.getParameters() may expose internal representation by returning Arguments.params</LongMessage>
    <Class classname="org.testng.internal.ConfigMethodArguments" primary="true">
      <SourceLine classname="org.testng.internal.ConfigMethodArguments" start="10" end="57" sourcefile="ConfigMethodArguments.java" sourcepath="org/testng/internal/ConfigMethodArguments.java">
        <Message>At ConfigMethodArguments.java:[lines 10-57]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.ConfigMethodArguments</Message>
    </Class>
    <Method classname="org.testng.internal.ConfigMethodArguments" name="getParameters" signature="()Ljava/util/Map;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.ConfigMethodArguments" start="40" end="40" startBytecode="0" endBytecode="46" sourcefile="ConfigMethodArguments.java" sourcepath="org/testng/internal/ConfigMethodArguments.java"/>
      <Message>In method org.testng.internal.ConfigMethodArguments.getParameters()</Message>
    </Method>
    <Field classname="org.testng.internal.Arguments" name="params" signature="Ljava/util/Map;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.Arguments" sourcefile="Arguments.java" sourcepath="org/testng/internal/Arguments.java">
        <Message>In Arguments.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.Arguments.params</Message>
    </Field>
    <SourceLine classname="org.testng.internal.ConfigMethodArguments" primary="true" start="40" end="40" startBytecode="4" endBytecode="4" sourcefile="ConfigMethodArguments.java" sourcepath="org/testng/internal/ConfigMethodArguments.java">
      <Message>At ConfigMethodArguments.java:[line 40]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="f61cfc1ba5c57ed12628fd7e2df2b716" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.internal.ConfigMethodArguments.getSuite() may expose internal representation by returning ConfigMethodArguments.suite</LongMessage>
    <Class classname="org.testng.internal.ConfigMethodArguments" primary="true">
      <SourceLine classname="org.testng.internal.ConfigMethodArguments" start="10" end="57" sourcefile="ConfigMethodArguments.java" sourcepath="org/testng/internal/ConfigMethodArguments.java">
        <Message>At ConfigMethodArguments.java:[lines 10-57]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.ConfigMethodArguments</Message>
    </Class>
    <Method classname="org.testng.internal.ConfigMethodArguments" name="getSuite" signature="()Lorg/testng/xml/XmlSuite;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.ConfigMethodArguments" start="36" end="36" startBytecode="0" endBytecode="46" sourcefile="ConfigMethodArguments.java" sourcepath="org/testng/internal/ConfigMethodArguments.java"/>
      <Message>In method org.testng.internal.ConfigMethodArguments.getSuite()</Message>
    </Method>
    <Field classname="org.testng.internal.ConfigMethodArguments" name="suite" signature="Lorg/testng/xml/XmlSuite;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.ConfigMethodArguments" sourcefile="ConfigMethodArguments.java" sourcepath="org/testng/internal/ConfigMethodArguments.java">
        <Message>In ConfigMethodArguments.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.ConfigMethodArguments.suite</Message>
    </Field>
    <SourceLine classname="org.testng.internal.ConfigMethodArguments" primary="true" start="36" end="36" startBytecode="4" endBytecode="4" sourcefile="ConfigMethodArguments.java" sourcepath="org/testng/internal/ConfigMethodArguments.java">
      <Message>At ConfigMethodArguments.java:[line 36]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="538c0d1b1352251e331b1b022839f568" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.internal.ConfigMethodArguments.getTestClass() may expose internal representation by returning ConfigMethodArguments.testClass</LongMessage>
    <Class classname="org.testng.internal.ConfigMethodArguments" primary="true">
      <SourceLine classname="org.testng.internal.ConfigMethodArguments" start="10" end="57" sourcefile="ConfigMethodArguments.java" sourcepath="org/testng/internal/ConfigMethodArguments.java">
        <Message>At ConfigMethodArguments.java:[lines 10-57]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.ConfigMethodArguments</Message>
    </Class>
    <Method classname="org.testng.internal.ConfigMethodArguments" name="getTestClass" signature="()Lorg/testng/IClass;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.ConfigMethodArguments" start="28" end="28" startBytecode="0" endBytecode="46" sourcefile="ConfigMethodArguments.java" sourcepath="org/testng/internal/ConfigMethodArguments.java"/>
      <Message>In method org.testng.internal.ConfigMethodArguments.getTestClass()</Message>
    </Method>
    <Field classname="org.testng.internal.ConfigMethodArguments" name="testClass" signature="Lorg/testng/IClass;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.ConfigMethodArguments" sourcefile="ConfigMethodArguments.java" sourcepath="org/testng/internal/ConfigMethodArguments.java">
        <Message>In ConfigMethodArguments.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.ConfigMethodArguments.testClass</Message>
    </Field>
    <SourceLine classname="org.testng.internal.ConfigMethodArguments" primary="true" start="28" end="28" startBytecode="4" endBytecode="4" sourcefile="ConfigMethodArguments.java" sourcepath="org/testng/internal/ConfigMethodArguments.java">
      <Message>At ConfigMethodArguments.java:[line 28]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="d197df29a3a994853dbc4f8014fc8f16" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.internal.ConfigMethodArguments.getTestMethodResult() may expose internal representation by returning ConfigMethodArguments.testMethodResult</LongMessage>
    <Class classname="org.testng.internal.ConfigMethodArguments" primary="true">
      <SourceLine classname="org.testng.internal.ConfigMethodArguments" start="10" end="57" sourcefile="ConfigMethodArguments.java" sourcepath="org/testng/internal/ConfigMethodArguments.java">
        <Message>At ConfigMethodArguments.java:[lines 10-57]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.ConfigMethodArguments</Message>
    </Class>
    <Method classname="org.testng.internal.ConfigMethodArguments" name="getTestMethodResult" signature="()Lorg/testng/ITestResult;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.ConfigMethodArguments" start="52" end="52" startBytecode="0" endBytecode="46" sourcefile="ConfigMethodArguments.java" sourcepath="org/testng/internal/ConfigMethodArguments.java"/>
      <Message>In method org.testng.internal.ConfigMethodArguments.getTestMethodResult()</Message>
    </Method>
    <Field classname="org.testng.internal.ConfigMethodArguments" name="testMethodResult" signature="Lorg/testng/ITestResult;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.ConfigMethodArguments" sourcefile="ConfigMethodArguments.java" sourcepath="org/testng/internal/ConfigMethodArguments.java">
        <Message>In ConfigMethodArguments.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.ConfigMethodArguments.testMethodResult</Message>
    </Field>
    <SourceLine classname="org.testng.internal.ConfigMethodArguments" primary="true" start="52" end="52" startBytecode="4" endBytecode="4" sourcefile="ConfigMethodArguments.java" sourcepath="org/testng/internal/ConfigMethodArguments.java">
      <Message>At ConfigMethodArguments.java:[line 52]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="72cc215014e9c8a4bcd9b04caebf3d39" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>org.testng.internal.ConfigMethodArguments.setTestClass(IClass) may expose internal representation by storing an externally mutable object into ConfigMethodArguments.testClass</LongMessage>
    <Class classname="org.testng.internal.ConfigMethodArguments" primary="true">
      <SourceLine classname="org.testng.internal.ConfigMethodArguments" start="10" end="57" sourcefile="ConfigMethodArguments.java" sourcepath="org/testng/internal/ConfigMethodArguments.java">
        <Message>At ConfigMethodArguments.java:[lines 10-57]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.ConfigMethodArguments</Message>
    </Class>
    <Method classname="org.testng.internal.ConfigMethodArguments" name="setTestClass" signature="(Lorg/testng/IClass;)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.ConfigMethodArguments" start="56" end="57" startBytecode="0" endBytecode="61" sourcefile="ConfigMethodArguments.java" sourcepath="org/testng/internal/ConfigMethodArguments.java"/>
      <Message>In method org.testng.internal.ConfigMethodArguments.setTestClass(IClass)</Message>
    </Method>
    <Field classname="org.testng.internal.ConfigMethodArguments" name="testClass" signature="Lorg/testng/IClass;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.ConfigMethodArguments" sourcefile="ConfigMethodArguments.java" sourcepath="org/testng/internal/ConfigMethodArguments.java">
        <Message>In ConfigMethodArguments.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.ConfigMethodArguments.testClass</Message>
    </Field>
    <LocalVariable name="testClass" register="1" pc="2" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named testClass</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.internal.ConfigMethodArguments" primary="true" start="56" end="56" startBytecode="2" endBytecode="2" sourcefile="ConfigMethodArguments.java" sourcepath="org/testng/internal/ConfigMethodArguments.java">
      <Message>At ConfigMethodArguments.java:[line 56]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="65e11d174342ecdc603234cdeb42ae91" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>org.testng.internal.ConfigMethodArguments$Builder.forSuite(XmlSuite) may expose internal representation by storing an externally mutable object into ConfigMethodArguments$Builder.suite</LongMessage>
    <Class classname="org.testng.internal.ConfigMethodArguments$Builder" primary="true">
      <SourceLine classname="org.testng.internal.ConfigMethodArguments$Builder" start="60" end="119" sourcefile="ConfigMethodArguments.java" sourcepath="org/testng/internal/ConfigMethodArguments.java">
        <Message>At ConfigMethodArguments.java:[lines 60-119]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.ConfigMethodArguments$Builder</Message>
    </Class>
    <Method classname="org.testng.internal.ConfigMethodArguments$Builder" name="forSuite" signature="(Lorg/testng/xml/XmlSuite;)Lorg/testng/internal/ConfigMethodArguments$Builder;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.ConfigMethodArguments$Builder" start="94" end="95" startBytecode="0" endBytecode="62" sourcefile="ConfigMethodArguments.java" sourcepath="org/testng/internal/ConfigMethodArguments.java"/>
      <Message>In method org.testng.internal.ConfigMethodArguments$Builder.forSuite(XmlSuite)</Message>
    </Method>
    <Field classname="org.testng.internal.ConfigMethodArguments$Builder" name="suite" signature="Lorg/testng/xml/XmlSuite;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.ConfigMethodArguments$Builder" sourcefile="ConfigMethodArguments.java" sourcepath="org/testng/internal/ConfigMethodArguments.java">
        <Message>In ConfigMethodArguments.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.ConfigMethodArguments$Builder.suite</Message>
    </Field>
    <LocalVariable name="suite" register="1" pc="2" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named suite</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.internal.ConfigMethodArguments$Builder" primary="true" start="94" end="94" startBytecode="2" endBytecode="2" sourcefile="ConfigMethodArguments.java" sourcepath="org/testng/internal/ConfigMethodArguments.java">
      <Message>At ConfigMethodArguments.java:[line 94]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="14b79572e5f68ff6b981bb7d7db26317" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>org.testng.internal.ConfigMethodArguments$Builder.forTestClass(IClass) may expose internal representation by storing an externally mutable object into ConfigMethodArguments$Builder.testClass</LongMessage>
    <Class classname="org.testng.internal.ConfigMethodArguments$Builder" primary="true">
      <SourceLine classname="org.testng.internal.ConfigMethodArguments$Builder" start="60" end="119" sourcefile="ConfigMethodArguments.java" sourcepath="org/testng/internal/ConfigMethodArguments.java">
        <Message>At ConfigMethodArguments.java:[lines 60-119]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.ConfigMethodArguments$Builder</Message>
    </Class>
    <Method classname="org.testng.internal.ConfigMethodArguments$Builder" name="forTestClass" signature="(Lorg/testng/IClass;)Lorg/testng/internal/ConfigMethodArguments$Builder;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.ConfigMethodArguments$Builder" start="72" end="73" startBytecode="0" endBytecode="62" sourcefile="ConfigMethodArguments.java" sourcepath="org/testng/internal/ConfigMethodArguments.java"/>
      <Message>In method org.testng.internal.ConfigMethodArguments$Builder.forTestClass(IClass)</Message>
    </Method>
    <Field classname="org.testng.internal.ConfigMethodArguments$Builder" name="testClass" signature="Lorg/testng/IClass;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.ConfigMethodArguments$Builder" sourcefile="ConfigMethodArguments.java" sourcepath="org/testng/internal/ConfigMethodArguments.java">
        <Message>In ConfigMethodArguments.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.ConfigMethodArguments$Builder.testClass</Message>
    </Field>
    <LocalVariable name="testClass" register="1" pc="2" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named testClass</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.internal.ConfigMethodArguments$Builder" primary="true" start="72" end="72" startBytecode="2" endBytecode="2" sourcefile="ConfigMethodArguments.java" sourcepath="org/testng/internal/ConfigMethodArguments.java">
      <Message>At ConfigMethodArguments.java:[line 72]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="94a5da70e18108791512d79833829afe" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>org.testng.internal.ConfigMethodArguments$Builder.forTestMethod(ITestNGMethod) may expose internal representation by storing an externally mutable object into ConfigMethodArguments$Builder.currentTestMethod</LongMessage>
    <Class classname="org.testng.internal.ConfigMethodArguments$Builder" primary="true">
      <SourceLine classname="org.testng.internal.ConfigMethodArguments$Builder" start="60" end="119" sourcefile="ConfigMethodArguments.java" sourcepath="org/testng/internal/ConfigMethodArguments.java">
        <Message>At ConfigMethodArguments.java:[lines 60-119]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.ConfigMethodArguments$Builder</Message>
    </Class>
    <Method classname="org.testng.internal.ConfigMethodArguments$Builder" name="forTestMethod" signature="(Lorg/testng/ITestNGMethod;)Lorg/testng/internal/ConfigMethodArguments$Builder;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.ConfigMethodArguments$Builder" start="77" end="78" startBytecode="0" endBytecode="62" sourcefile="ConfigMethodArguments.java" sourcepath="org/testng/internal/ConfigMethodArguments.java"/>
      <Message>In method org.testng.internal.ConfigMethodArguments$Builder.forTestMethod(ITestNGMethod)</Message>
    </Method>
    <Field classname="org.testng.internal.ConfigMethodArguments$Builder" name="currentTestMethod" signature="Lorg/testng/ITestNGMethod;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.ConfigMethodArguments$Builder" sourcefile="ConfigMethodArguments.java" sourcepath="org/testng/internal/ConfigMethodArguments.java">
        <Message>In ConfigMethodArguments.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.ConfigMethodArguments$Builder.currentTestMethod</Message>
    </Field>
    <LocalVariable name="currentTestMethod" register="1" pc="2" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named currentTestMethod</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.internal.ConfigMethodArguments$Builder" primary="true" start="77" end="77" startBytecode="2" endBytecode="2" sourcefile="ConfigMethodArguments.java" sourcepath="org/testng/internal/ConfigMethodArguments.java">
      <Message>At ConfigMethodArguments.java:[line 77]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="ecbfda73ea37d7675ab0b300fcfa4a54" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>org.testng.internal.ConfigMethodArguments$Builder.usingParameterValues(Object[]) may expose internal representation by storing an externally mutable object into ConfigMethodArguments$Builder.parameterValues</LongMessage>
    <Class classname="org.testng.internal.ConfigMethodArguments$Builder" primary="true">
      <SourceLine classname="org.testng.internal.ConfigMethodArguments$Builder" start="60" end="119" sourcefile="ConfigMethodArguments.java" sourcepath="org/testng/internal/ConfigMethodArguments.java">
        <Message>At ConfigMethodArguments.java:[lines 60-119]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.ConfigMethodArguments$Builder</Message>
    </Class>
    <Method classname="org.testng.internal.ConfigMethodArguments$Builder" name="usingParameterValues" signature="([Ljava/lang/Object;)Lorg/testng/internal/ConfigMethodArguments$Builder;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.ConfigMethodArguments$Builder" start="104" end="105" startBytecode="0" endBytecode="62" sourcefile="ConfigMethodArguments.java" sourcepath="org/testng/internal/ConfigMethodArguments.java"/>
      <Message>In method org.testng.internal.ConfigMethodArguments$Builder.usingParameterValues(Object[])</Message>
    </Method>
    <Field classname="org.testng.internal.ConfigMethodArguments$Builder" name="parameterValues" signature="[Ljava/lang/Object;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.ConfigMethodArguments$Builder" sourcefile="ConfigMethodArguments.java" sourcepath="org/testng/internal/ConfigMethodArguments.java">
        <Message>In ConfigMethodArguments.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.ConfigMethodArguments$Builder.parameterValues</Message>
    </Field>
    <LocalVariable name="parameterValues" register="1" pc="2" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named parameterValues</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.internal.ConfigMethodArguments$Builder" primary="true" start="104" end="104" startBytecode="2" endBytecode="2" sourcefile="ConfigMethodArguments.java" sourcepath="org/testng/internal/ConfigMethodArguments.java">
      <Message>At ConfigMethodArguments.java:[line 104]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="a4c495f5078d07750ee63ccec051e9cb" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>org.testng.internal.ConfigMethodArguments$Builder.usingParameters(Map) may expose internal representation by storing an externally mutable object into ConfigMethodArguments$Builder.params</LongMessage>
    <Class classname="org.testng.internal.ConfigMethodArguments$Builder" primary="true">
      <SourceLine classname="org.testng.internal.ConfigMethodArguments$Builder" start="60" end="119" sourcefile="ConfigMethodArguments.java" sourcepath="org/testng/internal/ConfigMethodArguments.java">
        <Message>At ConfigMethodArguments.java:[lines 60-119]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.ConfigMethodArguments$Builder</Message>
    </Class>
    <Method classname="org.testng.internal.ConfigMethodArguments$Builder" name="usingParameters" signature="(Ljava/util/Map;)Lorg/testng/internal/ConfigMethodArguments$Builder;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.ConfigMethodArguments$Builder" start="99" end="100" startBytecode="0" endBytecode="80" sourcefile="ConfigMethodArguments.java" sourcepath="org/testng/internal/ConfigMethodArguments.java"/>
      <Message>In method org.testng.internal.ConfigMethodArguments$Builder.usingParameters(Map)</Message>
    </Method>
    <Field classname="org.testng.internal.ConfigMethodArguments$Builder" name="params" signature="Ljava/util/Map;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.ConfigMethodArguments$Builder" sourcefile="ConfigMethodArguments.java" sourcepath="org/testng/internal/ConfigMethodArguments.java">
        <Message>In ConfigMethodArguments.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.ConfigMethodArguments$Builder.params</Message>
    </Field>
    <LocalVariable name="params" register="1" pc="2" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named params</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.internal.ConfigMethodArguments$Builder" primary="true" start="99" end="99" startBytecode="2" endBytecode="2" sourcefile="ConfigMethodArguments.java" sourcepath="org/testng/internal/ConfigMethodArguments.java">
      <Message>At ConfigMethodArguments.java:[line 99]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="4ff8b359491f9c4b0a8a575e695e7dd2" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>org.testng.internal.ConfigMethodArguments$Builder.withResult(ITestResult) may expose internal representation by storing an externally mutable object into ConfigMethodArguments$Builder.testMethodResult</LongMessage>
    <Class classname="org.testng.internal.ConfigMethodArguments$Builder" primary="true">
      <SourceLine classname="org.testng.internal.ConfigMethodArguments$Builder" start="60" end="119" sourcefile="ConfigMethodArguments.java" sourcepath="org/testng/internal/ConfigMethodArguments.java">
        <Message>At ConfigMethodArguments.java:[lines 60-119]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.ConfigMethodArguments$Builder</Message>
    </Class>
    <Method classname="org.testng.internal.ConfigMethodArguments$Builder" name="withResult" signature="(Lorg/testng/ITestResult;)Lorg/testng/internal/ConfigMethodArguments$Builder;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.ConfigMethodArguments$Builder" start="114" end="115" startBytecode="0" endBytecode="62" sourcefile="ConfigMethodArguments.java" sourcepath="org/testng/internal/ConfigMethodArguments.java"/>
      <Message>In method org.testng.internal.ConfigMethodArguments$Builder.withResult(ITestResult)</Message>
    </Method>
    <Field classname="org.testng.internal.ConfigMethodArguments$Builder" name="testMethodResult" signature="Lorg/testng/ITestResult;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.ConfigMethodArguments$Builder" sourcefile="ConfigMethodArguments.java" sourcepath="org/testng/internal/ConfigMethodArguments.java">
        <Message>In ConfigMethodArguments.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.ConfigMethodArguments$Builder.testMethodResult</Message>
    </Field>
    <LocalVariable name="testMethodResult" register="1" pc="2" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named testMethodResult</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.internal.ConfigMethodArguments$Builder" primary="true" start="114" end="114" startBytecode="2" endBytecode="2" sourcefile="ConfigMethodArguments.java" sourcepath="org/testng/internal/ConfigMethodArguments.java">
      <Message>At ConfigMethodArguments.java:[line 114]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="15598b111a952adae099e421cb454b04" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.internal.ConfigurationGroupMethods.getAfterGroupsMethods() may expose internal representation by returning ConfigurationGroupMethods.m_afterGroupsMethods</LongMessage>
    <Class classname="org.testng.internal.ConfigurationGroupMethods" primary="true">
      <SourceLine classname="org.testng.internal.ConfigurationGroupMethods" start="25" end="140" sourcefile="ConfigurationGroupMethods.java" sourcepath="org/testng/internal/ConfigurationGroupMethods.java">
        <Message>At ConfigurationGroupMethods.java:[lines 25-140]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.ConfigurationGroupMethods</Message>
    </Class>
    <Method classname="org.testng.internal.ConfigurationGroupMethods" name="getAfterGroupsMethods" signature="()Ljava/util/Map;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.ConfigurationGroupMethods" start="57" end="57" startBytecode="0" endBytecode="46" sourcefile="ConfigurationGroupMethods.java" sourcepath="org/testng/internal/ConfigurationGroupMethods.java"/>
      <Message>In method org.testng.internal.ConfigurationGroupMethods.getAfterGroupsMethods()</Message>
    </Method>
    <Field classname="org.testng.internal.ConfigurationGroupMethods" name="m_afterGroupsMethods" signature="Ljava/util/Map;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.ConfigurationGroupMethods" sourcefile="ConfigurationGroupMethods.java" sourcepath="org/testng/internal/ConfigurationGroupMethods.java">
        <Message>In ConfigurationGroupMethods.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.ConfigurationGroupMethods.m_afterGroupsMethods</Message>
    </Field>
    <SourceLine classname="org.testng.internal.ConfigurationGroupMethods" primary="true" start="57" end="57" startBytecode="4" endBytecode="4" sourcefile="ConfigurationGroupMethods.java" sourcepath="org/testng/internal/ConfigurationGroupMethods.java">
      <Message>At ConfigurationGroupMethods.java:[line 57]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="5afd7e7dad6c5dbf631036f29bab20ed" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.internal.ConfigurationGroupMethods.getAllTestMethods() may expose internal representation by returning ConfigurationGroupMethods.m_allMethods</LongMessage>
    <Class classname="org.testng.internal.ConfigurationGroupMethods" primary="true">
      <SourceLine classname="org.testng.internal.ConfigurationGroupMethods" start="25" end="140" sourcefile="ConfigurationGroupMethods.java" sourcepath="org/testng/internal/ConfigurationGroupMethods.java">
        <Message>At ConfigurationGroupMethods.java:[lines 25-140]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.ConfigurationGroupMethods</Message>
    </Class>
    <Method classname="org.testng.internal.ConfigurationGroupMethods" name="getAllTestMethods" signature="()[Lorg/testng/ITestNGMethod;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.ConfigurationGroupMethods" start="49" end="49" startBytecode="0" endBytecode="46" sourcefile="ConfigurationGroupMethods.java" sourcepath="org/testng/internal/ConfigurationGroupMethods.java"/>
      <Message>In method org.testng.internal.ConfigurationGroupMethods.getAllTestMethods()</Message>
    </Method>
    <Field classname="org.testng.internal.ConfigurationGroupMethods" name="m_allMethods" signature="[Lorg/testng/ITestNGMethod;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.ConfigurationGroupMethods" sourcefile="ConfigurationGroupMethods.java" sourcepath="org/testng/internal/ConfigurationGroupMethods.java">
        <Message>In ConfigurationGroupMethods.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.ConfigurationGroupMethods.m_allMethods</Message>
    </Field>
    <SourceLine classname="org.testng.internal.ConfigurationGroupMethods" primary="true" start="49" end="49" startBytecode="4" endBytecode="4" sourcefile="ConfigurationGroupMethods.java" sourcepath="org/testng/internal/ConfigurationGroupMethods.java">
      <Message>At ConfigurationGroupMethods.java:[line 49]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="522b75b6ae56bd41faa68970d46106ea" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.internal.ConfigurationGroupMethods.getBeforeGroupsMethods() may expose internal representation by returning ConfigurationGroupMethods.m_beforeGroupsMethods</LongMessage>
    <Class classname="org.testng.internal.ConfigurationGroupMethods" primary="true">
      <SourceLine classname="org.testng.internal.ConfigurationGroupMethods" start="25" end="140" sourcefile="ConfigurationGroupMethods.java" sourcepath="org/testng/internal/ConfigurationGroupMethods.java">
        <Message>At ConfigurationGroupMethods.java:[lines 25-140]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.ConfigurationGroupMethods</Message>
    </Class>
    <Method classname="org.testng.internal.ConfigurationGroupMethods" name="getBeforeGroupsMethods" signature="()Ljava/util/Map;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.ConfigurationGroupMethods" start="53" end="53" startBytecode="0" endBytecode="46" sourcefile="ConfigurationGroupMethods.java" sourcepath="org/testng/internal/ConfigurationGroupMethods.java"/>
      <Message>In method org.testng.internal.ConfigurationGroupMethods.getBeforeGroupsMethods()</Message>
    </Method>
    <Field classname="org.testng.internal.ConfigurationGroupMethods" name="m_beforeGroupsMethods" signature="Ljava/util/Map;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.ConfigurationGroupMethods" sourcefile="ConfigurationGroupMethods.java" sourcepath="org/testng/internal/ConfigurationGroupMethods.java">
        <Message>In ConfigurationGroupMethods.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.ConfigurationGroupMethods.m_beforeGroupsMethods</Message>
    </Field>
    <SourceLine classname="org.testng.internal.ConfigurationGroupMethods" primary="true" start="53" end="53" startBytecode="4" endBytecode="4" sourcefile="ConfigurationGroupMethods.java" sourcepath="org/testng/internal/ConfigurationGroupMethods.java">
      <Message>At ConfigurationGroupMethods.java:[line 53]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="3bd1ba44013b984ec6f7aba0ba524985" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>new org.testng.internal.ConfigurationGroupMethods(ITestNGMethod[], Map, Map) may expose internal representation by storing an externally mutable object into ConfigurationGroupMethods.m_allMethods</LongMessage>
    <Class classname="org.testng.internal.ConfigurationGroupMethods" primary="true">
      <SourceLine classname="org.testng.internal.ConfigurationGroupMethods" start="25" end="140" sourcefile="ConfigurationGroupMethods.java" sourcepath="org/testng/internal/ConfigurationGroupMethods.java">
        <Message>At ConfigurationGroupMethods.java:[lines 25-140]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.ConfigurationGroupMethods</Message>
    </Class>
    <Method classname="org.testng.internal.ConfigurationGroupMethods" name="&lt;init&gt;" signature="([Lorg/testng/ITestNGMethod;Ljava/util/Map;Ljava/util/Map;)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.ConfigurationGroupMethods" start="42" end="46" startBytecode="0" endBytecode="202" sourcefile="ConfigurationGroupMethods.java" sourcepath="org/testng/internal/ConfigurationGroupMethods.java"/>
      <Message>In method new org.testng.internal.ConfigurationGroupMethods(ITestNGMethod[], Map, Map)</Message>
    </Method>
    <Field classname="org.testng.internal.ConfigurationGroupMethods" name="m_allMethods" signature="[Lorg/testng/ITestNGMethod;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.ConfigurationGroupMethods" sourcefile="ConfigurationGroupMethods.java" sourcepath="org/testng/internal/ConfigurationGroupMethods.java">
        <Message>In ConfigurationGroupMethods.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.ConfigurationGroupMethods.m_allMethods</Message>
    </Field>
    <LocalVariable name="allMethods" register="1" pc="39" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named allMethods</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.internal.ConfigurationGroupMethods" primary="true" start="43" end="43" startBytecode="39" endBytecode="39" sourcefile="ConfigurationGroupMethods.java" sourcepath="org/testng/internal/ConfigurationGroupMethods.java">
      <Message>At ConfigurationGroupMethods.java:[line 43]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="CN_IDIOM_NO_SUPER_CALL" priority="2" rank="16" abbrev="CN" category="BAD_PRACTICE" instanceHash="4e57c37ceb052a6a522c81301dedbb36" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="580">
    <ShortMessage>clone method does not call super.clone()</ShortMessage>
    <LongMessage>org.testng.internal.ConfigurationMethod.clone() does not call super.clone()</LongMessage>
    <Class classname="org.testng.internal.ConfigurationMethod" primary="true">
      <SourceLine classname="org.testng.internal.ConfigurationMethod" start="28" end="478" sourcefile="ConfigurationMethod.java" sourcepath="org/testng/internal/ConfigurationMethod.java">
        <Message>At ConfigurationMethod.java:[lines 28-478]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.ConfigurationMethod</Message>
    </Class>
    <Method classname="org.testng.internal.ConfigurationMethod" name="clone" signature="()Lorg/testng/internal/ConfigurationMethod;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.ConfigurationMethod" start="418" end="446" startBytecode="0" endBytecode="305" sourcefile="ConfigurationMethod.java" sourcepath="org/testng/internal/ConfigurationMethod.java"/>
      <Message>In method org.testng.internal.ConfigurationMethod.clone()</Message>
    </Method>
    <SourceLine classname="org.testng.internal.ConfigurationMethod" start="418" end="446" startBytecode="0" endBytecode="305" sourcefile="ConfigurationMethod.java" sourcepath="org/testng/internal/ConfigurationMethod.java" synthetic="true">
      <Message>At ConfigurationMethod.java:[lines 418-446]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="BC_UNCONFIRMED_CAST" priority="3" rank="20" abbrev="BC" category="STYLE" instanceHash="68d9e3bb7ebad41e133ae3fbeff05bb9" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Unchecked/unconfirmed cast</ShortMessage>
    <LongMessage>Unchecked/unconfirmed cast from reflect.Executable to reflect.Method in new org.testng.internal.ConstructorOrMethod(Executable)</LongMessage>
    <Class classname="org.testng.internal.ConstructorOrMethod" primary="true">
      <SourceLine classname="org.testng.internal.ConstructorOrMethod" start="14" end="103" sourcefile="ConstructorOrMethod.java" sourcepath="org/testng/internal/ConstructorOrMethod.java">
        <Message>At ConstructorOrMethod.java:[lines 14-103]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.ConstructorOrMethod</Message>
    </Class>
    <Method classname="org.testng.internal.ConstructorOrMethod" name="&lt;init&gt;" signature="(Ljava/lang/reflect/Executable;)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.ConstructorOrMethod" start="24" end="30" startBytecode="0" endBytecode="17" sourcefile="ConstructorOrMethod.java" sourcepath="org/testng/internal/ConstructorOrMethod.java"/>
      <Message>In method new org.testng.internal.ConstructorOrMethod(Executable)</Message>
    </Method>
    <Type descriptor="Ljava/lang/reflect/Executable;" role="TYPE_FOUND">
      <SourceLine classname="java.lang.reflect.Executable" start="56" end="778" sourcefile="Executable.java" sourcepath="java/lang/reflect/Executable.java">
        <Message>At Executable.java:[lines 56-778]</Message>
      </SourceLine>
      <Message>Actual type reflect.Executable</Message>
    </Type>
    <Type descriptor="Ljava/lang/reflect/Method;" role="TYPE_EXPECTED">
      <SourceLine classname="java.lang.reflect.Method" start="69" end="770" sourcefile="Method.java" sourcepath="java/lang/reflect/Method.java">
        <Message>At Method.java:[lines 69-770]</Message>
      </SourceLine>
      <Message>Expected reflect.Method</Message>
    </Type>
    <LocalVariable name="e" register="1" pc="28" role="LOCAL_VARIABLE_VALUE_OF">
      <Message>Value loaded from e</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.internal.ConstructorOrMethod" primary="true" start="28" end="28" startBytecode="29" endBytecode="29" sourcefile="ConstructorOrMethod.java" sourcepath="org/testng/internal/ConstructorOrMethod.java">
      <Message>At ConstructorOrMethod.java:[line 28]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="1c4f85219c2d3ddcd9a8eeca85b710c" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.internal.ConstructorOrMethod.getConstructor() may expose internal representation by returning ConstructorOrMethod.m_constructor</LongMessage>
    <Class classname="org.testng.internal.ConstructorOrMethod" primary="true">
      <SourceLine classname="org.testng.internal.ConstructorOrMethod" start="14" end="103" sourcefile="ConstructorOrMethod.java" sourcepath="org/testng/internal/ConstructorOrMethod.java">
        <Message>At ConstructorOrMethod.java:[lines 14-103]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.ConstructorOrMethod</Message>
    </Class>
    <Method classname="org.testng.internal.ConstructorOrMethod" name="getConstructor" signature="()Ljava/lang/reflect/Constructor;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.ConstructorOrMethod" start="53" end="53" startBytecode="0" endBytecode="46" sourcefile="ConstructorOrMethod.java" sourcepath="org/testng/internal/ConstructorOrMethod.java"/>
      <Message>In method org.testng.internal.ConstructorOrMethod.getConstructor()</Message>
    </Method>
    <Field classname="org.testng.internal.ConstructorOrMethod" name="m_constructor" signature="Ljava/lang/reflect/Constructor;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.ConstructorOrMethod" sourcefile="ConstructorOrMethod.java" sourcepath="org/testng/internal/ConstructorOrMethod.java">
        <Message>In ConstructorOrMethod.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.ConstructorOrMethod.m_constructor</Message>
    </Field>
    <SourceLine classname="org.testng.internal.ConstructorOrMethod" primary="true" start="53" end="53" startBytecode="4" endBytecode="4" sourcefile="ConstructorOrMethod.java" sourcepath="org/testng/internal/ConstructorOrMethod.java">
      <Message>At ConstructorOrMethod.java:[line 53]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="68393e27201cbb6df36e55fb71a60e58" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.internal.ConstructorOrMethod.getMethod() may expose internal representation by returning ConstructorOrMethod.m_method</LongMessage>
    <Class classname="org.testng.internal.ConstructorOrMethod" primary="true">
      <SourceLine classname="org.testng.internal.ConstructorOrMethod" start="14" end="103" sourcefile="ConstructorOrMethod.java" sourcepath="org/testng/internal/ConstructorOrMethod.java">
        <Message>At ConstructorOrMethod.java:[lines 14-103]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.ConstructorOrMethod</Message>
    </Class>
    <Method classname="org.testng.internal.ConstructorOrMethod" name="getMethod" signature="()Ljava/lang/reflect/Method;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.ConstructorOrMethod" start="49" end="49" startBytecode="0" endBytecode="46" sourcefile="ConstructorOrMethod.java" sourcepath="org/testng/internal/ConstructorOrMethod.java"/>
      <Message>In method org.testng.internal.ConstructorOrMethod.getMethod()</Message>
    </Method>
    <Field classname="org.testng.internal.ConstructorOrMethod" name="m_method" signature="Ljava/lang/reflect/Method;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.ConstructorOrMethod" sourcefile="ConstructorOrMethod.java" sourcepath="org/testng/internal/ConstructorOrMethod.java">
        <Message>In ConstructorOrMethod.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.ConstructorOrMethod.m_method</Message>
    </Field>
    <SourceLine classname="org.testng.internal.ConstructorOrMethod" primary="true" start="49" end="49" startBytecode="4" endBytecode="4" sourcefile="ConstructorOrMethod.java" sourcepath="org/testng/internal/ConstructorOrMethod.java">
      <Message>At ConstructorOrMethod.java:[line 49]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="83a0dbb250ca62243612c96d84fa0a7e" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>new org.testng.internal.ConstructorOrMethod(Constructor) may expose internal representation by storing an externally mutable object into ConstructorOrMethod.m_constructor</LongMessage>
    <Class classname="org.testng.internal.ConstructorOrMethod" primary="true">
      <SourceLine classname="org.testng.internal.ConstructorOrMethod" start="14" end="103" sourcefile="ConstructorOrMethod.java" sourcepath="org/testng/internal/ConstructorOrMethod.java">
        <Message>At ConstructorOrMethod.java:[lines 14-103]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.ConstructorOrMethod</Message>
    </Class>
    <Method classname="org.testng.internal.ConstructorOrMethod" name="&lt;init&gt;" signature="(Ljava/lang/reflect/Constructor;)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.ConstructorOrMethod" start="20" end="22" startBytecode="0" endBytecode="78" sourcefile="ConstructorOrMethod.java" sourcepath="org/testng/internal/ConstructorOrMethod.java"/>
      <Message>In method new org.testng.internal.ConstructorOrMethod(Constructor)</Message>
    </Method>
    <Field classname="org.testng.internal.ConstructorOrMethod" name="m_constructor" signature="Ljava/lang/reflect/Constructor;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.ConstructorOrMethod" sourcefile="ConstructorOrMethod.java" sourcepath="org/testng/internal/ConstructorOrMethod.java">
        <Message>In ConstructorOrMethod.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.ConstructorOrMethod.m_constructor</Message>
    </Field>
    <LocalVariable name="c" register="1" pc="11" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named c</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.internal.ConstructorOrMethod" primary="true" start="21" end="21" startBytecode="11" endBytecode="11" sourcefile="ConstructorOrMethod.java" sourcepath="org/testng/internal/ConstructorOrMethod.java">
      <Message>At ConstructorOrMethod.java:[line 21]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="153401d84c8595a53a857a6e16840f8" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>new org.testng.internal.ConstructorOrMethod(Executable) may expose internal representation by storing an externally mutable object into ConstructorOrMethod.m_constructor</LongMessage>
    <Class classname="org.testng.internal.ConstructorOrMethod" primary="true">
      <SourceLine classname="org.testng.internal.ConstructorOrMethod" start="14" end="103" sourcefile="ConstructorOrMethod.java" sourcepath="org/testng/internal/ConstructorOrMethod.java">
        <Message>At ConstructorOrMethod.java:[lines 14-103]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.ConstructorOrMethod</Message>
    </Class>
    <Method classname="org.testng.internal.ConstructorOrMethod" name="&lt;init&gt;" signature="(Ljava/lang/reflect/Executable;)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.ConstructorOrMethod" start="24" end="30" startBytecode="0" endBytecode="129" sourcefile="ConstructorOrMethod.java" sourcepath="org/testng/internal/ConstructorOrMethod.java"/>
      <Message>In method new org.testng.internal.ConstructorOrMethod(Executable)</Message>
    </Method>
    <Field classname="org.testng.internal.ConstructorOrMethod" name="m_constructor" signature="Ljava/lang/reflect/Constructor;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.ConstructorOrMethod" sourcefile="ConstructorOrMethod.java" sourcepath="org/testng/internal/ConstructorOrMethod.java">
        <Message>In ConstructorOrMethod.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.ConstructorOrMethod.m_constructor</Message>
    </Field>
    <LocalVariable name="e" register="1" pc="21" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named e</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.internal.ConstructorOrMethod" primary="true" start="26" end="26" startBytecode="21" endBytecode="21" sourcefile="ConstructorOrMethod.java" sourcepath="org/testng/internal/ConstructorOrMethod.java">
      <Message>At ConstructorOrMethod.java:[line 26]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="4b68d12b9dc157b265c4fb7f2cde04f2" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>new org.testng.internal.ConstructorOrMethod(Executable) may expose internal representation by storing an externally mutable object into ConstructorOrMethod.m_method</LongMessage>
    <Class classname="org.testng.internal.ConstructorOrMethod" primary="true">
      <SourceLine classname="org.testng.internal.ConstructorOrMethod" start="14" end="103" sourcefile="ConstructorOrMethod.java" sourcepath="org/testng/internal/ConstructorOrMethod.java">
        <Message>At ConstructorOrMethod.java:[lines 14-103]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.ConstructorOrMethod</Message>
    </Class>
    <Method classname="org.testng.internal.ConstructorOrMethod" name="&lt;init&gt;" signature="(Ljava/lang/reflect/Executable;)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.ConstructorOrMethod" start="24" end="30" startBytecode="0" endBytecode="129" sourcefile="ConstructorOrMethod.java" sourcepath="org/testng/internal/ConstructorOrMethod.java"/>
      <Message>In method new org.testng.internal.ConstructorOrMethod(Executable)</Message>
    </Method>
    <Field classname="org.testng.internal.ConstructorOrMethod" name="m_method" signature="Ljava/lang/reflect/Method;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.ConstructorOrMethod" sourcefile="ConstructorOrMethod.java" sourcepath="org/testng/internal/ConstructorOrMethod.java">
        <Message>In ConstructorOrMethod.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.ConstructorOrMethod.m_method</Message>
    </Field>
    <LocalVariable name="e" register="1" pc="32" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named e</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.internal.ConstructorOrMethod" primary="true" start="28" end="28" startBytecode="32" endBytecode="32" sourcefile="ConstructorOrMethod.java" sourcepath="org/testng/internal/ConstructorOrMethod.java">
      <Message>At ConstructorOrMethod.java:[line 28]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="73be97d05b92438fad66bcbad090ac09" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>new org.testng.internal.ConstructorOrMethod(Method) may expose internal representation by storing an externally mutable object into ConstructorOrMethod.m_method</LongMessage>
    <Class classname="org.testng.internal.ConstructorOrMethod" primary="true">
      <SourceLine classname="org.testng.internal.ConstructorOrMethod" start="14" end="103" sourcefile="ConstructorOrMethod.java" sourcepath="org/testng/internal/ConstructorOrMethod.java">
        <Message>At ConstructorOrMethod.java:[lines 14-103]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.ConstructorOrMethod</Message>
    </Class>
    <Method classname="org.testng.internal.ConstructorOrMethod" name="&lt;init&gt;" signature="(Ljava/lang/reflect/Method;)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.ConstructorOrMethod" start="16" end="18" startBytecode="0" endBytecode="78" sourcefile="ConstructorOrMethod.java" sourcepath="org/testng/internal/ConstructorOrMethod.java"/>
      <Message>In method new org.testng.internal.ConstructorOrMethod(Method)</Message>
    </Method>
    <Field classname="org.testng.internal.ConstructorOrMethod" name="m_method" signature="Ljava/lang/reflect/Method;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.ConstructorOrMethod" sourcefile="ConstructorOrMethod.java" sourcepath="org/testng/internal/ConstructorOrMethod.java">
        <Message>In ConstructorOrMethod.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.ConstructorOrMethod.m_method</Message>
    </Field>
    <LocalVariable name="m" register="1" pc="11" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named m</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.internal.ConstructorOrMethod" primary="true" start="17" end="17" startBytecode="11" endBytecode="11" sourcefile="ConstructorOrMethod.java" sourcepath="org/testng/internal/ConstructorOrMethod.java">
      <Message>At ConstructorOrMethod.java:[line 17]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="83216b6fb07ae005d6ebe4d92c9e2834" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.internal.DefaultMethodSelectorContext.getUserData() may expose internal representation by returning DefaultMethodSelectorContext.m_userData</LongMessage>
    <Class classname="org.testng.internal.DefaultMethodSelectorContext" primary="true">
      <SourceLine classname="org.testng.internal.DefaultMethodSelectorContext" start="15" end="32" sourcefile="DefaultMethodSelectorContext.java" sourcepath="org/testng/internal/DefaultMethodSelectorContext.java">
        <Message>At DefaultMethodSelectorContext.java:[lines 15-32]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.DefaultMethodSelectorContext</Message>
    </Class>
    <Method classname="org.testng.internal.DefaultMethodSelectorContext" name="getUserData" signature="()Ljava/util/Map;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.DefaultMethodSelectorContext" start="21" end="21" startBytecode="0" endBytecode="46" sourcefile="DefaultMethodSelectorContext.java" sourcepath="org/testng/internal/DefaultMethodSelectorContext.java"/>
      <Message>In method org.testng.internal.DefaultMethodSelectorContext.getUserData()</Message>
    </Method>
    <Field classname="org.testng.internal.DefaultMethodSelectorContext" name="m_userData" signature="Ljava/util/Map;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.DefaultMethodSelectorContext" sourcefile="DefaultMethodSelectorContext.java" sourcepath="org/testng/internal/DefaultMethodSelectorContext.java">
        <Message>In DefaultMethodSelectorContext.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.DefaultMethodSelectorContext.m_userData</Message>
    </Field>
    <SourceLine classname="org.testng.internal.DefaultMethodSelectorContext" primary="true" start="21" end="21" startBytecode="4" endBytecode="4" sourcefile="DefaultMethodSelectorContext.java" sourcepath="org/testng/internal/DefaultMethodSelectorContext.java">
      <Message>At DefaultMethodSelectorContext.java:[line 21]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="837dc1a16c0e125c4973f3481ca31fc2" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.internal.DynamicGraph.getNodesWithStatus(IDynamicGraph$Status) may expose internal representation by returning DynamicGraph.m_nodesFinished</LongMessage>
    <Class classname="org.testng.internal.DynamicGraph" primary="true">
      <SourceLine classname="org.testng.internal.DynamicGraph" start="17" end="211" sourcefile="DynamicGraph.java" sourcepath="org/testng/internal/DynamicGraph.java">
        <Message>At DynamicGraph.java:[lines 17-211]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.DynamicGraph</Message>
    </Class>
    <Method classname="org.testng.internal.DynamicGraph" name="getNodesWithStatus" signature="(Lorg/testng/IDynamicGraph$Status;)Ljava/util/Set;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.DynamicGraph" start="151" end="159" startBytecode="0" endBytecode="156" sourcefile="DynamicGraph.java" sourcepath="org/testng/internal/DynamicGraph.java"/>
      <Message>In method org.testng.internal.DynamicGraph.getNodesWithStatus(IDynamicGraph$Status)</Message>
    </Method>
    <Field classname="org.testng.internal.DynamicGraph" name="m_nodesFinished" signature="Ljava/util/Set;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.DynamicGraph" sourcefile="DynamicGraph.java" sourcepath="org/testng/internal/DynamicGraph.java">
        <Message>In DynamicGraph.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.DynamicGraph.m_nodesFinished</Message>
    </Field>
    <SourceLine classname="org.testng.internal.DynamicGraph" primary="true" start="157" end="157" startBytecode="50" endBytecode="50" sourcefile="DynamicGraph.java" sourcepath="org/testng/internal/DynamicGraph.java">
      <Message>At DynamicGraph.java:[line 157]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="1da0f65c9a04a18f5b16be9f7430c616" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.internal.DynamicGraph.getNodesWithStatus(IDynamicGraph$Status) may expose internal representation by returning DynamicGraph.m_nodesReady</LongMessage>
    <Class classname="org.testng.internal.DynamicGraph" primary="true">
      <SourceLine classname="org.testng.internal.DynamicGraph" start="17" end="211" sourcefile="DynamicGraph.java" sourcepath="org/testng/internal/DynamicGraph.java">
        <Message>At DynamicGraph.java:[lines 17-211]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.DynamicGraph</Message>
    </Class>
    <Method classname="org.testng.internal.DynamicGraph" name="getNodesWithStatus" signature="(Lorg/testng/IDynamicGraph$Status;)Ljava/util/Set;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.DynamicGraph" start="151" end="159" startBytecode="0" endBytecode="156" sourcefile="DynamicGraph.java" sourcepath="org/testng/internal/DynamicGraph.java"/>
      <Message>In method org.testng.internal.DynamicGraph.getNodesWithStatus(IDynamicGraph$Status)</Message>
    </Method>
    <Field classname="org.testng.internal.DynamicGraph" name="m_nodesReady" signature="Ljava/util/Set;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.DynamicGraph" sourcefile="DynamicGraph.java" sourcepath="org/testng/internal/DynamicGraph.java">
        <Message>In DynamicGraph.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.DynamicGraph.m_nodesReady</Message>
    </Field>
    <SourceLine classname="org.testng.internal.DynamicGraph" primary="true" start="153" end="153" startBytecode="40" endBytecode="40" sourcefile="DynamicGraph.java" sourcepath="org/testng/internal/DynamicGraph.java">
      <Message>At DynamicGraph.java:[line 153]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="a53f36b4fd3888c22e2b05a115ca90c1" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.internal.DynamicGraph.getNodesWithStatus(IDynamicGraph$Status) may expose internal representation by returning DynamicGraph.m_nodesRunning</LongMessage>
    <Class classname="org.testng.internal.DynamicGraph" primary="true">
      <SourceLine classname="org.testng.internal.DynamicGraph" start="17" end="211" sourcefile="DynamicGraph.java" sourcepath="org/testng/internal/DynamicGraph.java">
        <Message>At DynamicGraph.java:[lines 17-211]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.DynamicGraph</Message>
    </Class>
    <Method classname="org.testng.internal.DynamicGraph" name="getNodesWithStatus" signature="(Lorg/testng/IDynamicGraph$Status;)Ljava/util/Set;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.DynamicGraph" start="151" end="159" startBytecode="0" endBytecode="156" sourcefile="DynamicGraph.java" sourcepath="org/testng/internal/DynamicGraph.java"/>
      <Message>In method org.testng.internal.DynamicGraph.getNodesWithStatus(IDynamicGraph$Status)</Message>
    </Method>
    <Field classname="org.testng.internal.DynamicGraph" name="m_nodesRunning" signature="Ljava/util/Set;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.DynamicGraph" sourcefile="DynamicGraph.java" sourcepath="org/testng/internal/DynamicGraph.java">
        <Message>In DynamicGraph.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.DynamicGraph.m_nodesRunning</Message>
    </Field>
    <SourceLine classname="org.testng.internal.DynamicGraph" primary="true" start="155" end="155" startBytecode="45" endBytecode="45" sourcefile="DynamicGraph.java" sourcepath="org/testng/internal/DynamicGraph.java">
      <Message>At DynamicGraph.java:[line 155]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="7f7bb7d7afbf89f17002a488aa82bc96" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>org.testng.internal.DynamicGraph.setVisualisers(Set) may expose internal representation by storing an externally mutable object into DynamicGraph.visualisers</LongMessage>
    <Class classname="org.testng.internal.DynamicGraph" primary="true">
      <SourceLine classname="org.testng.internal.DynamicGraph" start="17" end="211" sourcefile="DynamicGraph.java" sourcepath="org/testng/internal/DynamicGraph.java">
        <Message>At DynamicGraph.java:[lines 17-211]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.DynamicGraph</Message>
    </Class>
    <Method classname="org.testng.internal.DynamicGraph" name="setVisualisers" signature="(Ljava/util/Set;)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.DynamicGraph" start="41" end="42" startBytecode="0" endBytecode="89" sourcefile="DynamicGraph.java" sourcepath="org/testng/internal/DynamicGraph.java"/>
      <Message>In method org.testng.internal.DynamicGraph.setVisualisers(Set)</Message>
    </Method>
    <Field classname="org.testng.internal.DynamicGraph" name="visualisers" signature="Ljava/util/Set;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.DynamicGraph" sourcefile="DynamicGraph.java" sourcepath="org/testng/internal/DynamicGraph.java">
        <Message>In DynamicGraph.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.DynamicGraph.visualisers</Message>
    </Field>
    <LocalVariable name="listener" register="1" pc="2" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named listener</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.internal.DynamicGraph" primary="true" start="41" end="41" startBytecode="2" endBytecode="2" sourcefile="DynamicGraph.java" sourcepath="org/testng/internal/DynamicGraph.java">
      <Message>At DynamicGraph.java:[line 41]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="BC_UNCONFIRMED_CAST_OF_RETURN_VALUE" priority="3" rank="20" abbrev="BC" category="STYLE" instanceHash="6c6c708e7cfc3ac57e566ea6776faea2" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Unchecked/unconfirmed cast of return value from method</ShortMessage>
    <LongMessage>Unchecked/unconfirmed cast from java.util.Collection to java.util.List of return value in org.testng.internal.DynamicGraphHelper.createClassDependencies(ITestNGMethod[], XmlTest)</LongMessage>
    <Class classname="org.testng.internal.DynamicGraphHelper" primary="true">
      <SourceLine classname="org.testng.internal.DynamicGraphHelper" start="23" end="197" sourcefile="DynamicGraphHelper.java" sourcepath="org/testng/internal/DynamicGraphHelper.java">
        <Message>At DynamicGraphHelper.java:[lines 23-197]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.DynamicGraphHelper</Message>
    </Class>
    <Method classname="org.testng.internal.DynamicGraphHelper" name="createClassDependencies" signature="([Lorg/testng/ITestNGMethod;Lorg/testng/xml/XmlTest;)Lorg/testng/collections/ListMultiMap;" isStatic="true" primary="true">
      <SourceLine classname="org.testng.internal.DynamicGraphHelper" start="114" end="167" startBytecode="0" endBytecode="164" sourcefile="DynamicGraphHelper.java" sourcepath="org/testng/internal/DynamicGraphHelper.java"/>
      <Message>In method org.testng.internal.DynamicGraphHelper.createClassDependencies(ITestNGMethod[], XmlTest)</Message>
    </Method>
    <Type descriptor="Ljava/util/Collection;" role="TYPE_FOUND">
      <SourceLine classname="java.util.Collection" start="413" end="764" sourcefile="Collection.java" sourcepath="java/util/Collection.java">
        <Message>At Collection.java:[lines 413-764]</Message>
      </SourceLine>
      <Message>Actual type java.util.Collection</Message>
    </Type>
    <Type descriptor="Ljava/util/List;" role="TYPE_EXPECTED">
      <SourceLine classname="java.util.List" start="441" end="1068" sourcefile="List.java" sourcepath="java/util/List.java">
        <Message>At List.java:[lines 441-1068]</Message>
      </SourceLine>
      <Message>Expected java.util.List</Message>
    </Type>
    <SourceLine classname="org.testng.internal.DynamicGraphHelper" primary="true" start="160" end="160" startBytecode="365" endBytecode="365" sourcefile="DynamicGraphHelper.java" sourcepath="org/testng/internal/DynamicGraphHelper.java">
      <Message>At DynamicGraphHelper.java:[line 160]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="BC_UNCONFIRMED_CAST_OF_RETURN_VALUE" priority="3" rank="20" abbrev="BC" category="STYLE" instanceHash="de4e64cb8a35921751572dabce9fe017" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Unchecked/unconfirmed cast of return value from method</ShortMessage>
    <LongMessage>Unchecked/unconfirmed cast from java.util.Collection to java.util.List of return value in org.testng.internal.DynamicGraphHelper.createInstanceDependencies(ITestNGMethod[])</LongMessage>
    <Class classname="org.testng.internal.DynamicGraphHelper" primary="true">
      <SourceLine classname="org.testng.internal.DynamicGraphHelper" start="23" end="197" sourcefile="DynamicGraphHelper.java" sourcepath="org/testng/internal/DynamicGraphHelper.java">
        <Message>At DynamicGraphHelper.java:[lines 23-197]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.DynamicGraphHelper</Message>
    </Class>
    <Method classname="org.testng.internal.DynamicGraphHelper" name="createInstanceDependencies" signature="([Lorg/testng/ITestNGMethod;)Lorg/testng/collections/ListMultiMap;" isStatic="true" primary="true">
      <SourceLine classname="org.testng.internal.DynamicGraphHelper" start="172" end="197" startBytecode="0" endBytecode="89" sourcefile="DynamicGraphHelper.java" sourcepath="org/testng/internal/DynamicGraphHelper.java"/>
      <Message>In method org.testng.internal.DynamicGraphHelper.createInstanceDependencies(ITestNGMethod[])</Message>
    </Method>
    <Type descriptor="Ljava/util/Collection;" role="TYPE_FOUND">
      <SourceLine classname="java.util.Collection" start="413" end="764" sourcefile="Collection.java" sourcepath="java/util/Collection.java">
        <Message>At Collection.java:[lines 413-764]</Message>
      </SourceLine>
      <Message>Actual type java.util.Collection</Message>
    </Type>
    <Type descriptor="Ljava/util/List;" role="TYPE_EXPECTED">
      <SourceLine classname="java.util.List" start="441" end="1068" sourcefile="List.java" sourcepath="java/util/List.java">
        <Message>At List.java:[lines 441-1068]</Message>
      </SourceLine>
      <Message>Expected java.util.List</Message>
    </Type>
    <SourceLine classname="org.testng.internal.DynamicGraphHelper" primary="true" start="183" end="183" startBytecode="103" endBytecode="103" sourcefile="DynamicGraphHelper.java" sourcepath="org/testng/internal/DynamicGraphHelper.java">
      <Message>At DynamicGraphHelper.java:[line 183]</Message>
    </SourceLine>
    <SourceLine classname="org.testng.internal.DynamicGraphHelper" start="185" end="185" startBytecode="123" endBytecode="123" sourcefile="DynamicGraphHelper.java" sourcepath="org/testng/internal/DynamicGraphHelper.java" role="SOURCE_LINE_ANOTHER_INSTANCE">
      <Message>Another occurrence at DynamicGraphHelper.java:[line 185]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE" priority="2" rank="18" abbrev="RCN" category="STYLE" instanceHash="ae6b5a16eaa132c13a96d8d528ce7321" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="476">
    <ShortMessage>Redundant nullcheck of value known to be non-null</ShortMessage>
    <LongMessage>Redundant nullcheck of dg, which is known to be non-null in org.testng.internal.DynamicGraphHelper.createDynamicGraph(ITestNGMethod[], XmlTest)</LongMessage>
    <Class classname="org.testng.internal.DynamicGraphHelper" primary="true">
      <SourceLine classname="org.testng.internal.DynamicGraphHelper" start="23" end="197" sourcefile="DynamicGraphHelper.java" sourcepath="org/testng/internal/DynamicGraphHelper.java">
        <Message>At DynamicGraphHelper.java:[lines 23-197]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.DynamicGraphHelper</Message>
    </Class>
    <Method classname="org.testng.internal.DynamicGraphHelper" name="createDynamicGraph" signature="([Lorg/testng/ITestNGMethod;Lorg/testng/xml/XmlTest;)Lorg/testng/internal/DynamicGraph;" isStatic="true" primary="true">
      <SourceLine classname="org.testng.internal.DynamicGraphHelper" start="29" end="101" startBytecode="0" endBytecode="1175" sourcefile="DynamicGraphHelper.java" sourcepath="org/testng/internal/DynamicGraphHelper.java"/>
      <Message>In method org.testng.internal.DynamicGraphHelper.createDynamicGraph(ITestNGMethod[], XmlTest)</Message>
    </Method>
    <LocalVariable name="dg" register="16" pc="192" role="LOCAL_VARIABLE_VALUE_OF">
      <Message>Value loaded from dg</Message>
    </LocalVariable>
    <Method classname="org.testng.DependencyMap" name="getMethodsThatBelongTo" signature="(Ljava/lang/String;Lorg/testng/ITestNGMethod;)Ljava/util/List;" isStatic="false" role="METHOD_RETURN_VALUE_OF">
      <SourceLine classname="org.testng.DependencyMap" start="28" end="46" startBytecode="0" endBytecode="311" sourcefile="DependencyMap.java" sourcepath="org/testng/DependencyMap.java"/>
      <Message>Return value of org.testng.DependencyMap.getMethodsThatBelongTo(String, ITestNGMethod) of type java.util.List</Message>
    </Method>
    <SourceLine classname="org.testng.internal.DynamicGraphHelper" primary="true" start="60" end="60" startBytecode="194" endBytecode="194" sourcefile="DynamicGraphHelper.java" sourcepath="org/testng/internal/DynamicGraphHelper.java" role="SOURCE_REDUNDANT_NULL_CHECK">
      <Message>Redundant null check at DynamicGraphHelper.java:[line 60]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="URF_UNREAD_PUBLIC_OR_PROTECTED_FIELD" priority="3" rank="20" abbrev="UrF" category="STYLE" instanceHash="e90d37903531d10435f62252175b0e56" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Unread public/protected field</ShortMessage>
    <LongMessage>Unread public/protected field: org.testng.internal.ExpectedExceptionsHolder.finder</LongMessage>
    <Class classname="org.testng.internal.ExpectedExceptionsHolder" primary="true">
      <SourceLine classname="org.testng.internal.ExpectedExceptionsHolder" start="19" end="98" sourcefile="ExpectedExceptionsHolder.java" sourcepath="org/testng/internal/ExpectedExceptionsHolder.java">
        <Message>At ExpectedExceptionsHolder.java:[lines 19-98]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.ExpectedExceptionsHolder</Message>
    </Class>
    <Field classname="org.testng.internal.ExpectedExceptionsHolder" name="finder" signature="Lorg/testng/internal/annotations/IAnnotationFinder;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.ExpectedExceptionsHolder" sourcefile="ExpectedExceptionsHolder.java" sourcepath="org/testng/internal/ExpectedExceptionsHolder.java">
        <Message>In ExpectedExceptionsHolder.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.ExpectedExceptionsHolder.finder</Message>
    </Field>
    <SourceLine classname="org.testng.internal.ExpectedExceptionsHolder" primary="true" start="20" end="20" startBytecode="6" endBytecode="6" sourcefile="ExpectedExceptionsHolder.java" sourcepath="org/testng/internal/ExpectedExceptionsHolder.java">
      <Message>At ExpectedExceptionsHolder.java:[line 20]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="URF_UNREAD_PUBLIC_OR_PROTECTED_FIELD" priority="3" rank="20" abbrev="UrF" category="STYLE" instanceHash="9e6dd73b456b7713e560f4ef0ac54367" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Unread public/protected field</ShortMessage>
    <LongMessage>Unread public/protected field: org.testng.internal.ExpectedExceptionsHolder.method</LongMessage>
    <Class classname="org.testng.internal.ExpectedExceptionsHolder" primary="true">
      <SourceLine classname="org.testng.internal.ExpectedExceptionsHolder" start="19" end="98" sourcefile="ExpectedExceptionsHolder.java" sourcepath="org/testng/internal/ExpectedExceptionsHolder.java">
        <Message>At ExpectedExceptionsHolder.java:[lines 19-98]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.ExpectedExceptionsHolder</Message>
    </Class>
    <Field classname="org.testng.internal.ExpectedExceptionsHolder" name="method" signature="Lorg/testng/ITestNGMethod;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.ExpectedExceptionsHolder" sourcefile="ExpectedExceptionsHolder.java" sourcepath="org/testng/internal/ExpectedExceptionsHolder.java">
        <Message>In ExpectedExceptionsHolder.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.ExpectedExceptionsHolder.method</Message>
    </Field>
    <SourceLine classname="org.testng.internal.ExpectedExceptionsHolder" primary="true" start="21" end="21" startBytecode="11" endBytecode="11" sourcefile="ExpectedExceptionsHolder.java" sourcepath="org/testng/internal/ExpectedExceptionsHolder.java">
      <Message>At ExpectedExceptionsHolder.java:[line 21]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="CT_CONSTRUCTOR_THROW" priority="2" rank="16" abbrev="CT" category="BAD_PRACTICE" instanceHash="d70baac4f739ff0b3abace47cd50a32a" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Be wary of letting constructors throw exceptions.</ShortMessage>
    <LongMessage>Exception thrown in class org.testng.internal.FactoryMethod at new org.testng.internal.FactoryMethod(ConstructorOrMethod, Object, IAnnotationFinder, ITestContext, ITestObjectFactory, DataProviderHolder) will leave the constructor. The object under construction remains partially initialized and may be vulnerable to Finalizer attacks.</LongMessage>
    <Class classname="org.testng.internal.FactoryMethod" primary="true">
      <SourceLine classname="org.testng.internal.FactoryMethod" start="32" end="227" sourcefile="FactoryMethod.java" sourcepath="org/testng/internal/FactoryMethod.java">
        <Message>At FactoryMethod.java:[lines 32-227]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.FactoryMethod</Message>
    </Class>
    <Method classname="org.testng.internal.FactoryMethod" name="&lt;init&gt;" signature="(Lorg/testng/internal/ConstructorOrMethod;Ljava/lang/Object;Lorg/testng/internal/annotations/IAnnotationFinder;Lorg/testng/ITestContext;Lorg/testng/ITestObjectFactory;Lorg/testng/DataProviderHolder;)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.FactoryMethod" start="78" end="121" startBytecode="0" endBytecode="758" sourcefile="FactoryMethod.java" sourcepath="org/testng/internal/FactoryMethod.java"/>
      <Message>In method new org.testng.internal.FactoryMethod(ConstructorOrMethod, Object, IAnnotationFinder, ITestContext, ITestObjectFactory, DataProviderHolder)</Message>
    </Method>
    <SourceLine classname="org.testng.internal.FactoryMethod" primary="true" start="92" end="92" startBytecode="168" endBytecode="168" sourcefile="FactoryMethod.java" sourcepath="org/testng/internal/FactoryMethod.java">
      <Message>At FactoryMethod.java:[line 92]</Message>
    </SourceLine>
    <SourceLine classname="org.testng.internal.FactoryMethod" start="92" end="92" startBytecode="168" endBytecode="168" sourcefile="FactoryMethod.java" sourcepath="org/testng/internal/FactoryMethod.java">
      <Message>At FactoryMethod.java:[line 92]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DP_DO_INSIDE_DO_PRIVILEGED" priority="3" rank="20" abbrev="DP" category="MALICIOUS_CODE" instanceHash="c621d47fe87a0c5d187923f17c7ac7d2" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Method invoked that should be only be invoked inside a doPrivileged block</ShortMessage>
    <LongMessage>Invocation of reflect.Method.setAccessible(boolean), which should be invoked from within a doPrivileged block, in new org.testng.internal.FactoryMethod(ConstructorOrMethod, Object, IAnnotationFinder, ITestContext, ITestObjectFactory, DataProviderHolder)</LongMessage>
    <Class classname="org.testng.internal.FactoryMethod" primary="true">
      <SourceLine classname="org.testng.internal.FactoryMethod" start="32" end="227" sourcefile="FactoryMethod.java" sourcepath="org/testng/internal/FactoryMethod.java">
        <Message>At FactoryMethod.java:[lines 32-227]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.FactoryMethod</Message>
    </Class>
    <Method classname="org.testng.internal.FactoryMethod" name="&lt;init&gt;" signature="(Lorg/testng/internal/ConstructorOrMethod;Ljava/lang/Object;Lorg/testng/internal/annotations/IAnnotationFinder;Lorg/testng/ITestContext;Lorg/testng/ITestObjectFactory;Lorg/testng/DataProviderHolder;)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.FactoryMethod" start="78" end="121" startBytecode="0" endBytecode="758" sourcefile="FactoryMethod.java" sourcepath="org/testng/internal/FactoryMethod.java"/>
      <Message>In method new org.testng.internal.FactoryMethod(ConstructorOrMethod, Object, IAnnotationFinder, ITestContext, ITestObjectFactory, DataProviderHolder)</Message>
    </Method>
    <Method classname="java.lang.reflect.Method" name="setAccessible" signature="(Z)V" isStatic="false" role="METHOD_CALLED">
      <SourceLine classname="java.lang.reflect.Method" start="192" end="195" startBytecode="0" endBytecode="93" sourcefile="Method.java" sourcepath="java/lang/reflect/Method.java"/>
      <Message>Called method reflect.Method.setAccessible(boolean)</Message>
    </Method>
    <SourceLine classname="org.testng.internal.FactoryMethod" primary="true" start="106" end="106" startBytecode="269" endBytecode="269" sourcefile="FactoryMethod.java" sourcepath="org/testng/internal/FactoryMethod.java">
      <Message>At FactoryMethod.java:[line 106]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="61f10638c76fb71cbe59c60388280457" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.internal.Graph.getStrictlySortedNodes() may expose internal representation by returning Graph.m_strictlySortedNodes</LongMessage>
    <Class classname="org.testng.internal.Graph" primary="true">
      <SourceLine classname="org.testng.internal.Graph" start="20" end="236" sourcefile="Graph.java" sourcepath="org/testng/internal/Graph.java">
        <Message>At Graph.java:[lines 20-236]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.Graph</Message>
    </Class>
    <Method classname="org.testng.internal.Graph" name="getStrictlySortedNodes" signature="()Ljava/util/List;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.Graph" start="83" end="83" startBytecode="0" endBytecode="64" sourcefile="Graph.java" sourcepath="org/testng/internal/Graph.java"/>
      <Message>In method org.testng.internal.Graph.getStrictlySortedNodes()</Message>
    </Method>
    <Field classname="org.testng.internal.Graph" name="m_strictlySortedNodes" signature="Ljava/util/List;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.Graph" sourcefile="Graph.java" sourcepath="org/testng/internal/Graph.java">
        <Message>In Graph.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.Graph.m_strictlySortedNodes</Message>
    </Field>
    <SourceLine classname="org.testng.internal.Graph" primary="true" start="83" end="83" startBytecode="4" endBytecode="4" sourcefile="Graph.java" sourcepath="org/testng/internal/Graph.java">
      <Message>At Graph.java:[line 83]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="CN_IMPLEMENTS_CLONE_BUT_NOT_CLONEABLE" priority="1" rank="14" abbrev="CN" category="BAD_PRACTICE" instanceHash="8fdec6686545752f618bb189472698cc" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="580">
    <ShortMessage>Class defines clone() but doesn&apos;t implement Cloneable</ShortMessage>
    <LongMessage>org.testng.internal.Graph$Node defines clone() but doesn&apos;t implement Cloneable</LongMessage>
    <Class classname="org.testng.internal.Graph$Node" primary="true">
      <SourceLine classname="org.testng.internal.Graph$Node" start="242" end="310" sourcefile="Graph.java" sourcepath="org/testng/internal/Graph.java">
        <Message>At Graph.java:[lines 242-310]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.Graph$Node</Message>
    </Class>
    <Method classname="org.testng.internal.Graph$Node" name="clone" signature="()Lorg/testng/internal/Graph$Node;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.Graph$Node" start="258" end="262" startBytecode="0" endBytecode="188" sourcefile="Graph.java" sourcepath="org/testng/internal/Graph.java"/>
      <Message>In method org.testng.internal.Graph$Node.clone()</Message>
    </Method>
    <SourceLine classname="org.testng.internal.Graph$Node" start="258" end="262" startBytecode="0" endBytecode="188" sourcefile="Graph.java" sourcepath="org/testng/internal/Graph.java" synthetic="true">
      <Message>At Graph.java:[lines 258-262]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="e8d3e54c228700155dd51959f977d944" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.internal.Graph$Node.getPredecessors() may expose internal representation by returning Graph$Node.m_predecessors</LongMessage>
    <Class classname="org.testng.internal.Graph$Node" primary="true">
      <SourceLine classname="org.testng.internal.Graph$Node" start="242" end="310" sourcefile="Graph.java" sourcepath="org/testng/internal/Graph.java">
        <Message>At Graph.java:[lines 242-310]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.Graph$Node</Message>
    </Class>
    <Method classname="org.testng.internal.Graph$Node" name="getPredecessors" signature="()Ljava/util/Map;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.Graph$Node" start="270" end="270" startBytecode="0" endBytecode="64" sourcefile="Graph.java" sourcepath="org/testng/internal/Graph.java"/>
      <Message>In method org.testng.internal.Graph$Node.getPredecessors()</Message>
    </Method>
    <Field classname="org.testng.internal.Graph$Node" name="m_predecessors" signature="Ljava/util/Map;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.Graph$Node" sourcefile="Graph.java" sourcepath="org/testng/internal/Graph.java">
        <Message>In Graph.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.Graph$Node.m_predecessors</Message>
    </Field>
    <SourceLine classname="org.testng.internal.Graph$Node" primary="true" start="270" end="270" startBytecode="4" endBytecode="4" sourcefile="Graph.java" sourcepath="org/testng/internal/Graph.java">
      <Message>At Graph.java:[line 270]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="414dd81a0e9c13440e7cdd63a319690a" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.internal.GroupConfigMethodArguments.getGroupMethods() may expose internal representation by returning GroupConfigMethodArguments.groupMethods</LongMessage>
    <Class classname="org.testng.internal.GroupConfigMethodArguments" primary="true">
      <SourceLine classname="org.testng.internal.GroupConfigMethodArguments" start="7" end="35" sourcefile="GroupConfigMethodArguments.java" sourcepath="org/testng/internal/GroupConfigMethodArguments.java">
        <Message>At GroupConfigMethodArguments.java:[lines 7-35]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.GroupConfigMethodArguments</Message>
    </Class>
    <Method classname="org.testng.internal.GroupConfigMethodArguments" name="getGroupMethods" signature="()Lorg/testng/internal/ConfigurationGroupMethods;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.GroupConfigMethodArguments" start="19" end="19" startBytecode="0" endBytecode="46" sourcefile="GroupConfigMethodArguments.java" sourcepath="org/testng/internal/GroupConfigMethodArguments.java"/>
      <Message>In method org.testng.internal.GroupConfigMethodArguments.getGroupMethods()</Message>
    </Method>
    <Field classname="org.testng.internal.GroupConfigMethodArguments" name="groupMethods" signature="Lorg/testng/internal/ConfigurationGroupMethods;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.GroupConfigMethodArguments" sourcefile="GroupConfigMethodArguments.java" sourcepath="org/testng/internal/GroupConfigMethodArguments.java">
        <Message>In GroupConfigMethodArguments.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.GroupConfigMethodArguments.groupMethods</Message>
    </Field>
    <SourceLine classname="org.testng.internal.GroupConfigMethodArguments" primary="true" start="19" end="19" startBytecode="4" endBytecode="4" sourcefile="GroupConfigMethodArguments.java" sourcepath="org/testng/internal/GroupConfigMethodArguments.java">
      <Message>At GroupConfigMethodArguments.java:[line 19]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="cf954436a98b5fe0115537c0cdce3b0" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.internal.GroupConfigMethodArguments.getParameters() may expose internal representation by returning Arguments.params</LongMessage>
    <Class classname="org.testng.internal.GroupConfigMethodArguments" primary="true">
      <SourceLine classname="org.testng.internal.GroupConfigMethodArguments" start="7" end="35" sourcefile="GroupConfigMethodArguments.java" sourcepath="org/testng/internal/GroupConfigMethodArguments.java">
        <Message>At GroupConfigMethodArguments.java:[lines 7-35]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.GroupConfigMethodArguments</Message>
    </Class>
    <Method classname="org.testng.internal.GroupConfigMethodArguments" name="getParameters" signature="()Ljava/util/Map;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.GroupConfigMethodArguments" start="27" end="27" startBytecode="0" endBytecode="46" sourcefile="GroupConfigMethodArguments.java" sourcepath="org/testng/internal/GroupConfigMethodArguments.java"/>
      <Message>In method org.testng.internal.GroupConfigMethodArguments.getParameters()</Message>
    </Method>
    <Field classname="org.testng.internal.Arguments" name="params" signature="Ljava/util/Map;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.Arguments" sourcefile="Arguments.java" sourcepath="org/testng/internal/Arguments.java">
        <Message>In Arguments.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.Arguments.params</Message>
    </Field>
    <SourceLine classname="org.testng.internal.GroupConfigMethodArguments" primary="true" start="27" end="27" startBytecode="4" endBytecode="4" sourcefile="GroupConfigMethodArguments.java" sourcepath="org/testng/internal/GroupConfigMethodArguments.java">
      <Message>At GroupConfigMethodArguments.java:[line 27]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="60d7360368270ccf666ba5108379ad85" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>org.testng.internal.GroupConfigMethodArguments$Builder.forTestMethod(ITestNGMethod) may expose internal representation by storing an externally mutable object into GroupConfigMethodArguments$Builder.testMethod</LongMessage>
    <Class classname="org.testng.internal.GroupConfigMethodArguments$Builder" primary="true">
      <SourceLine classname="org.testng.internal.GroupConfigMethodArguments$Builder" start="38" end="66" sourcefile="GroupConfigMethodArguments.java" sourcepath="org/testng/internal/GroupConfigMethodArguments.java">
        <Message>At GroupConfigMethodArguments.java:[lines 38-66]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.GroupConfigMethodArguments$Builder</Message>
    </Class>
    <Method classname="org.testng.internal.GroupConfigMethodArguments$Builder" name="forTestMethod" signature="(Lorg/testng/ITestNGMethod;)Lorg/testng/internal/GroupConfigMethodArguments$Builder;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.GroupConfigMethodArguments$Builder" start="46" end="47" startBytecode="0" endBytecode="62" sourcefile="GroupConfigMethodArguments.java" sourcepath="org/testng/internal/GroupConfigMethodArguments.java"/>
      <Message>In method org.testng.internal.GroupConfigMethodArguments$Builder.forTestMethod(ITestNGMethod)</Message>
    </Method>
    <Field classname="org.testng.internal.GroupConfigMethodArguments$Builder" name="testMethod" signature="Lorg/testng/ITestNGMethod;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.GroupConfigMethodArguments$Builder" sourcefile="GroupConfigMethodArguments.java" sourcepath="org/testng/internal/GroupConfigMethodArguments.java">
        <Message>In GroupConfigMethodArguments.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.GroupConfigMethodArguments$Builder.testMethod</Message>
    </Field>
    <LocalVariable name="testMethod" register="1" pc="2" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named testMethod</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.internal.GroupConfigMethodArguments$Builder" primary="true" start="46" end="46" startBytecode="2" endBytecode="2" sourcefile="GroupConfigMethodArguments.java" sourcepath="org/testng/internal/GroupConfigMethodArguments.java">
      <Message>At GroupConfigMethodArguments.java:[line 46]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="ff404c2c8d2f928563c6b85a6ec64836" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>org.testng.internal.GroupConfigMethodArguments$Builder.withGroupConfigMethods(ConfigurationGroupMethods) may expose internal representation by storing an externally mutable object into GroupConfigMethodArguments$Builder.groupMethods</LongMessage>
    <Class classname="org.testng.internal.GroupConfigMethodArguments$Builder" primary="true">
      <SourceLine classname="org.testng.internal.GroupConfigMethodArguments$Builder" start="38" end="66" sourcefile="GroupConfigMethodArguments.java" sourcepath="org/testng/internal/GroupConfigMethodArguments.java">
        <Message>At GroupConfigMethodArguments.java:[lines 38-66]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.GroupConfigMethodArguments$Builder</Message>
    </Class>
    <Method classname="org.testng.internal.GroupConfigMethodArguments$Builder" name="withGroupConfigMethods" signature="(Lorg/testng/internal/ConfigurationGroupMethods;)Lorg/testng/internal/GroupConfigMethodArguments$Builder;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.GroupConfigMethodArguments$Builder" start="51" end="52" startBytecode="0" endBytecode="62" sourcefile="GroupConfigMethodArguments.java" sourcepath="org/testng/internal/GroupConfigMethodArguments.java"/>
      <Message>In method org.testng.internal.GroupConfigMethodArguments$Builder.withGroupConfigMethods(ConfigurationGroupMethods)</Message>
    </Method>
    <Field classname="org.testng.internal.GroupConfigMethodArguments$Builder" name="groupMethods" signature="Lorg/testng/internal/ConfigurationGroupMethods;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.GroupConfigMethodArguments$Builder" sourcefile="GroupConfigMethodArguments.java" sourcepath="org/testng/internal/GroupConfigMethodArguments.java">
        <Message>In GroupConfigMethodArguments.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.GroupConfigMethodArguments$Builder.groupMethods</Message>
    </Field>
    <LocalVariable name="groupMethods" register="1" pc="2" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named groupMethods</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.internal.GroupConfigMethodArguments$Builder" primary="true" start="51" end="51" startBytecode="2" endBytecode="2" sourcefile="GroupConfigMethodArguments.java" sourcepath="org/testng/internal/GroupConfigMethodArguments.java">
      <Message>At GroupConfigMethodArguments.java:[line 51]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="2c7b005d06146f31f0eb9d6e7e5f5456" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>org.testng.internal.GroupConfigMethodArguments$Builder.withParameters(Map) may expose internal representation by storing an externally mutable object into GroupConfigMethodArguments$Builder.params</LongMessage>
    <Class classname="org.testng.internal.GroupConfigMethodArguments$Builder" primary="true">
      <SourceLine classname="org.testng.internal.GroupConfigMethodArguments$Builder" start="38" end="66" sourcefile="GroupConfigMethodArguments.java" sourcepath="org/testng/internal/GroupConfigMethodArguments.java">
        <Message>At GroupConfigMethodArguments.java:[lines 38-66]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.GroupConfigMethodArguments$Builder</Message>
    </Class>
    <Method classname="org.testng.internal.GroupConfigMethodArguments$Builder" name="withParameters" signature="(Ljava/util/Map;)Lorg/testng/internal/GroupConfigMethodArguments$Builder;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.GroupConfigMethodArguments$Builder" start="56" end="57" startBytecode="0" endBytecode="80" sourcefile="GroupConfigMethodArguments.java" sourcepath="org/testng/internal/GroupConfigMethodArguments.java"/>
      <Message>In method org.testng.internal.GroupConfigMethodArguments$Builder.withParameters(Map)</Message>
    </Method>
    <Field classname="org.testng.internal.GroupConfigMethodArguments$Builder" name="params" signature="Ljava/util/Map;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.GroupConfigMethodArguments$Builder" sourcefile="GroupConfigMethodArguments.java" sourcepath="org/testng/internal/GroupConfigMethodArguments.java">
        <Message>In GroupConfigMethodArguments.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.GroupConfigMethodArguments$Builder.params</Message>
    </Field>
    <LocalVariable name="params" register="1" pc="2" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named params</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.internal.GroupConfigMethodArguments$Builder" primary="true" start="56" end="56" startBytecode="2" endBytecode="2" sourcefile="GroupConfigMethodArguments.java" sourcepath="org/testng/internal/GroupConfigMethodArguments.java">
      <Message>At GroupConfigMethodArguments.java:[line 56]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DCN_NULLPOINTER_EXCEPTION" priority="2" rank="17" abbrev="DCN" category="STYLE" instanceHash="8948ea03e95d1b1a6f2d9eaa201f4a64" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>NullPointerException caught</ShortMessage>
    <LongMessage>Do not catch NullPointerException like in org.testng.internal.InstanceCreator.newInstance(Class)</LongMessage>
    <Class classname="org.testng.internal.InstanceCreator" primary="true">
      <SourceLine classname="org.testng.internal.InstanceCreator" start="24" end="209" sourcefile="InstanceCreator.java" sourcepath="org/testng/internal/InstanceCreator.java">
        <Message>At InstanceCreator.java:[lines 24-209]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.InstanceCreator</Message>
    </Class>
    <Method classname="org.testng.internal.InstanceCreator" name="newInstance" signature="(Ljava/lang/Class;)Ljava/lang/Object;" isStatic="true" primary="true">
      <SourceLine classname="org.testng.internal.InstanceCreator" start="30" end="36" startBytecode="0" endBytecode="166" sourcefile="InstanceCreator.java" sourcepath="org/testng/internal/InstanceCreator.java"/>
      <Message>In method org.testng.internal.InstanceCreator.newInstance(Class)</Message>
    </Method>
    <SourceLine classname="org.testng.internal.InstanceCreator" primary="true" start="31" end="31" startBytecode="5" endBytecode="5" sourcefile="InstanceCreator.java" sourcepath="org/testng/internal/InstanceCreator.java">
      <Message>At InstanceCreator.java:[line 31]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="REFLC_REFLECTION_MAY_INCREASE_ACCESSIBILITY_OF_CLASS" priority="2" rank="18" abbrev="REFLC" category="MALICIOUS_CODE" instanceHash="7e5e5076912f41faff0886fd7ed40aeb" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Public method uses reflection to create a class it gets in its parameter which could increase the accessibility of any class</ShortMessage>
    <LongMessage>Public method org.testng.internal.InstanceCreator.newInstance(Class) uses reflection to create a class it gets in its parameter which could increase the accessibility of any class</LongMessage>
    <Class classname="org.testng.internal.InstanceCreator" primary="true">
      <SourceLine classname="org.testng.internal.InstanceCreator" start="24" end="209" sourcefile="InstanceCreator.java" sourcepath="org/testng/internal/InstanceCreator.java">
        <Message>At InstanceCreator.java:[lines 24-209]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.InstanceCreator</Message>
    </Class>
    <Method classname="org.testng.internal.InstanceCreator" name="newInstance" signature="(Ljava/lang/Class;)Ljava/lang/Object;" isStatic="true" primary="true">
      <SourceLine classname="org.testng.internal.InstanceCreator" start="30" end="36" startBytecode="0" endBytecode="166" sourcefile="InstanceCreator.java" sourcepath="org/testng/internal/InstanceCreator.java"/>
      <Message>In method org.testng.internal.InstanceCreator.newInstance(Class)</Message>
    </Method>
    <SourceLine classname="org.testng.internal.InstanceCreator" primary="true" start="30" end="30" startBytecode="1" endBytecode="1" sourcefile="InstanceCreator.java" sourcepath="org/testng/internal/InstanceCreator.java">
      <Message>At InstanceCreator.java:[line 30]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="2220a27ed7d790bf0cfb2926a2e941c" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>new org.testng.internal.InvokeMethodRunnable(ITestNGMethod, Object, Object[], IHookable, ITestResult) may expose internal representation by storing an externally mutable object into InvokeMethodRunnable.m_method</LongMessage>
    <Class classname="org.testng.internal.InvokeMethodRunnable" primary="true">
      <SourceLine classname="org.testng.internal.InvokeMethodRunnable" start="11" end="75" sourcefile="InvokeMethodRunnable.java" sourcepath="org/testng/internal/InvokeMethodRunnable.java">
        <Message>At InvokeMethodRunnable.java:[lines 11-75]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.InvokeMethodRunnable</Message>
    </Class>
    <Method classname="org.testng.internal.InvokeMethodRunnable" name="&lt;init&gt;" signature="(Lorg/testng/ITestNGMethod;Ljava/lang/Object;[Ljava/lang/Object;Lorg/testng/IHookable;Lorg/testng/ITestResult;)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.InvokeMethodRunnable" start="23" end="29" startBytecode="0" endBytecode="147" sourcefile="InvokeMethodRunnable.java" sourcepath="org/testng/internal/InvokeMethodRunnable.java"/>
      <Message>In method new org.testng.internal.InvokeMethodRunnable(ITestNGMethod, Object, Object[], IHookable, ITestResult)</Message>
    </Method>
    <Field classname="org.testng.internal.InvokeMethodRunnable" name="m_method" signature="Lorg/testng/ITestNGMethod;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.InvokeMethodRunnable" sourcefile="InvokeMethodRunnable.java" sourcepath="org/testng/internal/InvokeMethodRunnable.java">
        <Message>In InvokeMethodRunnable.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.InvokeMethodRunnable.m_method</Message>
    </Field>
    <LocalVariable name="thisMethod" register="1" pc="6" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named thisMethod</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.internal.InvokeMethodRunnable" primary="true" start="24" end="24" startBytecode="6" endBytecode="6" sourcefile="InvokeMethodRunnable.java" sourcepath="org/testng/internal/InvokeMethodRunnable.java">
      <Message>At InvokeMethodRunnable.java:[line 24]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="5384a01f95f30a7267ee528fa57a4422" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>new org.testng.internal.InvokeMethodRunnable(ITestNGMethod, Object, Object[], IHookable, ITestResult) may expose internal representation by storing an externally mutable object into InvokeMethodRunnable.m_parameters</LongMessage>
    <Class classname="org.testng.internal.InvokeMethodRunnable" primary="true">
      <SourceLine classname="org.testng.internal.InvokeMethodRunnable" start="11" end="75" sourcefile="InvokeMethodRunnable.java" sourcepath="org/testng/internal/InvokeMethodRunnable.java">
        <Message>At InvokeMethodRunnable.java:[lines 11-75]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.InvokeMethodRunnable</Message>
    </Class>
    <Method classname="org.testng.internal.InvokeMethodRunnable" name="&lt;init&gt;" signature="(Lorg/testng/ITestNGMethod;Ljava/lang/Object;[Ljava/lang/Object;Lorg/testng/IHookable;Lorg/testng/ITestResult;)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.InvokeMethodRunnable" start="23" end="29" startBytecode="0" endBytecode="147" sourcefile="InvokeMethodRunnable.java" sourcepath="org/testng/internal/InvokeMethodRunnable.java"/>
      <Message>In method new org.testng.internal.InvokeMethodRunnable(ITestNGMethod, Object, Object[], IHookable, ITestResult)</Message>
    </Method>
    <Field classname="org.testng.internal.InvokeMethodRunnable" name="m_parameters" signature="[Ljava/lang/Object;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.InvokeMethodRunnable" sourcefile="InvokeMethodRunnable.java" sourcepath="org/testng/internal/InvokeMethodRunnable.java">
        <Message>In InvokeMethodRunnable.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.InvokeMethodRunnable.m_parameters</Message>
    </Field>
    <LocalVariable name="parameters" register="3" pc="16" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named parameters</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.internal.InvokeMethodRunnable" primary="true" start="26" end="26" startBytecode="16" endBytecode="16" sourcefile="InvokeMethodRunnable.java" sourcepath="org/testng/internal/InvokeMethodRunnable.java">
      <Message>At InvokeMethodRunnable.java:[line 26]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="e5c514ce723fc09894934485dcebfc40" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>new org.testng.internal.InvokeMethodRunnable(ITestNGMethod, Object, Object[], IHookable, ITestResult) may expose internal representation by storing an externally mutable object into InvokeMethodRunnable.m_testResult</LongMessage>
    <Class classname="org.testng.internal.InvokeMethodRunnable" primary="true">
      <SourceLine classname="org.testng.internal.InvokeMethodRunnable" start="11" end="75" sourcefile="InvokeMethodRunnable.java" sourcepath="org/testng/internal/InvokeMethodRunnable.java">
        <Message>At InvokeMethodRunnable.java:[lines 11-75]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.InvokeMethodRunnable</Message>
    </Class>
    <Method classname="org.testng.internal.InvokeMethodRunnable" name="&lt;init&gt;" signature="(Lorg/testng/ITestNGMethod;Ljava/lang/Object;[Ljava/lang/Object;Lorg/testng/IHookable;Lorg/testng/ITestResult;)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.InvokeMethodRunnable" start="23" end="29" startBytecode="0" endBytecode="147" sourcefile="InvokeMethodRunnable.java" sourcepath="org/testng/internal/InvokeMethodRunnable.java"/>
      <Message>In method new org.testng.internal.InvokeMethodRunnable(ITestNGMethod, Object, Object[], IHookable, ITestResult)</Message>
    </Method>
    <Field classname="org.testng.internal.InvokeMethodRunnable" name="m_testResult" signature="Lorg/testng/ITestResult;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.InvokeMethodRunnable" sourcefile="InvokeMethodRunnable.java" sourcepath="org/testng/internal/InvokeMethodRunnable.java">
        <Message>In InvokeMethodRunnable.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.InvokeMethodRunnable.m_testResult</Message>
    </Field>
    <LocalVariable name="testResult" register="5" pc="28" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named testResult</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.internal.InvokeMethodRunnable" primary="true" start="28" end="28" startBytecode="28" endBytecode="28" sourcefile="InvokeMethodRunnable.java" sourcepath="org/testng/internal/InvokeMethodRunnable.java">
      <Message>At InvokeMethodRunnable.java:[line 28]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="e063cf33d91b90458eaed3e8019e551d" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.internal.InvokedMethod.getTestMethod() may expose internal representation by returning InvokedMethod.m_testMethod</LongMessage>
    <Class classname="org.testng.internal.InvokedMethod" primary="true">
      <SourceLine classname="org.testng.internal.InvokedMethod" start="14" end="66" sourcefile="InvokedMethod.java" sourcepath="org/testng/internal/InvokedMethod.java">
        <Message>At InvokedMethod.java:[lines 14-66]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.InvokedMethod</Message>
    </Class>
    <Method classname="org.testng.internal.InvokedMethod" name="getTestMethod" signature="()Lorg/testng/ITestNGMethod;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.InvokedMethod" start="53" end="53" startBytecode="0" endBytecode="46" sourcefile="InvokedMethod.java" sourcepath="org/testng/internal/InvokedMethod.java"/>
      <Message>In method org.testng.internal.InvokedMethod.getTestMethod()</Message>
    </Method>
    <Field classname="org.testng.internal.InvokedMethod" name="m_testMethod" signature="Lorg/testng/ITestNGMethod;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.InvokedMethod" sourcefile="InvokedMethod.java" sourcepath="org/testng/internal/InvokedMethod.java">
        <Message>In InvokedMethod.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.InvokedMethod.m_testMethod</Message>
    </Field>
    <SourceLine classname="org.testng.internal.InvokedMethod" primary="true" start="53" end="53" startBytecode="4" endBytecode="4" sourcefile="InvokedMethod.java" sourcepath="org/testng/internal/InvokedMethod.java">
      <Message>At InvokedMethod.java:[line 53]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="10794892daeff22ecfcc6847481d382c" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.internal.InvokedMethod.getTestResult() may expose internal representation by returning InvokedMethod.m_testResult</LongMessage>
    <Class classname="org.testng.internal.InvokedMethod" primary="true">
      <SourceLine classname="org.testng.internal.InvokedMethod" start="14" end="66" sourcefile="InvokedMethod.java" sourcepath="org/testng/internal/InvokedMethod.java">
        <Message>At InvokedMethod.java:[lines 14-66]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.InvokedMethod</Message>
    </Class>
    <Method classname="org.testng.internal.InvokedMethod" name="getTestResult" signature="()Lorg/testng/ITestResult;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.InvokedMethod" start="66" end="66" startBytecode="0" endBytecode="46" sourcefile="InvokedMethod.java" sourcepath="org/testng/internal/InvokedMethod.java"/>
      <Message>In method org.testng.internal.InvokedMethod.getTestResult()</Message>
    </Method>
    <Field classname="org.testng.internal.InvokedMethod" name="m_testResult" signature="Lorg/testng/ITestResult;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.InvokedMethod" sourcefile="InvokedMethod.java" sourcepath="org/testng/internal/InvokedMethod.java">
        <Message>In InvokedMethod.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.InvokedMethod.m_testResult</Message>
    </Field>
    <SourceLine classname="org.testng.internal.InvokedMethod" primary="true" start="66" end="66" startBytecode="4" endBytecode="4" sourcefile="InvokedMethod.java" sourcepath="org/testng/internal/InvokedMethod.java">
      <Message>At InvokedMethod.java:[line 66]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="72a385ed9afceba5608c0096a45be585" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>new org.testng.internal.InvokedMethod(Object, ITestNGMethod, long, ITestResult) may expose internal representation by storing an externally mutable object into InvokedMethod.m_testMethod</LongMessage>
    <Class classname="org.testng.internal.InvokedMethod" primary="true">
      <SourceLine classname="org.testng.internal.InvokedMethod" start="14" end="66" sourcefile="InvokedMethod.java" sourcepath="org/testng/internal/InvokedMethod.java">
        <Message>At InvokedMethod.java:[lines 14-66]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.InvokedMethod</Message>
    </Class>
    <Method classname="org.testng.internal.InvokedMethod" name="&lt;init&gt;" signature="(Ljava/lang/Object;Lorg/testng/ITestNGMethod;JLorg/testng/ITestResult;)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.InvokedMethod" start="14" end="19" startBytecode="0" endBytecode="127" sourcefile="InvokedMethod.java" sourcepath="org/testng/internal/InvokedMethod.java"/>
      <Message>In method new org.testng.internal.InvokedMethod(Object, ITestNGMethod, long, ITestResult)</Message>
    </Method>
    <Field classname="org.testng.internal.InvokedMethod" name="m_testMethod" signature="Lorg/testng/ITestNGMethod;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.InvokedMethod" sourcefile="InvokedMethod.java" sourcepath="org/testng/internal/InvokedMethod.java">
        <Message>In InvokedMethod.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.InvokedMethod.m_testMethod</Message>
    </Field>
    <LocalVariable name="method" register="2" pc="11" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named method</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.internal.InvokedMethod" primary="true" start="16" end="16" startBytecode="11" endBytecode="11" sourcefile="InvokedMethod.java" sourcepath="org/testng/internal/InvokedMethod.java">
      <Message>At InvokedMethod.java:[line 16]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="396576143ba50b351692e653a89857fb" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>new org.testng.internal.InvokedMethod(Object, ITestNGMethod, long, ITestResult) may expose internal representation by storing an externally mutable object into InvokedMethod.m_testResult</LongMessage>
    <Class classname="org.testng.internal.InvokedMethod" primary="true">
      <SourceLine classname="org.testng.internal.InvokedMethod" start="14" end="66" sourcefile="InvokedMethod.java" sourcepath="org/testng/internal/InvokedMethod.java">
        <Message>At InvokedMethod.java:[lines 14-66]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.InvokedMethod</Message>
    </Class>
    <Method classname="org.testng.internal.InvokedMethod" name="&lt;init&gt;" signature="(Ljava/lang/Object;Lorg/testng/ITestNGMethod;JLorg/testng/ITestResult;)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.InvokedMethod" start="14" end="19" startBytecode="0" endBytecode="127" sourcefile="InvokedMethod.java" sourcepath="org/testng/internal/InvokedMethod.java"/>
      <Message>In method new org.testng.internal.InvokedMethod(Object, ITestNGMethod, long, ITestResult)</Message>
    </Method>
    <Field classname="org.testng.internal.InvokedMethod" name="m_testResult" signature="Lorg/testng/ITestResult;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.InvokedMethod" sourcefile="InvokedMethod.java" sourcepath="org/testng/internal/InvokedMethod.java">
        <Message>In InvokedMethod.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.InvokedMethod.m_testResult</Message>
    </Field>
    <LocalVariable name="testResult" register="5" pc="22" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named testResult</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.internal.InvokedMethod" primary="true" start="18" end="18" startBytecode="22" endBytecode="22" sourcefile="InvokedMethod.java" sourcepath="org/testng/internal/InvokedMethod.java">
      <Message>At InvokedMethod.java:[line 18]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="e2fc6bd21cef7f0d12f71a11f0765f88" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.internal.Invoker.getConfigInvoker() may expose internal representation by returning Invoker.m_configInvoker</LongMessage>
    <Class classname="org.testng.internal.Invoker" primary="true">
      <SourceLine classname="org.testng.internal.Invoker" start="22" end="52" sourcefile="Invoker.java" sourcepath="org/testng/internal/Invoker.java">
        <Message>At Invoker.java:[lines 22-52]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.Invoker</Message>
    </Class>
    <Method classname="org.testng.internal.Invoker" name="getConfigInvoker" signature="()Lorg/testng/internal/ConfigInvoker;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.Invoker" start="48" end="48" startBytecode="0" endBytecode="46" sourcefile="Invoker.java" sourcepath="org/testng/internal/Invoker.java"/>
      <Message>In method org.testng.internal.Invoker.getConfigInvoker()</Message>
    </Method>
    <Field classname="org.testng.internal.Invoker" name="m_configInvoker" signature="Lorg/testng/internal/ConfigInvoker;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.Invoker" sourcefile="Invoker.java" sourcepath="org/testng/internal/Invoker.java">
        <Message>In Invoker.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.Invoker.m_configInvoker</Message>
    </Field>
    <SourceLine classname="org.testng.internal.Invoker" primary="true" start="48" end="48" startBytecode="4" endBytecode="4" sourcefile="Invoker.java" sourcepath="org/testng/internal/Invoker.java">
      <Message>At Invoker.java:[line 48]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="bbe09ee37b567e408b6ed16e89216192" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.internal.MethodArguments.getParameterValues() may expose internal representation by returning MethodArguments.parameterValues</LongMessage>
    <Class classname="org.testng.internal.MethodArguments" primary="true">
      <SourceLine classname="org.testng.internal.MethodArguments" start="13" end="18" sourcefile="MethodArguments.java" sourcepath="org/testng/internal/MethodArguments.java">
        <Message>At MethodArguments.java:[lines 13-18]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.MethodArguments</Message>
    </Class>
    <Method classname="org.testng.internal.MethodArguments" name="getParameterValues" signature="()[Ljava/lang/Object;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.MethodArguments" start="18" end="18" startBytecode="0" endBytecode="46" sourcefile="MethodArguments.java" sourcepath="org/testng/internal/MethodArguments.java"/>
      <Message>In method org.testng.internal.MethodArguments.getParameterValues()</Message>
    </Method>
    <Field classname="org.testng.internal.MethodArguments" name="parameterValues" signature="[Ljava/lang/Object;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.MethodArguments" sourcefile="MethodArguments.java" sourcepath="org/testng/internal/MethodArguments.java">
        <Message>In MethodArguments.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.MethodArguments.parameterValues</Message>
    </Field>
    <SourceLine classname="org.testng.internal.MethodArguments" primary="true" start="18" end="18" startBytecode="4" endBytecode="4" sourcefile="MethodArguments.java" sourcepath="org/testng/internal/MethodArguments.java">
      <Message>At MethodArguments.java:[line 18]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DE_MIGHT_IGNORE" priority="3" rank="19" abbrev="DE" category="BAD_PRACTICE" instanceHash="18edea05964b1521e3a2a10ba20209b3" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="391">
    <ShortMessage>Method might ignore exception</ShortMessage>
    <LongMessage>org.testng.internal.MethodHelper.calculateMethodCanonicalName(Method) might ignore java.lang.Exception</LongMessage>
    <Class classname="org.testng.internal.MethodHelper" primary="true">
      <SourceLine classname="org.testng.internal.MethodHelper" start="36" end="489" sourcefile="MethodHelper.java" sourcepath="org/testng/internal/MethodHelper.java">
        <Message>At MethodHelper.java:[lines 36-489]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.MethodHelper</Message>
    </Class>
    <Method classname="org.testng.internal.MethodHelper" name="calculateMethodCanonicalName" signature="(Ljava/lang/reflect/Method;)Ljava/lang/String;" isStatic="true" primary="true">
      <SourceLine classname="org.testng.internal.MethodHelper" start="337" end="360" startBytecode="0" endBytecode="322" sourcefile="MethodHelper.java" sourcepath="org/testng/internal/MethodHelper.java"/>
      <Message>In method org.testng.internal.MethodHelper.calculateMethodCanonicalName(Method)</Message>
    </Method>
    <Class classname="java.lang.Exception" role="CLASS_EXCEPTION">
      <SourceLine classname="java.lang.Exception" start="55" end="124" sourcefile="Exception.java" sourcepath="java/lang/Exception.java">
        <Message>At Exception.java:[lines 55-124]</Message>
      </SourceLine>
      <Message>Exception class java.lang.Exception</Message>
    </Class>
    <SourceLine classname="org.testng.internal.MethodHelper" primary="true" start="352" end="352" startBytecode="89" endBytecode="89" sourcefile="MethodHelper.java" sourcepath="org/testng/internal/MethodHelper.java">
      <Message>At MethodHelper.java:[line 352]</Message>
    </SourceLine>
    <SourceLine classname="org.testng.internal.MethodHelper" primary="true" start="352" end="352" startBytecode="89" endBytecode="89" sourcefile="MethodHelper.java" sourcepath="org/testng/internal/MethodHelper.java">
      <Message>At MethodHelper.java:[line 352]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE" priority="3" rank="20" abbrev="RCN" category="STYLE" instanceHash="72fc48a0c5b8d29f3924875d59b49edd" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="476">
    <ShortMessage>Redundant nullcheck of value known to be non-null</ShortMessage>
    <LongMessage>Redundant nullcheck of Class.getDeclaredMethod(String, Class[]), which is known to be non-null in org.testng.internal.MethodHelper.calculateMethodCanonicalName(Method)</LongMessage>
    <Class classname="org.testng.internal.MethodHelper" primary="true">
      <SourceLine classname="org.testng.internal.MethodHelper" start="36" end="489" sourcefile="MethodHelper.java" sourcepath="org/testng/internal/MethodHelper.java">
        <Message>At MethodHelper.java:[lines 36-489]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.MethodHelper</Message>
    </Class>
    <Method classname="org.testng.internal.MethodHelper" name="calculateMethodCanonicalName" signature="(Ljava/lang/reflect/Method;)Ljava/lang/String;" isStatic="true" primary="true">
      <SourceLine classname="org.testng.internal.MethodHelper" start="337" end="360" startBytecode="0" endBytecode="322" sourcefile="MethodHelper.java" sourcepath="org/testng/internal/MethodHelper.java"/>
      <Message>In method org.testng.internal.MethodHelper.calculateMethodCanonicalName(Method)</Message>
    </Method>
    <Method classname="java.lang.Class" name="getDeclaredMethod" signature="(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;" isStatic="false" role="METHOD_RETURN_VALUE_OF">
      <SourceLine classname="java.lang.Class" start="2667" end="2677" startBytecode="0" endBytecode="220" sourcefile="Class.java" sourcepath="java/lang/Class.java"/>
      <Message>Return value of Class.getDeclaredMethod(String, Class[]) of type java.lang.reflect.Method</Message>
    </Method>
    <SourceLine classname="org.testng.internal.MethodHelper" primary="true" start="348" end="348" startBytecode="75" endBytecode="75" sourcefile="MethodHelper.java" sourcepath="org/testng/internal/MethodHelper.java" role="SOURCE_REDUNDANT_NULL_CHECK">
      <Message>Redundant null check at MethodHelper.java:[line 348]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="REC_CATCH_EXCEPTION" priority="2" rank="17" abbrev="REC" category="STYLE" instanceHash="fc4a61abbf1735c53e39ff4faa6e2f78" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="396">
    <ShortMessage>Exception is caught when Exception is not thrown</ShortMessage>
    <LongMessage>Exception is caught when Exception is not thrown in org.testng.internal.MethodHelper.findMethodByName(ITestNGMethod, String)</LongMessage>
    <Class classname="org.testng.internal.MethodHelper" primary="true">
      <SourceLine classname="org.testng.internal.MethodHelper" start="36" end="489" sourcefile="MethodHelper.java" sourcepath="org/testng/internal/MethodHelper.java">
        <Message>At MethodHelper.java:[lines 36-489]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.MethodHelper</Message>
    </Class>
    <Method classname="org.testng.internal.MethodHelper" name="findMethodByName" signature="(Lorg/testng/ITestNGMethod;Ljava/lang/String;)Ljava/lang/reflect/Method;" isStatic="true" primary="true">
      <SourceLine classname="org.testng.internal.MethodHelper" start="156" end="180" startBytecode="0" endBytecode="430" sourcefile="MethodHelper.java" sourcepath="org/testng/internal/MethodHelper.java"/>
      <Message>In method org.testng.internal.MethodHelper.findMethodByName(ITestNGMethod, String)</Message>
    </Method>
    <SourceLine classname="org.testng.internal.MethodHelper" primary="true" start="176" end="176" startBytecode="113" endBytecode="113" sourcefile="MethodHelper.java" sourcepath="org/testng/internal/MethodHelper.java">
      <Message>At MethodHelper.java:[line 176]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="REC_CATCH_EXCEPTION" priority="3" rank="20" abbrev="REC" category="STYLE" instanceHash="b0ec2e552cedb8cd5efca549d9e1aec4" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="396">
    <ShortMessage>Exception is caught when Exception is not thrown</ShortMessage>
    <LongMessage>Exception is caught when Exception is not thrown in org.testng.internal.MethodHelper.calculateMethodCanonicalName(Method)</LongMessage>
    <Class classname="org.testng.internal.MethodHelper" primary="true">
      <SourceLine classname="org.testng.internal.MethodHelper" start="36" end="489" sourcefile="MethodHelper.java" sourcepath="org/testng/internal/MethodHelper.java">
        <Message>At MethodHelper.java:[lines 36-489]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.MethodHelper</Message>
    </Class>
    <Method classname="org.testng.internal.MethodHelper" name="calculateMethodCanonicalName" signature="(Ljava/lang/reflect/Method;)Ljava/lang/String;" isStatic="true" primary="true">
      <SourceLine classname="org.testng.internal.MethodHelper" start="337" end="360" startBytecode="0" endBytecode="322" sourcefile="MethodHelper.java" sourcepath="org/testng/internal/MethodHelper.java"/>
      <Message>In method org.testng.internal.MethodHelper.calculateMethodCanonicalName(Method)</Message>
    </Method>
    <SourceLine classname="org.testng.internal.MethodHelper" primary="true" start="352" end="352" startBytecode="89" endBytecode="89" sourcefile="MethodHelper.java" sourcepath="org/testng/internal/MethodHelper.java">
      <Message>At MethodHelper.java:[line 352]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="REC_CATCH_EXCEPTION" priority="3" rank="20" abbrev="REC" category="STYLE" instanceHash="e931f393853e6061a80fb2f9250b1759" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="396">
    <ShortMessage>Exception is caught when Exception is not thrown</ShortMessage>
    <LongMessage>Exception is caught when Exception is not thrown in org.testng.internal.MethodInheritance.equalsEffectiveClass(ITestNGMethod, ITestNGMethod)</LongMessage>
    <Class classname="org.testng.internal.MethodInheritance" primary="true">
      <SourceLine classname="org.testng.internal.MethodInheritance" start="12" end="192" sourcefile="MethodInheritance.java" sourcepath="org/testng/internal/MethodInheritance.java">
        <Message>At MethodInheritance.java:[lines 12-192]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.MethodInheritance</Message>
    </Class>
    <Method classname="org.testng.internal.MethodInheritance" name="equalsEffectiveClass" signature="(Lorg/testng/ITestNGMethod;Lorg/testng/ITestNGMethod;)Z" isStatic="true" primary="true">
      <SourceLine classname="org.testng.internal.MethodInheritance" start="173" end="178" startBytecode="0" endBytecode="180" sourcefile="MethodInheritance.java" sourcepath="org/testng/internal/MethodInheritance.java"/>
      <Message>In method org.testng.internal.MethodInheritance.equalsEffectiveClass(ITestNGMethod, ITestNGMethod)</Message>
    </Method>
    <SourceLine classname="org.testng.internal.MethodInheritance" primary="true" start="177" end="177" startBytecode="36" endBytecode="36" sourcefile="MethodInheritance.java" sourcepath="org/testng/internal/MethodInheritance.java">
      <Message>At MethodInheritance.java:[line 177]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="f0f1f3e7451b2c66814f4426dd3eb39a" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.internal.MethodInstance.getMethod() may expose internal representation by returning MethodInstance.m_method</LongMessage>
    <Class classname="org.testng.internal.MethodInstance" primary="true">
      <SourceLine classname="org.testng.internal.MethodInstance" start="16" end="38" sourcefile="MethodInstance.java" sourcepath="org/testng/internal/MethodInstance.java">
        <Message>At MethodInstance.java:[lines 16-38]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.MethodInstance</Message>
    </Class>
    <Method classname="org.testng.internal.MethodInstance" name="getMethod" signature="()Lorg/testng/ITestNGMethod;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.MethodInstance" start="22" end="22" startBytecode="0" endBytecode="46" sourcefile="MethodInstance.java" sourcepath="org/testng/internal/MethodInstance.java"/>
      <Message>In method org.testng.internal.MethodInstance.getMethod()</Message>
    </Method>
    <Field classname="org.testng.internal.MethodInstance" name="m_method" signature="Lorg/testng/ITestNGMethod;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.MethodInstance" sourcefile="MethodInstance.java" sourcepath="org/testng/internal/MethodInstance.java">
        <Message>In MethodInstance.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.MethodInstance.m_method</Message>
    </Field>
    <SourceLine classname="org.testng.internal.MethodInstance" primary="true" start="22" end="22" startBytecode="4" endBytecode="4" sourcefile="MethodInstance.java" sourcepath="org/testng/internal/MethodInstance.java">
      <Message>At MethodInstance.java:[line 22]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="910d41e45c7ad8f701fc82f09fac1bad" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>new org.testng.internal.MethodInstance(ITestNGMethod) may expose internal representation by storing an externally mutable object into MethodInstance.m_method</LongMessage>
    <Class classname="org.testng.internal.MethodInstance" primary="true">
      <SourceLine classname="org.testng.internal.MethodInstance" start="16" end="38" sourcefile="MethodInstance.java" sourcepath="org/testng/internal/MethodInstance.java">
        <Message>At MethodInstance.java:[lines 16-38]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.MethodInstance</Message>
    </Class>
    <Method classname="org.testng.internal.MethodInstance" name="&lt;init&gt;" signature="(Lorg/testng/ITestNGMethod;)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.MethodInstance" start="16" end="18" startBytecode="0" endBytecode="69" sourcefile="MethodInstance.java" sourcepath="org/testng/internal/MethodInstance.java"/>
      <Message>In method new org.testng.internal.MethodInstance(ITestNGMethod)</Message>
    </Method>
    <Field classname="org.testng.internal.MethodInstance" name="m_method" signature="Lorg/testng/ITestNGMethod;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.MethodInstance" sourcefile="MethodInstance.java" sourcepath="org/testng/internal/MethodInstance.java">
        <Message>In MethodInstance.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.MethodInstance.m_method</Message>
    </Field>
    <LocalVariable name="method" register="1" pc="6" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named method</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.internal.MethodInstance" primary="true" start="17" end="17" startBytecode="6" endBytecode="6" sourcefile="MethodInstance.java" sourcepath="org/testng/internal/MethodInstance.java">
      <Message>At MethodInstance.java:[line 17]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DP_DO_INSIDE_DO_PRIVILEGED" priority="3" rank="20" abbrev="DP" category="MALICIOUS_CODE" instanceHash="ac33b3c75c72c223dde8734e87f0000" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Method invoked that should be only be invoked inside a doPrivileged block</ShortMessage>
    <LongMessage>Invocation of reflect.Method.setAccessible(boolean), which should be invoked from within a doPrivileged block, in org.testng.internal.MethodInvocationHelper.invokeMethod(Method, Object, Object[])</LongMessage>
    <Class classname="org.testng.internal.MethodInvocationHelper" primary="true">
      <SourceLine classname="org.testng.internal.MethodInvocationHelper" start="40" end="426" sourcefile="MethodInvocationHelper.java" sourcepath="org/testng/internal/MethodInvocationHelper.java">
        <Message>At MethodInvocationHelper.java:[lines 40-426]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.MethodInvocationHelper</Message>
    </Class>
    <Method classname="org.testng.internal.MethodInvocationHelper" name="invokeMethod" signature="(Ljava/lang/reflect/Method;Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;" isStatic="true" primary="true">
      <SourceLine classname="org.testng.internal.MethodInvocationHelper" start="81" end="132" startBytecode="0" endBytecode="589" sourcefile="MethodInvocationHelper.java" sourcepath="org/testng/internal/MethodInvocationHelper.java"/>
      <Message>In method org.testng.internal.MethodInvocationHelper.invokeMethod(Method, Object, Object[])</Message>
    </Method>
    <Method classname="java.lang.reflect.Method" name="setAccessible" signature="(Z)V" isStatic="false" role="METHOD_CALLED">
      <SourceLine classname="java.lang.reflect.Method" start="192" end="195" startBytecode="0" endBytecode="93" sourcefile="Method.java" sourcepath="java/lang/reflect/Method.java"/>
      <Message>Called method reflect.Method.setAccessible(boolean)</Message>
    </Method>
    <SourceLine classname="org.testng.internal.MethodInvocationHelper" primary="true" start="126" end="126" startBytecode="214" endBytecode="214" sourcefile="MethodInvocationHelper.java" sourcepath="org/testng/internal/MethodInvocationHelper.java">
      <Message>At MethodInvocationHelper.java:[line 126]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="REC_CATCH_EXCEPTION" priority="3" rank="20" abbrev="REC" category="STYLE" instanceHash="98a409343a13546e5346e68c8867e7a9" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="396">
    <ShortMessage>Exception is caught when Exception is not thrown</ShortMessage>
    <LongMessage>Exception is caught when Exception is not thrown in org.testng.internal.MethodInvocationHelper.invokeMethod(Method, Object, Object[])</LongMessage>
    <Class classname="org.testng.internal.MethodInvocationHelper" primary="true">
      <SourceLine classname="org.testng.internal.MethodInvocationHelper" start="40" end="426" sourcefile="MethodInvocationHelper.java" sourcepath="org/testng/internal/MethodInvocationHelper.java">
        <Message>At MethodInvocationHelper.java:[lines 40-426]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.MethodInvocationHelper</Message>
    </Class>
    <Method classname="org.testng.internal.MethodInvocationHelper" name="invokeMethod" signature="(Ljava/lang/reflect/Method;Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;" isStatic="true" primary="true">
      <SourceLine classname="org.testng.internal.MethodInvocationHelper" start="81" end="132" startBytecode="0" endBytecode="589" sourcefile="MethodInvocationHelper.java" sourcepath="org/testng/internal/MethodInvocationHelper.java"/>
      <Message>In method org.testng.internal.MethodInvocationHelper.invokeMethod(Method, Object, Object[])</Message>
    </Method>
    <SourceLine classname="org.testng.internal.MethodInvocationHelper" primary="true" start="95" end="95" startBytecode="58" endBytecode="58" sourcefile="MethodInvocationHelper.java" sourcepath="org/testng/internal/MethodInvocationHelper.java">
      <Message>At MethodInvocationHelper.java:[line 95]</Message>
    </SourceLine>
    <SourceLine classname="org.testng.internal.MethodInvocationHelper" start="104" end="104" startBytecode="88" endBytecode="88" sourcefile="MethodInvocationHelper.java" sourcepath="org/testng/internal/MethodInvocationHelper.java" role="SOURCE_LINE_ANOTHER_INSTANCE">
      <Message>Another occurrence at MethodInvocationHelper.java:[line 104]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="96a72bb38ed623500fa146ef6eb6275f" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.internal.MethodSelectorDescriptor.getMethodSelector() may expose internal representation by returning MethodSelectorDescriptor.m_methodSelector</LongMessage>
    <Class classname="org.testng.internal.MethodSelectorDescriptor" primary="true">
      <SourceLine classname="org.testng.internal.MethodSelectorDescriptor" start="10" end="35" sourcefile="MethodSelectorDescriptor.java" sourcepath="org/testng/internal/MethodSelectorDescriptor.java">
        <Message>At MethodSelectorDescriptor.java:[lines 10-35]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.MethodSelectorDescriptor</Message>
    </Class>
    <Method classname="org.testng.internal.MethodSelectorDescriptor" name="getMethodSelector" signature="()Lorg/testng/IMethodSelector;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.MethodSelectorDescriptor" start="20" end="20" startBytecode="0" endBytecode="46" sourcefile="MethodSelectorDescriptor.java" sourcepath="org/testng/internal/MethodSelectorDescriptor.java"/>
      <Message>In method org.testng.internal.MethodSelectorDescriptor.getMethodSelector()</Message>
    </Method>
    <Field classname="org.testng.internal.MethodSelectorDescriptor" name="m_methodSelector" signature="Lorg/testng/IMethodSelector;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.MethodSelectorDescriptor" sourcefile="MethodSelectorDescriptor.java" sourcepath="org/testng/internal/MethodSelectorDescriptor.java">
        <Message>In MethodSelectorDescriptor.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.MethodSelectorDescriptor.m_methodSelector</Message>
    </Field>
    <SourceLine classname="org.testng.internal.MethodSelectorDescriptor" primary="true" start="20" end="20" startBytecode="4" endBytecode="4" sourcefile="MethodSelectorDescriptor.java" sourcepath="org/testng/internal/MethodSelectorDescriptor.java">
      <Message>At MethodSelectorDescriptor.java:[line 20]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="9cebecb8ac60de6107d1397ee1b5f24f" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>new org.testng.internal.MethodSelectorDescriptor(IMethodSelector, int) may expose internal representation by storing an externally mutable object into MethodSelectorDescriptor.m_methodSelector</LongMessage>
    <Class classname="org.testng.internal.MethodSelectorDescriptor" primary="true">
      <SourceLine classname="org.testng.internal.MethodSelectorDescriptor" start="10" end="35" sourcefile="MethodSelectorDescriptor.java" sourcepath="org/testng/internal/MethodSelectorDescriptor.java">
        <Message>At MethodSelectorDescriptor.java:[lines 10-35]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.MethodSelectorDescriptor</Message>
    </Class>
    <Method classname="org.testng.internal.MethodSelectorDescriptor" name="&lt;init&gt;" signature="(Lorg/testng/IMethodSelector;I)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.MethodSelectorDescriptor" start="23" end="26" startBytecode="0" endBytecode="88" sourcefile="MethodSelectorDescriptor.java" sourcepath="org/testng/internal/MethodSelectorDescriptor.java"/>
      <Message>In method new org.testng.internal.MethodSelectorDescriptor(IMethodSelector, int)</Message>
    </Method>
    <Field classname="org.testng.internal.MethodSelectorDescriptor" name="m_methodSelector" signature="Lorg/testng/IMethodSelector;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.MethodSelectorDescriptor" sourcefile="MethodSelectorDescriptor.java" sourcepath="org/testng/internal/MethodSelectorDescriptor.java">
        <Message>In MethodSelectorDescriptor.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.MethodSelectorDescriptor.m_methodSelector</Message>
    </Field>
    <LocalVariable name="selector" register="1" pc="6" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named selector</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.internal.MethodSelectorDescriptor" primary="true" start="24" end="24" startBytecode="6" endBytecode="6" sourcefile="MethodSelectorDescriptor.java" sourcepath="org/testng/internal/MethodSelectorDescriptor.java">
      <Message>At MethodSelectorDescriptor.java:[line 24]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EQ_COMPARETO_USE_OBJECT_EQUALS" priority="2" rank="16" abbrev="Eq" category="BAD_PRACTICE" instanceHash="d0e67b32b2bda355558e5e664e3cb887" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Class defines compareTo(...) and uses Object.equals()</ShortMessage>
    <LongMessage>org.testng.internal.MethodSelectorDescriptor defines compareTo(MethodSelectorDescriptor) and uses Object.equals()</LongMessage>
    <Class classname="org.testng.internal.MethodSelectorDescriptor" primary="true">
      <SourceLine classname="org.testng.internal.MethodSelectorDescriptor" start="10" end="35" sourcefile="MethodSelectorDescriptor.java" sourcepath="org/testng/internal/MethodSelectorDescriptor.java">
        <Message>At MethodSelectorDescriptor.java:[lines 10-35]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.MethodSelectorDescriptor</Message>
    </Class>
    <Method classname="org.testng.internal.MethodSelectorDescriptor" name="compareTo" signature="(Lorg/testng/internal/MethodSelectorDescriptor;)I" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.MethodSelectorDescriptor" start="30" end="30" startBytecode="0" endBytecode="61" sourcefile="MethodSelectorDescriptor.java" sourcepath="org/testng/internal/MethodSelectorDescriptor.java"/>
      <Message>In method org.testng.internal.MethodSelectorDescriptor.compareTo(MethodSelectorDescriptor)</Message>
    </Method>
    <SourceLine classname="org.testng.internal.MethodSelectorDescriptor" start="30" end="30" startBytecode="0" endBytecode="61" sourcefile="MethodSelectorDescriptor.java" sourcepath="org/testng/internal/MethodSelectorDescriptor.java" synthetic="true">
      <Message>At MethodSelectorDescriptor.java:[line 30]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="2abad0eb15c52b606d80f8874340c221" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.internal.NoOpTestClass.getAfterClassMethods() may expose internal representation by returning NoOpTestClass.m_afterClassMethods</LongMessage>
    <Class classname="org.testng.internal.NoOpTestClass" primary="true">
      <SourceLine classname="org.testng.internal.NoOpTestClass" start="10" end="169" sourcefile="NoOpTestClass.java" sourcepath="org/testng/internal/NoOpTestClass.java">
        <Message>At NoOpTestClass.java:[lines 10-169]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.NoOpTestClass</Message>
    </Class>
    <Method classname="org.testng.internal.NoOpTestClass" name="getAfterClassMethods" signature="()[Lorg/testng/ITestNGMethod;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.NoOpTestClass" start="67" end="67" startBytecode="0" endBytecode="46" sourcefile="NoOpTestClass.java" sourcepath="org/testng/internal/NoOpTestClass.java"/>
      <Message>In method org.testng.internal.NoOpTestClass.getAfterClassMethods()</Message>
    </Method>
    <Field classname="org.testng.internal.NoOpTestClass" name="m_afterClassMethods" signature="[Lorg/testng/ITestNGMethod;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.NoOpTestClass" sourcefile="NoOpTestClass.java" sourcepath="org/testng/internal/NoOpTestClass.java">
        <Message>In NoOpTestClass.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.NoOpTestClass.m_afterClassMethods</Message>
    </Field>
    <SourceLine classname="org.testng.internal.NoOpTestClass" primary="true" start="67" end="67" startBytecode="4" endBytecode="4" sourcefile="NoOpTestClass.java" sourcepath="org/testng/internal/NoOpTestClass.java">
      <Message>At NoOpTestClass.java:[line 67]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="5f20877f18342045fc3a5c39b930619b" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.internal.NoOpTestClass.getAfterGroupsMethods() may expose internal representation by returning NoOpTestClass.m_afterGroupsMethods</LongMessage>
    <Class classname="org.testng.internal.NoOpTestClass" primary="true">
      <SourceLine classname="org.testng.internal.NoOpTestClass" start="10" end="169" sourcefile="NoOpTestClass.java" sourcepath="org/testng/internal/NoOpTestClass.java">
        <Message>At NoOpTestClass.java:[lines 10-169]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.NoOpTestClass</Message>
    </Class>
    <Method classname="org.testng.internal.NoOpTestClass" name="getAfterGroupsMethods" signature="()[Lorg/testng/ITestNGMethod;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.NoOpTestClass" start="123" end="123" startBytecode="0" endBytecode="46" sourcefile="NoOpTestClass.java" sourcepath="org/testng/internal/NoOpTestClass.java"/>
      <Message>In method org.testng.internal.NoOpTestClass.getAfterGroupsMethods()</Message>
    </Method>
    <Field classname="org.testng.internal.NoOpTestClass" name="m_afterGroupsMethods" signature="[Lorg/testng/ITestNGMethod;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.NoOpTestClass" sourcefile="NoOpTestClass.java" sourcepath="org/testng/internal/NoOpTestClass.java">
        <Message>In NoOpTestClass.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.NoOpTestClass.m_afterGroupsMethods</Message>
    </Field>
    <SourceLine classname="org.testng.internal.NoOpTestClass" primary="true" start="123" end="123" startBytecode="4" endBytecode="4" sourcefile="NoOpTestClass.java" sourcepath="org/testng/internal/NoOpTestClass.java">
      <Message>At NoOpTestClass.java:[line 123]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="493a6a33fb8acd964126874058fe3231" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.internal.NoOpTestClass.getAfterSuiteMethods() may expose internal representation by returning NoOpTestClass.m_afterSuiteMethods</LongMessage>
    <Class classname="org.testng.internal.NoOpTestClass" primary="true">
      <SourceLine classname="org.testng.internal.NoOpTestClass" start="10" end="169" sourcefile="NoOpTestClass.java" sourcepath="org/testng/internal/NoOpTestClass.java">
        <Message>At NoOpTestClass.java:[lines 10-169]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.NoOpTestClass</Message>
    </Class>
    <Method classname="org.testng.internal.NoOpTestClass" name="getAfterSuiteMethods" signature="()[Lorg/testng/ITestNGMethod;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.NoOpTestClass" start="101" end="101" startBytecode="0" endBytecode="46" sourcefile="NoOpTestClass.java" sourcepath="org/testng/internal/NoOpTestClass.java"/>
      <Message>In method org.testng.internal.NoOpTestClass.getAfterSuiteMethods()</Message>
    </Method>
    <Field classname="org.testng.internal.NoOpTestClass" name="m_afterSuiteMethods" signature="[Lorg/testng/ITestNGMethod;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.NoOpTestClass" sourcefile="NoOpTestClass.java" sourcepath="org/testng/internal/NoOpTestClass.java">
        <Message>In NoOpTestClass.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.NoOpTestClass.m_afterSuiteMethods</Message>
    </Field>
    <SourceLine classname="org.testng.internal.NoOpTestClass" primary="true" start="101" end="101" startBytecode="4" endBytecode="4" sourcefile="NoOpTestClass.java" sourcepath="org/testng/internal/NoOpTestClass.java">
      <Message>At NoOpTestClass.java:[line 101]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="626a85bc44814b527a753af880b2c513" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.internal.NoOpTestClass.getAfterTestConfigurationMethods() may expose internal representation by returning NoOpTestClass.m_afterTestConfMethods</LongMessage>
    <Class classname="org.testng.internal.NoOpTestClass" primary="true">
      <SourceLine classname="org.testng.internal.NoOpTestClass" start="10" end="169" sourcefile="NoOpTestClass.java" sourcepath="org/testng/internal/NoOpTestClass.java">
        <Message>At NoOpTestClass.java:[lines 10-169]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.NoOpTestClass</Message>
    </Class>
    <Method classname="org.testng.internal.NoOpTestClass" name="getAfterTestConfigurationMethods" signature="()[Lorg/testng/ITestNGMethod;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.NoOpTestClass" start="111" end="111" startBytecode="0" endBytecode="46" sourcefile="NoOpTestClass.java" sourcepath="org/testng/internal/NoOpTestClass.java"/>
      <Message>In method org.testng.internal.NoOpTestClass.getAfterTestConfigurationMethods()</Message>
    </Method>
    <Field classname="org.testng.internal.NoOpTestClass" name="m_afterTestConfMethods" signature="[Lorg/testng/ITestNGMethod;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.NoOpTestClass" sourcefile="NoOpTestClass.java" sourcepath="org/testng/internal/NoOpTestClass.java">
        <Message>In NoOpTestClass.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.NoOpTestClass.m_afterTestConfMethods</Message>
    </Field>
    <SourceLine classname="org.testng.internal.NoOpTestClass" primary="true" start="111" end="111" startBytecode="4" endBytecode="4" sourcefile="NoOpTestClass.java" sourcepath="org/testng/internal/NoOpTestClass.java">
      <Message>At NoOpTestClass.java:[line 111]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="c83cdb3825eabaf17c91dd4830d3d625" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.internal.NoOpTestClass.getAfterTestMethods() may expose internal representation by returning NoOpTestClass.m_afterTestMethods</LongMessage>
    <Class classname="org.testng.internal.NoOpTestClass" primary="true">
      <SourceLine classname="org.testng.internal.NoOpTestClass" start="10" end="169" sourcefile="NoOpTestClass.java" sourcepath="org/testng/internal/NoOpTestClass.java">
        <Message>At NoOpTestClass.java:[lines 10-169]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.NoOpTestClass</Message>
    </Class>
    <Method classname="org.testng.internal.NoOpTestClass" name="getAfterTestMethods" signature="()[Lorg/testng/ITestNGMethod;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.NoOpTestClass" start="73" end="73" startBytecode="0" endBytecode="46" sourcefile="NoOpTestClass.java" sourcepath="org/testng/internal/NoOpTestClass.java"/>
      <Message>In method org.testng.internal.NoOpTestClass.getAfterTestMethods()</Message>
    </Method>
    <Field classname="org.testng.internal.NoOpTestClass" name="m_afterTestMethods" signature="[Lorg/testng/ITestNGMethod;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.NoOpTestClass" sourcefile="NoOpTestClass.java" sourcepath="org/testng/internal/NoOpTestClass.java">
        <Message>In NoOpTestClass.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.NoOpTestClass.m_afterTestMethods</Message>
    </Field>
    <SourceLine classname="org.testng.internal.NoOpTestClass" primary="true" start="73" end="73" startBytecode="4" endBytecode="4" sourcefile="NoOpTestClass.java" sourcepath="org/testng/internal/NoOpTestClass.java">
      <Message>At NoOpTestClass.java:[line 73]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="5d7057e80ad025227d89a82c8ddf90c2" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.internal.NoOpTestClass.getBeforeClassMethods() may expose internal representation by returning NoOpTestClass.m_beforeClassMethods</LongMessage>
    <Class classname="org.testng.internal.NoOpTestClass" primary="true">
      <SourceLine classname="org.testng.internal.NoOpTestClass" start="10" end="169" sourcefile="NoOpTestClass.java" sourcepath="org/testng/internal/NoOpTestClass.java">
        <Message>At NoOpTestClass.java:[lines 10-169]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.NoOpTestClass</Message>
    </Class>
    <Method classname="org.testng.internal.NoOpTestClass" name="getBeforeClassMethods" signature="()[Lorg/testng/ITestNGMethod;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.NoOpTestClass" start="79" end="79" startBytecode="0" endBytecode="46" sourcefile="NoOpTestClass.java" sourcepath="org/testng/internal/NoOpTestClass.java"/>
      <Message>In method org.testng.internal.NoOpTestClass.getBeforeClassMethods()</Message>
    </Method>
    <Field classname="org.testng.internal.NoOpTestClass" name="m_beforeClassMethods" signature="[Lorg/testng/ITestNGMethod;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.NoOpTestClass" sourcefile="NoOpTestClass.java" sourcepath="org/testng/internal/NoOpTestClass.java">
        <Message>In NoOpTestClass.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.NoOpTestClass.m_beforeClassMethods</Message>
    </Field>
    <SourceLine classname="org.testng.internal.NoOpTestClass" primary="true" start="79" end="79" startBytecode="4" endBytecode="4" sourcefile="NoOpTestClass.java" sourcepath="org/testng/internal/NoOpTestClass.java">
      <Message>At NoOpTestClass.java:[line 79]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="73ffbdb46829d1973db2b8cad7590cdf" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.internal.NoOpTestClass.getBeforeGroupsMethods() may expose internal representation by returning NoOpTestClass.m_beforeGroupsMethods</LongMessage>
    <Class classname="org.testng.internal.NoOpTestClass" primary="true">
      <SourceLine classname="org.testng.internal.NoOpTestClass" start="10" end="169" sourcefile="NoOpTestClass.java" sourcepath="org/testng/internal/NoOpTestClass.java">
        <Message>At NoOpTestClass.java:[lines 10-169]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.NoOpTestClass</Message>
    </Class>
    <Method classname="org.testng.internal.NoOpTestClass" name="getBeforeGroupsMethods" signature="()[Lorg/testng/ITestNGMethod;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.NoOpTestClass" start="117" end="117" startBytecode="0" endBytecode="46" sourcefile="NoOpTestClass.java" sourcepath="org/testng/internal/NoOpTestClass.java"/>
      <Message>In method org.testng.internal.NoOpTestClass.getBeforeGroupsMethods()</Message>
    </Method>
    <Field classname="org.testng.internal.NoOpTestClass" name="m_beforeGroupsMethods" signature="[Lorg/testng/ITestNGMethod;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.NoOpTestClass" sourcefile="NoOpTestClass.java" sourcepath="org/testng/internal/NoOpTestClass.java">
        <Message>In NoOpTestClass.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.NoOpTestClass.m_beforeGroupsMethods</Message>
    </Field>
    <SourceLine classname="org.testng.internal.NoOpTestClass" primary="true" start="117" end="117" startBytecode="4" endBytecode="4" sourcefile="NoOpTestClass.java" sourcepath="org/testng/internal/NoOpTestClass.java">
      <Message>At NoOpTestClass.java:[line 117]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="24c06741b082c9e53ad4f71dde799859" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.internal.NoOpTestClass.getBeforeSuiteMethods() may expose internal representation by returning NoOpTestClass.m_beforeSuiteMethods</LongMessage>
    <Class classname="org.testng.internal.NoOpTestClass" primary="true">
      <SourceLine classname="org.testng.internal.NoOpTestClass" start="10" end="169" sourcefile="NoOpTestClass.java" sourcepath="org/testng/internal/NoOpTestClass.java">
        <Message>At NoOpTestClass.java:[lines 10-169]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.NoOpTestClass</Message>
    </Class>
    <Method classname="org.testng.internal.NoOpTestClass" name="getBeforeSuiteMethods" signature="()[Lorg/testng/ITestNGMethod;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.NoOpTestClass" start="96" end="96" startBytecode="0" endBytecode="46" sourcefile="NoOpTestClass.java" sourcepath="org/testng/internal/NoOpTestClass.java"/>
      <Message>In method org.testng.internal.NoOpTestClass.getBeforeSuiteMethods()</Message>
    </Method>
    <Field classname="org.testng.internal.NoOpTestClass" name="m_beforeSuiteMethods" signature="[Lorg/testng/ITestNGMethod;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.NoOpTestClass" sourcefile="NoOpTestClass.java" sourcepath="org/testng/internal/NoOpTestClass.java">
        <Message>In NoOpTestClass.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.NoOpTestClass.m_beforeSuiteMethods</Message>
    </Field>
    <SourceLine classname="org.testng.internal.NoOpTestClass" primary="true" start="96" end="96" startBytecode="4" endBytecode="4" sourcefile="NoOpTestClass.java" sourcepath="org/testng/internal/NoOpTestClass.java">
      <Message>At NoOpTestClass.java:[line 96]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="211a533e0d1a54b87d8aec74dac787fc" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.internal.NoOpTestClass.getBeforeTestConfigurationMethods() may expose internal representation by returning NoOpTestClass.m_beforeTestConfMethods</LongMessage>
    <Class classname="org.testng.internal.NoOpTestClass" primary="true">
      <SourceLine classname="org.testng.internal.NoOpTestClass" start="10" end="169" sourcefile="NoOpTestClass.java" sourcepath="org/testng/internal/NoOpTestClass.java">
        <Message>At NoOpTestClass.java:[lines 10-169]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.NoOpTestClass</Message>
    </Class>
    <Method classname="org.testng.internal.NoOpTestClass" name="getBeforeTestConfigurationMethods" signature="()[Lorg/testng/ITestNGMethod;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.NoOpTestClass" start="106" end="106" startBytecode="0" endBytecode="46" sourcefile="NoOpTestClass.java" sourcepath="org/testng/internal/NoOpTestClass.java"/>
      <Message>In method org.testng.internal.NoOpTestClass.getBeforeTestConfigurationMethods()</Message>
    </Method>
    <Field classname="org.testng.internal.NoOpTestClass" name="m_beforeTestConfMethods" signature="[Lorg/testng/ITestNGMethod;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.NoOpTestClass" sourcefile="NoOpTestClass.java" sourcepath="org/testng/internal/NoOpTestClass.java">
        <Message>In NoOpTestClass.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.NoOpTestClass.m_beforeTestConfMethods</Message>
    </Field>
    <SourceLine classname="org.testng.internal.NoOpTestClass" primary="true" start="106" end="106" startBytecode="4" endBytecode="4" sourcefile="NoOpTestClass.java" sourcepath="org/testng/internal/NoOpTestClass.java">
      <Message>At NoOpTestClass.java:[line 106]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="b2cfde2d1458930dfb5f5648064242e4" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.internal.NoOpTestClass.getBeforeTestMethods() may expose internal representation by returning NoOpTestClass.m_beforeTestMethods</LongMessage>
    <Class classname="org.testng.internal.NoOpTestClass" primary="true">
      <SourceLine classname="org.testng.internal.NoOpTestClass" start="10" end="169" sourcefile="NoOpTestClass.java" sourcepath="org/testng/internal/NoOpTestClass.java">
        <Message>At NoOpTestClass.java:[lines 10-169]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.NoOpTestClass</Message>
    </Class>
    <Method classname="org.testng.internal.NoOpTestClass" name="getBeforeTestMethods" signature="()[Lorg/testng/ITestNGMethod;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.NoOpTestClass" start="85" end="85" startBytecode="0" endBytecode="46" sourcefile="NoOpTestClass.java" sourcepath="org/testng/internal/NoOpTestClass.java"/>
      <Message>In method org.testng.internal.NoOpTestClass.getBeforeTestMethods()</Message>
    </Method>
    <Field classname="org.testng.internal.NoOpTestClass" name="m_beforeTestMethods" signature="[Lorg/testng/ITestNGMethod;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.NoOpTestClass" sourcefile="NoOpTestClass.java" sourcepath="org/testng/internal/NoOpTestClass.java">
        <Message>In NoOpTestClass.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.NoOpTestClass.m_beforeTestMethods</Message>
    </Field>
    <SourceLine classname="org.testng.internal.NoOpTestClass" primary="true" start="85" end="85" startBytecode="4" endBytecode="4" sourcefile="NoOpTestClass.java" sourcepath="org/testng/internal/NoOpTestClass.java">
      <Message>At NoOpTestClass.java:[line 85]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="2c2efadd9e0a05529a19ffadabf5f4f3" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.internal.NoOpTestClass.getInstanceHashCodes() may expose internal representation by returning NoOpTestClass.m_instanceHashes</LongMessage>
    <Class classname="org.testng.internal.NoOpTestClass" primary="true">
      <SourceLine classname="org.testng.internal.NoOpTestClass" start="10" end="169" sourcefile="NoOpTestClass.java" sourcepath="org/testng/internal/NoOpTestClass.java">
        <Message>At NoOpTestClass.java:[lines 10-169]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.NoOpTestClass</Message>
    </Class>
    <Method classname="org.testng.internal.NoOpTestClass" name="getInstanceHashCodes" signature="()[J" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.NoOpTestClass" start="129" end="129" startBytecode="0" endBytecode="46" sourcefile="NoOpTestClass.java" sourcepath="org/testng/internal/NoOpTestClass.java"/>
      <Message>In method org.testng.internal.NoOpTestClass.getInstanceHashCodes()</Message>
    </Method>
    <Field classname="org.testng.internal.NoOpTestClass" name="m_instanceHashes" signature="[J" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.NoOpTestClass" sourcefile="NoOpTestClass.java" sourcepath="org/testng/internal/NoOpTestClass.java">
        <Message>In NoOpTestClass.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.NoOpTestClass.m_instanceHashes</Message>
    </Field>
    <SourceLine classname="org.testng.internal.NoOpTestClass" primary="true" start="129" end="129" startBytecode="4" endBytecode="4" sourcefile="NoOpTestClass.java" sourcepath="org/testng/internal/NoOpTestClass.java">
      <Message>At NoOpTestClass.java:[line 129]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="e1fc1ea87a8122260c59c0a68f018934" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.internal.NoOpTestClass.getInstances(boolean) may expose internal representation by returning NoOpTestClass.m_instances</LongMessage>
    <Class classname="org.testng.internal.NoOpTestClass" primary="true">
      <SourceLine classname="org.testng.internal.NoOpTestClass" start="10" end="169" sourcefile="NoOpTestClass.java" sourcepath="org/testng/internal/NoOpTestClass.java">
        <Message>At NoOpTestClass.java:[lines 10-169]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.NoOpTestClass</Message>
    </Class>
    <Method classname="org.testng.internal.NoOpTestClass" name="getInstances" signature="(Z)[Ljava/lang/Object;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.NoOpTestClass" start="135" end="135" startBytecode="0" endBytecode="56" sourcefile="NoOpTestClass.java" sourcepath="org/testng/internal/NoOpTestClass.java"/>
      <Message>In method org.testng.internal.NoOpTestClass.getInstances(boolean)</Message>
    </Method>
    <Field classname="org.testng.internal.NoOpTestClass" name="m_instances" signature="[Ljava/lang/Object;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.NoOpTestClass" sourcefile="NoOpTestClass.java" sourcepath="org/testng/internal/NoOpTestClass.java">
        <Message>In NoOpTestClass.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.NoOpTestClass.m_instances</Message>
    </Field>
    <SourceLine classname="org.testng.internal.NoOpTestClass" primary="true" start="135" end="135" startBytecode="4" endBytecode="4" sourcefile="NoOpTestClass.java" sourcepath="org/testng/internal/NoOpTestClass.java">
      <Message>At NoOpTestClass.java:[line 135]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="ed624abd61c0053314e52322ff4c4fbd" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.internal.NoOpTestClass.getTestMethods() may expose internal representation by returning NoOpTestClass.m_testMethods</LongMessage>
    <Class classname="org.testng.internal.NoOpTestClass" primary="true">
      <SourceLine classname="org.testng.internal.NoOpTestClass" start="10" end="169" sourcefile="NoOpTestClass.java" sourcepath="org/testng/internal/NoOpTestClass.java">
        <Message>At NoOpTestClass.java:[lines 10-169]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.NoOpTestClass</Message>
    </Class>
    <Method classname="org.testng.internal.NoOpTestClass" name="getTestMethods" signature="()[Lorg/testng/ITestNGMethod;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.NoOpTestClass" start="91" end="91" startBytecode="0" endBytecode="46" sourcefile="NoOpTestClass.java" sourcepath="org/testng/internal/NoOpTestClass.java"/>
      <Message>In method org.testng.internal.NoOpTestClass.getTestMethods()</Message>
    </Method>
    <Field classname="org.testng.internal.NoOpTestClass" name="m_testMethods" signature="[Lorg/testng/ITestNGMethod;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.NoOpTestClass" sourcefile="NoOpTestClass.java" sourcepath="org/testng/internal/NoOpTestClass.java">
        <Message>In NoOpTestClass.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.NoOpTestClass.m_testMethods</Message>
    </Field>
    <SourceLine classname="org.testng.internal.NoOpTestClass" primary="true" start="91" end="91" startBytecode="4" endBytecode="4" sourcefile="NoOpTestClass.java" sourcepath="org/testng/internal/NoOpTestClass.java">
      <Message>At NoOpTestClass.java:[line 91]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="f7752a5f88eaff9e38d16ac3af3b496c" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.internal.NoOpTestClass.getXmlClass() may expose internal representation by returning NoOpTestClass.m_xmlClass</LongMessage>
    <Class classname="org.testng.internal.NoOpTestClass" primary="true">
      <SourceLine classname="org.testng.internal.NoOpTestClass" start="10" end="169" sourcefile="NoOpTestClass.java" sourcepath="org/testng/internal/NoOpTestClass.java">
        <Message>At NoOpTestClass.java:[lines 10-169]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.NoOpTestClass</Message>
    </Class>
    <Method classname="org.testng.internal.NoOpTestClass" name="getXmlClass" signature="()Lorg/testng/xml/XmlClass;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.NoOpTestClass" start="169" end="169" startBytecode="0" endBytecode="46" sourcefile="NoOpTestClass.java" sourcepath="org/testng/internal/NoOpTestClass.java"/>
      <Message>In method org.testng.internal.NoOpTestClass.getXmlClass()</Message>
    </Method>
    <Field classname="org.testng.internal.NoOpTestClass" name="m_xmlClass" signature="Lorg/testng/xml/XmlClass;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.NoOpTestClass" sourcefile="NoOpTestClass.java" sourcepath="org/testng/internal/NoOpTestClass.java">
        <Message>In NoOpTestClass.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.NoOpTestClass.m_xmlClass</Message>
    </Field>
    <SourceLine classname="org.testng.internal.NoOpTestClass" primary="true" start="169" end="169" startBytecode="4" endBytecode="4" sourcefile="NoOpTestClass.java" sourcepath="org/testng/internal/NoOpTestClass.java">
      <Message>At NoOpTestClass.java:[line 169]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="7fb26bec1b596bb2235811b29adaa457" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.internal.NoOpTestClass.getXmlTest() may expose internal representation by returning NoOpTestClass.m_xmlTest</LongMessage>
    <Class classname="org.testng.internal.NoOpTestClass" primary="true">
      <SourceLine classname="org.testng.internal.NoOpTestClass" start="10" end="169" sourcefile="NoOpTestClass.java" sourcepath="org/testng/internal/NoOpTestClass.java">
        <Message>At NoOpTestClass.java:[lines 10-169]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.NoOpTestClass</Message>
    </Class>
    <Method classname="org.testng.internal.NoOpTestClass" name="getXmlTest" signature="()Lorg/testng/xml/XmlTest;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.NoOpTestClass" start="164" end="164" startBytecode="0" endBytecode="46" sourcefile="NoOpTestClass.java" sourcepath="org/testng/internal/NoOpTestClass.java"/>
      <Message>In method org.testng.internal.NoOpTestClass.getXmlTest()</Message>
    </Method>
    <Field classname="org.testng.internal.NoOpTestClass" name="m_xmlTest" signature="Lorg/testng/xml/XmlTest;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.NoOpTestClass" sourcefile="NoOpTestClass.java" sourcepath="org/testng/internal/NoOpTestClass.java">
        <Message>In NoOpTestClass.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.NoOpTestClass.m_xmlTest</Message>
    </Field>
    <SourceLine classname="org.testng.internal.NoOpTestClass" primary="true" start="164" end="164" startBytecode="4" endBytecode="4" sourcefile="NoOpTestClass.java" sourcepath="org/testng/internal/NoOpTestClass.java">
      <Message>At NoOpTestClass.java:[line 164]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="57a9a1dd8c348271ae79968748a4d515" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>org.testng.internal.NoOpTestClass.setAfterTestMethod(ITestNGMethod[]) may expose internal representation by storing an externally mutable object into NoOpTestClass.m_afterTestMethods</LongMessage>
    <Class classname="org.testng.internal.NoOpTestClass" primary="true">
      <SourceLine classname="org.testng.internal.NoOpTestClass" start="10" end="169" sourcefile="NoOpTestClass.java" sourcepath="org/testng/internal/NoOpTestClass.java">
        <Message>At NoOpTestClass.java:[lines 10-169]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.NoOpTestClass</Message>
    </Class>
    <Method classname="org.testng.internal.NoOpTestClass" name="setAfterTestMethod" signature="([Lorg/testng/ITestNGMethod;)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.NoOpTestClass" start="61" end="62" startBytecode="0" endBytecode="61" sourcefile="NoOpTestClass.java" sourcepath="org/testng/internal/NoOpTestClass.java"/>
      <Message>In method org.testng.internal.NoOpTestClass.setAfterTestMethod(ITestNGMethod[])</Message>
    </Method>
    <Field classname="org.testng.internal.NoOpTestClass" name="m_afterTestMethods" signature="[Lorg/testng/ITestNGMethod;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.NoOpTestClass" sourcefile="NoOpTestClass.java" sourcepath="org/testng/internal/NoOpTestClass.java">
        <Message>In NoOpTestClass.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.NoOpTestClass.m_afterTestMethods</Message>
    </Field>
    <LocalVariable name="afterTestMethods" register="1" pc="2" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named afterTestMethods</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.internal.NoOpTestClass" primary="true" start="61" end="61" startBytecode="2" endBytecode="2" sourcefile="NoOpTestClass.java" sourcepath="org/testng/internal/NoOpTestClass.java">
      <Message>At NoOpTestClass.java:[line 61]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="ff516dd9faabdadc0f23b9f515cb79bb" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>org.testng.internal.NoOpTestClass.setBeforeTestMethods(ITestNGMethod[]) may expose internal representation by storing an externally mutable object into NoOpTestClass.m_beforeTestMethods</LongMessage>
    <Class classname="org.testng.internal.NoOpTestClass" primary="true">
      <SourceLine classname="org.testng.internal.NoOpTestClass" start="10" end="169" sourcefile="NoOpTestClass.java" sourcepath="org/testng/internal/NoOpTestClass.java">
        <Message>At NoOpTestClass.java:[lines 10-169]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.NoOpTestClass</Message>
    </Class>
    <Method classname="org.testng.internal.NoOpTestClass" name="setBeforeTestMethods" signature="([Lorg/testng/ITestNGMethod;)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.NoOpTestClass" start="57" end="58" startBytecode="0" endBytecode="61" sourcefile="NoOpTestClass.java" sourcepath="org/testng/internal/NoOpTestClass.java"/>
      <Message>In method org.testng.internal.NoOpTestClass.setBeforeTestMethods(ITestNGMethod[])</Message>
    </Method>
    <Field classname="org.testng.internal.NoOpTestClass" name="m_beforeTestMethods" signature="[Lorg/testng/ITestNGMethod;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.NoOpTestClass" sourcefile="NoOpTestClass.java" sourcepath="org/testng/internal/NoOpTestClass.java">
        <Message>In NoOpTestClass.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.NoOpTestClass.m_beforeTestMethods</Message>
    </Field>
    <LocalVariable name="beforeTestMethods" register="1" pc="2" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named beforeTestMethods</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.internal.NoOpTestClass" primary="true" start="57" end="57" startBytecode="2" endBytecode="2" sourcefile="NoOpTestClass.java" sourcepath="org/testng/internal/NoOpTestClass.java">
      <Message>At NoOpTestClass.java:[line 57]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="4e4809a52f6992060f68cb0b5a2ef253" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>new org.testng.internal.OverrideProcessor(String[], String[]) may expose internal representation by storing an externally mutable object into OverrideProcessor.m_excludedGroups</LongMessage>
    <Class classname="org.testng.internal.OverrideProcessor" primary="true">
      <SourceLine classname="org.testng.internal.OverrideProcessor" start="18" end="39" sourcefile="OverrideProcessor.java" sourcepath="org/testng/internal/OverrideProcessor.java">
        <Message>At OverrideProcessor.java:[lines 18-39]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.OverrideProcessor</Message>
    </Class>
    <Method classname="org.testng.internal.OverrideProcessor" name="&lt;init&gt;" signature="([Ljava/lang/String;[Ljava/lang/String;)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.OverrideProcessor" start="18" end="21" startBytecode="0" endBytecode="88" sourcefile="OverrideProcessor.java" sourcepath="org/testng/internal/OverrideProcessor.java"/>
      <Message>In method new org.testng.internal.OverrideProcessor(String[], String[])</Message>
    </Method>
    <Field classname="org.testng.internal.OverrideProcessor" name="m_excludedGroups" signature="[Ljava/lang/String;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.OverrideProcessor" sourcefile="OverrideProcessor.java" sourcepath="org/testng/internal/OverrideProcessor.java">
        <Message>In OverrideProcessor.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.OverrideProcessor.m_excludedGroups</Message>
    </Field>
    <LocalVariable name="excludedGroups" register="2" pc="11" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named excludedGroups</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.internal.OverrideProcessor" primary="true" start="20" end="20" startBytecode="11" endBytecode="11" sourcefile="OverrideProcessor.java" sourcepath="org/testng/internal/OverrideProcessor.java">
      <Message>At OverrideProcessor.java:[line 20]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="84ea33c80e54f554592661b3e3d62dee" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>new org.testng.internal.OverrideProcessor(String[], String[]) may expose internal representation by storing an externally mutable object into OverrideProcessor.m_groups</LongMessage>
    <Class classname="org.testng.internal.OverrideProcessor" primary="true">
      <SourceLine classname="org.testng.internal.OverrideProcessor" start="18" end="39" sourcefile="OverrideProcessor.java" sourcepath="org/testng/internal/OverrideProcessor.java">
        <Message>At OverrideProcessor.java:[lines 18-39]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.OverrideProcessor</Message>
    </Class>
    <Method classname="org.testng.internal.OverrideProcessor" name="&lt;init&gt;" signature="([Ljava/lang/String;[Ljava/lang/String;)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.OverrideProcessor" start="18" end="21" startBytecode="0" endBytecode="88" sourcefile="OverrideProcessor.java" sourcepath="org/testng/internal/OverrideProcessor.java"/>
      <Message>In method new org.testng.internal.OverrideProcessor(String[], String[])</Message>
    </Method>
    <Field classname="org.testng.internal.OverrideProcessor" name="m_groups" signature="[Ljava/lang/String;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.OverrideProcessor" sourcefile="OverrideProcessor.java" sourcepath="org/testng/internal/OverrideProcessor.java">
        <Message>In OverrideProcessor.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.OverrideProcessor.m_groups</Message>
    </Field>
    <LocalVariable name="groups" register="1" pc="6" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named groups</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.internal.OverrideProcessor" primary="true" start="19" end="19" startBytecode="6" endBytecode="6" sourcefile="OverrideProcessor.java" sourcepath="org/testng/internal/OverrideProcessor.java">
      <Message>At OverrideProcessor.java:[line 19]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DE_MIGHT_IGNORE" priority="2" rank="16" abbrev="DE" category="BAD_PRACTICE" instanceHash="212d58187c782f6b9a380f11216a16a3" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="391">
    <ShortMessage>Method might ignore exception</ShortMessage>
    <LongMessage>org.testng.internal.PackageUtils.findClassesInPackage(String, List, List) might ignore java.lang.Exception</LongMessage>
    <Class classname="org.testng.internal.PackageUtils" primary="true">
      <SourceLine classname="org.testng.internal.PackageUtils" start="30" end="299" sourcefile="PackageUtils.java" sourcepath="org/testng/internal/PackageUtils.java">
        <Message>At PackageUtils.java:[lines 30-299]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.PackageUtils</Message>
    </Class>
    <Method classname="org.testng.internal.PackageUtils" name="findClassesInPackage" signature="(Ljava/lang/String;Ljava/util/List;Ljava/util/List;)[Ljava/lang/String;" isStatic="true" primary="true">
      <SourceLine classname="org.testng.internal.PackageUtils" start="54" end="144" startBytecode="0" endBytecode="1391" sourcefile="PackageUtils.java" sourcepath="org/testng/internal/PackageUtils.java"/>
      <Message>In method org.testng.internal.PackageUtils.findClassesInPackage(String, List, List)</Message>
    </Method>
    <Class classname="java.lang.Exception" role="CLASS_EXCEPTION">
      <SourceLine classname="java.lang.Exception" start="55" end="124" sourcefile="Exception.java" sourcepath="java/lang/Exception.java">
        <Message>At Exception.java:[lines 55-124]</Message>
      </SourceLine>
      <Message>Exception class java.lang.Exception</Message>
    </Class>
    <SourceLine classname="org.testng.internal.PackageUtils" primary="true" start="138" end="138" startBytecode="591" endBytecode="591" sourcefile="PackageUtils.java" sourcepath="org/testng/internal/PackageUtils.java">
      <Message>At PackageUtils.java:[line 138]</Message>
    </SourceLine>
    <SourceLine classname="org.testng.internal.PackageUtils" primary="true" start="138" end="138" startBytecode="591" endBytecode="591" sourcefile="PackageUtils.java" sourcepath="org/testng/internal/PackageUtils.java">
      <Message>At PackageUtils.java:[line 138]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DM_CONVERT_CASE" priority="3" rank="20" abbrev="Dm" category="I18N" instanceHash="3dafacdbf20b5d254afed09bebd61745" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Consider using Locale parameterized version of invoked method</ShortMessage>
    <LongMessage>Use of non-localized String.toUpperCase() or String.toLowerCase() in org.testng.internal.PackageUtils.getTestClasspath()</LongMessage>
    <Class classname="org.testng.internal.PackageUtils" primary="true">
      <SourceLine classname="org.testng.internal.PackageUtils" start="30" end="299" sourcefile="PackageUtils.java" sourcepath="org/testng/internal/PackageUtils.java">
        <Message>At PackageUtils.java:[lines 30-299]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.PackageUtils</Message>
    </Class>
    <Method classname="org.testng.internal.PackageUtils" name="getTestClasspath" signature="()[Ljava/lang/String;" isStatic="true" primary="true">
      <SourceLine classname="org.testng.internal.PackageUtils" start="148" end="176" startBytecode="0" endBytecode="352" sourcefile="PackageUtils.java" sourcepath="org/testng/internal/PackageUtils.java"/>
      <Message>In method org.testng.internal.PackageUtils.getTestClasspath()</Message>
    </Method>
    <SourceLine classname="org.testng.internal.PackageUtils" primary="true" start="162" end="162" startBytecode="49" endBytecode="49" sourcefile="PackageUtils.java" sourcepath="org/testng/internal/PackageUtils.java">
      <Message>At PackageUtils.java:[line 162]</Message>
    </SourceLine>
    <SourceLine classname="org.testng.internal.PackageUtils" start="163" end="163" startBytecode="63" endBytecode="63" sourcefile="PackageUtils.java" sourcepath="org/testng/internal/PackageUtils.java" role="SOURCE_LINE_ANOTHER_INSTANCE">
      <Message>Another occurrence at PackageUtils.java:[line 163]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="PZLA_PREFER_ZERO_LENGTH_ARRAYS" priority="3" rank="20" abbrev="PZLA" category="STYLE" instanceHash="aea99017b3406260bc02ea59b6abe5de" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Consider returning a zero length array rather than null</ShortMessage>
    <LongMessage>Should org.testng.internal.PackageUtils.getTestClasspath() return a zero length array rather than null?</LongMessage>
    <Class classname="org.testng.internal.PackageUtils" primary="true">
      <SourceLine classname="org.testng.internal.PackageUtils" start="30" end="299" sourcefile="PackageUtils.java" sourcepath="org/testng/internal/PackageUtils.java">
        <Message>At PackageUtils.java:[lines 30-299]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.PackageUtils</Message>
    </Class>
    <Method classname="org.testng.internal.PackageUtils" name="getTestClasspath" signature="()[Ljava/lang/String;" isStatic="true" primary="true">
      <SourceLine classname="org.testng.internal.PackageUtils" start="148" end="176" startBytecode="0" endBytecode="352" sourcefile="PackageUtils.java" sourcepath="org/testng/internal/PackageUtils.java"/>
      <Message>In method org.testng.internal.PackageUtils.getTestClasspath()</Message>
    </Method>
    <SourceLine classname="org.testng.internal.PackageUtils" primary="true" start="154" end="154" startBytecode="21" endBytecode="21" sourcefile="PackageUtils.java" sourcepath="org/testng/internal/PackageUtils.java">
      <Message>At PackageUtils.java:[line 154]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="REC_CATCH_EXCEPTION" priority="2" rank="17" abbrev="REC" category="STYLE" instanceHash="aeda40c26bc63801978b1674901ed298" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="396">
    <ShortMessage>Exception is caught when Exception is not thrown</ShortMessage>
    <LongMessage>Exception is caught when Exception is not thrown in org.testng.internal.PackageUtils.findClassesInPackage(String, List, List)</LongMessage>
    <Class classname="org.testng.internal.PackageUtils" primary="true">
      <SourceLine classname="org.testng.internal.PackageUtils" start="30" end="299" sourcefile="PackageUtils.java" sourcepath="org/testng/internal/PackageUtils.java">
        <Message>At PackageUtils.java:[lines 30-299]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.PackageUtils</Message>
    </Class>
    <Method classname="org.testng.internal.PackageUtils" name="findClassesInPackage" signature="(Ljava/lang/String;Ljava/util/List;Ljava/util/List;)[Ljava/lang/String;" isStatic="true" primary="true">
      <SourceLine classname="org.testng.internal.PackageUtils" start="54" end="144" startBytecode="0" endBytecode="1391" sourcefile="PackageUtils.java" sourcepath="org/testng/internal/PackageUtils.java"/>
      <Message>In method org.testng.internal.PackageUtils.findClassesInPackage(String, List, List)</Message>
    </Method>
    <SourceLine classname="org.testng.internal.PackageUtils" primary="true" start="138" end="138" startBytecode="591" endBytecode="591" sourcefile="PackageUtils.java" sourcepath="org/testng/internal/PackageUtils.java">
      <Message>At PackageUtils.java:[line 138]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="3285ebe03db8ed9a74177c3ab5a43598" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>new org.testng.internal.ParameterHolder(Iterator, ParameterHolder$ParameterOrigin, IDataProviderMethod) may expose internal representation by storing an externally mutable object into ParameterHolder.parameters</LongMessage>
    <Class classname="org.testng.internal.ParameterHolder" primary="true">
      <SourceLine classname="org.testng.internal.ParameterHolder" start="27" end="31" sourcefile="ParameterHolder.java" sourcepath="org/testng/internal/ParameterHolder.java">
        <Message>At ParameterHolder.java:[lines 27-31]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.ParameterHolder</Message>
    </Class>
    <Method classname="org.testng.internal.ParameterHolder" name="&lt;init&gt;" signature="(Ljava/util/Iterator;Lorg/testng/internal/ParameterHolder$ParameterOrigin;Lorg/testng/IDataProviderMethod;)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.ParameterHolder" start="27" end="31" startBytecode="0" endBytecode="125" sourcefile="ParameterHolder.java" sourcepath="org/testng/internal/ParameterHolder.java"/>
      <Message>In method new org.testng.internal.ParameterHolder(Iterator, ParameterHolder$ParameterOrigin, IDataProviderMethod)</Message>
    </Method>
    <Field classname="org.testng.internal.ParameterHolder" name="parameters" signature="Ljava/util/Iterator;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.ParameterHolder" sourcefile="ParameterHolder.java" sourcepath="org/testng/internal/ParameterHolder.java">
        <Message>In ParameterHolder.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.ParameterHolder.parameters</Message>
    </Field>
    <LocalVariable name="parameters" register="1" pc="6" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named parameters</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.internal.ParameterHolder" primary="true" start="28" end="28" startBytecode="6" endBytecode="6" sourcefile="ParameterHolder.java" sourcepath="org/testng/internal/ParameterHolder.java">
      <Message>At ParameterHolder.java:[line 28]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="580f5bcb207657320c2d0ba82bd635ac" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.internal.ParameterInfo.getParameters() may expose internal representation by returning ParameterInfo.parameters</LongMessage>
    <Class classname="org.testng.internal.ParameterInfo" primary="true">
      <SourceLine classname="org.testng.internal.ParameterInfo" start="7" end="19" sourcefile="ParameterInfo.java" sourcepath="org/testng/internal/ParameterInfo.java">
        <Message>At ParameterInfo.java:[lines 7-19]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.ParameterInfo</Message>
    </Class>
    <Method classname="org.testng.internal.ParameterInfo" name="getParameters" signature="()[Ljava/lang/Object;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.ParameterInfo" start="19" end="19" startBytecode="0" endBytecode="46" sourcefile="ParameterInfo.java" sourcepath="org/testng/internal/ParameterInfo.java"/>
      <Message>In method org.testng.internal.ParameterInfo.getParameters()</Message>
    </Method>
    <Field classname="org.testng.internal.ParameterInfo" name="parameters" signature="[Ljava/lang/Object;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.ParameterInfo" sourcefile="ParameterInfo.java" sourcepath="org/testng/internal/ParameterInfo.java">
        <Message>In ParameterInfo.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.ParameterInfo.parameters</Message>
    </Field>
    <SourceLine classname="org.testng.internal.ParameterInfo" primary="true" start="19" end="19" startBytecode="4" endBytecode="4" sourcefile="ParameterInfo.java" sourcepath="org/testng/internal/ParameterInfo.java">
      <Message>At ParameterInfo.java:[line 19]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="2f39ba6dc3ca6a6d939ac9451a46aa54" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>new org.testng.internal.ParameterInfo(Object, Object[]) may expose internal representation by storing an externally mutable object into ParameterInfo.parameters</LongMessage>
    <Class classname="org.testng.internal.ParameterInfo" primary="true">
      <SourceLine classname="org.testng.internal.ParameterInfo" start="7" end="19" sourcefile="ParameterInfo.java" sourcepath="org/testng/internal/ParameterInfo.java">
        <Message>At ParameterInfo.java:[lines 7-19]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.ParameterInfo</Message>
    </Class>
    <Method classname="org.testng.internal.ParameterInfo" name="&lt;init&gt;" signature="(Ljava/lang/Object;[Ljava/lang/Object;)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.ParameterInfo" start="7" end="10" startBytecode="0" endBytecode="88" sourcefile="ParameterInfo.java" sourcepath="org/testng/internal/ParameterInfo.java"/>
      <Message>In method new org.testng.internal.ParameterInfo(Object, Object[])</Message>
    </Method>
    <Field classname="org.testng.internal.ParameterInfo" name="parameters" signature="[Ljava/lang/Object;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.ParameterInfo" sourcefile="ParameterInfo.java" sourcepath="org/testng/internal/ParameterInfo.java">
        <Message>In ParameterInfo.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.ParameterInfo.parameters</Message>
    </Field>
    <LocalVariable name="parameters" register="2" pc="11" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named parameters</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.internal.ParameterInfo" primary="true" start="9" end="9" startBytecode="11" endBytecode="11" sourcefile="ParameterInfo.java" sourcepath="org/testng/internal/ParameterInfo.java">
      <Message>At ParameterInfo.java:[line 9]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DM_CONVERT_CASE" priority="3" rank="20" abbrev="Dm" category="I18N" instanceHash="fdd1f73a7fe6a8a994c3cd5e83b2fcfc" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Consider using Locale parameterized version of invoked method</ShortMessage>
    <LongMessage>Use of non-localized String.toUpperCase() or String.toLowerCase() in org.testng.internal.Parameters.convertType(Class, String, String)</LongMessage>
    <Class classname="org.testng.internal.Parameters" primary="true">
      <SourceLine classname="org.testng.internal.Parameters" start="47" end="917" sourcefile="Parameters.java" sourcepath="org/testng/internal/Parameters.java">
        <Message>At Parameters.java:[lines 47-917]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.Parameters</Message>
    </Class>
    <Method classname="org.testng.internal.Parameters" name="convertType" signature="(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;" isStatic="true" primary="true">
      <SourceLine classname="org.testng.internal.Parameters" start="489" end="533" startBytecode="0" endBytecode="602" sourcefile="Parameters.java" sourcepath="org/testng/internal/Parameters.java"/>
      <Message>In method org.testng.internal.Parameters.convertType(Class, String, String)</Message>
    </Method>
    <SourceLine classname="org.testng.internal.Parameters" primary="true" start="489" end="489" startBytecode="7" endBytecode="7" sourcefile="Parameters.java" sourcepath="org/testng/internal/Parameters.java">
      <Message>At Parameters.java:[line 489]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="PZLA_PREFER_ZERO_LENGTH_ARRAYS" priority="3" rank="20" abbrev="PZLA" category="STYLE" instanceHash="d4a8bcec8f6fada14045c84e955cb514" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Consider returning a zero length array rather than null</ShortMessage>
    <LongMessage>Should org.testng.internal.Parameters.getParametersFromIndex(Iterator, int) return a zero length array rather than null?</LongMessage>
    <Class classname="org.testng.internal.Parameters" primary="true">
      <SourceLine classname="org.testng.internal.Parameters" start="47" end="917" sourcefile="Parameters.java" sourcepath="org/testng/internal/Parameters.java">
        <Message>At Parameters.java:[lines 47-917]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.Parameters</Message>
    </Class>
    <Method classname="org.testng.internal.Parameters" name="getParametersFromIndex" signature="(Ljava/util/Iterator;I)[Ljava/lang/Object;" isStatic="true" primary="true">
      <SourceLine classname="org.testng.internal.Parameters" start="909" end="917" startBytecode="0" endBytecode="154" sourcefile="Parameters.java" sourcepath="org/testng/internal/Parameters.java"/>
      <Message>In method org.testng.internal.Parameters.getParametersFromIndex(Iterator, int)</Message>
    </Method>
    <SourceLine classname="org.testng.internal.Parameters" primary="true" start="917" end="917" startBytecode="32" endBytecode="32" sourcefile="Parameters.java" sourcepath="org/testng/internal/Parameters.java">
      <Message>At Parameters.java:[line 917]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="b3bad8bc3b51afc77aa238e432dcfa4f" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>new org.testng.internal.Parameters$MethodParameters(Map, Map, Object[], Method, ITestContext, ITestResult) may expose internal representation by storing an externally mutable object into Parameters$MethodParameters.context</LongMessage>
    <Class classname="org.testng.internal.Parameters$MethodParameters" primary="true">
      <SourceLine classname="org.testng.internal.Parameters$MethodParameters" start="921" end="963" sourcefile="Parameters.java" sourcepath="org/testng/internal/Parameters.java">
        <Message>At Parameters.java:[lines 921-963]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.Parameters$MethodParameters</Message>
    </Class>
    <Method classname="org.testng.internal.Parameters$MethodParameters" name="&lt;init&gt;" signature="(Ljava/util/Map;Ljava/util/Map;[Ljava/lang/Object;Ljava/lang/reflect/Method;Lorg/testng/ITestContext;Lorg/testng/ITestResult;)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.Parameters$MethodParameters" start="954" end="963" startBytecode="0" endBytecode="240" sourcefile="Parameters.java" sourcepath="org/testng/internal/Parameters.java"/>
      <Message>In method new org.testng.internal.Parameters$MethodParameters(Map, Map, Object[], Method, ITestContext, ITestResult)</Message>
    </Method>
    <Field classname="org.testng.internal.Parameters$MethodParameters" name="context" signature="Lorg/testng/ITestContext;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.Parameters$MethodParameters" sourcefile="Parameters.java" sourcepath="org/testng/internal/Parameters.java">
        <Message>In Parameters.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.Parameters$MethodParameters.context</Message>
    </Field>
    <LocalVariable name="ctx" register="5" pc="40" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named ctx</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.internal.Parameters$MethodParameters" primary="true" start="960" end="960" startBytecode="40" endBytecode="40" sourcefile="Parameters.java" sourcepath="org/testng/internal/Parameters.java">
      <Message>At Parameters.java:[line 960]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="97899f0b7ddcb34b9b287b6cea13828b" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>new org.testng.internal.Parameters$MethodParameters(Map, Map, Object[], Method, ITestContext, ITestResult) may expose internal representation by storing an externally mutable object into Parameters$MethodParameters.currentTestMethod</LongMessage>
    <Class classname="org.testng.internal.Parameters$MethodParameters" primary="true">
      <SourceLine classname="org.testng.internal.Parameters$MethodParameters" start="921" end="963" sourcefile="Parameters.java" sourcepath="org/testng/internal/Parameters.java">
        <Message>At Parameters.java:[lines 921-963]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.Parameters$MethodParameters</Message>
    </Class>
    <Method classname="org.testng.internal.Parameters$MethodParameters" name="&lt;init&gt;" signature="(Ljava/util/Map;Ljava/util/Map;[Ljava/lang/Object;Ljava/lang/reflect/Method;Lorg/testng/ITestContext;Lorg/testng/ITestResult;)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.Parameters$MethodParameters" start="954" end="963" startBytecode="0" endBytecode="240" sourcefile="Parameters.java" sourcepath="org/testng/internal/Parameters.java"/>
      <Message>In method new org.testng.internal.Parameters$MethodParameters(Map, Map, Object[], Method, ITestContext, ITestResult)</Message>
    </Method>
    <Field classname="org.testng.internal.Parameters$MethodParameters" name="currentTestMethod" signature="Ljava/lang/reflect/Method;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.Parameters$MethodParameters" sourcefile="Parameters.java" sourcepath="org/testng/internal/Parameters.java">
        <Message>In Parameters.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.Parameters$MethodParameters.currentTestMethod</Message>
    </Field>
    <LocalVariable name="m" register="4" pc="34" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named m</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.internal.Parameters$MethodParameters" primary="true" start="959" end="959" startBytecode="34" endBytecode="34" sourcefile="Parameters.java" sourcepath="org/testng/internal/Parameters.java">
      <Message>At Parameters.java:[line 959]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="519c9eb8315ca6a2a81a8cfa8be02a85" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>new org.testng.internal.Parameters$MethodParameters(Map, Map, Object[], Method, ITestContext, ITestResult) may expose internal representation by storing an externally mutable object into Parameters$MethodParameters.parameterValues</LongMessage>
    <Class classname="org.testng.internal.Parameters$MethodParameters" primary="true">
      <SourceLine classname="org.testng.internal.Parameters$MethodParameters" start="921" end="963" sourcefile="Parameters.java" sourcepath="org/testng/internal/Parameters.java">
        <Message>At Parameters.java:[lines 921-963]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.Parameters$MethodParameters</Message>
    </Class>
    <Method classname="org.testng.internal.Parameters$MethodParameters" name="&lt;init&gt;" signature="(Ljava/util/Map;Ljava/util/Map;[Ljava/lang/Object;Ljava/lang/reflect/Method;Lorg/testng/ITestContext;Lorg/testng/ITestResult;)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.Parameters$MethodParameters" start="954" end="963" startBytecode="0" endBytecode="240" sourcefile="Parameters.java" sourcepath="org/testng/internal/Parameters.java"/>
      <Message>In method new org.testng.internal.Parameters$MethodParameters(Map, Map, Object[], Method, ITestContext, ITestResult)</Message>
    </Method>
    <Field classname="org.testng.internal.Parameters$MethodParameters" name="parameterValues" signature="[Ljava/lang/Object;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.Parameters$MethodParameters" sourcefile="Parameters.java" sourcepath="org/testng/internal/Parameters.java">
        <Message>In Parameters.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.Parameters$MethodParameters.parameterValues</Message>
    </Field>
    <LocalVariable name="pv" register="3" pc="45" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named pv</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.internal.Parameters$MethodParameters" primary="true" start="961" end="961" startBytecode="45" endBytecode="45" sourcefile="Parameters.java" sourcepath="org/testng/internal/Parameters.java">
      <Message>At Parameters.java:[line 961]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="604488268e4f39129da0f52f89d88408" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>new org.testng.internal.Parameters$MethodParameters(Map, Map, Object[], Method, ITestContext, ITestResult) may expose internal representation by storing an externally mutable object into Parameters$MethodParameters.testResult</LongMessage>
    <Class classname="org.testng.internal.Parameters$MethodParameters" primary="true">
      <SourceLine classname="org.testng.internal.Parameters$MethodParameters" start="921" end="963" sourcefile="Parameters.java" sourcepath="org/testng/internal/Parameters.java">
        <Message>At Parameters.java:[lines 921-963]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.Parameters$MethodParameters</Message>
    </Class>
    <Method classname="org.testng.internal.Parameters$MethodParameters" name="&lt;init&gt;" signature="(Ljava/util/Map;Ljava/util/Map;[Ljava/lang/Object;Ljava/lang/reflect/Method;Lorg/testng/ITestContext;Lorg/testng/ITestResult;)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.Parameters$MethodParameters" start="954" end="963" startBytecode="0" endBytecode="240" sourcefile="Parameters.java" sourcepath="org/testng/internal/Parameters.java"/>
      <Message>In method new org.testng.internal.Parameters$MethodParameters(Map, Map, Object[], Method, ITestContext, ITestResult)</Message>
    </Method>
    <Field classname="org.testng.internal.Parameters$MethodParameters" name="testResult" signature="Lorg/testng/ITestResult;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.Parameters$MethodParameters" sourcefile="Parameters.java" sourcepath="org/testng/internal/Parameters.java">
        <Message>In Parameters.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.Parameters$MethodParameters.testResult</Message>
    </Field>
    <LocalVariable name="tr" register="6" pc="51" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named tr</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.internal.Parameters$MethodParameters" primary="true" start="962" end="962" startBytecode="51" endBytecode="51" sourcefile="Parameters.java" sourcepath="org/testng/internal/Parameters.java">
      <Message>At Parameters.java:[line 962]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="d97c987ff7a0bf2fdad6d0627f8fe70b" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>new org.testng.internal.RegexpExpectedExceptionsHolder(IAnnotationFinder, ITestNGMethod) may expose internal representation by storing an externally mutable object into RegexpExpectedExceptionsHolder.method</LongMessage>
    <Class classname="org.testng.internal.RegexpExpectedExceptionsHolder" primary="true">
      <SourceLine classname="org.testng.internal.RegexpExpectedExceptionsHolder" start="21" end="56" sourcefile="RegexpExpectedExceptionsHolder.java" sourcepath="org/testng/internal/RegexpExpectedExceptionsHolder.java">
        <Message>At RegexpExpectedExceptionsHolder.java:[lines 21-56]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.RegexpExpectedExceptionsHolder</Message>
    </Class>
    <Method classname="org.testng.internal.RegexpExpectedExceptionsHolder" name="&lt;init&gt;" signature="(Lorg/testng/internal/annotations/IAnnotationFinder;Lorg/testng/ITestNGMethod;)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.RegexpExpectedExceptionsHolder" start="21" end="24" startBytecode="0" endBytecode="88" sourcefile="RegexpExpectedExceptionsHolder.java" sourcepath="org/testng/internal/RegexpExpectedExceptionsHolder.java"/>
      <Message>In method new org.testng.internal.RegexpExpectedExceptionsHolder(IAnnotationFinder, ITestNGMethod)</Message>
    </Method>
    <Field classname="org.testng.internal.RegexpExpectedExceptionsHolder" name="method" signature="Lorg/testng/ITestNGMethod;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.RegexpExpectedExceptionsHolder" sourcefile="RegexpExpectedExceptionsHolder.java" sourcepath="org/testng/internal/RegexpExpectedExceptionsHolder.java">
        <Message>In RegexpExpectedExceptionsHolder.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.RegexpExpectedExceptionsHolder.method</Message>
    </Field>
    <LocalVariable name="method" register="2" pc="11" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named method</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.internal.RegexpExpectedExceptionsHolder" primary="true" start="23" end="23" startBytecode="11" endBytecode="11" sourcefile="RegexpExpectedExceptionsHolder.java" sourcepath="org/testng/internal/RegexpExpectedExceptionsHolder.java">
      <Message>At RegexpExpectedExceptionsHolder.java:[line 23]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="45d5b2fce286eb1db0cf52e3529c8b77" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.internal.ReporterConfig.getProperties() may expose internal representation by returning ReporterConfig.properties</LongMessage>
    <Class classname="org.testng.internal.ReporterConfig" primary="true">
      <SourceLine classname="org.testng.internal.ReporterConfig" start="22" end="126" sourcefile="ReporterConfig.java" sourcepath="org/testng/internal/ReporterConfig.java">
        <Message>At ReporterConfig.java:[lines 22-126]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.ReporterConfig</Message>
    </Class>
    <Method classname="org.testng.internal.ReporterConfig" name="getProperties" signature="()Ljava/util/List;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.ReporterConfig" start="34" end="34" startBytecode="0" endBytecode="46" sourcefile="ReporterConfig.java" sourcepath="org/testng/internal/ReporterConfig.java"/>
      <Message>In method org.testng.internal.ReporterConfig.getProperties()</Message>
    </Method>
    <Field classname="org.testng.internal.ReporterConfig" name="properties" signature="Ljava/util/List;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.ReporterConfig" sourcefile="ReporterConfig.java" sourcepath="org/testng/internal/ReporterConfig.java">
        <Message>In ReporterConfig.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.ReporterConfig.properties</Message>
    </Field>
    <SourceLine classname="org.testng.internal.ReporterConfig" primary="true" start="34" end="34" startBytecode="4" endBytecode="4" sourcefile="ReporterConfig.java" sourcepath="org/testng/internal/ReporterConfig.java">
      <Message>At ReporterConfig.java:[line 34]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="ff1288ac94c853685a599b1a61b2375a" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>new org.testng.internal.ReporterConfig(String, List) may expose internal representation by storing an externally mutable object into ReporterConfig.properties</LongMessage>
    <Class classname="org.testng.internal.ReporterConfig" primary="true">
      <SourceLine classname="org.testng.internal.ReporterConfig" start="22" end="126" sourcefile="ReporterConfig.java" sourcepath="org/testng/internal/ReporterConfig.java">
        <Message>At ReporterConfig.java:[lines 22-126]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.ReporterConfig</Message>
    </Class>
    <Method classname="org.testng.internal.ReporterConfig" name="&lt;init&gt;" signature="(Ljava/lang/String;Ljava/util/List;)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.ReporterConfig" start="22" end="25" startBytecode="0" endBytecode="106" sourcefile="ReporterConfig.java" sourcepath="org/testng/internal/ReporterConfig.java"/>
      <Message>In method new org.testng.internal.ReporterConfig(String, List)</Message>
    </Method>
    <Field classname="org.testng.internal.ReporterConfig" name="properties" signature="Ljava/util/List;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.ReporterConfig" sourcefile="ReporterConfig.java" sourcepath="org/testng/internal/ReporterConfig.java">
        <Message>In ReporterConfig.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.ReporterConfig.properties</Message>
    </Field>
    <LocalVariable name="properties" register="2" pc="11" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named properties</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.internal.ReporterConfig" primary="true" start="24" end="24" startBytecode="11" endBytecode="11" sourcefile="ReporterConfig.java" sourcepath="org/testng/internal/ReporterConfig.java">
      <Message>At ReporterConfig.java:[line 24]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DM_CONVERT_CASE" priority="3" rank="20" abbrev="Dm" category="I18N" instanceHash="9cdf171e378341bcfd1f95db454924b9" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Consider using Locale parameterized version of invoked method</ShortMessage>
    <LongMessage>Use of non-localized String.toUpperCase() or String.toLowerCase() in org.testng.internal.ScriptSelectorFactory.getScriptSelector(XmlScript)</LongMessage>
    <Class classname="org.testng.internal.ScriptSelectorFactory" primary="true">
      <SourceLine classname="org.testng.internal.ScriptSelectorFactory" start="13" end="40" sourcefile="ScriptSelectorFactory.java" sourcepath="org/testng/internal/ScriptSelectorFactory.java">
        <Message>At ScriptSelectorFactory.java:[lines 13-40]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.ScriptSelectorFactory</Message>
    </Class>
    <Method classname="org.testng.internal.ScriptSelectorFactory" name="getScriptSelector" signature="(Lorg/testng/xml/XmlScript;)Lorg/testng/internal/ScriptMethodSelector;" isStatic="true" primary="true">
      <SourceLine classname="org.testng.internal.ScriptSelectorFactory" start="19" end="40" startBytecode="0" endBytecode="360" sourcefile="ScriptSelectorFactory.java" sourcepath="org/testng/internal/ScriptSelectorFactory.java"/>
      <Message>In method org.testng.internal.ScriptSelectorFactory.getScriptSelector(XmlScript)</Message>
    </Method>
    <SourceLine classname="org.testng.internal.ScriptSelectorFactory" primary="true" start="23" end="23" startBytecode="25" endBytecode="25" sourcefile="ScriptSelectorFactory.java" sourcepath="org/testng/internal/ScriptSelectorFactory.java">
      <Message>At ScriptSelectorFactory.java:[line 23]</Message>
    </SourceLine>
    <SourceLine classname="org.testng.internal.ScriptSelectorFactory" start="28" end="28" startBytecode="90" endBytecode="90" sourcefile="ScriptSelectorFactory.java" sourcepath="org/testng/internal/ScriptSelectorFactory.java" role="SOURCE_LINE_ANOTHER_INSTANCE">
      <Message>Another occurrence at ScriptSelectorFactory.java:[line 28]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="7ffb7d617f8b034151a51cabeaf1e9a2" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.internal.Tarjan.getCycle() may expose internal representation by returning Tarjan.m_cycle</LongMessage>
    <Class classname="org.testng.internal.Tarjan" primary="true">
      <SourceLine classname="org.testng.internal.Tarjan" start="17" end="55" sourcefile="Tarjan.java" sourcepath="org/testng/internal/Tarjan.java">
        <Message>At Tarjan.java:[lines 17-55]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.Tarjan</Message>
    </Class>
    <Method classname="org.testng.internal.Tarjan" name="getCycle" signature="()Ljava/util/List;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.Tarjan" start="55" end="55" startBytecode="0" endBytecode="64" sourcefile="Tarjan.java" sourcepath="org/testng/internal/Tarjan.java"/>
      <Message>In method org.testng.internal.Tarjan.getCycle()</Message>
    </Method>
    <Field classname="org.testng.internal.Tarjan" name="m_cycle" signature="Ljava/util/List;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.Tarjan" sourcefile="Tarjan.java" sourcepath="org/testng/internal/Tarjan.java">
        <Message>In Tarjan.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.Tarjan.m_cycle</Message>
    </Field>
    <SourceLine classname="org.testng.internal.Tarjan" primary="true" start="55" end="55" startBytecode="4" endBytecode="4" sourcefile="Tarjan.java" sourcepath="org/testng/internal/Tarjan.java">
      <Message>At Tarjan.java:[line 55]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="REC_CATCH_EXCEPTION" priority="3" rank="20" abbrev="REC" category="STYLE" instanceHash="3294145feb0e64af1dc7b9e998d25bee" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="396">
    <ShortMessage>Exception is caught when Exception is not thrown</ShortMessage>
    <LongMessage>Exception is caught when Exception is not thrown in org.testng.internal.TestListenerHelper.createListenerFactory(TestNGClassFinder, Class)</LongMessage>
    <Class classname="org.testng.internal.TestListenerHelper" primary="true">
      <SourceLine classname="org.testng.internal.TestListenerHelper" start="19" end="158" sourcefile="TestListenerHelper.java" sourcepath="org/testng/internal/TestListenerHelper.java">
        <Message>At TestListenerHelper.java:[lines 19-158]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.TestListenerHelper</Message>
    </Class>
    <Method classname="org.testng.internal.TestListenerHelper" name="createListenerFactory" signature="(Lorg/testng/internal/TestNGClassFinder;Ljava/lang/Class;)Lorg/testng/ITestNGListenerFactory;" isStatic="true" primary="true">
      <SourceLine classname="org.testng.internal.TestListenerHelper" start="145" end="158" startBytecode="0" endBytecode="246" sourcefile="TestListenerHelper.java" sourcepath="org/testng/internal/TestListenerHelper.java"/>
      <Message>In method org.testng.internal.TestListenerHelper.createListenerFactory(TestNGClassFinder, Class)</Message>
    </Method>
    <SourceLine classname="org.testng.internal.TestListenerHelper" primary="true" start="157" end="157" startBytecode="51" endBytecode="51" sourcefile="TestListenerHelper.java" sourcepath="org/testng/internal/TestListenerHelper.java">
      <Message>At TestListenerHelper.java:[line 157]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="REFLC_REFLECTION_MAY_INCREASE_ACCESSIBILITY_OF_CLASS" priority="2" rank="18" abbrev="REFLC" category="MALICIOUS_CODE" instanceHash="9f0e56a145a62b1a0f8497ef4d667f35" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Public method uses reflection to create a class it gets in its parameter which could increase the accessibility of any class</ShortMessage>
    <LongMessage>Public method org.testng.internal.TestListenerHelper.createListenerFactory(TestNGClassFinder, Class) uses reflection to create a class it gets in its parameter which could increase the accessibility of any class</LongMessage>
    <Class classname="org.testng.internal.TestListenerHelper" primary="true">
      <SourceLine classname="org.testng.internal.TestListenerHelper" start="19" end="158" sourcefile="TestListenerHelper.java" sourcepath="org/testng/internal/TestListenerHelper.java">
        <Message>At TestListenerHelper.java:[lines 19-158]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.TestListenerHelper</Message>
    </Class>
    <Method classname="org.testng.internal.TestListenerHelper" name="createListenerFactory" signature="(Lorg/testng/internal/TestNGClassFinder;Ljava/lang/Class;)Lorg/testng/ITestNGListenerFactory;" isStatic="true" primary="true">
      <SourceLine classname="org.testng.internal.TestListenerHelper" start="145" end="158" startBytecode="0" endBytecode="246" sourcefile="TestListenerHelper.java" sourcepath="org/testng/internal/TestListenerHelper.java"/>
      <Message>In method org.testng.internal.TestListenerHelper.createListenerFactory(TestNGClassFinder, Class)</Message>
    </Method>
    <SourceLine classname="org.testng.internal.TestListenerHelper" primary="true" start="154" end="154" startBytecode="38" endBytecode="38" sourcefile="TestListenerHelper.java" sourcepath="org/testng/internal/TestListenerHelper.java">
      <Message>At TestListenerHelper.java:[line 154]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="a5ce193aaf4e3413feb3793a302eeadb" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.internal.TestListenerHelper$ListenerHolder.getListenerClasses() may expose internal representation by returning TestListenerHelper$ListenerHolder.listenerClasses</LongMessage>
    <Class classname="org.testng.internal.TestListenerHelper$ListenerHolder" primary="true">
      <SourceLine classname="org.testng.internal.TestListenerHelper$ListenerHolder" start="162" end="171" sourcefile="TestListenerHelper.java" sourcepath="org/testng/internal/TestListenerHelper.java">
        <Message>At TestListenerHelper.java:[lines 162-171]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.TestListenerHelper$ListenerHolder</Message>
    </Class>
    <Method classname="org.testng.internal.TestListenerHelper$ListenerHolder" name="getListenerClasses" signature="()Ljava/util/List;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.TestListenerHelper$ListenerHolder" start="167" end="167" startBytecode="0" endBytecode="46" sourcefile="TestListenerHelper.java" sourcepath="org/testng/internal/TestListenerHelper.java"/>
      <Message>In method org.testng.internal.TestListenerHelper$ListenerHolder.getListenerClasses()</Message>
    </Method>
    <Field classname="org.testng.internal.TestListenerHelper$ListenerHolder" name="listenerClasses" signature="Ljava/util/List;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.TestListenerHelper$ListenerHolder" sourcefile="TestListenerHelper.java" sourcepath="org/testng/internal/TestListenerHelper.java">
        <Message>In TestListenerHelper.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.TestListenerHelper$ListenerHolder.listenerClasses</Message>
    </Field>
    <SourceLine classname="org.testng.internal.TestListenerHelper$ListenerHolder" primary="true" start="167" end="167" startBytecode="4" endBytecode="4" sourcefile="TestListenerHelper.java" sourcepath="org/testng/internal/TestListenerHelper.java">
      <Message>At TestListenerHelper.java:[line 167]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="8b7646e7cf0e138859ca9395efc0aab9" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.internal.TestMethodArguments.getAfterMethods() may expose internal representation by returning TestMethodArguments.afterMethods</LongMessage>
    <Class classname="org.testng.internal.TestMethodArguments" primary="true">
      <SourceLine classname="org.testng.internal.TestMethodArguments" start="7" end="44" sourcefile="TestMethodArguments.java" sourcepath="org/testng/internal/TestMethodArguments.java">
        <Message>At TestMethodArguments.java:[lines 7-44]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.TestMethodArguments</Message>
    </Class>
    <Method classname="org.testng.internal.TestMethodArguments" name="getAfterMethods" signature="()[Lorg/testng/ITestNGMethod;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.TestMethodArguments" start="36" end="36" startBytecode="0" endBytecode="46" sourcefile="TestMethodArguments.java" sourcepath="org/testng/internal/TestMethodArguments.java"/>
      <Message>In method org.testng.internal.TestMethodArguments.getAfterMethods()</Message>
    </Method>
    <Field classname="org.testng.internal.TestMethodArguments" name="afterMethods" signature="[Lorg/testng/ITestNGMethod;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.TestMethodArguments" sourcefile="TestMethodArguments.java" sourcepath="org/testng/internal/TestMethodArguments.java">
        <Message>In TestMethodArguments.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.TestMethodArguments.afterMethods</Message>
    </Field>
    <SourceLine classname="org.testng.internal.TestMethodArguments" primary="true" start="36" end="36" startBytecode="4" endBytecode="4" sourcefile="TestMethodArguments.java" sourcepath="org/testng/internal/TestMethodArguments.java">
      <Message>At TestMethodArguments.java:[line 36]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="e96e3181f1f369b519d03f401eb0a079" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.internal.TestMethodArguments.getBeforeMethods() may expose internal representation by returning TestMethodArguments.beforeMethods</LongMessage>
    <Class classname="org.testng.internal.TestMethodArguments" primary="true">
      <SourceLine classname="org.testng.internal.TestMethodArguments" start="7" end="44" sourcefile="TestMethodArguments.java" sourcepath="org/testng/internal/TestMethodArguments.java">
        <Message>At TestMethodArguments.java:[lines 7-44]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.TestMethodArguments</Message>
    </Class>
    <Method classname="org.testng.internal.TestMethodArguments" name="getBeforeMethods" signature="()[Lorg/testng/ITestNGMethod;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.TestMethodArguments" start="32" end="32" startBytecode="0" endBytecode="46" sourcefile="TestMethodArguments.java" sourcepath="org/testng/internal/TestMethodArguments.java"/>
      <Message>In method org.testng.internal.TestMethodArguments.getBeforeMethods()</Message>
    </Method>
    <Field classname="org.testng.internal.TestMethodArguments" name="beforeMethods" signature="[Lorg/testng/ITestNGMethod;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.TestMethodArguments" sourcefile="TestMethodArguments.java" sourcepath="org/testng/internal/TestMethodArguments.java">
        <Message>In TestMethodArguments.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.TestMethodArguments.beforeMethods</Message>
    </Field>
    <SourceLine classname="org.testng.internal.TestMethodArguments" primary="true" start="32" end="32" startBytecode="4" endBytecode="4" sourcefile="TestMethodArguments.java" sourcepath="org/testng/internal/TestMethodArguments.java">
      <Message>At TestMethodArguments.java:[line 32]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="164dea08aa0379571f47fb18d0066bd1" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.internal.TestMethodArguments.getGroupMethods() may expose internal representation by returning TestMethodArguments.groupMethods</LongMessage>
    <Class classname="org.testng.internal.TestMethodArguments" primary="true">
      <SourceLine classname="org.testng.internal.TestMethodArguments" start="7" end="44" sourcefile="TestMethodArguments.java" sourcepath="org/testng/internal/TestMethodArguments.java">
        <Message>At TestMethodArguments.java:[lines 7-44]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.TestMethodArguments</Message>
    </Class>
    <Method classname="org.testng.internal.TestMethodArguments" name="getGroupMethods" signature="()Lorg/testng/internal/ConfigurationGroupMethods;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.TestMethodArguments" start="40" end="40" startBytecode="0" endBytecode="46" sourcefile="TestMethodArguments.java" sourcepath="org/testng/internal/TestMethodArguments.java"/>
      <Message>In method org.testng.internal.TestMethodArguments.getGroupMethods()</Message>
    </Method>
    <Field classname="org.testng.internal.TestMethodArguments" name="groupMethods" signature="Lorg/testng/internal/ConfigurationGroupMethods;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.TestMethodArguments" sourcefile="TestMethodArguments.java" sourcepath="org/testng/internal/TestMethodArguments.java">
        <Message>In TestMethodArguments.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.TestMethodArguments.groupMethods</Message>
    </Field>
    <SourceLine classname="org.testng.internal.TestMethodArguments" primary="true" start="40" end="40" startBytecode="4" endBytecode="4" sourcefile="TestMethodArguments.java" sourcepath="org/testng/internal/TestMethodArguments.java">
      <Message>At TestMethodArguments.java:[line 40]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="e1fc0362613e6b05a9575e4ed3334b23" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>org.testng.internal.TestMethodArguments$Builder.forTestMethod(ITestNGMethod) may expose internal representation by storing an externally mutable object into TestMethodArguments$Builder.tm</LongMessage>
    <Class classname="org.testng.internal.TestMethodArguments$Builder" primary="true">
      <SourceLine classname="org.testng.internal.TestMethodArguments$Builder" start="47" end="117" sourcefile="TestMethodArguments.java" sourcepath="org/testng/internal/TestMethodArguments.java">
        <Message>At TestMethodArguments.java:[lines 47-117]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.TestMethodArguments$Builder</Message>
    </Class>
    <Method classname="org.testng.internal.TestMethodArguments$Builder" name="forTestMethod" signature="(Lorg/testng/ITestNGMethod;)Lorg/testng/internal/TestMethodArguments$Builder;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.TestMethodArguments$Builder" start="65" end="66" startBytecode="0" endBytecode="62" sourcefile="TestMethodArguments.java" sourcepath="org/testng/internal/TestMethodArguments.java"/>
      <Message>In method org.testng.internal.TestMethodArguments$Builder.forTestMethod(ITestNGMethod)</Message>
    </Method>
    <Field classname="org.testng.internal.TestMethodArguments$Builder" name="tm" signature="Lorg/testng/ITestNGMethod;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.TestMethodArguments$Builder" sourcefile="TestMethodArguments.java" sourcepath="org/testng/internal/TestMethodArguments.java">
        <Message>In TestMethodArguments.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.TestMethodArguments$Builder.tm</Message>
    </Field>
    <LocalVariable name="tm" register="1" pc="2" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named tm</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.internal.TestMethodArguments$Builder" primary="true" start="65" end="65" startBytecode="2" endBytecode="2" sourcefile="TestMethodArguments.java" sourcepath="org/testng/internal/TestMethodArguments.java">
      <Message>At TestMethodArguments.java:[line 65]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="e17c31e467bf42dccd2d26510188eade" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>org.testng.internal.TestMethodArguments$Builder.usingAfterMethods(ITestNGMethod[]) may expose internal representation by storing an externally mutable object into TestMethodArguments$Builder.afterMethods</LongMessage>
    <Class classname="org.testng.internal.TestMethodArguments$Builder" primary="true">
      <SourceLine classname="org.testng.internal.TestMethodArguments$Builder" start="47" end="117" sourcefile="TestMethodArguments.java" sourcepath="org/testng/internal/TestMethodArguments.java">
        <Message>At TestMethodArguments.java:[lines 47-117]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.TestMethodArguments$Builder</Message>
    </Class>
    <Method classname="org.testng.internal.TestMethodArguments$Builder" name="usingAfterMethods" signature="([Lorg/testng/ITestNGMethod;)Lorg/testng/internal/TestMethodArguments$Builder;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.TestMethodArguments$Builder" start="95" end="96" startBytecode="0" endBytecode="62" sourcefile="TestMethodArguments.java" sourcepath="org/testng/internal/TestMethodArguments.java"/>
      <Message>In method org.testng.internal.TestMethodArguments$Builder.usingAfterMethods(ITestNGMethod[])</Message>
    </Method>
    <Field classname="org.testng.internal.TestMethodArguments$Builder" name="afterMethods" signature="[Lorg/testng/ITestNGMethod;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.TestMethodArguments$Builder" sourcefile="TestMethodArguments.java" sourcepath="org/testng/internal/TestMethodArguments.java">
        <Message>In TestMethodArguments.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.TestMethodArguments$Builder.afterMethods</Message>
    </Field>
    <LocalVariable name="afterMethods" register="1" pc="2" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named afterMethods</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.internal.TestMethodArguments$Builder" primary="true" start="95" end="95" startBytecode="2" endBytecode="2" sourcefile="TestMethodArguments.java" sourcepath="org/testng/internal/TestMethodArguments.java">
      <Message>At TestMethodArguments.java:[line 95]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="db22c6b9fa8cdaf4b35281017539fbfb" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>org.testng.internal.TestMethodArguments$Builder.usingBeforeMethods(ITestNGMethod[]) may expose internal representation by storing an externally mutable object into TestMethodArguments$Builder.beforeMethods</LongMessage>
    <Class classname="org.testng.internal.TestMethodArguments$Builder" primary="true">
      <SourceLine classname="org.testng.internal.TestMethodArguments$Builder" start="47" end="117" sourcefile="TestMethodArguments.java" sourcepath="org/testng/internal/TestMethodArguments.java">
        <Message>At TestMethodArguments.java:[lines 47-117]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.TestMethodArguments$Builder</Message>
    </Class>
    <Method classname="org.testng.internal.TestMethodArguments$Builder" name="usingBeforeMethods" signature="([Lorg/testng/ITestNGMethod;)Lorg/testng/internal/TestMethodArguments$Builder;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.TestMethodArguments$Builder" start="90" end="91" startBytecode="0" endBytecode="62" sourcefile="TestMethodArguments.java" sourcepath="org/testng/internal/TestMethodArguments.java"/>
      <Message>In method org.testng.internal.TestMethodArguments$Builder.usingBeforeMethods(ITestNGMethod[])</Message>
    </Method>
    <Field classname="org.testng.internal.TestMethodArguments$Builder" name="beforeMethods" signature="[Lorg/testng/ITestNGMethod;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.TestMethodArguments$Builder" sourcefile="TestMethodArguments.java" sourcepath="org/testng/internal/TestMethodArguments.java">
        <Message>In TestMethodArguments.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.TestMethodArguments$Builder.beforeMethods</Message>
    </Field>
    <LocalVariable name="beforeMethods" register="1" pc="2" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named beforeMethods</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.internal.TestMethodArguments$Builder" primary="true" start="90" end="90" startBytecode="2" endBytecode="2" sourcefile="TestMethodArguments.java" sourcepath="org/testng/internal/TestMethodArguments.java">
      <Message>At TestMethodArguments.java:[line 90]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="37b3ab6d7abfa254c9a6439391b1d721" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>org.testng.internal.TestMethodArguments$Builder.usingGroupMethods(ConfigurationGroupMethods) may expose internal representation by storing an externally mutable object into TestMethodArguments$Builder.groupMethods</LongMessage>
    <Class classname="org.testng.internal.TestMethodArguments$Builder" primary="true">
      <SourceLine classname="org.testng.internal.TestMethodArguments$Builder" start="47" end="117" sourcefile="TestMethodArguments.java" sourcepath="org/testng/internal/TestMethodArguments.java">
        <Message>At TestMethodArguments.java:[lines 47-117]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.TestMethodArguments$Builder</Message>
    </Class>
    <Method classname="org.testng.internal.TestMethodArguments$Builder" name="usingGroupMethods" signature="(Lorg/testng/internal/ConfigurationGroupMethods;)Lorg/testng/internal/TestMethodArguments$Builder;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.TestMethodArguments$Builder" start="100" end="101" startBytecode="0" endBytecode="62" sourcefile="TestMethodArguments.java" sourcepath="org/testng/internal/TestMethodArguments.java"/>
      <Message>In method org.testng.internal.TestMethodArguments$Builder.usingGroupMethods(ConfigurationGroupMethods)</Message>
    </Method>
    <Field classname="org.testng.internal.TestMethodArguments$Builder" name="groupMethods" signature="Lorg/testng/internal/ConfigurationGroupMethods;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.TestMethodArguments$Builder" sourcefile="TestMethodArguments.java" sourcepath="org/testng/internal/TestMethodArguments.java">
        <Message>In TestMethodArguments.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.TestMethodArguments$Builder.groupMethods</Message>
    </Field>
    <LocalVariable name="groupMethods" register="1" pc="2" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named groupMethods</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.internal.TestMethodArguments$Builder" primary="true" start="100" end="100" startBytecode="2" endBytecode="2" sourcefile="TestMethodArguments.java" sourcepath="org/testng/internal/TestMethodArguments.java">
      <Message>At TestMethodArguments.java:[line 100]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="7d4fc4293eb5a1e0580ebbf59f58f824" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>org.testng.internal.TestMethodArguments$Builder.withParameterValues(Object[]) may expose internal representation by storing an externally mutable object into TestMethodArguments$Builder.parameterValues</LongMessage>
    <Class classname="org.testng.internal.TestMethodArguments$Builder" primary="true">
      <SourceLine classname="org.testng.internal.TestMethodArguments$Builder" start="47" end="117" sourcefile="TestMethodArguments.java" sourcepath="org/testng/internal/TestMethodArguments.java">
        <Message>At TestMethodArguments.java:[lines 47-117]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.TestMethodArguments$Builder</Message>
    </Class>
    <Method classname="org.testng.internal.TestMethodArguments$Builder" name="withParameterValues" signature="([Ljava/lang/Object;)Lorg/testng/internal/TestMethodArguments$Builder;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.TestMethodArguments$Builder" start="70" end="71" startBytecode="0" endBytecode="62" sourcefile="TestMethodArguments.java" sourcepath="org/testng/internal/TestMethodArguments.java"/>
      <Message>In method org.testng.internal.TestMethodArguments$Builder.withParameterValues(Object[])</Message>
    </Method>
    <Field classname="org.testng.internal.TestMethodArguments$Builder" name="parameterValues" signature="[Ljava/lang/Object;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.TestMethodArguments$Builder" sourcefile="TestMethodArguments.java" sourcepath="org/testng/internal/TestMethodArguments.java">
        <Message>In TestMethodArguments.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.TestMethodArguments$Builder.parameterValues</Message>
    </Field>
    <LocalVariable name="parameterValues" register="1" pc="2" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named parameterValues</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.internal.TestMethodArguments$Builder" primary="true" start="70" end="70" startBytecode="2" endBytecode="2" sourcefile="TestMethodArguments.java" sourcepath="org/testng/internal/TestMethodArguments.java">
      <Message>At TestMethodArguments.java:[line 70]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="adad1398361fd31d42acafed0ce8deab" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>org.testng.internal.TestMethodArguments$Builder.withParameters(Map) may expose internal representation by storing an externally mutable object into TestMethodArguments$Builder.params</LongMessage>
    <Class classname="org.testng.internal.TestMethodArguments$Builder" primary="true">
      <SourceLine classname="org.testng.internal.TestMethodArguments$Builder" start="47" end="117" sourcefile="TestMethodArguments.java" sourcepath="org/testng/internal/TestMethodArguments.java">
        <Message>At TestMethodArguments.java:[lines 47-117]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.TestMethodArguments$Builder</Message>
    </Class>
    <Method classname="org.testng.internal.TestMethodArguments$Builder" name="withParameters" signature="(Ljava/util/Map;)Lorg/testng/internal/TestMethodArguments$Builder;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.TestMethodArguments$Builder" start="80" end="81" startBytecode="0" endBytecode="80" sourcefile="TestMethodArguments.java" sourcepath="org/testng/internal/TestMethodArguments.java"/>
      <Message>In method org.testng.internal.TestMethodArguments$Builder.withParameters(Map)</Message>
    </Method>
    <Field classname="org.testng.internal.TestMethodArguments$Builder" name="params" signature="Ljava/util/Map;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.TestMethodArguments$Builder" sourcefile="TestMethodArguments.java" sourcepath="org/testng/internal/TestMethodArguments.java">
        <Message>In TestMethodArguments.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.TestMethodArguments$Builder.params</Message>
    </Field>
    <LocalVariable name="params" register="1" pc="2" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named params</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.internal.TestMethodArguments$Builder" primary="true" start="80" end="80" startBytecode="2" endBytecode="2" sourcefile="TestMethodArguments.java" sourcepath="org/testng/internal/TestMethodArguments.java">
      <Message>At TestMethodArguments.java:[line 80]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="SE_COMPARATOR_SHOULD_BE_SERIALIZABLE" priority="2" rank="19" abbrev="Se" category="BAD_PRACTICE" instanceHash="1353b2c17e181cf86272cc26e78dfbbe" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Comparator doesn&apos;t implement Serializable</ShortMessage>
    <LongMessage>org.testng.internal.TestMethodComparator implements Comparator but not Serializable</LongMessage>
    <Class classname="org.testng.internal.TestMethodComparator" primary="true">
      <SourceLine classname="org.testng.internal.TestMethodComparator" start="7" end="25" sourcefile="TestMethodComparator.java" sourcepath="org/testng/internal/TestMethodComparator.java">
        <Message>At TestMethodComparator.java:[lines 7-25]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.TestMethodComparator</Message>
    </Class>
    <SourceLine classname="org.testng.internal.TestMethodComparator" start="7" end="25" sourcefile="TestMethodComparator.java" sourcepath="org/testng/internal/TestMethodComparator.java" synthetic="true">
      <Message>At TestMethodComparator.java:[lines 7-25]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="c8be024549500a8927754f5d0be0b668" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.internal.TestMethodWithDataProviderMethodWorker.call() may expose internal representation by returning TestMethodWithDataProviderMethodWorker.m_testResults</LongMessage>
    <Class classname="org.testng.internal.TestMethodWithDataProviderMethodWorker" primary="true">
      <SourceLine classname="org.testng.internal.TestMethodWithDataProviderMethodWorker" start="15" end="137" sourcefile="TestMethodWithDataProviderMethodWorker.java" sourcepath="org/testng/internal/TestMethodWithDataProviderMethodWorker.java">
        <Message>At TestMethodWithDataProviderMethodWorker.java:[lines 15-137]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.TestMethodWithDataProviderMethodWorker</Message>
    </Class>
    <Method classname="org.testng.internal.TestMethodWithDataProviderMethodWorker" name="call" signature="()Ljava/util/List;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.TestMethodWithDataProviderMethodWorker" start="69" end="133" startBytecode="0" endBytecode="1319" sourcefile="TestMethodWithDataProviderMethodWorker.java" sourcepath="org/testng/internal/TestMethodWithDataProviderMethodWorker.java"/>
      <Message>In method org.testng.internal.TestMethodWithDataProviderMethodWorker.call()</Message>
    </Method>
    <Field classname="org.testng.internal.TestMethodWithDataProviderMethodWorker" name="m_testResults" signature="Ljava/util/List;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.TestMethodWithDataProviderMethodWorker" sourcefile="TestMethodWithDataProviderMethodWorker.java" sourcepath="org/testng/internal/TestMethodWithDataProviderMethodWorker.java">
        <Message>In TestMethodWithDataProviderMethodWorker.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.TestMethodWithDataProviderMethodWorker.m_testResults</Message>
    </Field>
    <SourceLine classname="org.testng.internal.TestMethodWithDataProviderMethodWorker" primary="true" start="133" end="133" startBytecode="746" endBytecode="746" sourcefile="TestMethodWithDataProviderMethodWorker.java" sourcepath="org/testng/internal/TestMethodWithDataProviderMethodWorker.java">
      <Message>At TestMethodWithDataProviderMethodWorker.java:[line 133]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="56b1ee7b4f59dbf0df1823c0e2ffcd97" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>new org.testng.internal.TestMethodWithDataProviderMethodWorker(ITestInvoker, ITestNGMethod, int, Object[], Object, Map, ITestClass, ITestNGMethod[], ITestNGMethod[], ConfigurationGroupMethods, ITestContext, boolean, int, int, ITestResultNotifier) may expose internal representation by storing an externally mutable object into TestMethodWithDataProviderMethodWorker.m_afterMethods</LongMessage>
    <Class classname="org.testng.internal.TestMethodWithDataProviderMethodWorker" primary="true">
      <SourceLine classname="org.testng.internal.TestMethodWithDataProviderMethodWorker" start="15" end="137" sourcefile="TestMethodWithDataProviderMethodWorker.java" sourcepath="org/testng/internal/TestMethodWithDataProviderMethodWorker.java">
        <Message>At TestMethodWithDataProviderMethodWorker.java:[lines 15-137]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.TestMethodWithDataProviderMethodWorker</Message>
    </Class>
    <Method classname="org.testng.internal.TestMethodWithDataProviderMethodWorker" name="&lt;init&gt;" signature="(Lorg/testng/internal/ITestInvoker;Lorg/testng/ITestNGMethod;I[Ljava/lang/Object;Ljava/lang/Object;Ljava/util/Map;Lorg/testng/ITestClass;[Lorg/testng/ITestNGMethod;[Lorg/testng/ITestNGMethod;Lorg/testng/internal/ConfigurationGroupMethods;Lorg/testng/ITestContext;ZIILorg/testng/internal/ITestResultNotifier;)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.TestMethodWithDataProviderMethodWorker" start="49" end="65" startBytecode="0" endBytecode="376" sourcefile="TestMethodWithDataProviderMethodWorker.java" sourcepath="org/testng/internal/TestMethodWithDataProviderMethodWorker.java"/>
      <Message>In method new org.testng.internal.TestMethodWithDataProviderMethodWorker(ITestInvoker, ITestNGMethod, int, Object[], Object, Map, ITestClass, ITestNGMethod[], ITestNGMethod[], ConfigurationGroupMethods, ITestContext, boolean, int, int, ITestResultNotifier)</Message>
    </Method>
    <Field classname="org.testng.internal.TestMethodWithDataProviderMethodWorker" name="m_afterMethods" signature="[Lorg/testng/ITestNGMethod;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.TestMethodWithDataProviderMethodWorker" sourcefile="TestMethodWithDataProviderMethodWorker.java" sourcepath="org/testng/internal/TestMethodWithDataProviderMethodWorker.java">
        <Message>In TestMethodWithDataProviderMethodWorker.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.TestMethodWithDataProviderMethodWorker.m_afterMethods</Message>
    </Field>
    <LocalVariable name="afterMethods" register="9" pc="59" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named afterMethods</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.internal.TestMethodWithDataProviderMethodWorker" primary="true" start="58" end="58" startBytecode="59" endBytecode="59" sourcefile="TestMethodWithDataProviderMethodWorker.java" sourcepath="org/testng/internal/TestMethodWithDataProviderMethodWorker.java">
      <Message>At TestMethodWithDataProviderMethodWorker.java:[line 58]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="a9b67019fad217253886fc5dd39d2d06" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>new org.testng.internal.TestMethodWithDataProviderMethodWorker(ITestInvoker, ITestNGMethod, int, Object[], Object, Map, ITestClass, ITestNGMethod[], ITestNGMethod[], ConfigurationGroupMethods, ITestContext, boolean, int, int, ITestResultNotifier) may expose internal representation by storing an externally mutable object into TestMethodWithDataProviderMethodWorker.m_beforeMethods</LongMessage>
    <Class classname="org.testng.internal.TestMethodWithDataProviderMethodWorker" primary="true">
      <SourceLine classname="org.testng.internal.TestMethodWithDataProviderMethodWorker" start="15" end="137" sourcefile="TestMethodWithDataProviderMethodWorker.java" sourcepath="org/testng/internal/TestMethodWithDataProviderMethodWorker.java">
        <Message>At TestMethodWithDataProviderMethodWorker.java:[lines 15-137]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.TestMethodWithDataProviderMethodWorker</Message>
    </Class>
    <Method classname="org.testng.internal.TestMethodWithDataProviderMethodWorker" name="&lt;init&gt;" signature="(Lorg/testng/internal/ITestInvoker;Lorg/testng/ITestNGMethod;I[Ljava/lang/Object;Ljava/lang/Object;Ljava/util/Map;Lorg/testng/ITestClass;[Lorg/testng/ITestNGMethod;[Lorg/testng/ITestNGMethod;Lorg/testng/internal/ConfigurationGroupMethods;Lorg/testng/ITestContext;ZIILorg/testng/internal/ITestResultNotifier;)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.TestMethodWithDataProviderMethodWorker" start="49" end="65" startBytecode="0" endBytecode="376" sourcefile="TestMethodWithDataProviderMethodWorker.java" sourcepath="org/testng/internal/TestMethodWithDataProviderMethodWorker.java"/>
      <Message>In method new org.testng.internal.TestMethodWithDataProviderMethodWorker(ITestInvoker, ITestNGMethod, int, Object[], Object, Map, ITestClass, ITestNGMethod[], ITestNGMethod[], ConfigurationGroupMethods, ITestContext, boolean, int, int, ITestResultNotifier)</Message>
    </Method>
    <Field classname="org.testng.internal.TestMethodWithDataProviderMethodWorker" name="m_beforeMethods" signature="[Lorg/testng/ITestNGMethod;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.TestMethodWithDataProviderMethodWorker" sourcefile="TestMethodWithDataProviderMethodWorker.java" sourcepath="org/testng/internal/TestMethodWithDataProviderMethodWorker.java">
        <Message>In TestMethodWithDataProviderMethodWorker.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.TestMethodWithDataProviderMethodWorker.m_beforeMethods</Message>
    </Field>
    <LocalVariable name="beforeMethods" register="8" pc="53" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named beforeMethods</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.internal.TestMethodWithDataProviderMethodWorker" primary="true" start="57" end="57" startBytecode="53" endBytecode="53" sourcefile="TestMethodWithDataProviderMethodWorker.java" sourcepath="org/testng/internal/TestMethodWithDataProviderMethodWorker.java">
      <Message>At TestMethodWithDataProviderMethodWorker.java:[line 57]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="3fd55e3221103c5a4b82a6987387ac94" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>new org.testng.internal.TestMethodWithDataProviderMethodWorker(ITestInvoker, ITestNGMethod, int, Object[], Object, Map, ITestClass, ITestNGMethod[], ITestNGMethod[], ConfigurationGroupMethods, ITestContext, boolean, int, int, ITestResultNotifier) may expose internal representation by storing an externally mutable object into TestMethodWithDataProviderMethodWorker.m_groupMethods</LongMessage>
    <Class classname="org.testng.internal.TestMethodWithDataProviderMethodWorker" primary="true">
      <SourceLine classname="org.testng.internal.TestMethodWithDataProviderMethodWorker" start="15" end="137" sourcefile="TestMethodWithDataProviderMethodWorker.java" sourcepath="org/testng/internal/TestMethodWithDataProviderMethodWorker.java">
        <Message>At TestMethodWithDataProviderMethodWorker.java:[lines 15-137]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.TestMethodWithDataProviderMethodWorker</Message>
    </Class>
    <Method classname="org.testng.internal.TestMethodWithDataProviderMethodWorker" name="&lt;init&gt;" signature="(Lorg/testng/internal/ITestInvoker;Lorg/testng/ITestNGMethod;I[Ljava/lang/Object;Ljava/lang/Object;Ljava/util/Map;Lorg/testng/ITestClass;[Lorg/testng/ITestNGMethod;[Lorg/testng/ITestNGMethod;Lorg/testng/internal/ConfigurationGroupMethods;Lorg/testng/ITestContext;ZIILorg/testng/internal/ITestResultNotifier;)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.TestMethodWithDataProviderMethodWorker" start="49" end="65" startBytecode="0" endBytecode="376" sourcefile="TestMethodWithDataProviderMethodWorker.java" sourcepath="org/testng/internal/TestMethodWithDataProviderMethodWorker.java"/>
      <Message>In method new org.testng.internal.TestMethodWithDataProviderMethodWorker(ITestInvoker, ITestNGMethod, int, Object[], Object, Map, ITestClass, ITestNGMethod[], ITestNGMethod[], ConfigurationGroupMethods, ITestContext, boolean, int, int, ITestResultNotifier)</Message>
    </Method>
    <Field classname="org.testng.internal.TestMethodWithDataProviderMethodWorker" name="m_groupMethods" signature="Lorg/testng/internal/ConfigurationGroupMethods;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.TestMethodWithDataProviderMethodWorker" sourcefile="TestMethodWithDataProviderMethodWorker.java" sourcepath="org/testng/internal/TestMethodWithDataProviderMethodWorker.java">
        <Message>In TestMethodWithDataProviderMethodWorker.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.TestMethodWithDataProviderMethodWorker.m_groupMethods</Message>
    </Field>
    <LocalVariable name="groupMethods" register="10" pc="65" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named groupMethods</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.internal.TestMethodWithDataProviderMethodWorker" primary="true" start="59" end="59" startBytecode="65" endBytecode="65" sourcefile="TestMethodWithDataProviderMethodWorker.java" sourcepath="org/testng/internal/TestMethodWithDataProviderMethodWorker.java">
      <Message>At TestMethodWithDataProviderMethodWorker.java:[line 59]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="8d24bdd31358d90cfadf6b806ed6155b" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>new org.testng.internal.TestMethodWithDataProviderMethodWorker(ITestInvoker, ITestNGMethod, int, Object[], Object, Map, ITestClass, ITestNGMethod[], ITestNGMethod[], ConfigurationGroupMethods, ITestContext, boolean, int, int, ITestResultNotifier) may expose internal representation by storing an externally mutable object into TestMethodWithDataProviderMethodWorker.m_notifier</LongMessage>
    <Class classname="org.testng.internal.TestMethodWithDataProviderMethodWorker" primary="true">
      <SourceLine classname="org.testng.internal.TestMethodWithDataProviderMethodWorker" start="15" end="137" sourcefile="TestMethodWithDataProviderMethodWorker.java" sourcepath="org/testng/internal/TestMethodWithDataProviderMethodWorker.java">
        <Message>At TestMethodWithDataProviderMethodWorker.java:[lines 15-137]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.TestMethodWithDataProviderMethodWorker</Message>
    </Class>
    <Method classname="org.testng.internal.TestMethodWithDataProviderMethodWorker" name="&lt;init&gt;" signature="(Lorg/testng/internal/ITestInvoker;Lorg/testng/ITestNGMethod;I[Ljava/lang/Object;Ljava/lang/Object;Ljava/util/Map;Lorg/testng/ITestClass;[Lorg/testng/ITestNGMethod;[Lorg/testng/ITestNGMethod;Lorg/testng/internal/ConfigurationGroupMethods;Lorg/testng/ITestContext;ZIILorg/testng/internal/ITestResultNotifier;)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.TestMethodWithDataProviderMethodWorker" start="49" end="65" startBytecode="0" endBytecode="376" sourcefile="TestMethodWithDataProviderMethodWorker.java" sourcepath="org/testng/internal/TestMethodWithDataProviderMethodWorker.java"/>
      <Message>In method new org.testng.internal.TestMethodWithDataProviderMethodWorker(ITestInvoker, ITestNGMethod, int, Object[], Object, Map, ITestClass, ITestNGMethod[], ITestNGMethod[], ConfigurationGroupMethods, ITestContext, boolean, int, int, ITestResultNotifier)</Message>
    </Method>
    <Field classname="org.testng.internal.TestMethodWithDataProviderMethodWorker" name="m_notifier" signature="Lorg/testng/internal/ITestResultNotifier;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.TestMethodWithDataProviderMethodWorker" sourcefile="TestMethodWithDataProviderMethodWorker.java" sourcepath="org/testng/internal/TestMethodWithDataProviderMethodWorker.java">
        <Message>In TestMethodWithDataProviderMethodWorker.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.TestMethodWithDataProviderMethodWorker.m_notifier</Message>
    </Field>
    <LocalVariable name="notifier" register="15" pc="95" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named notifier</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.internal.TestMethodWithDataProviderMethodWorker" primary="true" start="64" end="64" startBytecode="95" endBytecode="95" sourcefile="TestMethodWithDataProviderMethodWorker.java" sourcepath="org/testng/internal/TestMethodWithDataProviderMethodWorker.java">
      <Message>At TestMethodWithDataProviderMethodWorker.java:[line 64]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="9eaba17ac990637bf038b590c44e4b6b" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>new org.testng.internal.TestMethodWithDataProviderMethodWorker(ITestInvoker, ITestNGMethod, int, Object[], Object, Map, ITestClass, ITestNGMethod[], ITestNGMethod[], ConfigurationGroupMethods, ITestContext, boolean, int, int, ITestResultNotifier) may expose internal representation by storing an externally mutable object into TestMethodWithDataProviderMethodWorker.m_parameterValues</LongMessage>
    <Class classname="org.testng.internal.TestMethodWithDataProviderMethodWorker" primary="true">
      <SourceLine classname="org.testng.internal.TestMethodWithDataProviderMethodWorker" start="15" end="137" sourcefile="TestMethodWithDataProviderMethodWorker.java" sourcepath="org/testng/internal/TestMethodWithDataProviderMethodWorker.java">
        <Message>At TestMethodWithDataProviderMethodWorker.java:[lines 15-137]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.TestMethodWithDataProviderMethodWorker</Message>
    </Class>
    <Method classname="org.testng.internal.TestMethodWithDataProviderMethodWorker" name="&lt;init&gt;" signature="(Lorg/testng/internal/ITestInvoker;Lorg/testng/ITestNGMethod;I[Ljava/lang/Object;Ljava/lang/Object;Ljava/util/Map;Lorg/testng/ITestClass;[Lorg/testng/ITestNGMethod;[Lorg/testng/ITestNGMethod;Lorg/testng/internal/ConfigurationGroupMethods;Lorg/testng/ITestContext;ZIILorg/testng/internal/ITestResultNotifier;)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.TestMethodWithDataProviderMethodWorker" start="49" end="65" startBytecode="0" endBytecode="376" sourcefile="TestMethodWithDataProviderMethodWorker.java" sourcepath="org/testng/internal/TestMethodWithDataProviderMethodWorker.java"/>
      <Message>In method new org.testng.internal.TestMethodWithDataProviderMethodWorker(ITestInvoker, ITestNGMethod, int, Object[], Object, Map, ITestClass, ITestNGMethod[], ITestNGMethod[], ConfigurationGroupMethods, ITestContext, boolean, int, int, ITestResultNotifier)</Message>
    </Method>
    <Field classname="org.testng.internal.TestMethodWithDataProviderMethodWorker" name="m_parameterValues" signature="[Ljava/lang/Object;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.TestMethodWithDataProviderMethodWorker" sourcefile="TestMethodWithDataProviderMethodWorker.java" sourcepath="org/testng/internal/TestMethodWithDataProviderMethodWorker.java">
        <Message>In TestMethodWithDataProviderMethodWorker.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.TestMethodWithDataProviderMethodWorker.m_parameterValues</Message>
    </Field>
    <LocalVariable name="parameterValues" register="4" pc="29" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named parameterValues</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.internal.TestMethodWithDataProviderMethodWorker" primary="true" start="53" end="53" startBytecode="29" endBytecode="29" sourcefile="TestMethodWithDataProviderMethodWorker.java" sourcepath="org/testng/internal/TestMethodWithDataProviderMethodWorker.java">
      <Message>At TestMethodWithDataProviderMethodWorker.java:[line 53]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="b054e6de720a644f92c8ffc626fe3a66" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>new org.testng.internal.TestMethodWithDataProviderMethodWorker(ITestInvoker, ITestNGMethod, int, Object[], Object, Map, ITestClass, ITestNGMethod[], ITestNGMethod[], ConfigurationGroupMethods, ITestContext, boolean, int, int, ITestResultNotifier) may expose internal representation by storing an externally mutable object into TestMethodWithDataProviderMethodWorker.m_parameters</LongMessage>
    <Class classname="org.testng.internal.TestMethodWithDataProviderMethodWorker" primary="true">
      <SourceLine classname="org.testng.internal.TestMethodWithDataProviderMethodWorker" start="15" end="137" sourcefile="TestMethodWithDataProviderMethodWorker.java" sourcepath="org/testng/internal/TestMethodWithDataProviderMethodWorker.java">
        <Message>At TestMethodWithDataProviderMethodWorker.java:[lines 15-137]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.TestMethodWithDataProviderMethodWorker</Message>
    </Class>
    <Method classname="org.testng.internal.TestMethodWithDataProviderMethodWorker" name="&lt;init&gt;" signature="(Lorg/testng/internal/ITestInvoker;Lorg/testng/ITestNGMethod;I[Ljava/lang/Object;Ljava/lang/Object;Ljava/util/Map;Lorg/testng/ITestClass;[Lorg/testng/ITestNGMethod;[Lorg/testng/ITestNGMethod;Lorg/testng/internal/ConfigurationGroupMethods;Lorg/testng/ITestContext;ZIILorg/testng/internal/ITestResultNotifier;)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.TestMethodWithDataProviderMethodWorker" start="49" end="65" startBytecode="0" endBytecode="376" sourcefile="TestMethodWithDataProviderMethodWorker.java" sourcepath="org/testng/internal/TestMethodWithDataProviderMethodWorker.java"/>
      <Message>In method new org.testng.internal.TestMethodWithDataProviderMethodWorker(ITestInvoker, ITestNGMethod, int, Object[], Object, Map, ITestClass, ITestNGMethod[], ITestNGMethod[], ConfigurationGroupMethods, ITestContext, boolean, int, int, ITestResultNotifier)</Message>
    </Method>
    <Field classname="org.testng.internal.TestMethodWithDataProviderMethodWorker" name="m_parameters" signature="Ljava/util/Map;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.TestMethodWithDataProviderMethodWorker" sourcefile="TestMethodWithDataProviderMethodWorker.java" sourcepath="org/testng/internal/TestMethodWithDataProviderMethodWorker.java">
        <Message>In TestMethodWithDataProviderMethodWorker.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.TestMethodWithDataProviderMethodWorker.m_parameters</Message>
    </Field>
    <LocalVariable name="parameters" register="6" pc="41" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named parameters</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.internal.TestMethodWithDataProviderMethodWorker" primary="true" start="55" end="55" startBytecode="41" endBytecode="41" sourcefile="TestMethodWithDataProviderMethodWorker.java" sourcepath="org/testng/internal/TestMethodWithDataProviderMethodWorker.java">
      <Message>At TestMethodWithDataProviderMethodWorker.java:[line 55]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="2b9c85dad66652ffb22027d4bd94f046" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>new org.testng.internal.TestMethodWithDataProviderMethodWorker(ITestInvoker, ITestNGMethod, int, Object[], Object, Map, ITestClass, ITestNGMethod[], ITestNGMethod[], ConfigurationGroupMethods, ITestContext, boolean, int, int, ITestResultNotifier) may expose internal representation by storing an externally mutable object into TestMethodWithDataProviderMethodWorker.m_testContext</LongMessage>
    <Class classname="org.testng.internal.TestMethodWithDataProviderMethodWorker" primary="true">
      <SourceLine classname="org.testng.internal.TestMethodWithDataProviderMethodWorker" start="15" end="137" sourcefile="TestMethodWithDataProviderMethodWorker.java" sourcepath="org/testng/internal/TestMethodWithDataProviderMethodWorker.java">
        <Message>At TestMethodWithDataProviderMethodWorker.java:[lines 15-137]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.TestMethodWithDataProviderMethodWorker</Message>
    </Class>
    <Method classname="org.testng.internal.TestMethodWithDataProviderMethodWorker" name="&lt;init&gt;" signature="(Lorg/testng/internal/ITestInvoker;Lorg/testng/ITestNGMethod;I[Ljava/lang/Object;Ljava/lang/Object;Ljava/util/Map;Lorg/testng/ITestClass;[Lorg/testng/ITestNGMethod;[Lorg/testng/ITestNGMethod;Lorg/testng/internal/ConfigurationGroupMethods;Lorg/testng/ITestContext;ZIILorg/testng/internal/ITestResultNotifier;)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.TestMethodWithDataProviderMethodWorker" start="49" end="65" startBytecode="0" endBytecode="376" sourcefile="TestMethodWithDataProviderMethodWorker.java" sourcepath="org/testng/internal/TestMethodWithDataProviderMethodWorker.java"/>
      <Message>In method new org.testng.internal.TestMethodWithDataProviderMethodWorker(ITestInvoker, ITestNGMethod, int, Object[], Object, Map, ITestClass, ITestNGMethod[], ITestNGMethod[], ConfigurationGroupMethods, ITestContext, boolean, int, int, ITestResultNotifier)</Message>
    </Method>
    <Field classname="org.testng.internal.TestMethodWithDataProviderMethodWorker" name="m_testContext" signature="Lorg/testng/ITestContext;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.TestMethodWithDataProviderMethodWorker" sourcefile="TestMethodWithDataProviderMethodWorker.java" sourcepath="org/testng/internal/TestMethodWithDataProviderMethodWorker.java">
        <Message>In TestMethodWithDataProviderMethodWorker.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.TestMethodWithDataProviderMethodWorker.m_testContext</Message>
    </Field>
    <LocalVariable name="testContext" register="11" pc="77" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named testContext</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.internal.TestMethodWithDataProviderMethodWorker" primary="true" start="61" end="61" startBytecode="77" endBytecode="77" sourcefile="TestMethodWithDataProviderMethodWorker.java" sourcepath="org/testng/internal/TestMethodWithDataProviderMethodWorker.java">
      <Message>At TestMethodWithDataProviderMethodWorker.java:[line 61]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="72b2a07e100ff26c7db3ec912289d50a" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>new org.testng.internal.TestMethodWithDataProviderMethodWorker(ITestInvoker, ITestNGMethod, int, Object[], Object, Map, ITestClass, ITestNGMethod[], ITestNGMethod[], ConfigurationGroupMethods, ITestContext, boolean, int, int, ITestResultNotifier) may expose internal representation by storing an externally mutable object into TestMethodWithDataProviderMethodWorker.m_testMethod</LongMessage>
    <Class classname="org.testng.internal.TestMethodWithDataProviderMethodWorker" primary="true">
      <SourceLine classname="org.testng.internal.TestMethodWithDataProviderMethodWorker" start="15" end="137" sourcefile="TestMethodWithDataProviderMethodWorker.java" sourcepath="org/testng/internal/TestMethodWithDataProviderMethodWorker.java">
        <Message>At TestMethodWithDataProviderMethodWorker.java:[lines 15-137]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.TestMethodWithDataProviderMethodWorker</Message>
    </Class>
    <Method classname="org.testng.internal.TestMethodWithDataProviderMethodWorker" name="&lt;init&gt;" signature="(Lorg/testng/internal/ITestInvoker;Lorg/testng/ITestNGMethod;I[Ljava/lang/Object;Ljava/lang/Object;Ljava/util/Map;Lorg/testng/ITestClass;[Lorg/testng/ITestNGMethod;[Lorg/testng/ITestNGMethod;Lorg/testng/internal/ConfigurationGroupMethods;Lorg/testng/ITestContext;ZIILorg/testng/internal/ITestResultNotifier;)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.TestMethodWithDataProviderMethodWorker" start="49" end="65" startBytecode="0" endBytecode="376" sourcefile="TestMethodWithDataProviderMethodWorker.java" sourcepath="org/testng/internal/TestMethodWithDataProviderMethodWorker.java"/>
      <Message>In method new org.testng.internal.TestMethodWithDataProviderMethodWorker(ITestInvoker, ITestNGMethod, int, Object[], Object, Map, ITestClass, ITestNGMethod[], ITestNGMethod[], ConfigurationGroupMethods, ITestContext, boolean, int, int, ITestResultNotifier)</Message>
    </Method>
    <Field classname="org.testng.internal.TestMethodWithDataProviderMethodWorker" name="m_testMethod" signature="Lorg/testng/ITestNGMethod;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.TestMethodWithDataProviderMethodWorker" sourcefile="TestMethodWithDataProviderMethodWorker.java" sourcepath="org/testng/internal/TestMethodWithDataProviderMethodWorker.java">
        <Message>In TestMethodWithDataProviderMethodWorker.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.TestMethodWithDataProviderMethodWorker.m_testMethod</Message>
    </Field>
    <LocalVariable name="testMethod" register="2" pc="18" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named testMethod</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.internal.TestMethodWithDataProviderMethodWorker" primary="true" start="51" end="51" startBytecode="18" endBytecode="18" sourcefile="TestMethodWithDataProviderMethodWorker.java" sourcepath="org/testng/internal/TestMethodWithDataProviderMethodWorker.java">
      <Message>At TestMethodWithDataProviderMethodWorker.java:[line 51]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="e7efbdbc843e2ef9c2987d2b4be82ede" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.internal.TestMethodWorker.getTestResults() may expose internal representation by returning TestMethodWorker.m_testResults</LongMessage>
    <Class classname="org.testng.internal.TestMethodWorker" primary="true">
      <SourceLine classname="org.testng.internal.TestMethodWorker" start="30" end="273" sourcefile="TestMethodWorker.java" sourcepath="org/testng/internal/TestMethodWorker.java">
        <Message>At TestMethodWorker.java:[lines 30-273]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.TestMethodWorker</Message>
    </Class>
    <Method classname="org.testng.internal.TestMethodWorker" name="getTestResults" signature="()Ljava/util/List;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.TestMethodWorker" start="231" end="231" startBytecode="0" endBytecode="46" sourcefile="TestMethodWorker.java" sourcepath="org/testng/internal/TestMethodWorker.java"/>
      <Message>In method org.testng.internal.TestMethodWorker.getTestResults()</Message>
    </Method>
    <Field classname="org.testng.internal.TestMethodWorker" name="m_testResults" signature="Ljava/util/List;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.TestMethodWorker" sourcefile="TestMethodWorker.java" sourcepath="org/testng/internal/TestMethodWorker.java">
        <Message>In TestMethodWorker.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.TestMethodWorker.m_testResults</Message>
    </Field>
    <SourceLine classname="org.testng.internal.TestMethodWorker" primary="true" start="231" end="231" startBytecode="4" endBytecode="4" sourcefile="TestMethodWorker.java" sourcepath="org/testng/internal/TestMethodWorker.java">
      <Message>At TestMethodWorker.java:[line 231]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="1e60625969182158e6e33abaa9edde4f" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>new org.testng.internal.TestMethodWorker(ITestInvoker, IConfigInvoker, List, Map, ConfigurationGroupMethods, ClassMethodMap, ITestContext, List) may expose internal representation by storing an externally mutable object into TestMethodWorker.m_classMethodMap</LongMessage>
    <Class classname="org.testng.internal.TestMethodWorker" primary="true">
      <SourceLine classname="org.testng.internal.TestMethodWorker" start="30" end="273" sourcefile="TestMethodWorker.java" sourcepath="org/testng/internal/TestMethodWorker.java">
        <Message>At TestMethodWorker.java:[lines 30-273]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.TestMethodWorker</Message>
    </Class>
    <Method classname="org.testng.internal.TestMethodWorker" name="&lt;init&gt;" signature="(Lorg/testng/internal/ITestInvoker;Lorg/testng/internal/IConfigInvoker;Ljava/util/List;Ljava/util/Map;Lorg/testng/internal/ConfigurationGroupMethods;Lorg/testng/ClassMethodMap;Lorg/testng/ITestContext;Ljava/util/List;)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.TestMethodWorker" start="56" end="65" startBytecode="0" endBytecode="276" sourcefile="TestMethodWorker.java" sourcepath="org/testng/internal/TestMethodWorker.java"/>
      <Message>In method new org.testng.internal.TestMethodWorker(ITestInvoker, IConfigInvoker, List, Map, ConfigurationGroupMethods, ClassMethodMap, ITestContext, List)</Message>
    </Method>
    <Field classname="org.testng.internal.TestMethodWorker" name="m_classMethodMap" signature="Lorg/testng/ClassMethodMap;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.TestMethodWorker" sourcefile="TestMethodWorker.java" sourcepath="org/testng/internal/TestMethodWorker.java">
        <Message>In TestMethodWorker.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.TestMethodWorker.m_classMethodMap</Message>
    </Field>
    <LocalVariable name="classMethodMap" register="6" pc="53" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named classMethodMap</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.internal.TestMethodWorker" primary="true" start="62" end="62" startBytecode="53" endBytecode="53" sourcefile="TestMethodWorker.java" sourcepath="org/testng/internal/TestMethodWorker.java">
      <Message>At TestMethodWorker.java:[line 62]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="2b4d957512ac78b561bf21c6b2a42802" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>new org.testng.internal.TestMethodWorker(ITestInvoker, IConfigInvoker, List, Map, ConfigurationGroupMethods, ClassMethodMap, ITestContext, List) may expose internal representation by storing an externally mutable object into TestMethodWorker.m_groupMethods</LongMessage>
    <Class classname="org.testng.internal.TestMethodWorker" primary="true">
      <SourceLine classname="org.testng.internal.TestMethodWorker" start="30" end="273" sourcefile="TestMethodWorker.java" sourcepath="org/testng/internal/TestMethodWorker.java">
        <Message>At TestMethodWorker.java:[lines 30-273]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.TestMethodWorker</Message>
    </Class>
    <Method classname="org.testng.internal.TestMethodWorker" name="&lt;init&gt;" signature="(Lorg/testng/internal/ITestInvoker;Lorg/testng/internal/IConfigInvoker;Ljava/util/List;Ljava/util/Map;Lorg/testng/internal/ConfigurationGroupMethods;Lorg/testng/ClassMethodMap;Lorg/testng/ITestContext;Ljava/util/List;)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.TestMethodWorker" start="56" end="65" startBytecode="0" endBytecode="276" sourcefile="TestMethodWorker.java" sourcepath="org/testng/internal/TestMethodWorker.java"/>
      <Message>In method new org.testng.internal.TestMethodWorker(ITestInvoker, IConfigInvoker, List, Map, ConfigurationGroupMethods, ClassMethodMap, ITestContext, List)</Message>
    </Method>
    <Field classname="org.testng.internal.TestMethodWorker" name="m_groupMethods" signature="Lorg/testng/internal/ConfigurationGroupMethods;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.TestMethodWorker" sourcefile="TestMethodWorker.java" sourcepath="org/testng/internal/TestMethodWorker.java">
        <Message>In TestMethodWorker.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.TestMethodWorker.m_groupMethods</Message>
    </Field>
    <LocalVariable name="groupMethods" register="5" pc="47" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named groupMethods</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.internal.TestMethodWorker" primary="true" start="61" end="61" startBytecode="47" endBytecode="47" sourcefile="TestMethodWorker.java" sourcepath="org/testng/internal/TestMethodWorker.java">
      <Message>At TestMethodWorker.java:[line 61]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="72c997a412ece64637cbfc94b46209bd" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>new org.testng.internal.TestMethodWorker(ITestInvoker, IConfigInvoker, List, Map, ConfigurationGroupMethods, ClassMethodMap, ITestContext, List) may expose internal representation by storing an externally mutable object into TestMethodWorker.m_listeners</LongMessage>
    <Class classname="org.testng.internal.TestMethodWorker" primary="true">
      <SourceLine classname="org.testng.internal.TestMethodWorker" start="30" end="273" sourcefile="TestMethodWorker.java" sourcepath="org/testng/internal/TestMethodWorker.java">
        <Message>At TestMethodWorker.java:[lines 30-273]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.TestMethodWorker</Message>
    </Class>
    <Method classname="org.testng.internal.TestMethodWorker" name="&lt;init&gt;" signature="(Lorg/testng/internal/ITestInvoker;Lorg/testng/internal/IConfigInvoker;Ljava/util/List;Ljava/util/Map;Lorg/testng/internal/ConfigurationGroupMethods;Lorg/testng/ClassMethodMap;Lorg/testng/ITestContext;Ljava/util/List;)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.TestMethodWorker" start="56" end="65" startBytecode="0" endBytecode="276" sourcefile="TestMethodWorker.java" sourcepath="org/testng/internal/TestMethodWorker.java"/>
      <Message>In method new org.testng.internal.TestMethodWorker(ITestInvoker, IConfigInvoker, List, Map, ConfigurationGroupMethods, ClassMethodMap, ITestContext, List)</Message>
    </Method>
    <Field classname="org.testng.internal.TestMethodWorker" name="m_listeners" signature="Ljava/util/List;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.TestMethodWorker" sourcefile="TestMethodWorker.java" sourcepath="org/testng/internal/TestMethodWorker.java">
        <Message>In TestMethodWorker.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.TestMethodWorker.m_listeners</Message>
    </Field>
    <LocalVariable name="listeners" register="8" pc="65" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named listeners</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.internal.TestMethodWorker" primary="true" start="64" end="64" startBytecode="65" endBytecode="65" sourcefile="TestMethodWorker.java" sourcepath="org/testng/internal/TestMethodWorker.java">
      <Message>At TestMethodWorker.java:[line 64]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="5bd22869a1cedcf95d5c2e1d45886d2b" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>new org.testng.internal.TestMethodWorker(ITestInvoker, IConfigInvoker, List, Map, ConfigurationGroupMethods, ClassMethodMap, ITestContext, List) may expose internal representation by storing an externally mutable object into TestMethodWorker.m_methodInstances</LongMessage>
    <Class classname="org.testng.internal.TestMethodWorker" primary="true">
      <SourceLine classname="org.testng.internal.TestMethodWorker" start="30" end="273" sourcefile="TestMethodWorker.java" sourcepath="org/testng/internal/TestMethodWorker.java">
        <Message>At TestMethodWorker.java:[lines 30-273]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.TestMethodWorker</Message>
    </Class>
    <Method classname="org.testng.internal.TestMethodWorker" name="&lt;init&gt;" signature="(Lorg/testng/internal/ITestInvoker;Lorg/testng/internal/IConfigInvoker;Ljava/util/List;Ljava/util/Map;Lorg/testng/internal/ConfigurationGroupMethods;Lorg/testng/ClassMethodMap;Lorg/testng/ITestContext;Ljava/util/List;)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.TestMethodWorker" start="56" end="65" startBytecode="0" endBytecode="276" sourcefile="TestMethodWorker.java" sourcepath="org/testng/internal/TestMethodWorker.java"/>
      <Message>In method new org.testng.internal.TestMethodWorker(ITestInvoker, IConfigInvoker, List, Map, ConfigurationGroupMethods, ClassMethodMap, ITestContext, List)</Message>
    </Method>
    <Field classname="org.testng.internal.TestMethodWorker" name="m_methodInstances" signature="Ljava/util/List;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.TestMethodWorker" sourcefile="TestMethodWorker.java" sourcepath="org/testng/internal/TestMethodWorker.java">
        <Message>In TestMethodWorker.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.TestMethodWorker.m_methodInstances</Message>
    </Field>
    <LocalVariable name="testMethods" register="3" pc="35" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named testMethods</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.internal.TestMethodWorker" primary="true" start="59" end="59" startBytecode="35" endBytecode="35" sourcefile="TestMethodWorker.java" sourcepath="org/testng/internal/TestMethodWorker.java">
      <Message>At TestMethodWorker.java:[line 59]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="f2bfb24785e886de85d3c74bcffdce0" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>new org.testng.internal.TestMethodWorker(ITestInvoker, IConfigInvoker, List, Map, ConfigurationGroupMethods, ClassMethodMap, ITestContext, List) may expose internal representation by storing an externally mutable object into TestMethodWorker.m_parameters</LongMessage>
    <Class classname="org.testng.internal.TestMethodWorker" primary="true">
      <SourceLine classname="org.testng.internal.TestMethodWorker" start="30" end="273" sourcefile="TestMethodWorker.java" sourcepath="org/testng/internal/TestMethodWorker.java">
        <Message>At TestMethodWorker.java:[lines 30-273]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.TestMethodWorker</Message>
    </Class>
    <Method classname="org.testng.internal.TestMethodWorker" name="&lt;init&gt;" signature="(Lorg/testng/internal/ITestInvoker;Lorg/testng/internal/IConfigInvoker;Ljava/util/List;Ljava/util/Map;Lorg/testng/internal/ConfigurationGroupMethods;Lorg/testng/ClassMethodMap;Lorg/testng/ITestContext;Ljava/util/List;)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.TestMethodWorker" start="56" end="65" startBytecode="0" endBytecode="276" sourcefile="TestMethodWorker.java" sourcepath="org/testng/internal/TestMethodWorker.java"/>
      <Message>In method new org.testng.internal.TestMethodWorker(ITestInvoker, IConfigInvoker, List, Map, ConfigurationGroupMethods, ClassMethodMap, ITestContext, List)</Message>
    </Method>
    <Field classname="org.testng.internal.TestMethodWorker" name="m_parameters" signature="Ljava/util/Map;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.TestMethodWorker" sourcefile="TestMethodWorker.java" sourcepath="org/testng/internal/TestMethodWorker.java">
        <Message>In TestMethodWorker.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.TestMethodWorker.m_parameters</Message>
    </Field>
    <LocalVariable name="parameters" register="4" pc="41" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named parameters</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.internal.TestMethodWorker" primary="true" start="60" end="60" startBytecode="41" endBytecode="41" sourcefile="TestMethodWorker.java" sourcepath="org/testng/internal/TestMethodWorker.java">
      <Message>At TestMethodWorker.java:[line 60]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="6dcc30c7ccbf8afa65239b8c2155d7d1" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>new org.testng.internal.TestMethodWorker(ITestInvoker, IConfigInvoker, List, Map, ConfigurationGroupMethods, ClassMethodMap, ITestContext, List) may expose internal representation by storing an externally mutable object into TestMethodWorker.m_testContext</LongMessage>
    <Class classname="org.testng.internal.TestMethodWorker" primary="true">
      <SourceLine classname="org.testng.internal.TestMethodWorker" start="30" end="273" sourcefile="TestMethodWorker.java" sourcepath="org/testng/internal/TestMethodWorker.java">
        <Message>At TestMethodWorker.java:[lines 30-273]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.TestMethodWorker</Message>
    </Class>
    <Method classname="org.testng.internal.TestMethodWorker" name="&lt;init&gt;" signature="(Lorg/testng/internal/ITestInvoker;Lorg/testng/internal/IConfigInvoker;Ljava/util/List;Ljava/util/Map;Lorg/testng/internal/ConfigurationGroupMethods;Lorg/testng/ClassMethodMap;Lorg/testng/ITestContext;Ljava/util/List;)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.TestMethodWorker" start="56" end="65" startBytecode="0" endBytecode="276" sourcefile="TestMethodWorker.java" sourcepath="org/testng/internal/TestMethodWorker.java"/>
      <Message>In method new org.testng.internal.TestMethodWorker(ITestInvoker, IConfigInvoker, List, Map, ConfigurationGroupMethods, ClassMethodMap, ITestContext, List)</Message>
    </Method>
    <Field classname="org.testng.internal.TestMethodWorker" name="m_testContext" signature="Lorg/testng/ITestContext;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.TestMethodWorker" sourcefile="TestMethodWorker.java" sourcepath="org/testng/internal/TestMethodWorker.java">
        <Message>In TestMethodWorker.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.TestMethodWorker.m_testContext</Message>
    </Field>
    <LocalVariable name="testContext" register="7" pc="59" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named testContext</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.internal.TestMethodWorker" primary="true" start="63" end="63" startBytecode="59" endBytecode="59" sourcefile="TestMethodWorker.java" sourcepath="org/testng/internal/TestMethodWorker.java">
      <Message>At TestMethodWorker.java:[line 63]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EQ_COMPARETO_USE_OBJECT_EQUALS" priority="2" rank="16" abbrev="Eq" category="BAD_PRACTICE" instanceHash="26222e47ab281f891d184ce3d548ee28" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Class defines compareTo(...) and uses Object.equals()</ShortMessage>
    <LongMessage>org.testng.internal.TestMethodWorker defines compareTo(Object) and uses Object.equals()</LongMessage>
    <Class classname="org.testng.internal.TestMethodWorker" primary="true">
      <SourceLine classname="org.testng.internal.TestMethodWorker" start="30" end="273" sourcefile="TestMethodWorker.java" sourcepath="org/testng/internal/TestMethodWorker.java">
        <Message>At TestMethodWorker.java:[lines 30-273]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.TestMethodWorker</Message>
    </Class>
    <Method classname="org.testng.internal.TestMethodWorker" name="compareTo" signature="(Ljava/lang/Object;)I" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.TestMethodWorker" start="30" end="30" startBytecode="0" endBytecode="50" sourcefile="TestMethodWorker.java" sourcepath="org/testng/internal/TestMethodWorker.java"/>
      <Message>In method org.testng.internal.TestMethodWorker.compareTo(Object)</Message>
    </Method>
    <SourceLine classname="org.testng.internal.TestMethodWorker" start="30" end="30" startBytecode="0" endBytecode="50" sourcefile="TestMethodWorker.java" sourcepath="org/testng/internal/TestMethodWorker.java" synthetic="true">
      <Message>At TestMethodWorker.java:[line 30]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="CT_CONSTRUCTOR_THROW" priority="2" rank="16" abbrev="CT" category="BAD_PRACTICE" instanceHash="d03fc597a17a215fba5350b7cdf26069" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Be wary of letting constructors throw exceptions.</ShortMessage>
    <LongMessage>Exception thrown in class org.testng.internal.TestNGClassFinder at new org.testng.internal.TestNGClassFinder(ClassInfoMap, Map, IConfiguration, ITestContext, DataProviderHolder) will leave the constructor. The object under construction remains partially initialized and may be vulnerable to Finalizer attacks.</LongMessage>
    <Class classname="org.testng.internal.TestNGClassFinder" primary="true">
      <SourceLine classname="org.testng.internal.TestNGClassFinder" start="36" end="337" sourcefile="TestNGClassFinder.java" sourcepath="org/testng/internal/TestNGClassFinder.java">
        <Message>At TestNGClassFinder.java:[lines 36-337]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.TestNGClassFinder</Message>
    </Class>
    <Method classname="org.testng.internal.TestNGClassFinder" name="&lt;init&gt;" signature="(Lorg/testng/internal/ClassInfoMap;Ljava/util/Map;Lorg/testng/internal/IConfiguration;Lorg/testng/ITestContext;Lorg/testng/DataProviderHolder;)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.TestNGClassFinder" start="51" end="86" startBytecode="0" endBytecode="624" sourcefile="TestNGClassFinder.java" sourcepath="org/testng/internal/TestNGClassFinder.java"/>
      <Message>In method new org.testng.internal.TestNGClassFinder(ClassInfoMap, Map, IConfiguration, ITestContext, DataProviderHolder)</Message>
    </Method>
    <SourceLine classname="org.testng.internal.TestNGClassFinder" primary="true" start="53" end="53" startBytecode="29" endBytecode="29" sourcefile="TestNGClassFinder.java" sourcepath="org/testng/internal/TestNGClassFinder.java">
      <Message>At TestNGClassFinder.java:[line 53]</Message>
    </SourceLine>
    <SourceLine classname="org.testng.internal.TestNGClassFinder" start="53" end="53" startBytecode="29" endBytecode="29" sourcefile="TestNGClassFinder.java" sourcepath="org/testng/internal/TestNGClassFinder.java">
      <Message>At TestNGClassFinder.java:[line 53]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="b226a5e9cb89f1a38f79af8aed3273f5" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>new org.testng.internal.TestNGClassFinder(ClassInfoMap, Map, IConfiguration, ITestContext, DataProviderHolder) may expose internal representation by storing an externally mutable object into TestNGClassFinder.holder</LongMessage>
    <Class classname="org.testng.internal.TestNGClassFinder" primary="true">
      <SourceLine classname="org.testng.internal.TestNGClassFinder" start="36" end="337" sourcefile="TestNGClassFinder.java" sourcepath="org/testng/internal/TestNGClassFinder.java">
        <Message>At TestNGClassFinder.java:[lines 36-337]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.TestNGClassFinder</Message>
    </Class>
    <Method classname="org.testng.internal.TestNGClassFinder" name="&lt;init&gt;" signature="(Lorg/testng/internal/ClassInfoMap;Ljava/util/Map;Lorg/testng/internal/IConfiguration;Lorg/testng/ITestContext;Lorg/testng/DataProviderHolder;)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.TestNGClassFinder" start="51" end="86" startBytecode="0" endBytecode="624" sourcefile="TestNGClassFinder.java" sourcepath="org/testng/internal/TestNGClassFinder.java"/>
      <Message>In method new org.testng.internal.TestNGClassFinder(ClassInfoMap, Map, IConfiguration, ITestContext, DataProviderHolder)</Message>
    </Method>
    <Field classname="org.testng.internal.TestNGClassFinder" name="holder" signature="Lorg/testng/DataProviderHolder;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.TestNGClassFinder" sourcefile="TestNGClassFinder.java" sourcepath="org/testng/internal/TestNGClassFinder.java">
        <Message>In TestNGClassFinder.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.TestNGClassFinder.holder</Message>
    </Field>
    <LocalVariable name="holder" register="5" pc="39" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named holder</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.internal.TestNGClassFinder" primary="true" start="57" end="57" startBytecode="39" endBytecode="39" sourcefile="TestNGClassFinder.java" sourcepath="org/testng/internal/TestNGClassFinder.java">
      <Message>At TestNGClassFinder.java:[line 57]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="30ffcc9f72e297e95f1d7a04d08e2f5f" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>new org.testng.internal.TestNGClassFinder(ClassInfoMap, Map, IConfiguration, ITestContext, DataProviderHolder) may expose internal representation by storing an externally mutable object into TestNGClassFinder.m_testContext</LongMessage>
    <Class classname="org.testng.internal.TestNGClassFinder" primary="true">
      <SourceLine classname="org.testng.internal.TestNGClassFinder" start="36" end="337" sourcefile="TestNGClassFinder.java" sourcepath="org/testng/internal/TestNGClassFinder.java">
        <Message>At TestNGClassFinder.java:[lines 36-337]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.TestNGClassFinder</Message>
    </Class>
    <Method classname="org.testng.internal.TestNGClassFinder" name="&lt;init&gt;" signature="(Lorg/testng/internal/ClassInfoMap;Ljava/util/Map;Lorg/testng/internal/IConfiguration;Lorg/testng/ITestContext;Lorg/testng/DataProviderHolder;)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.TestNGClassFinder" start="51" end="86" startBytecode="0" endBytecode="624" sourcefile="TestNGClassFinder.java" sourcepath="org/testng/internal/TestNGClassFinder.java"/>
      <Message>In method new org.testng.internal.TestNGClassFinder(ClassInfoMap, Map, IConfiguration, ITestContext, DataProviderHolder)</Message>
    </Method>
    <Field classname="org.testng.internal.TestNGClassFinder" name="m_testContext" signature="Lorg/testng/ITestContext;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.TestNGClassFinder" sourcefile="TestNGClassFinder.java" sourcepath="org/testng/internal/TestNGClassFinder.java">
        <Message>In TestNGClassFinder.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.TestNGClassFinder.m_testContext</Message>
    </Field>
    <LocalVariable name="testContext" register="4" pc="33" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named testContext</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.internal.TestNGClassFinder" primary="true" start="56" end="56" startBytecode="33" endBytecode="33" sourcefile="TestNGClassFinder.java" sourcepath="org/testng/internal/TestNGClassFinder.java">
      <Message>At TestNGClassFinder.java:[line 56]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="REC_CATCH_EXCEPTION" priority="3" rank="20" abbrev="REC" category="STYLE" instanceHash="b727679569019936ba97bd3bf5df439e" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="396">
    <ShortMessage>Exception is caught when Exception is not thrown</ShortMessage>
    <LongMessage>Exception is caught when Exception is not thrown in org.testng.internal.TestNGClassFinder.createObjectFactory(Set)</LongMessage>
    <Class classname="org.testng.internal.TestNGClassFinder" primary="true">
      <SourceLine classname="org.testng.internal.TestNGClassFinder" start="36" end="337" sourcefile="TestNGClassFinder.java" sourcepath="org/testng/internal/TestNGClassFinder.java">
        <Message>At TestNGClassFinder.java:[lines 36-337]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.TestNGClassFinder</Message>
    </Class>
    <Method classname="org.testng.internal.TestNGClassFinder" name="createObjectFactory" signature="(Ljava/util/Set;)Lorg/testng/ITestObjectFactory;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.TestNGClassFinder" start="208" end="261" startBytecode="0" endBytecode="953" sourcefile="TestNGClassFinder.java" sourcepath="org/testng/internal/TestNGClassFinder.java"/>
      <Message>In method org.testng.internal.TestNGClassFinder.createObjectFactory(Set)</Message>
    </Method>
    <SourceLine classname="org.testng.internal.TestNGClassFinder" primary="true" start="242" end="242" startBytecode="273" endBytecode="273" sourcefile="TestNGClassFinder.java" sourcepath="org/testng/internal/TestNGClassFinder.java">
      <Message>At TestNGClassFinder.java:[line 242]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="CN_IDIOM_NO_SUPER_CALL" priority="2" rank="16" abbrev="CN" category="BAD_PRACTICE" instanceHash="8da21c3f1d3a84dcec5574b6d4c9e1c6" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="580">
    <ShortMessage>clone method does not call super.clone()</ShortMessage>
    <LongMessage>org.testng.internal.TestNGMethod.clone() does not call super.clone()</LongMessage>
    <Class classname="org.testng.internal.TestNGMethod" primary="true">
      <SourceLine classname="org.testng.internal.TestNGMethod" start="22" end="229" sourcefile="TestNGMethod.java" sourcepath="org/testng/internal/TestNGMethod.java">
        <Message>At TestNGMethod.java:[lines 22-229]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.TestNGMethod</Message>
    </Class>
    <Method classname="org.testng.internal.TestNGMethod" name="clone" signature="()Lorg/testng/internal/BaseTestMethod;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.TestNGMethod" start="162" end="196" startBytecode="0" endBytecode="441" sourcefile="TestNGMethod.java" sourcepath="org/testng/internal/TestNGMethod.java"/>
      <Message>In method org.testng.internal.TestNGMethod.clone()</Message>
    </Method>
    <SourceLine classname="org.testng.internal.TestNGMethod" start="162" end="196" startBytecode="0" endBytecode="441" sourcefile="TestNGMethod.java" sourcepath="org/testng/internal/TestNGMethod.java" synthetic="true">
      <Message>At TestNGMethod.java:[lines 162-196]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="c959f26d5432681fe9715c39221d833c" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.internal.TestNGMethod.getAttributes() may expose internal representation by returning TestNGMethod.m_attributes</LongMessage>
    <Class classname="org.testng.internal.TestNGMethod" primary="true">
      <SourceLine classname="org.testng.internal.TestNGMethod" start="22" end="229" sourcefile="TestNGMethod.java" sourcepath="org/testng/internal/TestNGMethod.java">
        <Message>At TestNGMethod.java:[lines 22-229]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.TestNGMethod</Message>
    </Class>
    <Method classname="org.testng.internal.TestNGMethod" name="getAttributes" signature="()[Lorg/testng/annotations/CustomAttribute;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.TestNGMethod" start="219" end="219" startBytecode="0" endBytecode="46" sourcefile="TestNGMethod.java" sourcepath="org/testng/internal/TestNGMethod.java"/>
      <Message>In method org.testng.internal.TestNGMethod.getAttributes()</Message>
    </Method>
    <Field classname="org.testng.internal.TestNGMethod" name="m_attributes" signature="[Lorg/testng/annotations/CustomAttribute;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.TestNGMethod" sourcefile="TestNGMethod.java" sourcepath="org/testng/internal/TestNGMethod.java">
        <Message>In TestNGMethod.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.TestNGMethod.m_attributes</Message>
    </Field>
    <SourceLine classname="org.testng.internal.TestNGMethod" primary="true" start="219" end="219" startBytecode="4" endBytecode="4" sourcefile="TestNGMethod.java" sourcepath="org/testng/internal/TestNGMethod.java">
      <Message>At TestNGMethod.java:[line 219]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="395817a4387c808110c990f7ea1054a0" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>new org.testng.internal.TestNGMethodFinder(RunInfo, IAnnotationFinder, Comparator) may expose internal representation by storing an externally mutable object into TestNGMethodFinder.runInfo</LongMessage>
    <Class classname="org.testng.internal.TestNGMethodFinder" primary="true">
      <SourceLine classname="org.testng.internal.TestNGMethodFinder" start="34" end="255" sourcefile="TestNGMethodFinder.java" sourcepath="org/testng/internal/TestNGMethodFinder.java">
        <Message>At TestNGMethodFinder.java:[lines 34-255]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.TestNGMethodFinder</Message>
    </Class>
    <Method classname="org.testng.internal.TestNGMethodFinder" name="&lt;init&gt;" signature="(Lorg/testng/internal/RunInfo;Lorg/testng/internal/annotations/IAnnotationFinder;Ljava/util/Comparator;)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.TestNGMethodFinder" start="45" end="49" startBytecode="0" endBytecode="125" sourcefile="TestNGMethodFinder.java" sourcepath="org/testng/internal/TestNGMethodFinder.java"/>
      <Message>In method new org.testng.internal.TestNGMethodFinder(RunInfo, IAnnotationFinder, Comparator)</Message>
    </Method>
    <Field classname="org.testng.internal.TestNGMethodFinder" name="runInfo" signature="Lorg/testng/internal/RunInfo;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.TestNGMethodFinder" sourcefile="TestNGMethodFinder.java" sourcepath="org/testng/internal/TestNGMethodFinder.java">
        <Message>In TestNGMethodFinder.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.TestNGMethodFinder.runInfo</Message>
    </Field>
    <LocalVariable name="runInfo" register="1" pc="6" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named runInfo</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.internal.TestNGMethodFinder" primary="true" start="46" end="46" startBytecode="6" endBytecode="6" sourcefile="TestNGMethodFinder.java" sourcepath="org/testng/internal/TestNGMethodFinder.java">
      <Message>At TestNGMethodFinder.java:[line 46]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="f607d9eb70c4d7c483194f8645daddb" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.internal.TestResult.getMethod() may expose internal representation by returning TestResult.m_method</LongMessage>
    <Class classname="org.testng.internal.TestResult" primary="true">
      <SourceLine classname="org.testng.internal.TestResult" start="25" end="457" sourcefile="TestResult.java" sourcepath="org/testng/internal/TestResult.java">
        <Message>At TestResult.java:[lines 25-457]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.TestResult</Message>
    </Class>
    <Method classname="org.testng.internal.TestResult" name="getMethod" signature="()Lorg/testng/ITestNGMethod;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.TestResult" start="173" end="173" startBytecode="0" endBytecode="46" sourcefile="TestResult.java" sourcepath="org/testng/internal/TestResult.java"/>
      <Message>In method org.testng.internal.TestResult.getMethod()</Message>
    </Method>
    <Field classname="org.testng.internal.TestResult" name="m_method" signature="Lorg/testng/ITestNGMethod;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.TestResult" sourcefile="TestResult.java" sourcepath="org/testng/internal/TestResult.java">
        <Message>In TestResult.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.TestResult.m_method</Message>
    </Field>
    <SourceLine classname="org.testng.internal.TestResult" primary="true" start="173" end="173" startBytecode="4" endBytecode="4" sourcefile="TestResult.java" sourcepath="org/testng/internal/TestResult.java">
      <Message>At TestResult.java:[line 173]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="d8598393fd640e9d90945514068cf414" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.internal.TestResult.getParameters() may expose internal representation by returning TestResult.m_parameters</LongMessage>
    <Class classname="org.testng.internal.TestResult" primary="true">
      <SourceLine classname="org.testng.internal.TestResult" start="25" end="457" sourcefile="TestResult.java" sourcepath="org/testng/internal/TestResult.java">
        <Message>At TestResult.java:[lines 25-457]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.TestResult</Message>
    </Class>
    <Method classname="org.testng.internal.TestResult" name="getParameters" signature="()[Ljava/lang/Object;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.TestResult" start="271" end="271" startBytecode="0" endBytecode="46" sourcefile="TestResult.java" sourcepath="org/testng/internal/TestResult.java"/>
      <Message>In method org.testng.internal.TestResult.getParameters()</Message>
    </Method>
    <Field classname="org.testng.internal.TestResult" name="m_parameters" signature="[Ljava/lang/Object;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.TestResult" sourcefile="TestResult.java" sourcepath="org/testng/internal/TestResult.java">
        <Message>In TestResult.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.TestResult.m_parameters</Message>
    </Field>
    <SourceLine classname="org.testng.internal.TestResult" primary="true" start="271" end="271" startBytecode="4" endBytecode="4" sourcefile="TestResult.java" sourcepath="org/testng/internal/TestResult.java">
      <Message>At TestResult.java:[line 271]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="f89599a80c5ae04fe6529daa6b025da" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.internal.TestResult.getTestContext() may expose internal representation by returning TestResult.m_context</LongMessage>
    <Class classname="org.testng.internal.TestResult" primary="true">
      <SourceLine classname="org.testng.internal.TestResult" start="25" end="457" sourcefile="TestResult.java" sourcepath="org/testng/internal/TestResult.java">
        <Message>At TestResult.java:[lines 25-457]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.TestResult</Message>
    </Class>
    <Method classname="org.testng.internal.TestResult" name="getTestContext" signature="()Lorg/testng/ITestContext;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.TestResult" start="331" end="331" startBytecode="0" endBytecode="46" sourcefile="TestResult.java" sourcepath="org/testng/internal/TestResult.java"/>
      <Message>In method org.testng.internal.TestResult.getTestContext()</Message>
    </Method>
    <Field classname="org.testng.internal.TestResult" name="m_context" signature="Lorg/testng/ITestContext;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.TestResult" sourcefile="TestResult.java" sourcepath="org/testng/internal/TestResult.java">
        <Message>In TestResult.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.TestResult.m_context</Message>
    </Field>
    <SourceLine classname="org.testng.internal.TestResult" primary="true" start="331" end="331" startBytecode="4" endBytecode="4" sourcefile="TestResult.java" sourcepath="org/testng/internal/TestResult.java">
      <Message>At TestResult.java:[line 331]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="bce435a5708b303a765f9c3078d31ad3" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.internal.TestResult.getThrowable() may expose internal representation by returning TestResult.m_throwable</LongMessage>
    <Class classname="org.testng.internal.TestResult" primary="true">
      <SourceLine classname="org.testng.internal.TestResult" start="25" end="457" sourcefile="TestResult.java" sourcepath="org/testng/internal/TestResult.java">
        <Message>At TestResult.java:[lines 25-457]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.TestResult</Message>
    </Class>
    <Method classname="org.testng.internal.TestResult" name="getThrowable" signature="()Ljava/lang/Throwable;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.TestResult" start="207" end="207" startBytecode="0" endBytecode="46" sourcefile="TestResult.java" sourcepath="org/testng/internal/TestResult.java"/>
      <Message>In method org.testng.internal.TestResult.getThrowable()</Message>
    </Method>
    <Field classname="org.testng.internal.TestResult" name="m_throwable" signature="Ljava/lang/Throwable;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.TestResult" sourcefile="TestResult.java" sourcepath="org/testng/internal/TestResult.java">
        <Message>In TestResult.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.TestResult.m_throwable</Message>
    </Field>
    <SourceLine classname="org.testng.internal.TestResult" primary="true" start="207" end="207" startBytecode="4" endBytecode="4" sourcefile="TestResult.java" sourcepath="org/testng/internal/TestResult.java">
      <Message>At TestResult.java:[line 207]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="2225be3a324da50f26f698938a5c90f8" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>org.testng.internal.TestResult.setContext(ITestContext) may expose internal representation by storing an externally mutable object into TestResult.m_context</LongMessage>
    <Class classname="org.testng.internal.TestResult" primary="true">
      <SourceLine classname="org.testng.internal.TestResult" start="25" end="457" sourcefile="TestResult.java" sourcepath="org/testng/internal/TestResult.java">
        <Message>At TestResult.java:[lines 25-457]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.TestResult</Message>
    </Class>
    <Method classname="org.testng.internal.TestResult" name="setContext" signature="(Lorg/testng/ITestContext;)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.TestResult" start="335" end="336" startBytecode="0" endBytecode="61" sourcefile="TestResult.java" sourcepath="org/testng/internal/TestResult.java"/>
      <Message>In method org.testng.internal.TestResult.setContext(ITestContext)</Message>
    </Method>
    <Field classname="org.testng.internal.TestResult" name="m_context" signature="Lorg/testng/ITestContext;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.TestResult" sourcefile="TestResult.java" sourcepath="org/testng/internal/TestResult.java">
        <Message>In TestResult.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.TestResult.m_context</Message>
    </Field>
    <LocalVariable name="context" register="1" pc="2" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named context</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.internal.TestResult" primary="true" start="335" end="335" startBytecode="2" endBytecode="2" sourcefile="TestResult.java" sourcepath="org/testng/internal/TestResult.java">
      <Message>At TestResult.java:[line 335]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="9e0e7cec3759738f62ef4ef3b45b2fa2" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>org.testng.internal.TestResult.setMethod(ITestNGMethod) may expose internal representation by storing an externally mutable object into TestResult.m_method</LongMessage>
    <Class classname="org.testng.internal.TestResult" primary="true">
      <SourceLine classname="org.testng.internal.TestResult" start="25" end="457" sourcefile="TestResult.java" sourcepath="org/testng/internal/TestResult.java">
        <Message>At TestResult.java:[lines 25-457]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.TestResult</Message>
    </Class>
    <Method classname="org.testng.internal.TestResult" name="setMethod" signature="(Lorg/testng/ITestNGMethod;)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.TestResult" start="178" end="179" startBytecode="0" endBytecode="61" sourcefile="TestResult.java" sourcepath="org/testng/internal/TestResult.java"/>
      <Message>In method org.testng.internal.TestResult.setMethod(ITestNGMethod)</Message>
    </Method>
    <Field classname="org.testng.internal.TestResult" name="m_method" signature="Lorg/testng/ITestNGMethod;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.TestResult" sourcefile="TestResult.java" sourcepath="org/testng/internal/TestResult.java">
        <Message>In TestResult.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.TestResult.m_method</Message>
    </Field>
    <LocalVariable name="method" register="1" pc="2" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named method</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.internal.TestResult" primary="true" start="178" end="178" startBytecode="2" endBytecode="2" sourcefile="TestResult.java" sourcepath="org/testng/internal/TestResult.java">
      <Message>At TestResult.java:[line 178]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="658d19f1c6eb6c68742cfd08b41fc5de" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>org.testng.internal.TestResult.setThrowable(Throwable) may expose internal representation by storing an externally mutable object into TestResult.m_throwable</LongMessage>
    <Class classname="org.testng.internal.TestResult" primary="true">
      <SourceLine classname="org.testng.internal.TestResult" start="25" end="457" sourcefile="TestResult.java" sourcepath="org/testng/internal/TestResult.java">
        <Message>At TestResult.java:[lines 25-457]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.TestResult</Message>
    </Class>
    <Method classname="org.testng.internal.TestResult" name="setThrowable" signature="(Ljava/lang/Throwable;)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.TestResult" start="213" end="214" startBytecode="0" endBytecode="61" sourcefile="TestResult.java" sourcepath="org/testng/internal/TestResult.java"/>
      <Message>In method org.testng.internal.TestResult.setThrowable(Throwable)</Message>
    </Method>
    <Field classname="org.testng.internal.TestResult" name="m_throwable" signature="Ljava/lang/Throwable;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.TestResult" sourcefile="TestResult.java" sourcepath="org/testng/internal/TestResult.java">
        <Message>In TestResult.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.TestResult.m_throwable</Message>
    </Field>
    <LocalVariable name="throwable" register="1" pc="2" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named throwable</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.internal.TestResult" primary="true" start="213" end="213" startBytecode="2" endBytecode="2" sourcefile="TestResult.java" sourcepath="org/testng/internal/TestResult.java">
      <Message>At TestResult.java:[line 213]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EQ_COMPARETO_USE_OBJECT_EQUALS" priority="2" rank="16" abbrev="Eq" category="BAD_PRACTICE" instanceHash="44a52f1bbe65e3c4864655bd278b6418" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Class defines compareTo(...) and uses Object.equals()</ShortMessage>
    <LongMessage>org.testng.internal.TestResult defines compareTo(Object) and uses Object.equals()</LongMessage>
    <Class classname="org.testng.internal.TestResult" primary="true">
      <SourceLine classname="org.testng.internal.TestResult" start="25" end="457" sourcefile="TestResult.java" sourcepath="org/testng/internal/TestResult.java">
        <Message>At TestResult.java:[lines 25-457]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.TestResult</Message>
    </Class>
    <Method classname="org.testng.internal.TestResult" name="compareTo" signature="(Ljava/lang/Object;)I" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.TestResult" start="25" end="25" startBytecode="0" endBytecode="50" sourcefile="TestResult.java" sourcepath="org/testng/internal/TestResult.java"/>
      <Message>In method org.testng.internal.TestResult.compareTo(Object)</Message>
    </Method>
    <SourceLine classname="org.testng.internal.TestResult" start="25" end="25" startBytecode="0" endBytecode="50" sourcefile="TestResult.java" sourcepath="org/testng/internal/TestResult.java" synthetic="true">
      <Message>At TestResult.java:[line 25]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE" priority="3" rank="20" abbrev="RCN" category="STYLE" instanceHash="46d88e9c9dcc8a4526fa7ef88097735e" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="476">
    <ShortMessage>Redundant nullcheck of value known to be non-null</ShortMessage>
    <LongMessage>Redundant nullcheck of output, which is known to be non-null in org.testng.internal.TestResult.toString()</LongMessage>
    <Class classname="org.testng.internal.TestResult" primary="true">
      <SourceLine classname="org.testng.internal.TestResult" start="25" end="457" sourcefile="TestResult.java" sourcepath="org/testng/internal/TestResult.java">
        <Message>At TestResult.java:[lines 25-457]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.TestResult</Message>
    </Class>
    <Method classname="org.testng.internal.TestResult" name="toString" signature="()Ljava/lang/String;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.TestResult" start="230" end="231" startBytecode="0" endBytecode="238" sourcefile="TestResult.java" sourcepath="org/testng/internal/TestResult.java"/>
      <Message>In method org.testng.internal.TestResult.toString()</Message>
    </Method>
    <LocalVariable name="output" register="1" pc="50" role="LOCAL_VARIABLE_VALUE_OF">
      <Message>Value loaded from output</Message>
    </LocalVariable>
    <Method classname="org.testng.Reporter" name="getOutput" signature="(Lorg/testng/ITestResult;)Ljava/util/List;" isStatic="true" role="METHOD_RETURN_VALUE_OF">
      <SourceLine classname="org.testng.Reporter" start="160" end="173" startBytecode="0" endBytecode="245" sourcefile="Reporter.java" sourcepath="org/testng/Reporter.java"/>
      <Message>Return value of org.testng.Reporter.getOutput(ITestResult) of type java.util.List</Message>
    </Method>
    <SourceLine classname="org.testng.internal.TestResult" primary="true" start="237" end="237" startBytecode="51" endBytecode="51" sourcefile="TestResult.java" sourcepath="org/testng/internal/TestResult.java" role="SOURCE_REDUNDANT_NULL_CHECK">
      <Message>Redundant null check at TestResult.java:[line 237]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DM_DEFAULT_ENCODING" priority="1" rank="19" abbrev="Dm" category="I18N" instanceHash="ffd64a8602b23d28fdd4fc023957b646" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Reliance on default encoding</ShortMessage>
    <LongMessage>Found reliance on default encoding in org.testng.internal.Utils.openWriter(File, String): new java.io.OutputStreamWriter(OutputStream)</LongMessage>
    <Class classname="org.testng.internal.Utils" primary="true">
      <SourceLine classname="org.testng.internal.Utils" start="31" end="601" sourcefile="Utils.java" sourcepath="org/testng/internal/Utils.java">
        <Message>At Utils.java:[lines 31-601]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.Utils</Message>
    </Class>
    <Method classname="org.testng.internal.Utils" name="openWriter" signature="(Ljava/io/File;Ljava/lang/String;)Ljava/io/BufferedWriter;" isStatic="true" primary="true">
      <SourceLine classname="org.testng.internal.Utils" start="187" end="196" startBytecode="0" endBytecode="169" sourcefile="Utils.java" sourcepath="org/testng/internal/Utils.java"/>
      <Message>In method org.testng.internal.Utils.openWriter(File, String)</Message>
    </Method>
    <Method classname="java.io.OutputStreamWriter" name="&lt;init&gt;" signature="(Ljava/io/OutputStream;)V" isStatic="false" role="METHOD_CALLED">
      <SourceLine classname="java.io.OutputStreamWriter" start="108" end="111" startBytecode="0" endBytecode="85" sourcefile="OutputStreamWriter.java" sourcepath="java/io/OutputStreamWriter.java"/>
      <Message>Called method new java.io.OutputStreamWriter(OutputStream)</Message>
    </Method>
    <SourceLine classname="org.testng.internal.Utils" primary="true" start="194" end="194" startBytecode="49" endBytecode="49" sourcefile="Utils.java" sourcepath="org/testng/internal/Utils.java">
      <Message>At Utils.java:[line 194]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="RV_RETURN_VALUE_IGNORED_BAD_PRACTICE" priority="2" rank="16" abbrev="RV" category="BAD_PRACTICE" instanceHash="dde98ee6c12dcdc354d4292bb8191440" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="253">
    <ShortMessage>Method ignores exceptional return value</ShortMessage>
    <LongMessage>Exceptional return value of java.io.File.createNewFile() ignored in org.testng.internal.Utils.openWriter(File, String)</LongMessage>
    <Class classname="org.testng.internal.Utils" primary="true">
      <SourceLine classname="org.testng.internal.Utils" start="31" end="601" sourcefile="Utils.java" sourcepath="org/testng/internal/Utils.java">
        <Message>At Utils.java:[lines 31-601]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.Utils</Message>
    </Class>
    <Method classname="org.testng.internal.Utils" name="openWriter" signature="(Ljava/io/File;Ljava/lang/String;)Ljava/io/BufferedWriter;" isStatic="true" primary="true">
      <SourceLine classname="org.testng.internal.Utils" start="187" end="196" startBytecode="0" endBytecode="169" sourcefile="Utils.java" sourcepath="org/testng/internal/Utils.java"/>
      <Message>In method org.testng.internal.Utils.openWriter(File, String)</Message>
    </Method>
    <Method classname="java.io.File" name="createNewFile" signature="()Z" isStatic="false" role="METHOD_CALLED">
      <SourceLine classname="java.io.File" start="1038" end="1043" startBytecode="0" endBytecode="126" sourcefile="File.java" sourcepath="java/io/File.java"/>
      <Message>Called method java.io.File.createNewFile()</Message>
    </Method>
    <SourceLine classname="org.testng.internal.Utils" primary="true" start="188" end="188" startBytecode="8" endBytecode="8" sourcefile="Utils.java" sourcepath="org/testng/internal/Utils.java">
      <Message>At Utils.java:[line 188]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="RV_RETURN_VALUE_IGNORED_BAD_PRACTICE" priority="2" rank="16" abbrev="RV" category="BAD_PRACTICE" instanceHash="630feccf726775bb333b3363adbebcfe" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="253">
    <ShortMessage>Method ignores exceptional return value</ShortMessage>
    <LongMessage>Exceptional return value of java.io.File.delete() ignored in org.testng.internal.Utils.openWriter(String, String)</LongMessage>
    <Class classname="org.testng.internal.Utils" primary="true">
      <SourceLine classname="org.testng.internal.Utils" start="31" end="601" sourcefile="Utils.java" sourcepath="org/testng/internal/Utils.java">
        <Message>At Utils.java:[lines 31-601]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.Utils</Message>
    </Class>
    <Method classname="org.testng.internal.Utils" name="openWriter" signature="(Ljava/lang/String;Ljava/lang/String;)Ljava/io/BufferedWriter;" isStatic="true" primary="true">
      <SourceLine classname="org.testng.internal.Utils" start="173" end="182" startBytecode="0" endBytecode="217" sourcefile="Utils.java" sourcepath="org/testng/internal/Utils.java"/>
      <Message>In method org.testng.internal.Utils.openWriter(String, String)</Message>
    </Method>
    <Method classname="java.io.File" name="delete" signature="()Z" isStatic="false" role="METHOD_CALLED">
      <SourceLine classname="java.io.File" start="1066" end="1073" startBytecode="0" endBytecode="119" sourcefile="File.java" sourcepath="java/io/File.java"/>
      <Message>Called method java.io.File.delete()</Message>
    </Method>
    <SourceLine classname="org.testng.internal.Utils" primary="true" start="181" end="181" startBytecode="56" endBytecode="56" sourcefile="Utils.java" sourcepath="org/testng/internal/Utils.java">
      <Message>At Utils.java:[line 181]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="RV_RETURN_VALUE_IGNORED_BAD_PRACTICE" priority="2" rank="16" abbrev="RV" category="BAD_PRACTICE" instanceHash="747492c684d09b1a1566c38ef1a242c" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="253">
    <ShortMessage>Method ignores exceptional return value</ShortMessage>
    <LongMessage>Exceptional return value of java.io.File.mkdirs() ignored in org.testng.internal.Utils.openWriter(String, String)</LongMessage>
    <Class classname="org.testng.internal.Utils" primary="true">
      <SourceLine classname="org.testng.internal.Utils" start="31" end="601" sourcefile="Utils.java" sourcepath="org/testng/internal/Utils.java">
        <Message>At Utils.java:[lines 31-601]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.Utils</Message>
    </Class>
    <Method classname="org.testng.internal.Utils" name="openWriter" signature="(Ljava/lang/String;Ljava/lang/String;)Ljava/io/BufferedWriter;" isStatic="true" primary="true">
      <SourceLine classname="org.testng.internal.Utils" start="173" end="182" startBytecode="0" endBytecode="217" sourcefile="Utils.java" sourcepath="org/testng/internal/Utils.java"/>
      <Message>In method org.testng.internal.Utils.openWriter(String, String)</Message>
    </Method>
    <Method classname="java.io.File" name="mkdirs" signature="()Z" isStatic="false" role="METHOD_CALLED">
      <SourceLine classname="java.io.File" start="1403" end="1417" startBytecode="0" endBytecode="230" sourcefile="File.java" sourcepath="java/io/File.java"/>
      <Message>Called method java.io.File.mkdirs()</Message>
    </Method>
    <SourceLine classname="org.testng.internal.Utils" primary="true" start="177" end="177" startBytecode="33" endBytecode="33" sourcefile="Utils.java" sourcepath="org/testng/internal/Utils.java">
      <Message>At Utils.java:[line 177]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="RV_RETURN_VALUE_IGNORED_BAD_PRACTICE" priority="2" rank="16" abbrev="RV" category="BAD_PRACTICE" instanceHash="a52d0afbc4aebaad2bbbfec5d270b3ab" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="253">
    <ShortMessage>Method ignores exceptional return value</ShortMessage>
    <LongMessage>Exceptional return value of java.io.File.createNewFile() ignored in org.testng.internal.Utils.writeFile(File, String, String, String)</LongMessage>
    <Class classname="org.testng.internal.Utils" primary="true">
      <SourceLine classname="org.testng.internal.Utils" start="31" end="601" sourcefile="Utils.java" sourcepath="org/testng/internal/Utils.java">
        <Message>At Utils.java:[lines 31-601]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.Utils</Message>
    </Class>
    <Method classname="org.testng.internal.Utils" name="writeFile" signature="(Ljava/io/File;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V" isStatic="true" primary="true">
      <SourceLine classname="org.testng.internal.Utils" start="122" end="146" startBytecode="0" endBytecode="410" sourcefile="Utils.java" sourcepath="org/testng/internal/Utils.java"/>
      <Message>In method org.testng.internal.Utils.writeFile(File, String, String, String)</Message>
    </Method>
    <Method classname="java.io.File" name="createNewFile" signature="()Z" isStatic="false" role="METHOD_CALLED">
      <SourceLine classname="java.io.File" start="1038" end="1043" startBytecode="0" endBytecode="126" sourcefile="File.java" sourcepath="java/io/File.java"/>
      <Message>Called method java.io.File.createNewFile()</Message>
    </Method>
    <SourceLine classname="org.testng.internal.Utils" primary="true" start="137" end="137" startBytecode="134" endBytecode="134" sourcefile="Utils.java" sourcepath="org/testng/internal/Utils.java">
      <Message>At Utils.java:[line 137]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="RV_RETURN_VALUE_IGNORED_BAD_PRACTICE" priority="2" rank="16" abbrev="RV" category="BAD_PRACTICE" instanceHash="9f725128b4f02787cc37cdb2f6bbc8a2" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="253">
    <ShortMessage>Method ignores exceptional return value</ShortMessage>
    <LongMessage>Exceptional return value of java.io.File.delete() ignored in org.testng.internal.Utils.writeFile(File, String, String, String)</LongMessage>
    <Class classname="org.testng.internal.Utils" primary="true">
      <SourceLine classname="org.testng.internal.Utils" start="31" end="601" sourcefile="Utils.java" sourcepath="org/testng/internal/Utils.java">
        <Message>At Utils.java:[lines 31-601]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.Utils</Message>
    </Class>
    <Method classname="org.testng.internal.Utils" name="writeFile" signature="(Ljava/io/File;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V" isStatic="true" primary="true">
      <SourceLine classname="org.testng.internal.Utils" start="122" end="146" startBytecode="0" endBytecode="410" sourcefile="Utils.java" sourcepath="org/testng/internal/Utils.java"/>
      <Message>In method org.testng.internal.Utils.writeFile(File, String, String, String)</Message>
    </Method>
    <Method classname="java.io.File" name="delete" signature="()Z" isStatic="false" role="METHOD_CALLED">
      <SourceLine classname="java.io.File" start="1066" end="1073" startBytecode="0" endBytecode="119" sourcefile="File.java" sourcepath="java/io/File.java"/>
      <Message>Called method java.io.File.delete()</Message>
    </Method>
    <SourceLine classname="org.testng.internal.Utils" primary="true" start="134" end="134" startBytecode="61" endBytecode="61" sourcefile="Utils.java" sourcepath="org/testng/internal/Utils.java">
      <Message>At Utils.java:[line 134]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="RV_RETURN_VALUE_IGNORED_BAD_PRACTICE" priority="2" rank="16" abbrev="RV" category="BAD_PRACTICE" instanceHash="3ae53385ceee25c662a6c646c741dbc" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="253">
    <ShortMessage>Method ignores exceptional return value</ShortMessage>
    <LongMessage>Exceptional return value of java.io.File.mkdirs() ignored in org.testng.internal.Utils.writeFile(File, String, String, String)</LongMessage>
    <Class classname="org.testng.internal.Utils" primary="true">
      <SourceLine classname="org.testng.internal.Utils" start="31" end="601" sourcefile="Utils.java" sourcepath="org/testng/internal/Utils.java">
        <Message>At Utils.java:[lines 31-601]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.Utils</Message>
    </Class>
    <Method classname="org.testng.internal.Utils" name="writeFile" signature="(Ljava/io/File;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V" isStatic="true" primary="true">
      <SourceLine classname="org.testng.internal.Utils" start="122" end="146" startBytecode="0" endBytecode="410" sourcefile="Utils.java" sourcepath="org/testng/internal/Utils.java"/>
      <Message>In method org.testng.internal.Utils.writeFile(File, String, String, String)</Message>
    </Method>
    <Method classname="java.io.File" name="mkdirs" signature="()Z" isStatic="false" role="METHOD_CALLED">
      <SourceLine classname="java.io.File" start="1403" end="1417" startBytecode="0" endBytecode="230" sourcefile="File.java" sourcepath="java/io/File.java"/>
      <Message>Called method java.io.File.mkdirs()</Message>
    </Method>
    <SourceLine classname="org.testng.internal.Utils" primary="true" start="129" end="129" startBytecode="35" endBytecode="35" sourcefile="Utils.java" sourcepath="org/testng/internal/Utils.java">
      <Message>At Utils.java:[line 129]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="RV_RETURN_VALUE_IGNORED_BAD_PRACTICE" priority="2" rank="16" abbrev="RV" category="BAD_PRACTICE" instanceHash="db97a430db0950f12c0877259f91d5d" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="253">
    <ShortMessage>Method ignores exceptional return value</ShortMessage>
    <LongMessage>Exceptional return value of java.io.File.createNewFile() ignored in org.testng.internal.Utils.writeUtf8File(String, String, XMLStringBuffer, String)</LongMessage>
    <Class classname="org.testng.internal.Utils" primary="true">
      <SourceLine classname="org.testng.internal.Utils" start="31" end="601" sourcefile="Utils.java" sourcepath="org/testng/internal/Utils.java">
        <Message>At Utils.java:[lines 31-601]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.Utils</Message>
    </Class>
    <Method classname="org.testng.internal.Utils" name="writeUtf8File" signature="(Ljava/lang/String;Ljava/lang/String;Lorg/testng/reporters/XMLStringBuffer;Ljava/lang/String;)V" isStatic="true" primary="true">
      <SourceLine classname="org.testng.internal.Utils" start="61" end="79" startBytecode="0" endBytecode="445" sourcefile="Utils.java" sourcepath="org/testng/internal/Utils.java"/>
      <Message>In method org.testng.internal.Utils.writeUtf8File(String, String, XMLStringBuffer, String)</Message>
    </Method>
    <Method classname="java.io.File" name="createNewFile" signature="()Z" isStatic="false" role="METHOD_CALLED">
      <SourceLine classname="java.io.File" start="1038" end="1043" startBytecode="0" endBytecode="126" sourcefile="File.java" sourcepath="java/io/File.java"/>
      <Message>Called method java.io.File.createNewFile()</Message>
    </Method>
    <SourceLine classname="org.testng.internal.Utils" primary="true" start="67" end="67" startBytecode="65" endBytecode="65" sourcefile="Utils.java" sourcepath="org/testng/internal/Utils.java">
      <Message>At Utils.java:[line 67]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="RV_RETURN_VALUE_IGNORED_BAD_PRACTICE" priority="2" rank="16" abbrev="RV" category="BAD_PRACTICE" instanceHash="1f0d1c9d72c25363ef7632d072cfbad0" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="253">
    <ShortMessage>Method ignores exceptional return value</ShortMessage>
    <LongMessage>Exceptional return value of java.io.File.mkdirs() ignored in org.testng.internal.Utils.writeUtf8File(String, String, XMLStringBuffer, String)</LongMessage>
    <Class classname="org.testng.internal.Utils" primary="true">
      <SourceLine classname="org.testng.internal.Utils" start="31" end="601" sourcefile="Utils.java" sourcepath="org/testng/internal/Utils.java">
        <Message>At Utils.java:[lines 31-601]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.Utils</Message>
    </Class>
    <Method classname="org.testng.internal.Utils" name="writeUtf8File" signature="(Ljava/lang/String;Ljava/lang/String;Lorg/testng/reporters/XMLStringBuffer;Ljava/lang/String;)V" isStatic="true" primary="true">
      <SourceLine classname="org.testng.internal.Utils" start="61" end="79" startBytecode="0" endBytecode="445" sourcefile="Utils.java" sourcepath="org/testng/internal/Utils.java"/>
      <Message>In method org.testng.internal.Utils.writeUtf8File(String, String, XMLStringBuffer, String)</Message>
    </Method>
    <Method classname="java.io.File" name="mkdirs" signature="()Z" isStatic="false" role="METHOD_CALLED">
      <SourceLine classname="java.io.File" start="1403" end="1417" startBytecode="0" endBytecode="230" sourcefile="File.java" sourcepath="java/io/File.java"/>
      <Message>Called method java.io.File.mkdirs()</Message>
    </Method>
    <SourceLine classname="org.testng.internal.Utils" primary="true" start="63" end="63" startBytecode="39" endBytecode="39" sourcefile="Utils.java" sourcepath="org/testng/internal/Utils.java">
      <Message>At Utils.java:[line 63]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="CN_IDIOM_NO_SUPER_CALL" priority="2" rank="16" abbrev="CN" category="BAD_PRACTICE" instanceHash="5a84d0b9c11ea970a348845cc292ad9c" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="580">
    <ShortMessage>clone method does not call super.clone()</ShortMessage>
    <LongMessage>org.testng.internal.WrappedTestNGMethod.clone() does not call super.clone()</LongMessage>
    <Class classname="org.testng.internal.WrappedTestNGMethod" primary="true">
      <SourceLine classname="org.testng.internal.WrappedTestNGMethod" start="20" end="385" sourcefile="WrappedTestNGMethod.java" sourcepath="org/testng/internal/WrappedTestNGMethod.java">
        <Message>At WrappedTestNGMethod.java:[lines 20-385]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.WrappedTestNGMethod</Message>
    </Class>
    <Method classname="org.testng.internal.WrappedTestNGMethod" name="clone" signature="()Lorg/testng/ITestNGMethod;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.WrappedTestNGMethod" start="265" end="265" startBytecode="0" endBytecode="51" sourcefile="WrappedTestNGMethod.java" sourcepath="org/testng/internal/WrappedTestNGMethod.java"/>
      <Message>In method org.testng.internal.WrappedTestNGMethod.clone()</Message>
    </Method>
    <SourceLine classname="org.testng.internal.WrappedTestNGMethod" start="265" end="265" startBytecode="0" endBytecode="51" sourcefile="WrappedTestNGMethod.java" sourcepath="org/testng/internal/WrappedTestNGMethod.java" synthetic="true">
      <Message>At WrappedTestNGMethod.java:[line 265]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DMI_RANDOM_USED_ONLY_ONCE" priority="1" rank="14" abbrev="DMI" category="BAD_PRACTICE" instanceHash="b4684118a1b18135cc126c94b0d0a1a" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="440">
    <ShortMessage>Random object created and used only once</ShortMessage>
    <LongMessage>Random object created and used only once in new org.testng.internal.WrappedTestNGMethod(ITestNGMethod)</LongMessage>
    <Class classname="org.testng.internal.WrappedTestNGMethod" primary="true">
      <SourceLine classname="org.testng.internal.WrappedTestNGMethod" start="20" end="385" sourcefile="WrappedTestNGMethod.java" sourcepath="org/testng/internal/WrappedTestNGMethod.java">
        <Message>At WrappedTestNGMethod.java:[lines 20-385]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.WrappedTestNGMethod</Message>
    </Class>
    <Method classname="org.testng.internal.WrappedTestNGMethod" name="&lt;init&gt;" signature="(Lorg/testng/ITestNGMethod;)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.WrappedTestNGMethod" start="24" end="26" startBytecode="0" endBytecode="87" sourcefile="WrappedTestNGMethod.java" sourcepath="org/testng/internal/WrappedTestNGMethod.java"/>
      <Message>In method new org.testng.internal.WrappedTestNGMethod(ITestNGMethod)</Message>
    </Method>
    <Method classname="java.util.Random" name="nextInt" signature="()I" isStatic="false" role="METHOD_CALLED" classAnnotationNames="jdk.internal.util.random.RandomSupport$RandomGeneratorProperties">
      <SourceLine classname="java.util.Random" start="260" end="260" startBytecode="0" endBytecode="48" sourcefile="Random.java" sourcepath="java/util/Random.java"/>
      <Message>Called method java.util.Random.nextInt()</Message>
    </Method>
    <SourceLine classname="org.testng.internal.WrappedTestNGMethod" primary="true" start="22" end="22" startBytecode="12" endBytecode="12" sourcefile="WrappedTestNGMethod.java" sourcepath="org/testng/internal/WrappedTestNGMethod.java">
      <Message>At WrappedTestNGMethod.java:[line 22]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="ae7ac66e2b40837627c0f2b70d2154f9" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>new org.testng.internal.WrappedTestNGMethod(ITestNGMethod) may expose internal representation by storing an externally mutable object into WrappedTestNGMethod.testNGMethod</LongMessage>
    <Class classname="org.testng.internal.WrappedTestNGMethod" primary="true">
      <SourceLine classname="org.testng.internal.WrappedTestNGMethod" start="20" end="385" sourcefile="WrappedTestNGMethod.java" sourcepath="org/testng/internal/WrappedTestNGMethod.java">
        <Message>At WrappedTestNGMethod.java:[lines 20-385]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.WrappedTestNGMethod</Message>
    </Class>
    <Method classname="org.testng.internal.WrappedTestNGMethod" name="&lt;init&gt;" signature="(Lorg/testng/ITestNGMethod;)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.WrappedTestNGMethod" start="24" end="26" startBytecode="0" endBytecode="87" sourcefile="WrappedTestNGMethod.java" sourcepath="org/testng/internal/WrappedTestNGMethod.java"/>
      <Message>In method new org.testng.internal.WrappedTestNGMethod(ITestNGMethod)</Message>
    </Method>
    <Field classname="org.testng.internal.WrappedTestNGMethod" name="testNGMethod" signature="Lorg/testng/ITestNGMethod;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.WrappedTestNGMethod" sourcefile="WrappedTestNGMethod.java" sourcepath="org/testng/internal/WrappedTestNGMethod.java">
        <Message>In WrappedTestNGMethod.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.WrappedTestNGMethod.testNGMethod</Message>
    </Field>
    <LocalVariable name="testNGMethod" register="1" pc="20" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named testNGMethod</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.internal.WrappedTestNGMethod" primary="true" start="25" end="25" startBytecode="20" endBytecode="20" sourcefile="WrappedTestNGMethod.java" sourcepath="org/testng/internal/WrappedTestNGMethod.java">
      <Message>At WrappedTestNGMethod.java:[line 25]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="BC_UNCONFIRMED_CAST_OF_RETURN_VALUE" priority="3" rank="20" abbrev="BC" category="STYLE" instanceHash="5c796a796a6b4b632325263ee56c198b" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Unchecked/unconfirmed cast of return value from method</ShortMessage>
    <LongMessage>Unchecked/unconfirmed cast from java.util.Collection to java.util.List of return value in org.testng.internal.XmlMethodSelector.includeMethodFromIncludeExclude(ITestNGMethod, boolean)</LongMessage>
    <Class classname="org.testng.internal.XmlMethodSelector" primary="true">
      <SourceLine classname="org.testng.internal.XmlMethodSelector" start="31" end="352" sourcefile="XmlMethodSelector.java" sourcepath="org/testng/internal/XmlMethodSelector.java">
        <Message>At XmlMethodSelector.java:[lines 31-352]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.XmlMethodSelector</Message>
    </Class>
    <Method classname="org.testng.internal.XmlMethodSelector" name="includeMethodFromIncludeExclude" signature="(Lorg/testng/ITestNGMethod;Z)Z" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.XmlMethodSelector" start="63" end="150" startBytecode="0" endBytecode="231" sourcefile="XmlMethodSelector.java" sourcepath="org/testng/internal/XmlMethodSelector.java"/>
      <Message>In method org.testng.internal.XmlMethodSelector.includeMethodFromIncludeExclude(ITestNGMethod, boolean)</Message>
    </Method>
    <Type descriptor="Ljava/util/Collection;" role="TYPE_FOUND">
      <SourceLine classname="java.util.Collection" start="413" end="764" sourcefile="Collection.java" sourcepath="java/util/Collection.java">
        <Message>At Collection.java:[lines 413-764]</Message>
      </SourceLine>
      <Message>Actual type java.util.Collection</Message>
    </Type>
    <Type descriptor="Ljava/util/List;" role="TYPE_EXPECTED">
      <SourceLine classname="java.util.List" start="441" end="1068" sourcefile="List.java" sourcepath="java/util/List.java">
        <Message>At List.java:[lines 441-1068]</Message>
      </SourceLine>
      <Message>Expected java.util.List</Message>
    </Type>
    <SourceLine classname="org.testng.internal.XmlMethodSelector" primary="true" start="74" end="74" startBytecode="85" endBytecode="85" sourcefile="XmlMethodSelector.java" sourcepath="org/testng/internal/XmlMethodSelector.java">
      <Message>At XmlMethodSelector.java:[line 74]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="e473bbf3e4de421af15e0239be7b30d5" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.internal.XmlMethodSelector.getExcludedGroups() may expose internal representation by returning XmlMethodSelector.m_excludedGroups</LongMessage>
    <Class classname="org.testng.internal.XmlMethodSelector" primary="true">
      <SourceLine classname="org.testng.internal.XmlMethodSelector" start="31" end="352" sourcefile="XmlMethodSelector.java" sourcepath="org/testng/internal/XmlMethodSelector.java">
        <Message>At XmlMethodSelector.java:[lines 31-352]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.XmlMethodSelector</Message>
    </Class>
    <Method classname="org.testng.internal.XmlMethodSelector" name="getExcludedGroups" signature="()Ljava/util/Map;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.XmlMethodSelector" start="253" end="253" startBytecode="0" endBytecode="46" sourcefile="XmlMethodSelector.java" sourcepath="org/testng/internal/XmlMethodSelector.java"/>
      <Message>In method org.testng.internal.XmlMethodSelector.getExcludedGroups()</Message>
    </Method>
    <Field classname="org.testng.internal.XmlMethodSelector" name="m_excludedGroups" signature="Ljava/util/Map;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.XmlMethodSelector" sourcefile="XmlMethodSelector.java" sourcepath="org/testng/internal/XmlMethodSelector.java">
        <Message>In XmlMethodSelector.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.XmlMethodSelector.m_excludedGroups</Message>
    </Field>
    <SourceLine classname="org.testng.internal.XmlMethodSelector" primary="true" start="253" end="253" startBytecode="4" endBytecode="4" sourcefile="XmlMethodSelector.java" sourcepath="org/testng/internal/XmlMethodSelector.java">
      <Message>At XmlMethodSelector.java:[line 253]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="52138ccf11d1421238e7da6575ead917" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.internal.XmlMethodSelector.getIncludedGroups() may expose internal representation by returning XmlMethodSelector.m_includedGroups</LongMessage>
    <Class classname="org.testng.internal.XmlMethodSelector" primary="true">
      <SourceLine classname="org.testng.internal.XmlMethodSelector" start="31" end="352" sourcefile="XmlMethodSelector.java" sourcepath="org/testng/internal/XmlMethodSelector.java">
        <Message>At XmlMethodSelector.java:[lines 31-352]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.XmlMethodSelector</Message>
    </Class>
    <Method classname="org.testng.internal.XmlMethodSelector" name="getIncludedGroups" signature="()Ljava/util/Map;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.XmlMethodSelector" start="258" end="258" startBytecode="0" endBytecode="46" sourcefile="XmlMethodSelector.java" sourcepath="org/testng/internal/XmlMethodSelector.java"/>
      <Message>In method org.testng.internal.XmlMethodSelector.getIncludedGroups()</Message>
    </Method>
    <Field classname="org.testng.internal.XmlMethodSelector" name="m_includedGroups" signature="Ljava/util/Map;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.XmlMethodSelector" sourcefile="XmlMethodSelector.java" sourcepath="org/testng/internal/XmlMethodSelector.java">
        <Message>In XmlMethodSelector.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.XmlMethodSelector.m_includedGroups</Message>
    </Field>
    <SourceLine classname="org.testng.internal.XmlMethodSelector" primary="true" start="258" end="258" startBytecode="4" endBytecode="4" sourcefile="XmlMethodSelector.java" sourcepath="org/testng/internal/XmlMethodSelector.java">
      <Message>At XmlMethodSelector.java:[line 258]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="c0a2308a20fab75ed6d6741beb796084" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>org.testng.internal.XmlMethodSelector.setExcludedGroups(Map) may expose internal representation by storing an externally mutable object into XmlMethodSelector.m_excludedGroups</LongMessage>
    <Class classname="org.testng.internal.XmlMethodSelector" primary="true">
      <SourceLine classname="org.testng.internal.XmlMethodSelector" start="31" end="352" sourcefile="XmlMethodSelector.java" sourcepath="org/testng/internal/XmlMethodSelector.java">
        <Message>At XmlMethodSelector.java:[lines 31-352]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.XmlMethodSelector</Message>
    </Class>
    <Method classname="org.testng.internal.XmlMethodSelector" name="setExcludedGroups" signature="(Ljava/util/Map;)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.XmlMethodSelector" start="263" end="264" startBytecode="0" endBytecode="79" sourcefile="XmlMethodSelector.java" sourcepath="org/testng/internal/XmlMethodSelector.java"/>
      <Message>In method org.testng.internal.XmlMethodSelector.setExcludedGroups(Map)</Message>
    </Method>
    <Field classname="org.testng.internal.XmlMethodSelector" name="m_excludedGroups" signature="Ljava/util/Map;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.XmlMethodSelector" sourcefile="XmlMethodSelector.java" sourcepath="org/testng/internal/XmlMethodSelector.java">
        <Message>In XmlMethodSelector.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.XmlMethodSelector.m_excludedGroups</Message>
    </Field>
    <LocalVariable name="excludedGroups" register="1" pc="2" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named excludedGroups</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.internal.XmlMethodSelector" primary="true" start="263" end="263" startBytecode="2" endBytecode="2" sourcefile="XmlMethodSelector.java" sourcepath="org/testng/internal/XmlMethodSelector.java">
      <Message>At XmlMethodSelector.java:[line 263]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="ca415ebf69766104238b336b1d4500f5" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>org.testng.internal.XmlMethodSelector.setIncludedGroups(Map) may expose internal representation by storing an externally mutable object into XmlMethodSelector.m_includedGroups</LongMessage>
    <Class classname="org.testng.internal.XmlMethodSelector" primary="true">
      <SourceLine classname="org.testng.internal.XmlMethodSelector" start="31" end="352" sourcefile="XmlMethodSelector.java" sourcepath="org/testng/internal/XmlMethodSelector.java">
        <Message>At XmlMethodSelector.java:[lines 31-352]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.XmlMethodSelector</Message>
    </Class>
    <Method classname="org.testng.internal.XmlMethodSelector" name="setIncludedGroups" signature="(Ljava/util/Map;)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.XmlMethodSelector" start="268" end="269" startBytecode="0" endBytecode="79" sourcefile="XmlMethodSelector.java" sourcepath="org/testng/internal/XmlMethodSelector.java"/>
      <Message>In method org.testng.internal.XmlMethodSelector.setIncludedGroups(Map)</Message>
    </Method>
    <Field classname="org.testng.internal.XmlMethodSelector" name="m_includedGroups" signature="Ljava/util/Map;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.XmlMethodSelector" sourcefile="XmlMethodSelector.java" sourcepath="org/testng/internal/XmlMethodSelector.java">
        <Message>In XmlMethodSelector.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.XmlMethodSelector.m_includedGroups</Message>
    </Field>
    <LocalVariable name="includedGroups" register="1" pc="2" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named includedGroups</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.internal.XmlMethodSelector" primary="true" start="268" end="268" startBytecode="2" endBytecode="2" sourcefile="XmlMethodSelector.java" sourcepath="org/testng/internal/XmlMethodSelector.java">
      <Message>At XmlMethodSelector.java:[line 268]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="e84ca8a4cf7f6b0769ddb8e8ffd28221" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>org.testng.internal.XmlMethodSelector.setTestMethods(List) may expose internal representation by storing an externally mutable object into XmlMethodSelector.m_testMethods</LongMessage>
    <Class classname="org.testng.internal.XmlMethodSelector" primary="true">
      <SourceLine classname="org.testng.internal.XmlMethodSelector" start="31" end="352" sourcefile="XmlMethodSelector.java" sourcepath="org/testng/internal/XmlMethodSelector.java">
        <Message>At XmlMethodSelector.java:[lines 31-352]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.XmlMethodSelector</Message>
    </Class>
    <Method classname="org.testng.internal.XmlMethodSelector" name="setTestMethods" signature="(Ljava/util/List;)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.XmlMethodSelector" start="312" end="313" startBytecode="0" endBytecode="79" sourcefile="XmlMethodSelector.java" sourcepath="org/testng/internal/XmlMethodSelector.java"/>
      <Message>In method org.testng.internal.XmlMethodSelector.setTestMethods(List)</Message>
    </Method>
    <Field classname="org.testng.internal.XmlMethodSelector" name="m_testMethods" signature="Ljava/util/List;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.XmlMethodSelector" sourcefile="XmlMethodSelector.java" sourcepath="org/testng/internal/XmlMethodSelector.java">
        <Message>In XmlMethodSelector.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.XmlMethodSelector.m_testMethods</Message>
    </Field>
    <LocalVariable name="testMethods" register="1" pc="2" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named testMethods</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.internal.XmlMethodSelector" primary="true" start="312" end="312" startBytecode="2" endBytecode="2" sourcefile="XmlMethodSelector.java" sourcepath="org/testng/internal/XmlMethodSelector.java">
      <Message>At XmlMethodSelector.java:[line 312]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="96ed84e53dc1f8d46deac1461f78faab" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>org.testng.internal.XmlMethodSelector.setXmlClasses(List) may expose internal representation by storing an externally mutable object into XmlMethodSelector.m_classes</LongMessage>
    <Class classname="org.testng.internal.XmlMethodSelector" primary="true">
      <SourceLine classname="org.testng.internal.XmlMethodSelector" start="31" end="352" sourcefile="XmlMethodSelector.java" sourcepath="org/testng/internal/XmlMethodSelector.java">
        <Message>At XmlMethodSelector.java:[lines 31-352]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.XmlMethodSelector</Message>
    </Class>
    <Method classname="org.testng.internal.XmlMethodSelector" name="setXmlClasses" signature="(Ljava/util/List;)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.XmlMethodSelector" start="241" end="249" startBytecode="0" endBytecode="269" sourcefile="XmlMethodSelector.java" sourcepath="org/testng/internal/XmlMethodSelector.java"/>
      <Message>In method org.testng.internal.XmlMethodSelector.setXmlClasses(List)</Message>
    </Method>
    <Field classname="org.testng.internal.XmlMethodSelector" name="m_classes" signature="Ljava/util/List;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.XmlMethodSelector" sourcefile="XmlMethodSelector.java" sourcepath="org/testng/internal/XmlMethodSelector.java">
        <Message>In XmlMethodSelector.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.XmlMethodSelector.m_classes</Message>
    </Field>
    <LocalVariable name="classes" register="1" pc="2" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named classes</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.internal.XmlMethodSelector" primary="true" start="241" end="241" startBytecode="2" endBytecode="2" sourcefile="XmlMethodSelector.java" sourcepath="org/testng/internal/XmlMethodSelector.java">
      <Message>At XmlMethodSelector.java:[line 241]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="OBL_UNSATISFIED_OBLIGATION" priority="2" rank="20" abbrev="OBL" category="EXPERIMENTAL" instanceHash="97b499ab240993f57f5424ee7e19cdfe" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Method may fail to clean up stream or resource</ShortMessage>
    <LongMessage>org.testng.internal.Yaml.parse(String, InputStream) may fail to clean up java.io.InputStream</LongMessage>
    <Class classname="org.testng.internal.Yaml" primary="true">
      <SourceLine classname="org.testng.internal.Yaml" start="25" end="298" sourcefile="Yaml.java" sourcepath="org/testng/internal/Yaml.java">
        <Message>At Yaml.java:[lines 25-298]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.Yaml</Message>
    </Class>
    <Method classname="org.testng.internal.Yaml" name="parse" signature="(Ljava/lang/String;Ljava/io/InputStream;)Lorg/testng/xml/XmlSuite;" isStatic="true" primary="true">
      <SourceLine classname="org.testng.internal.Yaml" start="28" end="63" startBytecode="0" endBytecode="563" sourcefile="Yaml.java" sourcepath="org/testng/internal/Yaml.java"/>
      <Message>In method org.testng.internal.Yaml.parse(String, InputStream)</Message>
    </Method>
    <Class classname="java.io.InputStream" role="CLASS_REFTYPE">
      <SourceLine classname="java.io.InputStream" start="61" end="786" sourcefile="InputStream.java" sourcepath="java/io/InputStream.java">
        <Message>At InputStream.java:[lines 61-786]</Message>
      </SourceLine>
      <Message>Reference type java.io.InputStream</Message>
    </Class>
    <Int value="1" role="INT_OBLIGATIONS_REMAINING">
      <Message>1 instances of obligation remaining</Message>
    </Int>
    <SourceLine classname="org.testng.internal.Yaml" primary="true" start="48" end="48" startBytecode="177" endBytecode="177" sourcefile="Yaml.java" sourcepath="org/testng/internal/Yaml.java" role="SOURCE_LINE_OBLIGATION_CREATED">
      <Message>Obligation to clean up resource created at Yaml.java:[line 48] is not discharged</Message>
    </SourceLine>
    <SourceLine classname="org.testng.internal.Yaml" start="50" end="50" startBytecode="181" endBytecode="181" sourcefile="Yaml.java" sourcepath="org/testng/internal/Yaml.java" role="SOURCE_LINE_PATH_CONTINUES">
      <Message>Path continues at Yaml.java:[line 50]</Message>
    </SourceLine>
    <SourceLine classname="org.testng.internal.Yaml" start="52" end="52" startBytecode="191" endBytecode="191" sourcefile="Yaml.java" sourcepath="org/testng/internal/Yaml.java" role="SOURCE_LINE_PATH_CONTINUES">
      <Message>Path continues at Yaml.java:[line 52]</Message>
    </SourceLine>
    <SourceLine classname="org.testng.internal.Yaml" start="55" end="55" startBytecode="197" endBytecode="197" sourcefile="Yaml.java" sourcepath="org/testng/internal/Yaml.java" role="SOURCE_LINE_PATH_CONTINUES">
      <Message>Path continues at Yaml.java:[line 55]</Message>
    </SourceLine>
    <SourceLine classname="org.testng.internal.Yaml" start="63" end="63" startBytecode="291" endBytecode="291" sourcefile="Yaml.java" sourcepath="org/testng/internal/Yaml.java" role="SOURCE_LINE_PATH_CONTINUES">
      <Message>Path continues at Yaml.java:[line 63]</Message>
    </SourceLine>
    <String value="{InputStream x 1}" role="STRING_REMAINING_OBLIGATIONS">
      <Message>Remaining obligations: {InputStream x 1}</Message>
    </String>
  </BugInstance>
  <BugInstance type="MS_EXPOSE_REP" priority="2" rank="18" abbrev="MS" category="MALICIOUS_CODE" instanceHash="1d9f0dbc1b8cf5922975847cd691baf5" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="218">
    <ShortMessage>Public static method may expose internal representation by returning a mutable object or array</ShortMessage>
    <LongMessage>Public static org.testng.internal.annotations.AnnotationHelper.getAllAnnotations() may expose internal representation by returning AnnotationHelper.ALL_ANNOTATIONS</LongMessage>
    <Class classname="org.testng.internal.annotations.AnnotationHelper" primary="true">
      <SourceLine classname="org.testng.internal.annotations.AnnotationHelper" start="32" end="386" sourcefile="AnnotationHelper.java" sourcepath="org/testng/internal/annotations/AnnotationHelper.java">
        <Message>At AnnotationHelper.java:[lines 32-386]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.annotations.AnnotationHelper</Message>
    </Class>
    <Method classname="org.testng.internal.annotations.AnnotationHelper" name="getAllAnnotations" signature="()Ljava/util/List;" isStatic="true" primary="true">
      <SourceLine classname="org.testng.internal.annotations.AnnotationHelper" start="201" end="201" startBytecode="0" endBytecode="27" sourcefile="AnnotationHelper.java" sourcepath="org/testng/internal/annotations/AnnotationHelper.java"/>
      <Message>In method org.testng.internal.annotations.AnnotationHelper.getAllAnnotations()</Message>
    </Method>
    <Field classname="org.testng.internal.annotations.AnnotationHelper" name="ALL_ANNOTATIONS" signature="Ljava/util/List;" isStatic="true" primary="true">
      <SourceLine classname="org.testng.internal.annotations.AnnotationHelper" sourcefile="AnnotationHelper.java" sourcepath="org/testng/internal/annotations/AnnotationHelper.java">
        <Message>In AnnotationHelper.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.annotations.AnnotationHelper.ALL_ANNOTATIONS</Message>
    </Field>
    <SourceLine classname="org.testng.internal.annotations.AnnotationHelper" primary="true" start="201" end="201" startBytecode="3" endBytecode="3" sourcefile="AnnotationHelper.java" sourcepath="org/testng/internal/annotations/AnnotationHelper.java">
      <Message>At AnnotationHelper.java:[line 201]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="6d7ae878ae200922976dedfa902155f6" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.internal.annotations.BaseAnnotation.getConstructor() may expose internal representation by returning BaseAnnotation.m_constructor</LongMessage>
    <Class classname="org.testng.internal.annotations.BaseAnnotation" primary="true">
      <SourceLine classname="org.testng.internal.annotations.BaseAnnotation" start="6" end="34" sourcefile="BaseAnnotation.java" sourcepath="org/testng/internal/annotations/BaseAnnotation.java">
        <Message>At BaseAnnotation.java:[lines 6-34]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.annotations.BaseAnnotation</Message>
    </Class>
    <Method classname="org.testng.internal.annotations.BaseAnnotation" name="getConstructor" signature="()Ljava/lang/reflect/Constructor;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.annotations.BaseAnnotation" start="13" end="13" startBytecode="0" endBytecode="46" sourcefile="BaseAnnotation.java" sourcepath="org/testng/internal/annotations/BaseAnnotation.java"/>
      <Message>In method org.testng.internal.annotations.BaseAnnotation.getConstructor()</Message>
    </Method>
    <Field classname="org.testng.internal.annotations.BaseAnnotation" name="m_constructor" signature="Ljava/lang/reflect/Constructor;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.annotations.BaseAnnotation" sourcefile="BaseAnnotation.java" sourcepath="org/testng/internal/annotations/BaseAnnotation.java">
        <Message>In BaseAnnotation.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.annotations.BaseAnnotation.m_constructor</Message>
    </Field>
    <SourceLine classname="org.testng.internal.annotations.BaseAnnotation" primary="true" start="13" end="13" startBytecode="4" endBytecode="4" sourcefile="BaseAnnotation.java" sourcepath="org/testng/internal/annotations/BaseAnnotation.java">
      <Message>At BaseAnnotation.java:[line 13]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="32c31a44e589e913699280cb95d359c3" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.internal.annotations.BaseAnnotation.getMethod() may expose internal representation by returning BaseAnnotation.m_method</LongMessage>
    <Class classname="org.testng.internal.annotations.BaseAnnotation" primary="true">
      <SourceLine classname="org.testng.internal.annotations.BaseAnnotation" start="6" end="34" sourcefile="BaseAnnotation.java" sourcepath="org/testng/internal/annotations/BaseAnnotation.java">
        <Message>At BaseAnnotation.java:[lines 6-34]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.annotations.BaseAnnotation</Message>
    </Class>
    <Method classname="org.testng.internal.annotations.BaseAnnotation" name="getMethod" signature="()Ljava/lang/reflect/Method;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.annotations.BaseAnnotation" start="21" end="21" startBytecode="0" endBytecode="46" sourcefile="BaseAnnotation.java" sourcepath="org/testng/internal/annotations/BaseAnnotation.java"/>
      <Message>In method org.testng.internal.annotations.BaseAnnotation.getMethod()</Message>
    </Method>
    <Field classname="org.testng.internal.annotations.BaseAnnotation" name="m_method" signature="Ljava/lang/reflect/Method;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.annotations.BaseAnnotation" sourcefile="BaseAnnotation.java" sourcepath="org/testng/internal/annotations/BaseAnnotation.java">
        <Message>In BaseAnnotation.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.annotations.BaseAnnotation.m_method</Message>
    </Field>
    <SourceLine classname="org.testng.internal.annotations.BaseAnnotation" primary="true" start="21" end="21" startBytecode="4" endBytecode="4" sourcefile="BaseAnnotation.java" sourcepath="org/testng/internal/annotations/BaseAnnotation.java">
      <Message>At BaseAnnotation.java:[line 21]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="4a7c2026d383dbc6c4ed7985a7589ca6" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>org.testng.internal.annotations.BaseAnnotation.setConstructor(Constructor) may expose internal representation by storing an externally mutable object into BaseAnnotation.m_constructor</LongMessage>
    <Class classname="org.testng.internal.annotations.BaseAnnotation" primary="true">
      <SourceLine classname="org.testng.internal.annotations.BaseAnnotation" start="6" end="34" sourcefile="BaseAnnotation.java" sourcepath="org/testng/internal/annotations/BaseAnnotation.java">
        <Message>At BaseAnnotation.java:[lines 6-34]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.annotations.BaseAnnotation</Message>
    </Class>
    <Method classname="org.testng.internal.annotations.BaseAnnotation" name="setConstructor" signature="(Ljava/lang/reflect/Constructor;)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.annotations.BaseAnnotation" start="17" end="18" startBytecode="0" endBytecode="61" sourcefile="BaseAnnotation.java" sourcepath="org/testng/internal/annotations/BaseAnnotation.java"/>
      <Message>In method org.testng.internal.annotations.BaseAnnotation.setConstructor(Constructor)</Message>
    </Method>
    <Field classname="org.testng.internal.annotations.BaseAnnotation" name="m_constructor" signature="Ljava/lang/reflect/Constructor;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.annotations.BaseAnnotation" sourcefile="BaseAnnotation.java" sourcepath="org/testng/internal/annotations/BaseAnnotation.java">
        <Message>In BaseAnnotation.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.annotations.BaseAnnotation.m_constructor</Message>
    </Field>
    <LocalVariable name="constructor" register="1" pc="2" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named constructor</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.internal.annotations.BaseAnnotation" primary="true" start="17" end="17" startBytecode="2" endBytecode="2" sourcefile="BaseAnnotation.java" sourcepath="org/testng/internal/annotations/BaseAnnotation.java">
      <Message>At BaseAnnotation.java:[line 17]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="6687b4bb3e65aca9078b3b097df4e3a4" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>org.testng.internal.annotations.BaseAnnotation.setMethod(Method) may expose internal representation by storing an externally mutable object into BaseAnnotation.m_method</LongMessage>
    <Class classname="org.testng.internal.annotations.BaseAnnotation" primary="true">
      <SourceLine classname="org.testng.internal.annotations.BaseAnnotation" start="6" end="34" sourcefile="BaseAnnotation.java" sourcepath="org/testng/internal/annotations/BaseAnnotation.java">
        <Message>At BaseAnnotation.java:[lines 6-34]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.annotations.BaseAnnotation</Message>
    </Class>
    <Method classname="org.testng.internal.annotations.BaseAnnotation" name="setMethod" signature="(Ljava/lang/reflect/Method;)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.annotations.BaseAnnotation" start="25" end="26" startBytecode="0" endBytecode="61" sourcefile="BaseAnnotation.java" sourcepath="org/testng/internal/annotations/BaseAnnotation.java"/>
      <Message>In method org.testng.internal.annotations.BaseAnnotation.setMethod(Method)</Message>
    </Method>
    <Field classname="org.testng.internal.annotations.BaseAnnotation" name="m_method" signature="Ljava/lang/reflect/Method;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.annotations.BaseAnnotation" sourcefile="BaseAnnotation.java" sourcepath="org/testng/internal/annotations/BaseAnnotation.java">
        <Message>In BaseAnnotation.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.annotations.BaseAnnotation.m_method</Message>
    </Field>
    <LocalVariable name="method" register="1" pc="2" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named method</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.internal.annotations.BaseAnnotation" primary="true" start="25" end="25" startBytecode="2" endBytecode="2" sourcefile="BaseAnnotation.java" sourcepath="org/testng/internal/annotations/BaseAnnotation.java">
      <Message>At BaseAnnotation.java:[line 25]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="493b393c833fed0a9e30b9049122ce0a" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.internal.annotations.BaseBeforeAfter.getAfterGroups() may expose internal representation by returning BaseBeforeAfter.m_afterGroups</LongMessage>
    <Class classname="org.testng.internal.annotations.BaseBeforeAfter" primary="true">
      <SourceLine classname="org.testng.internal.annotations.BaseBeforeAfter" start="3" end="55" sourcefile="BaseBeforeAfter.java" sourcepath="org/testng/internal/annotations/BaseBeforeAfter.java">
        <Message>At BaseBeforeAfter.java:[lines 3-55]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.annotations.BaseBeforeAfter</Message>
    </Class>
    <Method classname="org.testng.internal.annotations.BaseBeforeAfter" name="getAfterGroups" signature="()[Ljava/lang/String;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.annotations.BaseBeforeAfter" start="42" end="42" startBytecode="0" endBytecode="46" sourcefile="BaseBeforeAfter.java" sourcepath="org/testng/internal/annotations/BaseBeforeAfter.java"/>
      <Message>In method org.testng.internal.annotations.BaseBeforeAfter.getAfterGroups()</Message>
    </Method>
    <Field classname="org.testng.internal.annotations.BaseBeforeAfter" name="m_afterGroups" signature="[Ljava/lang/String;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.annotations.BaseBeforeAfter" sourcefile="BaseBeforeAfter.java" sourcepath="org/testng/internal/annotations/BaseBeforeAfter.java">
        <Message>In BaseBeforeAfter.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.annotations.BaseBeforeAfter.m_afterGroups</Message>
    </Field>
    <SourceLine classname="org.testng.internal.annotations.BaseBeforeAfter" primary="true" start="42" end="42" startBytecode="4" endBytecode="4" sourcefile="BaseBeforeAfter.java" sourcepath="org/testng/internal/annotations/BaseBeforeAfter.java">
      <Message>At BaseBeforeAfter.java:[line 42]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="d08fb6334933154f1699d0bd27b9af14" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.internal.annotations.BaseBeforeAfter.getBeforeGroups() may expose internal representation by returning BaseBeforeAfter.m_beforeGroups</LongMessage>
    <Class classname="org.testng.internal.annotations.BaseBeforeAfter" primary="true">
      <SourceLine classname="org.testng.internal.annotations.BaseBeforeAfter" start="3" end="55" sourcefile="BaseBeforeAfter.java" sourcepath="org/testng/internal/annotations/BaseBeforeAfter.java">
        <Message>At BaseBeforeAfter.java:[lines 3-55]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.annotations.BaseBeforeAfter</Message>
    </Class>
    <Method classname="org.testng.internal.annotations.BaseBeforeAfter" name="getBeforeGroups" signature="()[Ljava/lang/String;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.annotations.BaseBeforeAfter" start="50" end="50" startBytecode="0" endBytecode="46" sourcefile="BaseBeforeAfter.java" sourcepath="org/testng/internal/annotations/BaseBeforeAfter.java"/>
      <Message>In method org.testng.internal.annotations.BaseBeforeAfter.getBeforeGroups()</Message>
    </Method>
    <Field classname="org.testng.internal.annotations.BaseBeforeAfter" name="m_beforeGroups" signature="[Ljava/lang/String;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.annotations.BaseBeforeAfter" sourcefile="BaseBeforeAfter.java" sourcepath="org/testng/internal/annotations/BaseBeforeAfter.java">
        <Message>In BaseBeforeAfter.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.annotations.BaseBeforeAfter.m_beforeGroups</Message>
    </Field>
    <SourceLine classname="org.testng.internal.annotations.BaseBeforeAfter" primary="true" start="50" end="50" startBytecode="4" endBytecode="4" sourcefile="BaseBeforeAfter.java" sourcepath="org/testng/internal/annotations/BaseBeforeAfter.java">
      <Message>At BaseBeforeAfter.java:[line 50]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="1119a769fcdeb0061fc6ba0ab7f6491e" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>org.testng.internal.annotations.BaseBeforeAfter.setAfterGroups(String[]) may expose internal representation by storing an externally mutable object into BaseBeforeAfter.m_afterGroups</LongMessage>
    <Class classname="org.testng.internal.annotations.BaseBeforeAfter" primary="true">
      <SourceLine classname="org.testng.internal.annotations.BaseBeforeAfter" start="3" end="55" sourcefile="BaseBeforeAfter.java" sourcepath="org/testng/internal/annotations/BaseBeforeAfter.java">
        <Message>At BaseBeforeAfter.java:[lines 3-55]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.annotations.BaseBeforeAfter</Message>
    </Class>
    <Method classname="org.testng.internal.annotations.BaseBeforeAfter" name="setAfterGroups" signature="([Ljava/lang/String;)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.annotations.BaseBeforeAfter" start="46" end="47" startBytecode="0" endBytecode="61" sourcefile="BaseBeforeAfter.java" sourcepath="org/testng/internal/annotations/BaseBeforeAfter.java"/>
      <Message>In method org.testng.internal.annotations.BaseBeforeAfter.setAfterGroups(String[])</Message>
    </Method>
    <Field classname="org.testng.internal.annotations.BaseBeforeAfter" name="m_afterGroups" signature="[Ljava/lang/String;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.annotations.BaseBeforeAfter" sourcefile="BaseBeforeAfter.java" sourcepath="org/testng/internal/annotations/BaseBeforeAfter.java">
        <Message>In BaseBeforeAfter.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.annotations.BaseBeforeAfter.m_afterGroups</Message>
    </Field>
    <LocalVariable name="afterGroups" register="1" pc="2" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named afterGroups</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.internal.annotations.BaseBeforeAfter" primary="true" start="46" end="46" startBytecode="2" endBytecode="2" sourcefile="BaseBeforeAfter.java" sourcepath="org/testng/internal/annotations/BaseBeforeAfter.java">
      <Message>At BaseBeforeAfter.java:[line 46]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="da073e7a5ecf459ac275a6d260bd6259" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>org.testng.internal.annotations.BaseBeforeAfter.setBeforeGroups(String[]) may expose internal representation by storing an externally mutable object into BaseBeforeAfter.m_beforeGroups</LongMessage>
    <Class classname="org.testng.internal.annotations.BaseBeforeAfter" primary="true">
      <SourceLine classname="org.testng.internal.annotations.BaseBeforeAfter" start="3" end="55" sourcefile="BaseBeforeAfter.java" sourcepath="org/testng/internal/annotations/BaseBeforeAfter.java">
        <Message>At BaseBeforeAfter.java:[lines 3-55]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.annotations.BaseBeforeAfter</Message>
    </Class>
    <Method classname="org.testng.internal.annotations.BaseBeforeAfter" name="setBeforeGroups" signature="([Ljava/lang/String;)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.annotations.BaseBeforeAfter" start="54" end="55" startBytecode="0" endBytecode="61" sourcefile="BaseBeforeAfter.java" sourcepath="org/testng/internal/annotations/BaseBeforeAfter.java"/>
      <Message>In method org.testng.internal.annotations.BaseBeforeAfter.setBeforeGroups(String[])</Message>
    </Method>
    <Field classname="org.testng.internal.annotations.BaseBeforeAfter" name="m_beforeGroups" signature="[Ljava/lang/String;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.annotations.BaseBeforeAfter" sourcefile="BaseBeforeAfter.java" sourcepath="org/testng/internal/annotations/BaseBeforeAfter.java">
        <Message>In BaseBeforeAfter.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.annotations.BaseBeforeAfter.m_beforeGroups</Message>
    </Field>
    <LocalVariable name="beforeGroups" register="1" pc="2" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named beforeGroups</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.internal.annotations.BaseBeforeAfter" primary="true" start="54" end="54" startBytecode="2" endBytecode="2" sourcefile="BaseBeforeAfter.java" sourcepath="org/testng/internal/annotations/BaseBeforeAfter.java">
      <Message>At BaseBeforeAfter.java:[line 54]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="6bb24954849dd8e8ca7f024152e2878e" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.internal.annotations.ConfigurationAnnotation.getAfterGroups() may expose internal representation by returning ConfigurationAnnotation.m_afterGroups</LongMessage>
    <Class classname="org.testng.internal.annotations.ConfigurationAnnotation" primary="true">
      <SourceLine classname="org.testng.internal.annotations.ConfigurationAnnotation" start="21" end="199" sourcefile="ConfigurationAnnotation.java" sourcepath="org/testng/internal/annotations/ConfigurationAnnotation.java">
        <Message>At ConfigurationAnnotation.java:[lines 21-199]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.annotations.ConfigurationAnnotation</Message>
    </Class>
    <Method classname="org.testng.internal.annotations.ConfigurationAnnotation" name="getAfterGroups" signature="()[Ljava/lang/String;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.annotations.ConfigurationAnnotation" start="152" end="152" startBytecode="0" endBytecode="46" sourcefile="ConfigurationAnnotation.java" sourcepath="org/testng/internal/annotations/ConfigurationAnnotation.java"/>
      <Message>In method org.testng.internal.annotations.ConfigurationAnnotation.getAfterGroups()</Message>
    </Method>
    <Field classname="org.testng.internal.annotations.ConfigurationAnnotation" name="m_afterGroups" signature="[Ljava/lang/String;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.annotations.ConfigurationAnnotation" sourcefile="ConfigurationAnnotation.java" sourcepath="org/testng/internal/annotations/ConfigurationAnnotation.java">
        <Message>In ConfigurationAnnotation.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.annotations.ConfigurationAnnotation.m_afterGroups</Message>
    </Field>
    <SourceLine classname="org.testng.internal.annotations.ConfigurationAnnotation" primary="true" start="152" end="152" startBytecode="4" endBytecode="4" sourcefile="ConfigurationAnnotation.java" sourcepath="org/testng/internal/annotations/ConfigurationAnnotation.java">
      <Message>At ConfigurationAnnotation.java:[line 152]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="30cf7d0d47520e142109e5fe432d35a7" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.internal.annotations.ConfigurationAnnotation.getBeforeGroups() may expose internal representation by returning ConfigurationAnnotation.m_beforeGroups</LongMessage>
    <Class classname="org.testng.internal.annotations.ConfigurationAnnotation" primary="true">
      <SourceLine classname="org.testng.internal.annotations.ConfigurationAnnotation" start="21" end="199" sourcefile="ConfigurationAnnotation.java" sourcepath="org/testng/internal/annotations/ConfigurationAnnotation.java">
        <Message>At ConfigurationAnnotation.java:[lines 21-199]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.annotations.ConfigurationAnnotation</Message>
    </Class>
    <Method classname="org.testng.internal.annotations.ConfigurationAnnotation" name="getBeforeGroups" signature="()[Ljava/lang/String;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.annotations.ConfigurationAnnotation" start="161" end="161" startBytecode="0" endBytecode="46" sourcefile="ConfigurationAnnotation.java" sourcepath="org/testng/internal/annotations/ConfigurationAnnotation.java"/>
      <Message>In method org.testng.internal.annotations.ConfigurationAnnotation.getBeforeGroups()</Message>
    </Method>
    <Field classname="org.testng.internal.annotations.ConfigurationAnnotation" name="m_beforeGroups" signature="[Ljava/lang/String;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.annotations.ConfigurationAnnotation" sourcefile="ConfigurationAnnotation.java" sourcepath="org/testng/internal/annotations/ConfigurationAnnotation.java">
        <Message>In ConfigurationAnnotation.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.annotations.ConfigurationAnnotation.m_beforeGroups</Message>
    </Field>
    <SourceLine classname="org.testng.internal.annotations.ConfigurationAnnotation" primary="true" start="161" end="161" startBytecode="4" endBytecode="4" sourcefile="ConfigurationAnnotation.java" sourcepath="org/testng/internal/annotations/ConfigurationAnnotation.java">
      <Message>At ConfigurationAnnotation.java:[line 161]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="1907d5722ce9d440118730fcb5fc54ad" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.internal.annotations.ConfigurationAnnotation.getGroupFilters() may expose internal representation by returning ConfigurationAnnotation.m_groupFilters</LongMessage>
    <Class classname="org.testng.internal.annotations.ConfigurationAnnotation" primary="true">
      <SourceLine classname="org.testng.internal.annotations.ConfigurationAnnotation" start="21" end="199" sourcefile="ConfigurationAnnotation.java" sourcepath="org/testng/internal/annotations/ConfigurationAnnotation.java">
        <Message>At ConfigurationAnnotation.java:[lines 21-199]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.annotations.ConfigurationAnnotation</Message>
    </Class>
    <Method classname="org.testng.internal.annotations.ConfigurationAnnotation" name="getGroupFilters" signature="()[Ljava/lang/String;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.annotations.ConfigurationAnnotation" start="170" end="170" startBytecode="0" endBytecode="46" sourcefile="ConfigurationAnnotation.java" sourcepath="org/testng/internal/annotations/ConfigurationAnnotation.java"/>
      <Message>In method org.testng.internal.annotations.ConfigurationAnnotation.getGroupFilters()</Message>
    </Method>
    <Field classname="org.testng.internal.annotations.ConfigurationAnnotation" name="m_groupFilters" signature="[Ljava/lang/String;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.annotations.ConfigurationAnnotation" sourcefile="ConfigurationAnnotation.java" sourcepath="org/testng/internal/annotations/ConfigurationAnnotation.java">
        <Message>In ConfigurationAnnotation.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.annotations.ConfigurationAnnotation.m_groupFilters</Message>
    </Field>
    <SourceLine classname="org.testng.internal.annotations.ConfigurationAnnotation" primary="true" start="170" end="170" startBytecode="4" endBytecode="4" sourcefile="ConfigurationAnnotation.java" sourcepath="org/testng/internal/annotations/ConfigurationAnnotation.java">
      <Message>At ConfigurationAnnotation.java:[line 170]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="57bd406a726097b0d7fc91632db8d89e" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>org.testng.internal.annotations.ConfigurationAnnotation.setAfterGroups(String[]) may expose internal representation by storing an externally mutable object into ConfigurationAnnotation.m_afterGroups</LongMessage>
    <Class classname="org.testng.internal.annotations.ConfigurationAnnotation" primary="true">
      <SourceLine classname="org.testng.internal.annotations.ConfigurationAnnotation" start="21" end="199" sourcefile="ConfigurationAnnotation.java" sourcepath="org/testng/internal/annotations/ConfigurationAnnotation.java">
        <Message>At ConfigurationAnnotation.java:[lines 21-199]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.annotations.ConfigurationAnnotation</Message>
    </Class>
    <Method classname="org.testng.internal.annotations.ConfigurationAnnotation" name="setAfterGroups" signature="([Ljava/lang/String;)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.annotations.ConfigurationAnnotation" start="156" end="157" startBytecode="0" endBytecode="61" sourcefile="ConfigurationAnnotation.java" sourcepath="org/testng/internal/annotations/ConfigurationAnnotation.java"/>
      <Message>In method org.testng.internal.annotations.ConfigurationAnnotation.setAfterGroups(String[])</Message>
    </Method>
    <Field classname="org.testng.internal.annotations.ConfigurationAnnotation" name="m_afterGroups" signature="[Ljava/lang/String;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.annotations.ConfigurationAnnotation" sourcefile="ConfigurationAnnotation.java" sourcepath="org/testng/internal/annotations/ConfigurationAnnotation.java">
        <Message>In ConfigurationAnnotation.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.annotations.ConfigurationAnnotation.m_afterGroups</Message>
    </Field>
    <LocalVariable name="afterGroups" register="1" pc="2" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named afterGroups</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.internal.annotations.ConfigurationAnnotation" primary="true" start="156" end="156" startBytecode="2" endBytecode="2" sourcefile="ConfigurationAnnotation.java" sourcepath="org/testng/internal/annotations/ConfigurationAnnotation.java">
      <Message>At ConfigurationAnnotation.java:[line 156]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="14c425fcaade13b3de2319adb701dde5" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>org.testng.internal.annotations.ConfigurationAnnotation.setBeforeGroups(String[]) may expose internal representation by storing an externally mutable object into ConfigurationAnnotation.m_beforeGroups</LongMessage>
    <Class classname="org.testng.internal.annotations.ConfigurationAnnotation" primary="true">
      <SourceLine classname="org.testng.internal.annotations.ConfigurationAnnotation" start="21" end="199" sourcefile="ConfigurationAnnotation.java" sourcepath="org/testng/internal/annotations/ConfigurationAnnotation.java">
        <Message>At ConfigurationAnnotation.java:[lines 21-199]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.annotations.ConfigurationAnnotation</Message>
    </Class>
    <Method classname="org.testng.internal.annotations.ConfigurationAnnotation" name="setBeforeGroups" signature="([Ljava/lang/String;)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.annotations.ConfigurationAnnotation" start="165" end="166" startBytecode="0" endBytecode="61" sourcefile="ConfigurationAnnotation.java" sourcepath="org/testng/internal/annotations/ConfigurationAnnotation.java"/>
      <Message>In method org.testng.internal.annotations.ConfigurationAnnotation.setBeforeGroups(String[])</Message>
    </Method>
    <Field classname="org.testng.internal.annotations.ConfigurationAnnotation" name="m_beforeGroups" signature="[Ljava/lang/String;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.annotations.ConfigurationAnnotation" sourcefile="ConfigurationAnnotation.java" sourcepath="org/testng/internal/annotations/ConfigurationAnnotation.java">
        <Message>In ConfigurationAnnotation.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.annotations.ConfigurationAnnotation.m_beforeGroups</Message>
    </Field>
    <LocalVariable name="beforeGroups" register="1" pc="2" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named beforeGroups</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.internal.annotations.ConfigurationAnnotation" primary="true" start="165" end="165" startBytecode="2" endBytecode="2" sourcefile="ConfigurationAnnotation.java" sourcepath="org/testng/internal/annotations/ConfigurationAnnotation.java">
      <Message>At ConfigurationAnnotation.java:[line 165]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="9f3bef3ddcfd146bcaa9430570184f9f" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.internal.annotations.DataProviderAnnotation.getIndices() may expose internal representation by returning DataProviderAnnotation.m_indices</LongMessage>
    <Class classname="org.testng.internal.annotations.DataProviderAnnotation" primary="true">
      <SourceLine classname="org.testng.internal.annotations.DataProviderAnnotation" start="10" end="44" sourcefile="DataProviderAnnotation.java" sourcepath="org/testng/internal/annotations/DataProviderAnnotation.java">
        <Message>At DataProviderAnnotation.java:[lines 10-44]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.annotations.DataProviderAnnotation</Message>
    </Class>
    <Method classname="org.testng.internal.annotations.DataProviderAnnotation" name="getIndices" signature="()Ljava/util/List;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.annotations.DataProviderAnnotation" start="38" end="38" startBytecode="0" endBytecode="46" sourcefile="DataProviderAnnotation.java" sourcepath="org/testng/internal/annotations/DataProviderAnnotation.java"/>
      <Message>In method org.testng.internal.annotations.DataProviderAnnotation.getIndices()</Message>
    </Method>
    <Field classname="org.testng.internal.annotations.DataProviderAnnotation" name="m_indices" signature="Ljava/util/List;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.annotations.DataProviderAnnotation" sourcefile="DataProviderAnnotation.java" sourcepath="org/testng/internal/annotations/DataProviderAnnotation.java">
        <Message>In DataProviderAnnotation.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.annotations.DataProviderAnnotation.m_indices</Message>
    </Field>
    <SourceLine classname="org.testng.internal.annotations.DataProviderAnnotation" primary="true" start="38" end="38" startBytecode="4" endBytecode="4" sourcefile="DataProviderAnnotation.java" sourcepath="org/testng/internal/annotations/DataProviderAnnotation.java">
      <Message>At DataProviderAnnotation.java:[line 38]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="98c0619e2eddca1c3046043f8ffc5b45" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>org.testng.internal.annotations.DataProviderAnnotation.setIndices(List) may expose internal representation by storing an externally mutable object into DataProviderAnnotation.m_indices</LongMessage>
    <Class classname="org.testng.internal.annotations.DataProviderAnnotation" primary="true">
      <SourceLine classname="org.testng.internal.annotations.DataProviderAnnotation" start="10" end="44" sourcefile="DataProviderAnnotation.java" sourcepath="org/testng/internal/annotations/DataProviderAnnotation.java">
        <Message>At DataProviderAnnotation.java:[lines 10-44]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.annotations.DataProviderAnnotation</Message>
    </Class>
    <Method classname="org.testng.internal.annotations.DataProviderAnnotation" name="setIndices" signature="(Ljava/util/List;)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.annotations.DataProviderAnnotation" start="43" end="44" startBytecode="0" endBytecode="79" sourcefile="DataProviderAnnotation.java" sourcepath="org/testng/internal/annotations/DataProviderAnnotation.java"/>
      <Message>In method org.testng.internal.annotations.DataProviderAnnotation.setIndices(List)</Message>
    </Method>
    <Field classname="org.testng.internal.annotations.DataProviderAnnotation" name="m_indices" signature="Ljava/util/List;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.annotations.DataProviderAnnotation" sourcefile="DataProviderAnnotation.java" sourcepath="org/testng/internal/annotations/DataProviderAnnotation.java">
        <Message>In DataProviderAnnotation.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.annotations.DataProviderAnnotation.m_indices</Message>
    </Field>
    <LocalVariable name="indices" register="1" pc="2" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named indices</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.internal.annotations.DataProviderAnnotation" primary="true" start="43" end="43" startBytecode="2" endBytecode="2" sourcefile="DataProviderAnnotation.java" sourcepath="org/testng/internal/annotations/DataProviderAnnotation.java">
      <Message>At DataProviderAnnotation.java:[line 43]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="RI_REDUNDANT_INTERFACES" priority="3" rank="20" abbrev="RI" category="STYLE" instanceHash="cd460e8f11d66520d251950df25ddde9" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Class implements same interface as superclass</ShortMessage>
    <LongMessage>Class org.testng.internal.annotations.DefaultAnnotationTransformer implements same interface as superclass</LongMessage>
    <Class classname="org.testng.internal.annotations.DefaultAnnotationTransformer" primary="true">
      <SourceLine classname="org.testng.internal.annotations.DefaultAnnotationTransformer" start="9" end="21" sourcefile="DefaultAnnotationTransformer.java" sourcepath="org/testng/internal/annotations/DefaultAnnotationTransformer.java">
        <Message>At DefaultAnnotationTransformer.java:[lines 9-21]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.annotations.DefaultAnnotationTransformer</Message>
    </Class>
    <Class classname="org.testng.IAnnotationTransformer" role="INTERFACE_TYPE">
      <SourceLine classname="org.testng.IAnnotationTransformer" start="33" end="79" sourcefile="IAnnotationTransformer.java" sourcepath="org/testng/IAnnotationTransformer.java">
        <Message>At IAnnotationTransformer.java:[lines 33-79]</Message>
      </SourceLine>
      <Message>Interface org.testng.IAnnotationTransformer</Message>
    </Class>
    <SourceLine classname="org.testng.internal.annotations.DefaultAnnotationTransformer" start="9" end="21" sourcefile="DefaultAnnotationTransformer.java" sourcepath="org/testng/internal/annotations/DefaultAnnotationTransformer.java" synthetic="true">
      <Message>At DefaultAnnotationTransformer.java:[lines 9-21]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="a16106d0945e1c29f30683991a73f28d" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.internal.annotations.FactoryAnnotation.getIndices() may expose internal representation by returning FactoryAnnotation.m_indices</LongMessage>
    <Class classname="org.testng.internal.annotations.FactoryAnnotation" primary="true">
      <SourceLine classname="org.testng.internal.annotations.FactoryAnnotation" start="10" end="54" sourcefile="FactoryAnnotation.java" sourcepath="org/testng/internal/annotations/FactoryAnnotation.java">
        <Message>At FactoryAnnotation.java:[lines 10-54]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.annotations.FactoryAnnotation</Message>
    </Class>
    <Method classname="org.testng.internal.annotations.FactoryAnnotation" name="getIndices" signature="()Ljava/util/List;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.annotations.FactoryAnnotation" start="48" end="48" startBytecode="0" endBytecode="46" sourcefile="FactoryAnnotation.java" sourcepath="org/testng/internal/annotations/FactoryAnnotation.java"/>
      <Message>In method org.testng.internal.annotations.FactoryAnnotation.getIndices()</Message>
    </Method>
    <Field classname="org.testng.internal.annotations.FactoryAnnotation" name="m_indices" signature="Ljava/util/List;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.annotations.FactoryAnnotation" sourcefile="FactoryAnnotation.java" sourcepath="org/testng/internal/annotations/FactoryAnnotation.java">
        <Message>In FactoryAnnotation.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.annotations.FactoryAnnotation.m_indices</Message>
    </Field>
    <SourceLine classname="org.testng.internal.annotations.FactoryAnnotation" primary="true" start="48" end="48" startBytecode="4" endBytecode="4" sourcefile="FactoryAnnotation.java" sourcepath="org/testng/internal/annotations/FactoryAnnotation.java">
      <Message>At FactoryAnnotation.java:[line 48]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="7eb9274f688cc8cafda9e040826fdad5" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>org.testng.internal.annotations.FactoryAnnotation.setIndices(List) may expose internal representation by storing an externally mutable object into FactoryAnnotation.m_indices</LongMessage>
    <Class classname="org.testng.internal.annotations.FactoryAnnotation" primary="true">
      <SourceLine classname="org.testng.internal.annotations.FactoryAnnotation" start="10" end="54" sourcefile="FactoryAnnotation.java" sourcepath="org/testng/internal/annotations/FactoryAnnotation.java">
        <Message>At FactoryAnnotation.java:[lines 10-54]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.annotations.FactoryAnnotation</Message>
    </Class>
    <Method classname="org.testng.internal.annotations.FactoryAnnotation" name="setIndices" signature="(Ljava/util/List;)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.annotations.FactoryAnnotation" start="53" end="54" startBytecode="0" endBytecode="79" sourcefile="FactoryAnnotation.java" sourcepath="org/testng/internal/annotations/FactoryAnnotation.java"/>
      <Message>In method org.testng.internal.annotations.FactoryAnnotation.setIndices(List)</Message>
    </Method>
    <Field classname="org.testng.internal.annotations.FactoryAnnotation" name="m_indices" signature="Ljava/util/List;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.annotations.FactoryAnnotation" sourcefile="FactoryAnnotation.java" sourcepath="org/testng/internal/annotations/FactoryAnnotation.java">
        <Message>In FactoryAnnotation.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.annotations.FactoryAnnotation.m_indices</Message>
    </Field>
    <LocalVariable name="indices" register="1" pc="2" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named indices</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.internal.annotations.FactoryAnnotation" primary="true" start="53" end="53" startBytecode="2" endBytecode="2" sourcefile="FactoryAnnotation.java" sourcepath="org/testng/internal/annotations/FactoryAnnotation.java">
      <Message>At FactoryAnnotation.java:[line 53]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="NM_SAME_SIMPLE_NAME_AS_INTERFACE" priority="2" rank="16" abbrev="Nm" category="BAD_PRACTICE" instanceHash="57638c63ca7db183021b2032129c7d8c" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Class names shouldn&apos;t shadow simple name of implemented interface</ShortMessage>
    <LongMessage>The class name org.testng.internal.annotations.IAnnotationTransformer shadows the simple name of implemented interface org.testng.IAnnotationTransformer</LongMessage>
    <Class classname="org.testng.internal.annotations.IAnnotationTransformer" primary="true">
      <SourceLine classname="org.testng.internal.annotations.IAnnotationTransformer" start="18" end="18" sourcefile="IAnnotationTransformer.java" sourcepath="org/testng/internal/annotations/IAnnotationTransformer.java">
        <Message>At IAnnotationTransformer.java:[line 18]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.annotations.IAnnotationTransformer</Message>
    </Class>
    <Class classname="org.testng.IAnnotationTransformer">
      <SourceLine classname="org.testng.IAnnotationTransformer" start="33" end="79" sourcefile="IAnnotationTransformer.java" sourcepath="org/testng/IAnnotationTransformer.java">
        <Message>At IAnnotationTransformer.java:[lines 33-79]</Message>
      </SourceLine>
      <Message>In class org.testng.IAnnotationTransformer</Message>
    </Class>
    <SourceLine classname="org.testng.internal.annotations.IAnnotationTransformer" start="18" end="18" sourcefile="IAnnotationTransformer.java" sourcepath="org/testng/internal/annotations/IAnnotationTransformer.java" synthetic="true">
      <Message>At IAnnotationTransformer.java:[line 18]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="NP_LOAD_OF_KNOWN_NULL_VALUE" priority="2" rank="16" abbrev="NP" category="STYLE" instanceHash="d32b6861ce9f0ca65a6fabab4c4776fd" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="476">
    <ShortMessage>Load of known null value</ShortMessage>
    <LongMessage>Load of known null value in org.testng.internal.annotations.JDK15AnnotationFinder.findAnnotation(Class, Annotation, Class, Class, Constructor, Method, Pair, Class)</LongMessage>
    <Class classname="org.testng.internal.annotations.JDK15AnnotationFinder" primary="true">
      <SourceLine classname="org.testng.internal.annotations.JDK15AnnotationFinder" start="45" end="280" sourcefile="JDK15AnnotationFinder.java" sourcepath="org/testng/internal/annotations/JDK15AnnotationFinder.java">
        <Message>At JDK15AnnotationFinder.java:[lines 45-280]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.annotations.JDK15AnnotationFinder</Message>
    </Class>
    <Method classname="org.testng.internal.annotations.JDK15AnnotationFinder" name="findAnnotation" signature="(Ljava/lang/Class;Ljava/lang/annotation/Annotation;Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/reflect/Constructor;Ljava/lang/reflect/Method;Lorg/testng/internal/collections/Pair;Ljava/lang/Class;)Lorg/testng/annotations/IAnnotation;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.annotations.JDK15AnnotationFinder" start="230" end="243" startBytecode="0" endBytecode="31" sourcefile="JDK15AnnotationFinder.java" sourcepath="org/testng/internal/annotations/JDK15AnnotationFinder.java"/>
      <Message>In method org.testng.internal.annotations.JDK15AnnotationFinder.findAnnotation(Class, Annotation, Class, Class, Constructor, Method, Pair, Class)</Message>
    </Method>
    <LocalVariable name="whichClass" register="8" pc="56" role="LOCAL_VARIABLE_VALUE_OF">
      <Message>Value loaded from whichClass</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.internal.annotations.JDK15AnnotationFinder" primary="true" start="240" end="240" startBytecode="58" endBytecode="58" sourcefile="JDK15AnnotationFinder.java" sourcepath="org/testng/internal/annotations/JDK15AnnotationFinder.java">
      <Message>At JDK15AnnotationFinder.java:[line 240]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="8ee46c6db2c23388e62e42651b5af080" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.internal.annotations.ListenersAnnotation.getValue() may expose internal representation by returning ListenersAnnotation.m_value</LongMessage>
    <Class classname="org.testng.internal.annotations.ListenersAnnotation" primary="true">
      <SourceLine classname="org.testng.internal.annotations.ListenersAnnotation" start="6" end="18" sourcefile="ListenersAnnotation.java" sourcepath="org/testng/internal/annotations/ListenersAnnotation.java">
        <Message>At ListenersAnnotation.java:[lines 6-18]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.annotations.ListenersAnnotation</Message>
    </Class>
    <Method classname="org.testng.internal.annotations.ListenersAnnotation" name="getValue" signature="()[Ljava/lang/Class;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.annotations.ListenersAnnotation" start="12" end="12" startBytecode="0" endBytecode="46" sourcefile="ListenersAnnotation.java" sourcepath="org/testng/internal/annotations/ListenersAnnotation.java"/>
      <Message>In method org.testng.internal.annotations.ListenersAnnotation.getValue()</Message>
    </Method>
    <Field classname="org.testng.internal.annotations.ListenersAnnotation" name="m_value" signature="[Ljava/lang/Class;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.annotations.ListenersAnnotation" sourcefile="ListenersAnnotation.java" sourcepath="org/testng/internal/annotations/ListenersAnnotation.java">
        <Message>In ListenersAnnotation.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.annotations.ListenersAnnotation.m_value</Message>
    </Field>
    <SourceLine classname="org.testng.internal.annotations.ListenersAnnotation" primary="true" start="12" end="12" startBytecode="4" endBytecode="4" sourcefile="ListenersAnnotation.java" sourcepath="org/testng/internal/annotations/ListenersAnnotation.java">
      <Message>At ListenersAnnotation.java:[line 12]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="c7c94c53566dea739d00360ce1d05557" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>org.testng.internal.annotations.ListenersAnnotation.setValue(Class[]) may expose internal representation by storing an externally mutable object into ListenersAnnotation.m_value</LongMessage>
    <Class classname="org.testng.internal.annotations.ListenersAnnotation" primary="true">
      <SourceLine classname="org.testng.internal.annotations.ListenersAnnotation" start="6" end="18" sourcefile="ListenersAnnotation.java" sourcepath="org/testng/internal/annotations/ListenersAnnotation.java">
        <Message>At ListenersAnnotation.java:[lines 6-18]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.annotations.ListenersAnnotation</Message>
    </Class>
    <Method classname="org.testng.internal.annotations.ListenersAnnotation" name="setValue" signature="([Ljava/lang/Class;)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.annotations.ListenersAnnotation" start="17" end="18" startBytecode="0" endBytecode="79" sourcefile="ListenersAnnotation.java" sourcepath="org/testng/internal/annotations/ListenersAnnotation.java"/>
      <Message>In method org.testng.internal.annotations.ListenersAnnotation.setValue(Class[])</Message>
    </Method>
    <Field classname="org.testng.internal.annotations.ListenersAnnotation" name="m_value" signature="[Ljava/lang/Class;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.annotations.ListenersAnnotation" sourcefile="ListenersAnnotation.java" sourcepath="org/testng/internal/annotations/ListenersAnnotation.java">
        <Message>In ListenersAnnotation.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.annotations.ListenersAnnotation.m_value</Message>
    </Field>
    <LocalVariable name="value" register="1" pc="2" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named value</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.internal.annotations.ListenersAnnotation" primary="true" start="17" end="17" startBytecode="2" endBytecode="2" sourcefile="ListenersAnnotation.java" sourcepath="org/testng/internal/annotations/ListenersAnnotation.java">
      <Message>At ListenersAnnotation.java:[line 17]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="878da13aa4ac1c930a57c1bf0714c963" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.internal.annotations.ParametersAnnotation.getValue() may expose internal representation by returning ParametersAnnotation.m_value</LongMessage>
    <Class classname="org.testng.internal.annotations.ParametersAnnotation" primary="true">
      <SourceLine classname="org.testng.internal.annotations.ParametersAnnotation" start="8" end="19" sourcefile="ParametersAnnotation.java" sourcepath="org/testng/internal/annotations/ParametersAnnotation.java">
        <Message>At ParametersAnnotation.java:[lines 8-19]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.annotations.ParametersAnnotation</Message>
    </Class>
    <Method classname="org.testng.internal.annotations.ParametersAnnotation" name="getValue" signature="()[Ljava/lang/String;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.annotations.ParametersAnnotation" start="14" end="14" startBytecode="0" endBytecode="46" sourcefile="ParametersAnnotation.java" sourcepath="org/testng/internal/annotations/ParametersAnnotation.java"/>
      <Message>In method org.testng.internal.annotations.ParametersAnnotation.getValue()</Message>
    </Method>
    <Field classname="org.testng.internal.annotations.ParametersAnnotation" name="m_value" signature="[Ljava/lang/String;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.annotations.ParametersAnnotation" sourcefile="ParametersAnnotation.java" sourcepath="org/testng/internal/annotations/ParametersAnnotation.java">
        <Message>In ParametersAnnotation.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.annotations.ParametersAnnotation.m_value</Message>
    </Field>
    <SourceLine classname="org.testng.internal.annotations.ParametersAnnotation" primary="true" start="14" end="14" startBytecode="4" endBytecode="4" sourcefile="ParametersAnnotation.java" sourcepath="org/testng/internal/annotations/ParametersAnnotation.java">
      <Message>At ParametersAnnotation.java:[line 14]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="13f895e22ee35c95c792bb9a6afaa789" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>org.testng.internal.annotations.ParametersAnnotation.setValue(String[]) may expose internal representation by storing an externally mutable object into ParametersAnnotation.m_value</LongMessage>
    <Class classname="org.testng.internal.annotations.ParametersAnnotation" primary="true">
      <SourceLine classname="org.testng.internal.annotations.ParametersAnnotation" start="8" end="19" sourcefile="ParametersAnnotation.java" sourcepath="org/testng/internal/annotations/ParametersAnnotation.java">
        <Message>At ParametersAnnotation.java:[lines 8-19]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.annotations.ParametersAnnotation</Message>
    </Class>
    <Method classname="org.testng.internal.annotations.ParametersAnnotation" name="setValue" signature="([Ljava/lang/String;)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.annotations.ParametersAnnotation" start="18" end="19" startBytecode="0" endBytecode="61" sourcefile="ParametersAnnotation.java" sourcepath="org/testng/internal/annotations/ParametersAnnotation.java"/>
      <Message>In method org.testng.internal.annotations.ParametersAnnotation.setValue(String[])</Message>
    </Method>
    <Field classname="org.testng.internal.annotations.ParametersAnnotation" name="m_value" signature="[Ljava/lang/String;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.annotations.ParametersAnnotation" sourcefile="ParametersAnnotation.java" sourcepath="org/testng/internal/annotations/ParametersAnnotation.java">
        <Message>In ParametersAnnotation.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.annotations.ParametersAnnotation.m_value</Message>
    </Field>
    <LocalVariable name="value" register="1" pc="2" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named value</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.internal.annotations.ParametersAnnotation" primary="true" start="18" end="18" startBytecode="2" endBytecode="2" sourcefile="ParametersAnnotation.java" sourcepath="org/testng/internal/annotations/ParametersAnnotation.java">
      <Message>At ParametersAnnotation.java:[line 18]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="8c765839e7d9759a3161663b964f51e8" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.internal.annotations.TestAnnotation.getAttributes() may expose internal representation by returning TestAnnotation.m_attributes</LongMessage>
    <Class classname="org.testng.internal.annotations.TestAnnotation" primary="true">
      <SourceLine classname="org.testng.internal.annotations.TestAnnotation" start="11" end="202" sourcefile="TestAnnotation.java" sourcepath="org/testng/internal/annotations/TestAnnotation.java">
        <Message>At TestAnnotation.java:[lines 11-202]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.annotations.TestAnnotation</Message>
    </Class>
    <Method classname="org.testng.internal.annotations.TestAnnotation" name="getAttributes" signature="()[Lorg/testng/annotations/CustomAttribute;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.annotations.TestAnnotation" start="193" end="193" startBytecode="0" endBytecode="46" sourcefile="TestAnnotation.java" sourcepath="org/testng/internal/annotations/TestAnnotation.java"/>
      <Message>In method org.testng.internal.annotations.TestAnnotation.getAttributes()</Message>
    </Method>
    <Field classname="org.testng.internal.annotations.TestAnnotation" name="m_attributes" signature="[Lorg/testng/annotations/CustomAttribute;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.annotations.TestAnnotation" sourcefile="TestAnnotation.java" sourcepath="org/testng/internal/annotations/TestAnnotation.java">
        <Message>In TestAnnotation.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.annotations.TestAnnotation.m_attributes</Message>
    </Field>
    <SourceLine classname="org.testng.internal.annotations.TestAnnotation" primary="true" start="193" end="193" startBytecode="4" endBytecode="4" sourcefile="TestAnnotation.java" sourcepath="org/testng/internal/annotations/TestAnnotation.java">
      <Message>At TestAnnotation.java:[line 193]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="4a02d7b5add9c62e71eaf4fe289470bd" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.internal.annotations.TestAnnotation.getExpectedExceptions() may expose internal representation by returning TestAnnotation.m_expectedExceptions</LongMessage>
    <Class classname="org.testng.internal.annotations.TestAnnotation" primary="true">
      <SourceLine classname="org.testng.internal.annotations.TestAnnotation" start="11" end="202" sourcefile="TestAnnotation.java" sourcepath="org/testng/internal/annotations/TestAnnotation.java">
        <Message>At TestAnnotation.java:[lines 11-202]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.annotations.TestAnnotation</Message>
    </Class>
    <Method classname="org.testng.internal.annotations.TestAnnotation" name="getExpectedExceptions" signature="()[Ljava/lang/Class;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.annotations.TestAnnotation" start="34" end="34" startBytecode="0" endBytecode="46" sourcefile="TestAnnotation.java" sourcepath="org/testng/internal/annotations/TestAnnotation.java"/>
      <Message>In method org.testng.internal.annotations.TestAnnotation.getExpectedExceptions()</Message>
    </Method>
    <Field classname="org.testng.internal.annotations.TestAnnotation" name="m_expectedExceptions" signature="[Ljava/lang/Class;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.annotations.TestAnnotation" sourcefile="TestAnnotation.java" sourcepath="org/testng/internal/annotations/TestAnnotation.java">
        <Message>In TestAnnotation.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.annotations.TestAnnotation.m_expectedExceptions</Message>
    </Field>
    <SourceLine classname="org.testng.internal.annotations.TestAnnotation" primary="true" start="34" end="34" startBytecode="4" endBytecode="4" sourcefile="TestAnnotation.java" sourcepath="org/testng/internal/annotations/TestAnnotation.java">
      <Message>At TestAnnotation.java:[line 34]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="9904cc1da93b8e007b24f672c12cfe1c" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>org.testng.internal.annotations.TestAnnotation.setAttributes(CustomAttribute[]) may expose internal representation by storing an externally mutable object into TestAnnotation.m_attributes</LongMessage>
    <Class classname="org.testng.internal.annotations.TestAnnotation" primary="true">
      <SourceLine classname="org.testng.internal.annotations.TestAnnotation" start="11" end="202" sourcefile="TestAnnotation.java" sourcepath="org/testng/internal/annotations/TestAnnotation.java">
        <Message>At TestAnnotation.java:[lines 11-202]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.annotations.TestAnnotation</Message>
    </Class>
    <Method classname="org.testng.internal.annotations.TestAnnotation" name="setAttributes" signature="([Lorg/testng/annotations/CustomAttribute;)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.annotations.TestAnnotation" start="198" end="199" startBytecode="0" endBytecode="61" sourcefile="TestAnnotation.java" sourcepath="org/testng/internal/annotations/TestAnnotation.java"/>
      <Message>In method org.testng.internal.annotations.TestAnnotation.setAttributes(CustomAttribute[])</Message>
    </Method>
    <Field classname="org.testng.internal.annotations.TestAnnotation" name="m_attributes" signature="[Lorg/testng/annotations/CustomAttribute;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.annotations.TestAnnotation" sourcefile="TestAnnotation.java" sourcepath="org/testng/internal/annotations/TestAnnotation.java">
        <Message>In TestAnnotation.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.annotations.TestAnnotation.m_attributes</Message>
    </Field>
    <LocalVariable name="attributes" register="1" pc="2" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named attributes</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.internal.annotations.TestAnnotation" primary="true" start="198" end="198" startBytecode="2" endBytecode="2" sourcefile="TestAnnotation.java" sourcepath="org/testng/internal/annotations/TestAnnotation.java">
      <Message>At TestAnnotation.java:[line 198]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="34a23a40f241e0834a9ca80cce5cdf34" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>org.testng.internal.annotations.TestAnnotation.setExpectedExceptions(Class[]) may expose internal representation by storing an externally mutable object into TestAnnotation.m_expectedExceptions</LongMessage>
    <Class classname="org.testng.internal.annotations.TestAnnotation" primary="true">
      <SourceLine classname="org.testng.internal.annotations.TestAnnotation" start="11" end="202" sourcefile="TestAnnotation.java" sourcepath="org/testng/internal/annotations/TestAnnotation.java">
        <Message>At TestAnnotation.java:[lines 11-202]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.annotations.TestAnnotation</Message>
    </Class>
    <Method classname="org.testng.internal.annotations.TestAnnotation" name="setExpectedExceptions" signature="([Ljava/lang/Class;)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.annotations.TestAnnotation" start="40" end="41" startBytecode="0" endBytecode="79" sourcefile="TestAnnotation.java" sourcepath="org/testng/internal/annotations/TestAnnotation.java"/>
      <Message>In method org.testng.internal.annotations.TestAnnotation.setExpectedExceptions(Class[])</Message>
    </Method>
    <Field classname="org.testng.internal.annotations.TestAnnotation" name="m_expectedExceptions" signature="[Ljava/lang/Class;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.annotations.TestAnnotation" sourcefile="TestAnnotation.java" sourcepath="org/testng/internal/annotations/TestAnnotation.java">
        <Message>In TestAnnotation.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.annotations.TestAnnotation.m_expectedExceptions</Message>
    </Field>
    <LocalVariable name="expectedExceptions" register="1" pc="2" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named expectedExceptions</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.internal.annotations.TestAnnotation" primary="true" start="40" end="40" startBytecode="2" endBytecode="2" sourcefile="TestAnnotation.java" sourcepath="org/testng/internal/annotations/TestAnnotation.java">
      <Message>At TestAnnotation.java:[line 40]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="1524bc883b1542bdfff86957eb545e1d" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.internal.annotations.TestOrConfiguration.getDependsOnGroups() may expose internal representation by returning TestOrConfiguration.m_dependsOnGroups</LongMessage>
    <Class classname="org.testng.internal.annotations.TestOrConfiguration" primary="true">
      <SourceLine classname="org.testng.internal.annotations.TestOrConfiguration" start="5" end="80" sourcefile="TestOrConfiguration.java" sourcepath="org/testng/internal/annotations/TestOrConfiguration.java">
        <Message>At TestOrConfiguration.java:[lines 5-80]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.annotations.TestOrConfiguration</Message>
    </Class>
    <Method classname="org.testng.internal.annotations.TestOrConfiguration" name="getDependsOnGroups" signature="()[Ljava/lang/String;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.annotations.TestOrConfiguration" start="52" end="52" startBytecode="0" endBytecode="46" sourcefile="TestOrConfiguration.java" sourcepath="org/testng/internal/annotations/TestOrConfiguration.java"/>
      <Message>In method org.testng.internal.annotations.TestOrConfiguration.getDependsOnGroups()</Message>
    </Method>
    <Field classname="org.testng.internal.annotations.TestOrConfiguration" name="m_dependsOnGroups" signature="[Ljava/lang/String;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.annotations.TestOrConfiguration" sourcefile="TestOrConfiguration.java" sourcepath="org/testng/internal/annotations/TestOrConfiguration.java">
        <Message>In TestOrConfiguration.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.annotations.TestOrConfiguration.m_dependsOnGroups</Message>
    </Field>
    <SourceLine classname="org.testng.internal.annotations.TestOrConfiguration" primary="true" start="52" end="52" startBytecode="4" endBytecode="4" sourcefile="TestOrConfiguration.java" sourcepath="org/testng/internal/annotations/TestOrConfiguration.java">
      <Message>At TestOrConfiguration.java:[line 52]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="4b6c5d6e80b2d07c25543b55d56f43b8" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.internal.annotations.TestOrConfiguration.getDependsOnMethods() may expose internal representation by returning TestOrConfiguration.m_dependsOnMethods</LongMessage>
    <Class classname="org.testng.internal.annotations.TestOrConfiguration" primary="true">
      <SourceLine classname="org.testng.internal.annotations.TestOrConfiguration" start="5" end="80" sourcefile="TestOrConfiguration.java" sourcepath="org/testng/internal/annotations/TestOrConfiguration.java">
        <Message>At TestOrConfiguration.java:[lines 5-80]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.annotations.TestOrConfiguration</Message>
    </Class>
    <Method classname="org.testng.internal.annotations.TestOrConfiguration" name="getDependsOnMethods" signature="()[Ljava/lang/String;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.annotations.TestOrConfiguration" start="57" end="57" startBytecode="0" endBytecode="46" sourcefile="TestOrConfiguration.java" sourcepath="org/testng/internal/annotations/TestOrConfiguration.java"/>
      <Message>In method org.testng.internal.annotations.TestOrConfiguration.getDependsOnMethods()</Message>
    </Method>
    <Field classname="org.testng.internal.annotations.TestOrConfiguration" name="m_dependsOnMethods" signature="[Ljava/lang/String;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.annotations.TestOrConfiguration" sourcefile="TestOrConfiguration.java" sourcepath="org/testng/internal/annotations/TestOrConfiguration.java">
        <Message>In TestOrConfiguration.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.annotations.TestOrConfiguration.m_dependsOnMethods</Message>
    </Field>
    <SourceLine classname="org.testng.internal.annotations.TestOrConfiguration" primary="true" start="57" end="57" startBytecode="4" endBytecode="4" sourcefile="TestOrConfiguration.java" sourcepath="org/testng/internal/annotations/TestOrConfiguration.java">
      <Message>At TestOrConfiguration.java:[line 57]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="e621f89149768020f56ccf5eb0800aa1" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.internal.annotations.TestOrConfiguration.getGroups() may expose internal representation by returning TestOrConfiguration.m_groups</LongMessage>
    <Class classname="org.testng.internal.annotations.TestOrConfiguration" primary="true">
      <SourceLine classname="org.testng.internal.annotations.TestOrConfiguration" start="5" end="80" sourcefile="TestOrConfiguration.java" sourcepath="org/testng/internal/annotations/TestOrConfiguration.java">
        <Message>At TestOrConfiguration.java:[lines 5-80]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.annotations.TestOrConfiguration</Message>
    </Class>
    <Method classname="org.testng.internal.annotations.TestOrConfiguration" name="getGroups" signature="()[Ljava/lang/String;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.annotations.TestOrConfiguration" start="17" end="17" startBytecode="0" endBytecode="46" sourcefile="TestOrConfiguration.java" sourcepath="org/testng/internal/annotations/TestOrConfiguration.java"/>
      <Message>In method org.testng.internal.annotations.TestOrConfiguration.getGroups()</Message>
    </Method>
    <Field classname="org.testng.internal.annotations.TestOrConfiguration" name="m_groups" signature="[Ljava/lang/String;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.annotations.TestOrConfiguration" sourcefile="TestOrConfiguration.java" sourcepath="org/testng/internal/annotations/TestOrConfiguration.java">
        <Message>In TestOrConfiguration.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.annotations.TestOrConfiguration.m_groups</Message>
    </Field>
    <SourceLine classname="org.testng.internal.annotations.TestOrConfiguration" primary="true" start="17" end="17" startBytecode="4" endBytecode="4" sourcefile="TestOrConfiguration.java" sourcepath="org/testng/internal/annotations/TestOrConfiguration.java">
      <Message>At TestOrConfiguration.java:[line 17]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="4f07847e10474398db5d4e22b2b8b7e" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>org.testng.internal.annotations.TestOrConfiguration.setDependsOnGroups(String[]) may expose internal representation by storing an externally mutable object into TestOrConfiguration.m_dependsOnGroups</LongMessage>
    <Class classname="org.testng.internal.annotations.TestOrConfiguration" primary="true">
      <SourceLine classname="org.testng.internal.annotations.TestOrConfiguration" start="5" end="80" sourcefile="TestOrConfiguration.java" sourcepath="org/testng/internal/annotations/TestOrConfiguration.java">
        <Message>At TestOrConfiguration.java:[lines 5-80]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.annotations.TestOrConfiguration</Message>
    </Class>
    <Method classname="org.testng.internal.annotations.TestOrConfiguration" name="setDependsOnGroups" signature="([Ljava/lang/String;)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.annotations.TestOrConfiguration" start="27" end="28" startBytecode="0" endBytecode="61" sourcefile="TestOrConfiguration.java" sourcepath="org/testng/internal/annotations/TestOrConfiguration.java"/>
      <Message>In method org.testng.internal.annotations.TestOrConfiguration.setDependsOnGroups(String[])</Message>
    </Method>
    <Field classname="org.testng.internal.annotations.TestOrConfiguration" name="m_dependsOnGroups" signature="[Ljava/lang/String;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.annotations.TestOrConfiguration" sourcefile="TestOrConfiguration.java" sourcepath="org/testng/internal/annotations/TestOrConfiguration.java">
        <Message>In TestOrConfiguration.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.annotations.TestOrConfiguration.m_dependsOnGroups</Message>
    </Field>
    <LocalVariable name="dependsOnGroups" register="1" pc="2" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named dependsOnGroups</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.internal.annotations.TestOrConfiguration" primary="true" start="27" end="27" startBytecode="2" endBytecode="2" sourcefile="TestOrConfiguration.java" sourcepath="org/testng/internal/annotations/TestOrConfiguration.java">
      <Message>At TestOrConfiguration.java:[line 27]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="c19b87b23fac551008fbbb164c978e4a" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>org.testng.internal.annotations.TestOrConfiguration.setDependsOnMethods(String[]) may expose internal representation by storing an externally mutable object into TestOrConfiguration.m_dependsOnMethods</LongMessage>
    <Class classname="org.testng.internal.annotations.TestOrConfiguration" primary="true">
      <SourceLine classname="org.testng.internal.annotations.TestOrConfiguration" start="5" end="80" sourcefile="TestOrConfiguration.java" sourcepath="org/testng/internal/annotations/TestOrConfiguration.java">
        <Message>At TestOrConfiguration.java:[lines 5-80]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.annotations.TestOrConfiguration</Message>
    </Class>
    <Method classname="org.testng.internal.annotations.TestOrConfiguration" name="setDependsOnMethods" signature="([Ljava/lang/String;)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.annotations.TestOrConfiguration" start="32" end="33" startBytecode="0" endBytecode="61" sourcefile="TestOrConfiguration.java" sourcepath="org/testng/internal/annotations/TestOrConfiguration.java"/>
      <Message>In method org.testng.internal.annotations.TestOrConfiguration.setDependsOnMethods(String[])</Message>
    </Method>
    <Field classname="org.testng.internal.annotations.TestOrConfiguration" name="m_dependsOnMethods" signature="[Ljava/lang/String;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.annotations.TestOrConfiguration" sourcefile="TestOrConfiguration.java" sourcepath="org/testng/internal/annotations/TestOrConfiguration.java">
        <Message>In TestOrConfiguration.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.annotations.TestOrConfiguration.m_dependsOnMethods</Message>
    </Field>
    <LocalVariable name="dependsOnMethods" register="1" pc="2" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named dependsOnMethods</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.internal.annotations.TestOrConfiguration" primary="true" start="32" end="32" startBytecode="2" endBytecode="2" sourcefile="TestOrConfiguration.java" sourcepath="org/testng/internal/annotations/TestOrConfiguration.java">
      <Message>At TestOrConfiguration.java:[line 32]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="aefc6bdaa4ab5b43ec72808e33d59864" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>org.testng.internal.annotations.TestOrConfiguration.setGroups(String[]) may expose internal representation by storing an externally mutable object into TestOrConfiguration.m_groups</LongMessage>
    <Class classname="org.testng.internal.annotations.TestOrConfiguration" primary="true">
      <SourceLine classname="org.testng.internal.annotations.TestOrConfiguration" start="5" end="80" sourcefile="TestOrConfiguration.java" sourcepath="org/testng/internal/annotations/TestOrConfiguration.java">
        <Message>At TestOrConfiguration.java:[lines 5-80]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.annotations.TestOrConfiguration</Message>
    </Class>
    <Method classname="org.testng.internal.annotations.TestOrConfiguration" name="setGroups" signature="([Ljava/lang/String;)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.annotations.TestOrConfiguration" start="37" end="38" startBytecode="0" endBytecode="61" sourcefile="TestOrConfiguration.java" sourcepath="org/testng/internal/annotations/TestOrConfiguration.java"/>
      <Message>In method org.testng.internal.annotations.TestOrConfiguration.setGroups(String[])</Message>
    </Method>
    <Field classname="org.testng.internal.annotations.TestOrConfiguration" name="m_groups" signature="[Ljava/lang/String;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.annotations.TestOrConfiguration" sourcefile="TestOrConfiguration.java" sourcepath="org/testng/internal/annotations/TestOrConfiguration.java">
        <Message>In TestOrConfiguration.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.annotations.TestOrConfiguration.m_groups</Message>
    </Field>
    <LocalVariable name="groups" register="1" pc="2" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named groups</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.internal.annotations.TestOrConfiguration" primary="true" start="37" end="37" startBytecode="2" endBytecode="2" sourcefile="TestOrConfiguration.java" sourcepath="org/testng/internal/annotations/TestOrConfiguration.java">
      <Message>At TestOrConfiguration.java:[line 37]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="e1f8e26dfabbcd61b8cc5825aa5ccc48" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>new org.testng.internal.collections.ArrayIterator(Object[][]) may expose internal representation by storing an externally mutable object into ArrayIterator.m_objects</LongMessage>
    <Class classname="org.testng.internal.collections.ArrayIterator" primary="true">
      <SourceLine classname="org.testng.internal.collections.ArrayIterator" start="7" end="32" sourcefile="ArrayIterator.java" sourcepath="org/testng/internal/collections/ArrayIterator.java">
        <Message>At ArrayIterator.java:[lines 7-32]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.collections.ArrayIterator</Message>
    </Class>
    <Method classname="org.testng.internal.collections.ArrayIterator" name="&lt;init&gt;" signature="([[Ljava/lang/Object;)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.collections.ArrayIterator" start="12" end="15" startBytecode="0" endBytecode="78" sourcefile="ArrayIterator.java" sourcepath="org/testng/internal/collections/ArrayIterator.java"/>
      <Message>In method new org.testng.internal.collections.ArrayIterator(Object[][])</Message>
    </Method>
    <Field classname="org.testng.internal.collections.ArrayIterator" name="m_objects" signature="[[Ljava/lang/Object;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.collections.ArrayIterator" sourcefile="ArrayIterator.java" sourcepath="org/testng/internal/collections/ArrayIterator.java">
        <Message>In ArrayIterator.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.collections.ArrayIterator.m_objects</Message>
    </Field>
    <LocalVariable name="objects" register="1" pc="6" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named objects</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.internal.collections.ArrayIterator" primary="true" start="13" end="13" startBytecode="6" endBytecode="6" sourcefile="ArrayIterator.java" sourcepath="org/testng/internal/collections/ArrayIterator.java">
      <Message>At ArrayIterator.java:[line 13]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="4803eb376b1ffe04a0cd0c01061ab50f" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>new org.testng.internal.collections.OneToTwoDimArrayIterator(Object[]) may expose internal representation by storing an externally mutable object into OneToTwoDimArrayIterator.m_objects</LongMessage>
    <Class classname="org.testng.internal.collections.OneToTwoDimArrayIterator" primary="true">
      <SourceLine classname="org.testng.internal.collections.OneToTwoDimArrayIterator" start="6" end="31" sourcefile="OneToTwoDimArrayIterator.java" sourcepath="org/testng/internal/collections/OneToTwoDimArrayIterator.java">
        <Message>At OneToTwoDimArrayIterator.java:[lines 6-31]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.collections.OneToTwoDimArrayIterator</Message>
    </Class>
    <Method classname="org.testng.internal.collections.OneToTwoDimArrayIterator" name="&lt;init&gt;" signature="([Ljava/lang/Object;)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.collections.OneToTwoDimArrayIterator" start="11" end="14" startBytecode="0" endBytecode="78" sourcefile="OneToTwoDimArrayIterator.java" sourcepath="org/testng/internal/collections/OneToTwoDimArrayIterator.java"/>
      <Message>In method new org.testng.internal.collections.OneToTwoDimArrayIterator(Object[])</Message>
    </Method>
    <Field classname="org.testng.internal.collections.OneToTwoDimArrayIterator" name="m_objects" signature="[Ljava/lang/Object;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.collections.OneToTwoDimArrayIterator" sourcefile="OneToTwoDimArrayIterator.java" sourcepath="org/testng/internal/collections/OneToTwoDimArrayIterator.java">
        <Message>In OneToTwoDimArrayIterator.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.collections.OneToTwoDimArrayIterator.m_objects</Message>
    </Field>
    <LocalVariable name="objects" register="1" pc="6" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named objects</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.internal.collections.OneToTwoDimArrayIterator" primary="true" start="12" end="12" startBytecode="6" endBytecode="6" sourcefile="OneToTwoDimArrayIterator.java" sourcepath="org/testng/internal/collections/OneToTwoDimArrayIterator.java">
      <Message>At OneToTwoDimArrayIterator.java:[line 12]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="2af108f81bbef2d2354a2294b1187eda" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>new org.testng.internal.collections.OneToTwoDimIterator(Iterator) may expose internal representation by storing an externally mutable object into OneToTwoDimIterator.m_iterator</LongMessage>
    <Class classname="org.testng.internal.collections.OneToTwoDimIterator" primary="true">
      <SourceLine classname="org.testng.internal.collections.OneToTwoDimIterator" start="5" end="25" sourcefile="OneToTwoDimIterator.java" sourcepath="org/testng/internal/collections/OneToTwoDimIterator.java">
        <Message>At OneToTwoDimIterator.java:[lines 5-25]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.collections.OneToTwoDimIterator</Message>
    </Class>
    <Method classname="org.testng.internal.collections.OneToTwoDimIterator" name="&lt;init&gt;" signature="(Ljava/util/Iterator;)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.collections.OneToTwoDimIterator" start="9" end="11" startBytecode="0" endBytecode="87" sourcefile="OneToTwoDimIterator.java" sourcepath="org/testng/internal/collections/OneToTwoDimIterator.java"/>
      <Message>In method new org.testng.internal.collections.OneToTwoDimIterator(Iterator)</Message>
    </Method>
    <Field classname="org.testng.internal.collections.OneToTwoDimIterator" name="m_iterator" signature="Ljava/util/Iterator;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.collections.OneToTwoDimIterator" sourcefile="OneToTwoDimIterator.java" sourcepath="org/testng/internal/collections/OneToTwoDimIterator.java">
        <Message>In OneToTwoDimIterator.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.collections.OneToTwoDimIterator.m_iterator</Message>
    </Field>
    <LocalVariable name="iterator" register="1" pc="6" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named iterator</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.internal.collections.OneToTwoDimIterator" primary="true" start="10" end="10" startBytecode="6" endBytecode="6" sourcefile="OneToTwoDimIterator.java" sourcepath="org/testng/internal/collections/OneToTwoDimIterator.java">
      <Message>At OneToTwoDimIterator.java:[line 10]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="4fa1dea3648a5322cf1f23a68c54198" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>new org.testng.internal.invokers.InvokedMethodListenerInvoker(InvokedMethodListenerMethod, ITestResult, ITestContext) may expose internal representation by storing an externally mutable object into InvokedMethodListenerInvoker.m_testContext</LongMessage>
    <Class classname="org.testng.internal.invokers.InvokedMethodListenerInvoker" primary="true">
      <SourceLine classname="org.testng.internal.invokers.InvokedMethodListenerInvoker" start="35" end="63" sourcefile="InvokedMethodListenerInvoker.java" sourcepath="org/testng/internal/invokers/InvokedMethodListenerInvoker.java">
        <Message>At InvokedMethodListenerInvoker.java:[lines 35-63]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.invokers.InvokedMethodListenerInvoker</Message>
    </Class>
    <Method classname="org.testng.internal.invokers.InvokedMethodListenerInvoker" name="&lt;init&gt;" signature="(Lorg/testng/internal/invokers/InvokedMethodListenerMethod;Lorg/testng/ITestResult;Lorg/testng/ITestContext;)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.invokers.InvokedMethodListenerInvoker" start="35" end="39" startBytecode="0" endBytecode="107" sourcefile="InvokedMethodListenerInvoker.java" sourcepath="org/testng/internal/invokers/InvokedMethodListenerInvoker.java"/>
      <Message>In method new org.testng.internal.invokers.InvokedMethodListenerInvoker(InvokedMethodListenerMethod, ITestResult, ITestContext)</Message>
    </Method>
    <Field classname="org.testng.internal.invokers.InvokedMethodListenerInvoker" name="m_testContext" signature="Lorg/testng/ITestContext;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.invokers.InvokedMethodListenerInvoker" sourcefile="InvokedMethodListenerInvoker.java" sourcepath="org/testng/internal/invokers/InvokedMethodListenerInvoker.java">
        <Message>In InvokedMethodListenerInvoker.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.invokers.InvokedMethodListenerInvoker.m_testContext</Message>
    </Field>
    <LocalVariable name="testContext" register="3" pc="11" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named testContext</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.internal.invokers.InvokedMethodListenerInvoker" primary="true" start="37" end="37" startBytecode="11" endBytecode="11" sourcefile="InvokedMethodListenerInvoker.java" sourcepath="org/testng/internal/invokers/InvokedMethodListenerInvoker.java">
      <Message>At InvokedMethodListenerInvoker.java:[line 37]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="512e39791f90b86e7970283a945acd50" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>new org.testng.internal.invokers.InvokedMethodListenerInvoker(InvokedMethodListenerMethod, ITestResult, ITestContext) may expose internal representation by storing an externally mutable object into InvokedMethodListenerInvoker.m_testResult</LongMessage>
    <Class classname="org.testng.internal.invokers.InvokedMethodListenerInvoker" primary="true">
      <SourceLine classname="org.testng.internal.invokers.InvokedMethodListenerInvoker" start="35" end="63" sourcefile="InvokedMethodListenerInvoker.java" sourcepath="org/testng/internal/invokers/InvokedMethodListenerInvoker.java">
        <Message>At InvokedMethodListenerInvoker.java:[lines 35-63]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.invokers.InvokedMethodListenerInvoker</Message>
    </Class>
    <Method classname="org.testng.internal.invokers.InvokedMethodListenerInvoker" name="&lt;init&gt;" signature="(Lorg/testng/internal/invokers/InvokedMethodListenerMethod;Lorg/testng/ITestResult;Lorg/testng/ITestContext;)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.invokers.InvokedMethodListenerInvoker" start="35" end="39" startBytecode="0" endBytecode="107" sourcefile="InvokedMethodListenerInvoker.java" sourcepath="org/testng/internal/invokers/InvokedMethodListenerInvoker.java"/>
      <Message>In method new org.testng.internal.invokers.InvokedMethodListenerInvoker(InvokedMethodListenerMethod, ITestResult, ITestContext)</Message>
    </Method>
    <Field classname="org.testng.internal.invokers.InvokedMethodListenerInvoker" name="m_testResult" signature="Lorg/testng/ITestResult;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.invokers.InvokedMethodListenerInvoker" sourcefile="InvokedMethodListenerInvoker.java" sourcepath="org/testng/internal/invokers/InvokedMethodListenerInvoker.java">
        <Message>In InvokedMethodListenerInvoker.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.invokers.InvokedMethodListenerInvoker.m_testResult</Message>
    </Field>
    <LocalVariable name="testResult" register="2" pc="16" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named testResult</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.internal.invokers.InvokedMethodListenerInvoker" primary="true" start="38" end="38" startBytecode="16" endBytecode="16" sourcefile="InvokedMethodListenerInvoker.java" sourcepath="org/testng/internal/invokers/InvokedMethodListenerInvoker.java">
      <Message>At InvokedMethodListenerInvoker.java:[line 38]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="db308264748526ffa62d96105204131f" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>new org.testng.internal.junit.ArrayComparisonFailure(String, AssertionError, int) may expose internal representation by storing an externally mutable object into ArrayComparisonFailure.fCause</LongMessage>
    <Class classname="org.testng.internal.junit.ArrayComparisonFailure" primary="true">
      <SourceLine classname="org.testng.internal.junit.ArrayComparisonFailure" start="9" end="49" sourcefile="ArrayComparisonFailure.java" sourcepath="org/testng/internal/junit/ArrayComparisonFailure.java">
        <Message>At ArrayComparisonFailure.java:[lines 9-49]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.junit.ArrayComparisonFailure</Message>
    </Class>
    <Method classname="org.testng.internal.junit.ArrayComparisonFailure" name="&lt;init&gt;" signature="(Ljava/lang/String;Ljava/lang/AssertionError;I)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.junit.ArrayComparisonFailure" start="21" end="25" startBytecode="0" endBytecode="122" sourcefile="ArrayComparisonFailure.java" sourcepath="org/testng/internal/junit/ArrayComparisonFailure.java"/>
      <Message>In method new org.testng.internal.junit.ArrayComparisonFailure(String, AssertionError, int)</Message>
    </Method>
    <Field classname="org.testng.internal.junit.ArrayComparisonFailure" name="fCause" signature="Ljava/lang/AssertionError;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.junit.ArrayComparisonFailure" sourcefile="ArrayComparisonFailure.java" sourcepath="org/testng/internal/junit/ArrayComparisonFailure.java">
        <Message>In ArrayComparisonFailure.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.junit.ArrayComparisonFailure.fCause</Message>
    </Field>
    <LocalVariable name="cause" register="2" pc="22" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named cause</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.internal.junit.ArrayComparisonFailure" primary="true" start="23" end="23" startBytecode="22" endBytecode="22" sourcefile="ArrayComparisonFailure.java" sourcepath="org/testng/internal/junit/ArrayComparisonFailure.java">
      <Message>At ArrayComparisonFailure.java:[line 23]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="VA_FORMAT_STRING_USES_NEWLINE" priority="2" rank="20" abbrev="FS" category="BAD_PRACTICE" instanceHash="84ef110d426864977fd6b20c796e90e8" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Format string should use %n rather than \n</ShortMessage>
    <LongMessage>Format string should use %n rather than \n in org.testng.internal.reflect.DataProviderMethodMatcher.getConformingArguments()</LongMessage>
    <Class classname="org.testng.internal.reflect.DataProviderMethodMatcher" primary="true">
      <SourceLine classname="org.testng.internal.reflect.DataProviderMethodMatcher" start="8" end="43" sourcefile="DataProviderMethodMatcher.java" sourcepath="org/testng/internal/reflect/DataProviderMethodMatcher.java">
        <Message>At DataProviderMethodMatcher.java:[lines 8-43]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.reflect.DataProviderMethodMatcher</Message>
    </Class>
    <Method classname="org.testng.internal.reflect.DataProviderMethodMatcher" name="getConformingArguments" signature="()[Ljava/lang/Object;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.reflect.DataProviderMethodMatcher" start="33" end="43" startBytecode="0" endBytecode="183" sourcefile="DataProviderMethodMatcher.java" sourcepath="org/testng/internal/reflect/DataProviderMethodMatcher.java"/>
      <Message>In method org.testng.internal.reflect.DataProviderMethodMatcher.getConformingArguments()</Message>
    </Method>
    <Method classname="java.lang.String" name="format" signature="(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;" isStatic="true" role="METHOD_CALLED">
      <SourceLine classname="java.lang.String" start="4147" end="4147" startBytecode="0" endBytecode="67" sourcefile="String.java" sourcepath="java/lang/String.java"/>
      <Message>Called method String.format(String, Object[])</Message>
    </Method>
    <String value="[%s] has no parameters defined but was found to be using a data provider (either explicitly specified or inherited from class level annotation).\n" role="STRING_FORMAT_STRING">
      <Message>Format string &quot;[%s] has no parameters defined but was found to be using a data provider (either explicitly specified or inherited from class level annotation).\n&quot;</Message>
    </String>
    <SourceLine classname="org.testng.internal.reflect.DataProviderMethodMatcher" primary="true" start="39" end="39" startBytecode="45" endBytecode="45" sourcefile="DataProviderMethodMatcher.java" sourcepath="org/testng/internal/reflect/DataProviderMethodMatcher.java">
      <Message>At DataProviderMethodMatcher.java:[line 39]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="4b324c0e4c10429099de5ee1241bf4de" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.internal.reflect.MethodMatcherContext.getArguments() may expose internal representation by returning MethodMatcherContext.arguments</LongMessage>
    <Class classname="org.testng.internal.reflect.MethodMatcherContext" primary="true">
      <SourceLine classname="org.testng.internal.reflect.MethodMatcherContext" start="32" end="57" sourcefile="MethodMatcherContext.java" sourcepath="org/testng/internal/reflect/MethodMatcherContext.java">
        <Message>At MethodMatcherContext.java:[lines 32-57]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.reflect.MethodMatcherContext</Message>
    </Class>
    <Method classname="org.testng.internal.reflect.MethodMatcherContext" name="getArguments" signature="()[Ljava/lang/Object;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.reflect.MethodMatcherContext" start="49" end="49" startBytecode="0" endBytecode="46" sourcefile="MethodMatcherContext.java" sourcepath="org/testng/internal/reflect/MethodMatcherContext.java"/>
      <Message>In method org.testng.internal.reflect.MethodMatcherContext.getArguments()</Message>
    </Method>
    <Field classname="org.testng.internal.reflect.MethodMatcherContext" name="arguments" signature="[Ljava/lang/Object;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.reflect.MethodMatcherContext" sourcefile="MethodMatcherContext.java" sourcepath="org/testng/internal/reflect/MethodMatcherContext.java">
        <Message>In MethodMatcherContext.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.reflect.MethodMatcherContext.arguments</Message>
    </Field>
    <SourceLine classname="org.testng.internal.reflect.MethodMatcherContext" primary="true" start="49" end="49" startBytecode="4" endBytecode="4" sourcefile="MethodMatcherContext.java" sourcepath="org/testng/internal/reflect/MethodMatcherContext.java">
      <Message>At MethodMatcherContext.java:[line 49]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="ebe4ffc1d633c13a98ddd131326980c3" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.internal.reflect.MethodMatcherContext.getMethod() may expose internal representation by returning MethodMatcherContext.method</LongMessage>
    <Class classname="org.testng.internal.reflect.MethodMatcherContext" primary="true">
      <SourceLine classname="org.testng.internal.reflect.MethodMatcherContext" start="32" end="57" sourcefile="MethodMatcherContext.java" sourcepath="org/testng/internal/reflect/MethodMatcherContext.java">
        <Message>At MethodMatcherContext.java:[lines 32-57]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.reflect.MethodMatcherContext</Message>
    </Class>
    <Method classname="org.testng.internal.reflect.MethodMatcherContext" name="getMethod" signature="()Ljava/lang/reflect/Method;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.reflect.MethodMatcherContext" start="45" end="45" startBytecode="0" endBytecode="46" sourcefile="MethodMatcherContext.java" sourcepath="org/testng/internal/reflect/MethodMatcherContext.java"/>
      <Message>In method org.testng.internal.reflect.MethodMatcherContext.getMethod()</Message>
    </Method>
    <Field classname="org.testng.internal.reflect.MethodMatcherContext" name="method" signature="Ljava/lang/reflect/Method;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.reflect.MethodMatcherContext" sourcefile="MethodMatcherContext.java" sourcepath="org/testng/internal/reflect/MethodMatcherContext.java">
        <Message>In MethodMatcherContext.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.reflect.MethodMatcherContext.method</Message>
    </Field>
    <SourceLine classname="org.testng.internal.reflect.MethodMatcherContext" primary="true" start="45" end="45" startBytecode="4" endBytecode="4" sourcefile="MethodMatcherContext.java" sourcepath="org/testng/internal/reflect/MethodMatcherContext.java">
      <Message>At MethodMatcherContext.java:[line 45]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="b7070122a4ddb5a9d7448fc2b307ac52" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.internal.reflect.MethodMatcherContext.getMethodParameter() may expose internal representation by returning MethodMatcherContext.methodParameter</LongMessage>
    <Class classname="org.testng.internal.reflect.MethodMatcherContext" primary="true">
      <SourceLine classname="org.testng.internal.reflect.MethodMatcherContext" start="32" end="57" sourcefile="MethodMatcherContext.java" sourcepath="org/testng/internal/reflect/MethodMatcherContext.java">
        <Message>At MethodMatcherContext.java:[lines 32-57]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.reflect.MethodMatcherContext</Message>
    </Class>
    <Method classname="org.testng.internal.reflect.MethodMatcherContext" name="getMethodParameter" signature="()[Lorg/testng/internal/reflect/Parameter;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.reflect.MethodMatcherContext" start="41" end="41" startBytecode="0" endBytecode="46" sourcefile="MethodMatcherContext.java" sourcepath="org/testng/internal/reflect/MethodMatcherContext.java"/>
      <Message>In method org.testng.internal.reflect.MethodMatcherContext.getMethodParameter()</Message>
    </Method>
    <Field classname="org.testng.internal.reflect.MethodMatcherContext" name="methodParameter" signature="[Lorg/testng/internal/reflect/Parameter;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.reflect.MethodMatcherContext" sourcefile="MethodMatcherContext.java" sourcepath="org/testng/internal/reflect/MethodMatcherContext.java">
        <Message>In MethodMatcherContext.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.reflect.MethodMatcherContext.methodParameter</Message>
    </Field>
    <SourceLine classname="org.testng.internal.reflect.MethodMatcherContext" primary="true" start="41" end="41" startBytecode="4" endBytecode="4" sourcefile="MethodMatcherContext.java" sourcepath="org/testng/internal/reflect/MethodMatcherContext.java">
      <Message>At MethodMatcherContext.java:[line 41]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="8a7bc8822b6e63f9dd4d2c80b130f018" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.internal.reflect.MethodMatcherContext.getTestContext() may expose internal representation by returning MethodMatcherContext.testContext</LongMessage>
    <Class classname="org.testng.internal.reflect.MethodMatcherContext" primary="true">
      <SourceLine classname="org.testng.internal.reflect.MethodMatcherContext" start="32" end="57" sourcefile="MethodMatcherContext.java" sourcepath="org/testng/internal/reflect/MethodMatcherContext.java">
        <Message>At MethodMatcherContext.java:[lines 32-57]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.reflect.MethodMatcherContext</Message>
    </Class>
    <Method classname="org.testng.internal.reflect.MethodMatcherContext" name="getTestContext" signature="()Lorg/testng/ITestContext;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.reflect.MethodMatcherContext" start="53" end="53" startBytecode="0" endBytecode="46" sourcefile="MethodMatcherContext.java" sourcepath="org/testng/internal/reflect/MethodMatcherContext.java"/>
      <Message>In method org.testng.internal.reflect.MethodMatcherContext.getTestContext()</Message>
    </Method>
    <Field classname="org.testng.internal.reflect.MethodMatcherContext" name="testContext" signature="Lorg/testng/ITestContext;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.reflect.MethodMatcherContext" sourcefile="MethodMatcherContext.java" sourcepath="org/testng/internal/reflect/MethodMatcherContext.java">
        <Message>In MethodMatcherContext.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.reflect.MethodMatcherContext.testContext</Message>
    </Field>
    <SourceLine classname="org.testng.internal.reflect.MethodMatcherContext" primary="true" start="53" end="53" startBytecode="4" endBytecode="4" sourcefile="MethodMatcherContext.java" sourcepath="org/testng/internal/reflect/MethodMatcherContext.java">
      <Message>At MethodMatcherContext.java:[line 53]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="353dacd02a799e063b91d95147bba63" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.internal.reflect.MethodMatcherContext.getTestResult() may expose internal representation by returning MethodMatcherContext.testResult</LongMessage>
    <Class classname="org.testng.internal.reflect.MethodMatcherContext" primary="true">
      <SourceLine classname="org.testng.internal.reflect.MethodMatcherContext" start="32" end="57" sourcefile="MethodMatcherContext.java" sourcepath="org/testng/internal/reflect/MethodMatcherContext.java">
        <Message>At MethodMatcherContext.java:[lines 32-57]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.reflect.MethodMatcherContext</Message>
    </Class>
    <Method classname="org.testng.internal.reflect.MethodMatcherContext" name="getTestResult" signature="()Lorg/testng/ITestResult;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.reflect.MethodMatcherContext" start="57" end="57" startBytecode="0" endBytecode="46" sourcefile="MethodMatcherContext.java" sourcepath="org/testng/internal/reflect/MethodMatcherContext.java"/>
      <Message>In method org.testng.internal.reflect.MethodMatcherContext.getTestResult()</Message>
    </Method>
    <Field classname="org.testng.internal.reflect.MethodMatcherContext" name="testResult" signature="Lorg/testng/ITestResult;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.reflect.MethodMatcherContext" sourcefile="MethodMatcherContext.java" sourcepath="org/testng/internal/reflect/MethodMatcherContext.java">
        <Message>In MethodMatcherContext.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.reflect.MethodMatcherContext.testResult</Message>
    </Field>
    <SourceLine classname="org.testng.internal.reflect.MethodMatcherContext" primary="true" start="57" end="57" startBytecode="4" endBytecode="4" sourcefile="MethodMatcherContext.java" sourcepath="org/testng/internal/reflect/MethodMatcherContext.java">
      <Message>At MethodMatcherContext.java:[line 57]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="3c5ed5f1a92906759f079947ede4a8a2" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>new org.testng.internal.reflect.MethodMatcherContext(Method, Object[], ITestContext, ITestResult) may expose internal representation by storing an externally mutable object into MethodMatcherContext.arguments</LongMessage>
    <Class classname="org.testng.internal.reflect.MethodMatcherContext" primary="true">
      <SourceLine classname="org.testng.internal.reflect.MethodMatcherContext" start="32" end="57" sourcefile="MethodMatcherContext.java" sourcepath="org/testng/internal/reflect/MethodMatcherContext.java">
        <Message>At MethodMatcherContext.java:[lines 32-57]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.reflect.MethodMatcherContext</Message>
    </Class>
    <Method classname="org.testng.internal.reflect.MethodMatcherContext" name="&lt;init&gt;" signature="(Ljava/lang/reflect/Method;[Ljava/lang/Object;Lorg/testng/ITestContext;Lorg/testng/ITestResult;)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.reflect.MethodMatcherContext" start="32" end="38" startBytecode="0" endBytecode="139" sourcefile="MethodMatcherContext.java" sourcepath="org/testng/internal/reflect/MethodMatcherContext.java"/>
      <Message>In method new org.testng.internal.reflect.MethodMatcherContext(Method, Object[], ITestContext, ITestResult)</Message>
    </Method>
    <Field classname="org.testng.internal.reflect.MethodMatcherContext" name="arguments" signature="[Ljava/lang/Object;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.reflect.MethodMatcherContext" sourcefile="MethodMatcherContext.java" sourcepath="org/testng/internal/reflect/MethodMatcherContext.java">
        <Message>In MethodMatcherContext.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.reflect.MethodMatcherContext.arguments</Message>
    </Field>
    <LocalVariable name="arguments" register="2" pc="19" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named arguments</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.internal.reflect.MethodMatcherContext" primary="true" start="35" end="35" startBytecode="19" endBytecode="19" sourcefile="MethodMatcherContext.java" sourcepath="org/testng/internal/reflect/MethodMatcherContext.java">
      <Message>At MethodMatcherContext.java:[line 35]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="cd013b43b61f037e2c2cec5f29f3e951" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>new org.testng.internal.reflect.MethodMatcherContext(Method, Object[], ITestContext, ITestResult) may expose internal representation by storing an externally mutable object into MethodMatcherContext.method</LongMessage>
    <Class classname="org.testng.internal.reflect.MethodMatcherContext" primary="true">
      <SourceLine classname="org.testng.internal.reflect.MethodMatcherContext" start="32" end="57" sourcefile="MethodMatcherContext.java" sourcepath="org/testng/internal/reflect/MethodMatcherContext.java">
        <Message>At MethodMatcherContext.java:[lines 32-57]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.reflect.MethodMatcherContext</Message>
    </Class>
    <Method classname="org.testng.internal.reflect.MethodMatcherContext" name="&lt;init&gt;" signature="(Ljava/lang/reflect/Method;[Ljava/lang/Object;Lorg/testng/ITestContext;Lorg/testng/ITestResult;)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.reflect.MethodMatcherContext" start="32" end="38" startBytecode="0" endBytecode="139" sourcefile="MethodMatcherContext.java" sourcepath="org/testng/internal/reflect/MethodMatcherContext.java"/>
      <Message>In method new org.testng.internal.reflect.MethodMatcherContext(Method, Object[], ITestContext, ITestResult)</Message>
    </Method>
    <Field classname="org.testng.internal.reflect.MethodMatcherContext" name="method" signature="Ljava/lang/reflect/Method;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.reflect.MethodMatcherContext" sourcefile="MethodMatcherContext.java" sourcepath="org/testng/internal/reflect/MethodMatcherContext.java">
        <Message>In MethodMatcherContext.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.reflect.MethodMatcherContext.method</Message>
    </Field>
    <LocalVariable name="method" register="1" pc="6" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named method</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.internal.reflect.MethodMatcherContext" primary="true" start="33" end="33" startBytecode="6" endBytecode="6" sourcefile="MethodMatcherContext.java" sourcepath="org/testng/internal/reflect/MethodMatcherContext.java">
      <Message>At MethodMatcherContext.java:[line 33]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="60f6ced1a5b24509b7dcfdac8f43611b" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>new org.testng.internal.reflect.MethodMatcherContext(Method, Object[], ITestContext, ITestResult) may expose internal representation by storing an externally mutable object into MethodMatcherContext.testContext</LongMessage>
    <Class classname="org.testng.internal.reflect.MethodMatcherContext" primary="true">
      <SourceLine classname="org.testng.internal.reflect.MethodMatcherContext" start="32" end="57" sourcefile="MethodMatcherContext.java" sourcepath="org/testng/internal/reflect/MethodMatcherContext.java">
        <Message>At MethodMatcherContext.java:[lines 32-57]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.reflect.MethodMatcherContext</Message>
    </Class>
    <Method classname="org.testng.internal.reflect.MethodMatcherContext" name="&lt;init&gt;" signature="(Ljava/lang/reflect/Method;[Ljava/lang/Object;Lorg/testng/ITestContext;Lorg/testng/ITestResult;)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.reflect.MethodMatcherContext" start="32" end="38" startBytecode="0" endBytecode="139" sourcefile="MethodMatcherContext.java" sourcepath="org/testng/internal/reflect/MethodMatcherContext.java"/>
      <Message>In method new org.testng.internal.reflect.MethodMatcherContext(Method, Object[], ITestContext, ITestResult)</Message>
    </Method>
    <Field classname="org.testng.internal.reflect.MethodMatcherContext" name="testContext" signature="Lorg/testng/ITestContext;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.reflect.MethodMatcherContext" sourcefile="MethodMatcherContext.java" sourcepath="org/testng/internal/reflect/MethodMatcherContext.java">
        <Message>In MethodMatcherContext.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.reflect.MethodMatcherContext.testContext</Message>
    </Field>
    <LocalVariable name="testContext" register="3" pc="24" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named testContext</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.internal.reflect.MethodMatcherContext" primary="true" start="36" end="36" startBytecode="24" endBytecode="24" sourcefile="MethodMatcherContext.java" sourcepath="org/testng/internal/reflect/MethodMatcherContext.java">
      <Message>At MethodMatcherContext.java:[line 36]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="abb67cda29bcf9f994a02a719c547f70" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>new org.testng.internal.reflect.MethodMatcherContext(Method, Object[], ITestContext, ITestResult) may expose internal representation by storing an externally mutable object into MethodMatcherContext.testResult</LongMessage>
    <Class classname="org.testng.internal.reflect.MethodMatcherContext" primary="true">
      <SourceLine classname="org.testng.internal.reflect.MethodMatcherContext" start="32" end="57" sourcefile="MethodMatcherContext.java" sourcepath="org/testng/internal/reflect/MethodMatcherContext.java">
        <Message>At MethodMatcherContext.java:[lines 32-57]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.reflect.MethodMatcherContext</Message>
    </Class>
    <Method classname="org.testng.internal.reflect.MethodMatcherContext" name="&lt;init&gt;" signature="(Ljava/lang/reflect/Method;[Ljava/lang/Object;Lorg/testng/ITestContext;Lorg/testng/ITestResult;)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.reflect.MethodMatcherContext" start="32" end="38" startBytecode="0" endBytecode="139" sourcefile="MethodMatcherContext.java" sourcepath="org/testng/internal/reflect/MethodMatcherContext.java"/>
      <Message>In method new org.testng.internal.reflect.MethodMatcherContext(Method, Object[], ITestContext, ITestResult)</Message>
    </Method>
    <Field classname="org.testng.internal.reflect.MethodMatcherContext" name="testResult" signature="Lorg/testng/ITestResult;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.reflect.MethodMatcherContext" sourcefile="MethodMatcherContext.java" sourcepath="org/testng/internal/reflect/MethodMatcherContext.java">
        <Message>In MethodMatcherContext.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.reflect.MethodMatcherContext.testResult</Message>
    </Field>
    <LocalVariable name="testResult" register="4" pc="30" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named testResult</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.internal.reflect.MethodMatcherContext" primary="true" start="37" end="37" startBytecode="30" endBytecode="30" sourcefile="MethodMatcherContext.java" sourcepath="org/testng/internal/reflect/MethodMatcherContext.java">
      <Message>At MethodMatcherContext.java:[line 37]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="a8e93973079756c7b6570c652cf2413e" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.internal.reflect.Parameter.getDeclaredAnnotations() may expose internal representation by returning Parameter.declaredAnnotations</LongMessage>
    <Class classname="org.testng.internal.reflect.Parameter" primary="true">
      <SourceLine classname="org.testng.internal.reflect.Parameter" start="23" end="86" sourcefile="Parameter.java" sourcepath="org/testng/internal/reflect/Parameter.java">
        <Message>At Parameter.java:[lines 23-86]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.reflect.Parameter</Message>
    </Class>
    <Method classname="org.testng.internal.reflect.Parameter" name="getDeclaredAnnotations" signature="()[Ljava/lang/annotation/Annotation;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.reflect.Parameter" start="86" end="86" startBytecode="0" endBytecode="46" sourcefile="Parameter.java" sourcepath="org/testng/internal/reflect/Parameter.java"/>
      <Message>In method org.testng.internal.reflect.Parameter.getDeclaredAnnotations()</Message>
    </Method>
    <Field classname="org.testng.internal.reflect.Parameter" name="declaredAnnotations" signature="[Ljava/lang/annotation/Annotation;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.reflect.Parameter" sourcefile="Parameter.java" sourcepath="org/testng/internal/reflect/Parameter.java">
        <Message>In Parameter.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.reflect.Parameter.declaredAnnotations</Message>
    </Field>
    <SourceLine classname="org.testng.internal.reflect.Parameter" primary="true" start="86" end="86" startBytecode="4" endBytecode="4" sourcefile="Parameter.java" sourcepath="org/testng/internal/reflect/Parameter.java">
      <Message>At Parameter.java:[line 86]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="2d175cfdd0edae868a7971f1a6f055ad" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>new org.testng.internal.reflect.Parameter(int, Class, Annotation[]) may expose internal representation by storing an externally mutable object into Parameter.declaredAnnotations</LongMessage>
    <Class classname="org.testng.internal.reflect.Parameter" primary="true">
      <SourceLine classname="org.testng.internal.reflect.Parameter" start="23" end="86" sourcefile="Parameter.java" sourcepath="org/testng/internal/reflect/Parameter.java">
        <Message>At Parameter.java:[lines 23-86]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.reflect.Parameter</Message>
    </Class>
    <Method classname="org.testng.internal.reflect.Parameter" name="&lt;init&gt;" signature="(ILjava/lang/Class;[Ljava/lang/annotation/Annotation;)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.reflect.Parameter" start="23" end="28" startBytecode="0" endBytecode="137" sourcefile="Parameter.java" sourcepath="org/testng/internal/reflect/Parameter.java"/>
      <Message>In method new org.testng.internal.reflect.Parameter(int, Class, Annotation[])</Message>
    </Method>
    <Field classname="org.testng.internal.reflect.Parameter" name="declaredAnnotations" signature="[Ljava/lang/annotation/Annotation;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.reflect.Parameter" sourcefile="Parameter.java" sourcepath="org/testng/internal/reflect/Parameter.java">
        <Message>In Parameter.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.reflect.Parameter.declaredAnnotations</Message>
    </Field>
    <LocalVariable name="declaredAnnotations" register="3" pc="16" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named declaredAnnotations</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.internal.reflect.Parameter" primary="true" start="26" end="26" startBytecode="16" endBytecode="16" sourcefile="Parameter.java" sourcepath="org/testng/internal/reflect/Parameter.java">
      <Message>At Parameter.java:[line 26]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="BC_UNCONFIRMED_CAST" priority="3" rank="20" abbrev="BC" category="STYLE" instanceHash="66aaecfc139e610c14488c7887c30658" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Unchecked/unconfirmed cast</ShortMessage>
    <LongMessage>Unchecked/unconfirmed cast from Runnable to org.testng.thread.IWorker in org.testng.internal.thread.graph.GraphThreadPoolExecutor.afterExecute(Runnable, Throwable)</LongMessage>
    <Class classname="org.testng.internal.thread.graph.GraphThreadPoolExecutor" primary="true">
      <SourceLine classname="org.testng.internal.thread.graph.GraphThreadPoolExecutor" start="33" end="167" sourcefile="GraphThreadPoolExecutor.java" sourcepath="org/testng/internal/thread/graph/GraphThreadPoolExecutor.java">
        <Message>At GraphThreadPoolExecutor.java:[lines 33-167]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.thread.graph.GraphThreadPoolExecutor</Message>
    </Class>
    <Method classname="org.testng.internal.thread.graph.GraphThreadPoolExecutor" name="afterExecute" signature="(Ljava/lang/Runnable;Ljava/lang/Throwable;)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.thread.graph.GraphThreadPoolExecutor" start="93" end="106" startBytecode="0" endBytecode="48" sourcefile="GraphThreadPoolExecutor.java" sourcepath="org/testng/internal/thread/graph/GraphThreadPoolExecutor.java"/>
      <Message>In method org.testng.internal.thread.graph.GraphThreadPoolExecutor.afterExecute(Runnable, Throwable)</Message>
    </Method>
    <Type descriptor="Ljava/lang/Runnable;" role="TYPE_FOUND">
      <SourceLine classname="java.lang.Runnable" sourcefile="Runnable.java" sourcepath="java/lang/Runnable.java">
        <Message>In Runnable.java</Message>
      </SourceLine>
      <Message>Actual type Runnable</Message>
    </Type>
    <Type descriptor="Lorg/testng/thread/IWorker;" role="TYPE_EXPECTED">
      <SourceLine classname="org.testng.thread.IWorker" start="18" end="28" sourcefile="IWorker.java" sourcepath="org/testng/thread/IWorker.java">
        <Message>At IWorker.java:[lines 18-28]</Message>
      </SourceLine>
      <Message>Expected org.testng.thread.IWorker</Message>
    </Type>
    <LocalVariable name="r" register="1" pc="8" role="LOCAL_VARIABLE_VALUE_OF">
      <Message>Value loaded from r</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.internal.thread.graph.GraphThreadPoolExecutor" primary="true" start="94" end="94" startBytecode="9" endBytecode="9" sourcefile="GraphThreadPoolExecutor.java" sourcepath="org/testng/internal/thread/graph/GraphThreadPoolExecutor.java">
      <Message>At GraphThreadPoolExecutor.java:[line 94]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="CT_CONSTRUCTOR_THROW" priority="2" rank="16" abbrev="CT" category="BAD_PRACTICE" instanceHash="3887d86d7997ad5ce658d28cb5fd78f6" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Be wary of letting constructors throw exceptions.</ShortMessage>
    <LongMessage>Exception thrown in class org.testng.internal.thread.graph.GraphThreadPoolExecutor at new org.testng.internal.thread.graph.GraphThreadPoolExecutor(String, IDynamicGraph, IThreadWorkerFactory, int, int, long, TimeUnit, BlockingQueue, Comparator) will leave the constructor. The object under construction remains partially initialized and may be vulnerable to Finalizer attacks.</LongMessage>
    <Class classname="org.testng.internal.thread.graph.GraphThreadPoolExecutor" primary="true">
      <SourceLine classname="org.testng.internal.thread.graph.GraphThreadPoolExecutor" start="33" end="167" sourcefile="GraphThreadPoolExecutor.java" sourcepath="org/testng/internal/thread/graph/GraphThreadPoolExecutor.java">
        <Message>At GraphThreadPoolExecutor.java:[lines 33-167]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.thread.graph.GraphThreadPoolExecutor</Message>
    </Class>
    <Method classname="org.testng.internal.thread.graph.GraphThreadPoolExecutor" name="&lt;init&gt;" signature="(Ljava/lang/String;Lorg/testng/IDynamicGraph;Lorg/testng/thread/IThreadWorkerFactory;IIJLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/BlockingQueue;Ljava/util/Comparator;)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.thread.graph.GraphThreadPoolExecutor" start="47" end="61" startBytecode="0" endBytecode="357" sourcefile="GraphThreadPoolExecutor.java" sourcepath="org/testng/internal/thread/graph/GraphThreadPoolExecutor.java"/>
      <Message>In method new org.testng.internal.thread.graph.GraphThreadPoolExecutor(String, IDynamicGraph, IThreadWorkerFactory, int, int, long, TimeUnit, BlockingQueue, Comparator)</Message>
    </Method>
    <SourceLine classname="org.testng.internal.thread.graph.GraphThreadPoolExecutor" primary="true" start="59" end="59" startBytecode="95" endBytecode="95" sourcefile="GraphThreadPoolExecutor.java" sourcepath="org/testng/internal/thread/graph/GraphThreadPoolExecutor.java">
      <Message>At GraphThreadPoolExecutor.java:[line 59]</Message>
    </SourceLine>
    <SourceLine classname="org.testng.internal.thread.graph.GraphThreadPoolExecutor" start="59" end="59" startBytecode="95" endBytecode="95" sourcefile="GraphThreadPoolExecutor.java" sourcepath="org/testng/internal/thread/graph/GraphThreadPoolExecutor.java">
      <Message>At GraphThreadPoolExecutor.java:[line 59]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="261aba1ccf963d5b6c1697ed9e6ffaf0" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>new org.testng.internal.thread.graph.GraphThreadPoolExecutor(String, IDynamicGraph, IThreadWorkerFactory, int, int, long, TimeUnit, BlockingQueue, Comparator) may expose internal representation by storing an externally mutable object into GraphThreadPoolExecutor.m_graph</LongMessage>
    <Class classname="org.testng.internal.thread.graph.GraphThreadPoolExecutor" primary="true">
      <SourceLine classname="org.testng.internal.thread.graph.GraphThreadPoolExecutor" start="33" end="167" sourcefile="GraphThreadPoolExecutor.java" sourcepath="org/testng/internal/thread/graph/GraphThreadPoolExecutor.java">
        <Message>At GraphThreadPoolExecutor.java:[lines 33-167]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.thread.graph.GraphThreadPoolExecutor</Message>
    </Class>
    <Method classname="org.testng.internal.thread.graph.GraphThreadPoolExecutor" name="&lt;init&gt;" signature="(Ljava/lang/String;Lorg/testng/IDynamicGraph;Lorg/testng/thread/IThreadWorkerFactory;IIJLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/BlockingQueue;Ljava/util/Comparator;)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.thread.graph.GraphThreadPoolExecutor" start="47" end="61" startBytecode="0" endBytecode="357" sourcefile="GraphThreadPoolExecutor.java" sourcepath="org/testng/internal/thread/graph/GraphThreadPoolExecutor.java"/>
      <Message>In method new org.testng.internal.thread.graph.GraphThreadPoolExecutor(String, IDynamicGraph, IThreadWorkerFactory, int, int, long, TimeUnit, BlockingQueue, Comparator)</Message>
    </Method>
    <Field classname="org.testng.internal.thread.graph.GraphThreadPoolExecutor" name="m_graph" signature="Lorg/testng/IDynamicGraph;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.thread.graph.GraphThreadPoolExecutor" sourcefile="GraphThreadPoolExecutor.java" sourcepath="org/testng/internal/thread/graph/GraphThreadPoolExecutor.java">
        <Message>In GraphThreadPoolExecutor.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.thread.graph.GraphThreadPoolExecutor.m_graph</Message>
    </Field>
    <LocalVariable name="graph" register="2" pc="38" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named graph</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.internal.thread.graph.GraphThreadPoolExecutor" primary="true" start="54" end="54" startBytecode="38" endBytecode="38" sourcefile="GraphThreadPoolExecutor.java" sourcepath="org/testng/internal/thread/graph/GraphThreadPoolExecutor.java">
      <Message>At GraphThreadPoolExecutor.java:[line 54]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EQ_COMPARETO_USE_OBJECT_EQUALS" priority="2" rank="16" abbrev="Eq" category="BAD_PRACTICE" instanceHash="e4fcc398226c2a4f93cd19154538c354" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Class defines compareTo(...) and uses Object.equals()</ShortMessage>
    <LongMessage>org.testng.internal.thread.graph.GraphThreadPoolExecutor$PhoneyWorker defines compareTo(Object) and uses Object.equals()</LongMessage>
    <Class classname="org.testng.internal.thread.graph.GraphThreadPoolExecutor$PhoneyWorker" primary="true">
      <SourceLine classname="org.testng.internal.thread.graph.GraphThreadPoolExecutor$PhoneyWorker" start="169" end="201" sourcefile="GraphThreadPoolExecutor.java" sourcepath="org/testng/internal/thread/graph/GraphThreadPoolExecutor.java">
        <Message>At GraphThreadPoolExecutor.java:[lines 169-201]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.thread.graph.GraphThreadPoolExecutor$PhoneyWorker</Message>
    </Class>
    <Method classname="org.testng.internal.thread.graph.GraphThreadPoolExecutor$PhoneyWorker" name="compareTo" signature="(Ljava/lang/Object;)I" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.thread.graph.GraphThreadPoolExecutor$PhoneyWorker" start="169" end="169" startBytecode="0" endBytecode="68" sourcefile="GraphThreadPoolExecutor.java" sourcepath="org/testng/internal/thread/graph/GraphThreadPoolExecutor.java"/>
      <Message>In method org.testng.internal.thread.graph.GraphThreadPoolExecutor$PhoneyWorker.compareTo(Object)</Message>
    </Method>
    <SourceLine classname="org.testng.internal.thread.graph.GraphThreadPoolExecutor$PhoneyWorker" start="169" end="169" startBytecode="0" endBytecode="68" sourcefile="GraphThreadPoolExecutor.java" sourcepath="org/testng/internal/thread/graph/GraphThreadPoolExecutor.java" synthetic="true">
      <Message>At GraphThreadPoolExecutor.java:[line 169]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="e4e59912e9fef6713fd34177828b4009" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>new org.testng.internal.thread.graph.SuiteWorkerFactory(SuiteRunnerMap, Integer, String) may expose internal representation by storing an externally mutable object into SuiteWorkerFactory.m_suiteRunnerMap</LongMessage>
    <Class classname="org.testng.internal.thread.graph.SuiteWorkerFactory" primary="true">
      <SourceLine classname="org.testng.internal.thread.graph.SuiteWorkerFactory" start="23" end="43" sourcefile="SuiteWorkerFactory.java" sourcepath="org/testng/internal/thread/graph/SuiteWorkerFactory.java">
        <Message>At SuiteWorkerFactory.java:[lines 23-43]</Message>
      </SourceLine>
      <Message>In class org.testng.internal.thread.graph.SuiteWorkerFactory</Message>
    </Class>
    <Method classname="org.testng.internal.thread.graph.SuiteWorkerFactory" name="&lt;init&gt;" signature="(Lorg/testng/internal/SuiteRunnerMap;Ljava/lang/Integer;Ljava/lang/String;)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.thread.graph.SuiteWorkerFactory" start="23" end="27" startBytecode="0" endBytecode="107" sourcefile="SuiteWorkerFactory.java" sourcepath="org/testng/internal/thread/graph/SuiteWorkerFactory.java"/>
      <Message>In method new org.testng.internal.thread.graph.SuiteWorkerFactory(SuiteRunnerMap, Integer, String)</Message>
    </Method>
    <Field classname="org.testng.internal.thread.graph.SuiteWorkerFactory" name="m_suiteRunnerMap" signature="Lorg/testng/internal/SuiteRunnerMap;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.internal.thread.graph.SuiteWorkerFactory" sourcefile="SuiteWorkerFactory.java" sourcepath="org/testng/internal/thread/graph/SuiteWorkerFactory.java">
        <Message>In SuiteWorkerFactory.java</Message>
      </SourceLine>
      <Message>Field org.testng.internal.thread.graph.SuiteWorkerFactory.m_suiteRunnerMap</Message>
    </Field>
    <LocalVariable name="suiteRunnerMap" register="1" pc="6" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named suiteRunnerMap</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.internal.thread.graph.SuiteWorkerFactory" primary="true" start="24" end="24" startBytecode="6" endBytecode="6" sourcefile="SuiteWorkerFactory.java" sourcepath="org/testng/internal/thread/graph/SuiteWorkerFactory.java">
      <Message>At SuiteWorkerFactory.java:[line 24]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="REC_CATCH_EXCEPTION" priority="3" rank="20" abbrev="REC" category="STYLE" instanceHash="3dd6c8558509b6ff6ba45481df130a7e" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="396">
    <ShortMessage>Exception is caught when Exception is not thrown</ShortMessage>
    <LongMessage>Exception is caught when Exception is not thrown in org.testng.junit.IJUnitTestRunner.createTestRunner(TestRunner)</LongMessage>
    <Class classname="org.testng.junit.IJUnitTestRunner" primary="true">
      <SourceLine classname="org.testng.junit.IJUnitTestRunner" start="33" end="58" sourcefile="IJUnitTestRunner.java" sourcepath="org/testng/junit/IJUnitTestRunner.java">
        <Message>At IJUnitTestRunner.java:[lines 33-58]</Message>
      </SourceLine>
      <Message>In class org.testng.junit.IJUnitTestRunner</Message>
    </Class>
    <Method classname="org.testng.junit.IJUnitTestRunner" name="createTestRunner" signature="(Lorg/testng/TestRunner;)Lorg/testng/junit/IJUnitTestRunner;" isStatic="true" primary="true">
      <SourceLine classname="org.testng.junit.IJUnitTestRunner" start="33" end="58" startBytecode="0" endBytecode="345" sourcefile="IJUnitTestRunner.java" sourcepath="org/testng/junit/IJUnitTestRunner.java"/>
      <Message>In method org.testng.junit.IJUnitTestRunner.createTestRunner(TestRunner)</Message>
    </Method>
    <SourceLine classname="org.testng.junit.IJUnitTestRunner" primary="true" start="52" end="52" startBytecode="82" endBytecode="82" sourcefile="IJUnitTestRunner.java" sourcepath="org/testng/junit/IJUnitTestRunner.java">
      <Message>At IJUnitTestRunner.java:[line 52]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EQ_DOESNT_OVERRIDE_EQUALS" priority="2" rank="17" abbrev="Eq" category="STYLE" instanceHash="c6fc5e061c0f7550fd9445ce0a2b32cd" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Class doesn&apos;t override equals in superclass</ShortMessage>
    <LongMessage>org.testng.junit.JUnit4ConfigurationMethod doesn&apos;t override org.testng.internal.ConstructorOrMethod.equals(Object)</LongMessage>
    <Class classname="org.testng.junit.JUnit4ConfigurationMethod" primary="true">
      <SourceLine classname="org.testng.junit.JUnit4ConfigurationMethod" start="12" end="28" sourcefile="JUnit4ConfigurationMethod.java" sourcepath="org/testng/junit/JUnit4ConfigurationMethod.java">
        <Message>At JUnit4ConfigurationMethod.java:[lines 12-28]</Message>
      </SourceLine>
      <Message>In class org.testng.junit.JUnit4ConfigurationMethod</Message>
    </Class>
    <SourceLine classname="org.testng.junit.JUnit4ConfigurationMethod" primary="true" start="1" end="1" startBytecode="0" endBytecode="0" sourcefile="JUnit4ConfigurationMethod.java" sourcepath="org/testng/junit/JUnit4ConfigurationMethod.java">
      <Message>At JUnit4ConfigurationMethod.java:[line 1]</Message>
    </SourceLine>
    <Method classname="org.testng.internal.ConstructorOrMethod" name="equals" signature="(Ljava/lang/Object;)Z" isStatic="false" primary="true" role="METHOD_DID_YOU_MEAN_TO_OVERRIDE">
      <SourceLine classname="org.testng.internal.ConstructorOrMethod" start="67" end="77" startBytecode="0" endBytecode="218" sourcefile="ConstructorOrMethod.java" sourcepath="org/testng/internal/ConstructorOrMethod.java"/>
      <Message>Did you intend to override org.testng.internal.ConstructorOrMethod.equals(Object)</Message>
    </Method>
  </BugInstance>
  <BugInstance type="EQ_DOESNT_OVERRIDE_EQUALS" priority="2" rank="17" abbrev="Eq" category="STYLE" instanceHash="50838bcaa4b3c0a02480b19bcdb4ee0f" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Class doesn&apos;t override equals in superclass</ShortMessage>
    <LongMessage>org.testng.junit.JUnit4SpockMethod doesn&apos;t override org.testng.internal.ConstructorOrMethod.equals(Object)</LongMessage>
    <Class classname="org.testng.junit.JUnit4SpockMethod" primary="true">
      <SourceLine classname="org.testng.junit.JUnit4SpockMethod" start="10" end="46" sourcefile="JUnit4SpockMethod.java" sourcepath="org/testng/junit/JUnit4SpockMethod.java">
        <Message>At JUnit4SpockMethod.java:[lines 10-46]</Message>
      </SourceLine>
      <Message>In class org.testng.junit.JUnit4SpockMethod</Message>
    </Class>
    <SourceLine classname="org.testng.junit.JUnit4SpockMethod" primary="true" start="1" end="1" startBytecode="0" endBytecode="0" sourcefile="JUnit4SpockMethod.java" sourcepath="org/testng/junit/JUnit4SpockMethod.java">
      <Message>At JUnit4SpockMethod.java:[line 1]</Message>
    </SourceLine>
    <Method classname="org.testng.internal.ConstructorOrMethod" name="equals" signature="(Ljava/lang/Object;)Z" isStatic="false" primary="true" role="METHOD_DID_YOU_MEAN_TO_OVERRIDE">
      <SourceLine classname="org.testng.internal.ConstructorOrMethod" start="67" end="77" startBytecode="0" endBytecode="218" sourcefile="ConstructorOrMethod.java" sourcepath="org/testng/internal/ConstructorOrMethod.java"/>
      <Message>Did you intend to override org.testng.internal.ConstructorOrMethod.equals(Object)</Message>
    </Method>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="e3f97a7651f82dc81cd10b5a6872984f" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.junit.JUnit4TestRunner.getTestMethods() may expose internal representation by returning JUnit4TestRunner.m_methods</LongMessage>
    <Class classname="org.testng.junit.JUnit4TestRunner" primary="true">
      <SourceLine classname="org.testng.junit.JUnit4TestRunner" start="23" end="264" sourcefile="JUnit4TestRunner.java" sourcepath="org/testng/junit/JUnit4TestRunner.java">
        <Message>At JUnit4TestRunner.java:[lines 23-264]</Message>
      </SourceLine>
      <Message>In class org.testng.junit.JUnit4TestRunner</Message>
    </Class>
    <Method classname="org.testng.junit.JUnit4TestRunner" name="getTestMethods" signature="()Ljava/util/List;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.junit.JUnit4TestRunner" start="45" end="45" startBytecode="0" endBytecode="46" sourcefile="JUnit4TestRunner.java" sourcepath="org/testng/junit/JUnit4TestRunner.java"/>
      <Message>In method org.testng.junit.JUnit4TestRunner.getTestMethods()</Message>
    </Method>
    <Field classname="org.testng.junit.JUnit4TestRunner" name="m_methods" signature="Ljava/util/List;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.junit.JUnit4TestRunner" sourcefile="JUnit4TestRunner.java" sourcepath="org/testng/junit/JUnit4TestRunner.java">
        <Message>In JUnit4TestRunner.java</Message>
      </SourceLine>
      <Message>Field org.testng.junit.JUnit4TestRunner.m_methods</Message>
    </Field>
    <SourceLine classname="org.testng.junit.JUnit4TestRunner" primary="true" start="45" end="45" startBytecode="4" endBytecode="4" sourcefile="JUnit4TestRunner.java" sourcepath="org/testng/junit/JUnit4TestRunner.java">
      <Message>At JUnit4TestRunner.java:[line 45]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="66bca0279fd7de52b21da90b2237885c" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>new org.testng.junit.JUnit4TestRunner(ITestResultNotifier) may expose internal representation by storing an externally mutable object into JUnit4TestRunner.m_parentRunner</LongMessage>
    <Class classname="org.testng.junit.JUnit4TestRunner" primary="true">
      <SourceLine classname="org.testng.junit.JUnit4TestRunner" start="23" end="264" sourcefile="JUnit4TestRunner.java" sourcepath="org/testng/junit/JUnit4TestRunner.java">
        <Message>At JUnit4TestRunner.java:[lines 23-264]</Message>
      </SourceLine>
      <Message>In class org.testng.junit.JUnit4TestRunner</Message>
    </Class>
    <Method classname="org.testng.junit.JUnit4TestRunner" name="&lt;init&gt;" signature="(Lorg/testng/internal/ITestResultNotifier;)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.junit.JUnit4TestRunner" start="33" end="36" startBytecode="0" endBytecode="134" sourcefile="JUnit4TestRunner.java" sourcepath="org/testng/junit/JUnit4TestRunner.java"/>
      <Message>In method new org.testng.junit.JUnit4TestRunner(ITestResultNotifier)</Message>
    </Method>
    <Field classname="org.testng.junit.JUnit4TestRunner" name="m_parentRunner" signature="Lorg/testng/internal/ITestResultNotifier;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.junit.JUnit4TestRunner" sourcefile="JUnit4TestRunner.java" sourcepath="org/testng/junit/JUnit4TestRunner.java">
        <Message>In JUnit4TestRunner.java</Message>
      </SourceLine>
      <Message>Field org.testng.junit.JUnit4TestRunner.m_parentRunner</Message>
    </Field>
    <LocalVariable name="tr" register="1" pc="38" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named tr</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.junit.JUnit4TestRunner" primary="true" start="34" end="34" startBytecode="38" endBytecode="38" sourcefile="JUnit4TestRunner.java" sourcepath="org/testng/junit/JUnit4TestRunner.java">
      <Message>At JUnit4TestRunner.java:[line 34]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="90835713945d4de6199c62ea35806e4" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>org.testng.junit.JUnit4TestRunner.setInvokedMethodListeners(Collection) may expose internal representation by storing an externally mutable object into JUnit4TestRunner.m_invokeListeners</LongMessage>
    <Class classname="org.testng.junit.JUnit4TestRunner" primary="true">
      <SourceLine classname="org.testng.junit.JUnit4TestRunner" start="23" end="264" sourcefile="JUnit4TestRunner.java" sourcepath="org/testng/junit/JUnit4TestRunner.java">
        <Message>At JUnit4TestRunner.java:[lines 23-264]</Message>
      </SourceLine>
      <Message>In class org.testng.junit.JUnit4TestRunner</Message>
    </Class>
    <Method classname="org.testng.junit.JUnit4TestRunner" name="setInvokedMethodListeners" signature="(Ljava/util/Collection;)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.junit.JUnit4TestRunner" start="55" end="56" startBytecode="0" endBytecode="79" sourcefile="JUnit4TestRunner.java" sourcepath="org/testng/junit/JUnit4TestRunner.java"/>
      <Message>In method org.testng.junit.JUnit4TestRunner.setInvokedMethodListeners(Collection)</Message>
    </Method>
    <Field classname="org.testng.junit.JUnit4TestRunner" name="m_invokeListeners" signature="Ljava/util/Collection;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.junit.JUnit4TestRunner" sourcefile="JUnit4TestRunner.java" sourcepath="org/testng/junit/JUnit4TestRunner.java">
        <Message>In JUnit4TestRunner.java</Message>
      </SourceLine>
      <Message>Field org.testng.junit.JUnit4TestRunner.m_invokeListeners</Message>
    </Field>
    <LocalVariable name="listeners" register="1" pc="2" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named listeners</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.junit.JUnit4TestRunner" primary="true" start="55" end="55" startBytecode="2" endBytecode="2" sourcefile="JUnit4TestRunner.java" sourcepath="org/testng/junit/JUnit4TestRunner.java">
      <Message>At JUnit4TestRunner.java:[line 55]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="b41d4536eac19373ab5980f3ca94a00e" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>org.testng.junit.JUnit4TestRunner.setTestResultNotifier(ITestResultNotifier) may expose internal representation by storing an externally mutable object into JUnit4TestRunner.m_parentRunner</LongMessage>
    <Class classname="org.testng.junit.JUnit4TestRunner" primary="true">
      <SourceLine classname="org.testng.junit.JUnit4TestRunner" start="23" end="264" sourcefile="JUnit4TestRunner.java" sourcepath="org/testng/junit/JUnit4TestRunner.java">
        <Message>At JUnit4TestRunner.java:[lines 23-264]</Message>
      </SourceLine>
      <Message>In class org.testng.junit.JUnit4TestRunner</Message>
    </Class>
    <Method classname="org.testng.junit.JUnit4TestRunner" name="setTestResultNotifier" signature="(Lorg/testng/internal/ITestResultNotifier;)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.junit.JUnit4TestRunner" start="50" end="52" startBytecode="0" endBytecode="78" sourcefile="JUnit4TestRunner.java" sourcepath="org/testng/junit/JUnit4TestRunner.java"/>
      <Message>In method org.testng.junit.JUnit4TestRunner.setTestResultNotifier(ITestResultNotifier)</Message>
    </Method>
    <Field classname="org.testng.junit.JUnit4TestRunner" name="m_parentRunner" signature="Lorg/testng/internal/ITestResultNotifier;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.junit.JUnit4TestRunner" sourcefile="JUnit4TestRunner.java" sourcepath="org/testng/junit/JUnit4TestRunner.java">
        <Message>In JUnit4TestRunner.java</Message>
      </SourceLine>
      <Message>Field org.testng.junit.JUnit4TestRunner.m_parentRunner</Message>
    </Field>
    <LocalVariable name="notifier" register="1" pc="2" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named notifier</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.junit.JUnit4TestRunner" primary="true" start="50" end="50" startBytecode="2" endBytecode="2" sourcefile="JUnit4TestRunner.java" sourcepath="org/testng/junit/JUnit4TestRunner.java">
      <Message>At JUnit4TestRunner.java:[line 50]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="URF_UNREAD_FIELD" priority="3" rank="20" abbrev="UrF" category="PERFORMANCE" instanceHash="97b18e7c39272cc2116afe4563af9ba2" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Unread field</ShortMessage>
    <LongMessage>Unread field: org.testng.junit.JUnitMethodFinder.m_testName</LongMessage>
    <Class classname="org.testng.junit.JUnitMethodFinder" primary="true">
      <SourceLine classname="org.testng.junit.JUnitMethodFinder" start="27" end="122" sourcefile="JUnitMethodFinder.java" sourcepath="org/testng/junit/JUnitMethodFinder.java">
        <Message>At JUnitMethodFinder.java:[lines 27-122]</Message>
      </SourceLine>
      <Message>In class org.testng.junit.JUnitMethodFinder</Message>
    </Class>
    <Field classname="org.testng.junit.JUnitMethodFinder" name="m_testName" signature="Ljava/lang/String;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.junit.JUnitMethodFinder" sourcefile="JUnitMethodFinder.java" sourcepath="org/testng/junit/JUnitMethodFinder.java">
        <Message>In JUnitMethodFinder.java</Message>
      </SourceLine>
      <Message>Field org.testng.junit.JUnitMethodFinder.m_testName</Message>
    </Field>
    <SourceLine classname="org.testng.junit.JUnitMethodFinder" primary="true" start="28" end="28" startBytecode="6" endBytecode="6" sourcefile="JUnitMethodFinder.java" sourcepath="org/testng/junit/JUnitMethodFinder.java">
      <Message>At JUnitMethodFinder.java:[line 28]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="fcd1d4ea2e0ba3db50b41f3c92a95f65" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.junit.JUnitTestClass.getInstanceHashCodes() may expose internal representation by returning JUnitTestClass.m_instanceHashes</LongMessage>
    <Class classname="org.testng.junit.JUnitTestClass" primary="true">
      <SourceLine classname="org.testng.junit.JUnitTestClass" start="13" end="144" sourcefile="JUnitTestClass.java" sourcepath="org/testng/junit/JUnitTestClass.java">
        <Message>At JUnitTestClass.java:[lines 13-144]</Message>
      </SourceLine>
      <Message>In class org.testng.junit.JUnitTestClass</Message>
    </Class>
    <Method classname="org.testng.junit.JUnitTestClass" name="getInstanceHashCodes" signature="()[J" isStatic="false" primary="true">
      <SourceLine classname="org.testng.junit.JUnitTestClass" start="68" end="68" startBytecode="0" endBytecode="46" sourcefile="JUnitTestClass.java" sourcepath="org/testng/junit/JUnitTestClass.java"/>
      <Message>In method org.testng.junit.JUnitTestClass.getInstanceHashCodes()</Message>
    </Method>
    <Field classname="org.testng.junit.JUnitTestClass" name="m_instanceHashes" signature="[J" isStatic="false" primary="true">
      <SourceLine classname="org.testng.junit.JUnitTestClass" sourcefile="JUnitTestClass.java" sourcepath="org/testng/junit/JUnitTestClass.java">
        <Message>In JUnitTestClass.java</Message>
      </SourceLine>
      <Message>Field org.testng.junit.JUnitTestClass.m_instanceHashes</Message>
    </Field>
    <SourceLine classname="org.testng.junit.JUnitTestClass" primary="true" start="68" end="68" startBytecode="4" endBytecode="4" sourcefile="JUnitTestClass.java" sourcepath="org/testng/junit/JUnitTestClass.java">
      <Message>At JUnitTestClass.java:[line 68]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="6a0ba9268e1b9aa73f85e7c6f3358b4" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.junit.JUnitTestClass.getInstances(boolean) may expose internal representation by returning JUnitTestClass.m_instances</LongMessage>
    <Class classname="org.testng.junit.JUnitTestClass" primary="true">
      <SourceLine classname="org.testng.junit.JUnitTestClass" start="13" end="144" sourcefile="JUnitTestClass.java" sourcepath="org/testng/junit/JUnitTestClass.java">
        <Message>At JUnitTestClass.java:[lines 13-144]</Message>
      </SourceLine>
      <Message>In class org.testng.junit.JUnitTestClass</Message>
    </Class>
    <Method classname="org.testng.junit.JUnitTestClass" name="getInstances" signature="(Z)[Ljava/lang/Object;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.junit.JUnitTestClass" start="74" end="74" startBytecode="0" endBytecode="56" sourcefile="JUnitTestClass.java" sourcepath="org/testng/junit/JUnitTestClass.java"/>
      <Message>In method org.testng.junit.JUnitTestClass.getInstances(boolean)</Message>
    </Method>
    <Field classname="org.testng.junit.JUnitTestClass" name="m_instances" signature="[Ljava/lang/Object;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.junit.JUnitTestClass" sourcefile="JUnitTestClass.java" sourcepath="org/testng/junit/JUnitTestClass.java">
        <Message>In JUnitTestClass.java</Message>
      </SourceLine>
      <Message>Field org.testng.junit.JUnitTestClass.m_instances</Message>
    </Field>
    <SourceLine classname="org.testng.junit.JUnitTestClass" primary="true" start="74" end="74" startBytecode="4" endBytecode="4" sourcefile="JUnitTestClass.java" sourcepath="org/testng/junit/JUnitTestClass.java">
      <Message>At JUnitTestClass.java:[line 74]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="MC_OVERRIDABLE_METHOD_CALL_IN_CONSTRUCTOR" priority="3" rank="20" abbrev="MC" category="MALICIOUS_CODE" instanceHash="f7efb85adc9291d919cdaa7bb5d0749b" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>An overridable method is called from a constructor</ShortMessage>
    <LongMessage>Overridable method add is called from constructor new org.testng.junit.JUnitTestMethod(JUnitTestClass, String, ConstructorOrMethod, Object).</LongMessage>
    <Class classname="org.testng.junit.JUnitTestMethod" primary="true">
      <SourceLine classname="org.testng.junit.JUnitTestMethod" start="9" end="29" sourcefile="JUnitTestMethod.java" sourcepath="org/testng/junit/JUnitTestMethod.java">
        <Message>At JUnitTestMethod.java:[lines 9-29]</Message>
      </SourceLine>
      <Message>In class org.testng.junit.JUnitTestMethod</Message>
    </Class>
    <Method classname="org.testng.junit.JUnitTestMethod" name="&lt;init&gt;" signature="(Lorg/testng/junit/JUnitTestClass;Ljava/lang/String;Lorg/testng/internal/ConstructorOrMethod;Ljava/lang/Object;)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.junit.JUnitTestMethod" start="17" end="20" startBytecode="0" endBytecode="119" sourcefile="JUnitTestMethod.java" sourcepath="org/testng/junit/JUnitTestMethod.java"/>
      <Message>In method new org.testng.junit.JUnitTestMethod(JUnitTestClass, String, ConstructorOrMethod, Object)</Message>
    </Method>
    <String value="add">
      <Message>Value add</Message>
    </String>
    <SourceLine classname="org.testng.junit.JUnitTestMethod" primary="true" start="19" end="19" startBytecode="19" endBytecode="19" sourcefile="JUnitTestMethod.java" sourcepath="org/testng/junit/JUnitTestMethod.java">
      <Message>At JUnitTestMethod.java:[line 19]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="33c9e75d9b68e744c9e81b209f89757" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.junit.JUnitTestRunner.getTestMethods() may expose internal representation by returning JUnitTestRunner.m_methods</LongMessage>
    <Class classname="org.testng.junit.JUnitTestRunner" primary="true">
      <SourceLine classname="org.testng.junit.JUnitTestRunner" start="39" end="251" sourcefile="JUnitTestRunner.java" sourcepath="org/testng/junit/JUnitTestRunner.java">
        <Message>At JUnitTestRunner.java:[lines 39-251]</Message>
      </SourceLine>
      <Message>In class org.testng.junit.JUnitTestRunner</Message>
    </Class>
    <Method classname="org.testng.junit.JUnitTestRunner" name="getTestMethods" signature="()Ljava/util/List;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.junit.JUnitTestRunner" start="56" end="56" startBytecode="0" endBytecode="46" sourcefile="JUnitTestRunner.java" sourcepath="org/testng/junit/JUnitTestRunner.java"/>
      <Message>In method org.testng.junit.JUnitTestRunner.getTestMethods()</Message>
    </Method>
    <Field classname="org.testng.junit.JUnitTestRunner" name="m_methods" signature="Ljava/util/List;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.junit.JUnitTestRunner" sourcefile="JUnitTestRunner.java" sourcepath="org/testng/junit/JUnitTestRunner.java">
        <Message>In JUnitTestRunner.java</Message>
      </SourceLine>
      <Message>Field org.testng.junit.JUnitTestRunner.m_methods</Message>
    </Field>
    <SourceLine classname="org.testng.junit.JUnitTestRunner" primary="true" start="56" end="56" startBytecode="4" endBytecode="4" sourcefile="JUnitTestRunner.java" sourcepath="org/testng/junit/JUnitTestRunner.java">
      <Message>At JUnitTestRunner.java:[line 56]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="f85f056edc59d8c973dee41cc9818d14" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>new org.testng.junit.JUnitTestRunner(ITestResultNotifier) may expose internal representation by storing an externally mutable object into JUnitTestRunner.m_parentRunner</LongMessage>
    <Class classname="org.testng.junit.JUnitTestRunner" primary="true">
      <SourceLine classname="org.testng.junit.JUnitTestRunner" start="39" end="251" sourcefile="JUnitTestRunner.java" sourcepath="org/testng/junit/JUnitTestRunner.java">
        <Message>At JUnitTestRunner.java:[lines 39-251]</Message>
      </SourceLine>
      <Message>In class org.testng.junit.JUnitTestRunner</Message>
    </Class>
    <Method classname="org.testng.junit.JUnitTestRunner" name="&lt;init&gt;" signature="(Lorg/testng/internal/ITestResultNotifier;)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.junit.JUnitTestRunner" start="45" end="47" startBytecode="0" endBytecode="106" sourcefile="JUnitTestRunner.java" sourcepath="org/testng/junit/JUnitTestRunner.java"/>
      <Message>In method new org.testng.junit.JUnitTestRunner(ITestResultNotifier)</Message>
    </Method>
    <Field classname="org.testng.junit.JUnitTestRunner" name="m_parentRunner" signature="Lorg/testng/internal/ITestResultNotifier;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.junit.JUnitTestRunner" sourcefile="JUnitTestRunner.java" sourcepath="org/testng/junit/JUnitTestRunner.java">
        <Message>In JUnitTestRunner.java</Message>
      </SourceLine>
      <Message>Field org.testng.junit.JUnitTestRunner.m_parentRunner</Message>
    </Field>
    <LocalVariable name="tr" register="1" pc="31" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named tr</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.junit.JUnitTestRunner" primary="true" start="46" end="46" startBytecode="31" endBytecode="31" sourcefile="JUnitTestRunner.java" sourcepath="org/testng/junit/JUnitTestRunner.java">
      <Message>At JUnitTestRunner.java:[line 46]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="1929031efd1fa7eed11c1c0b402ac664" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>org.testng.junit.JUnitTestRunner.setInvokedMethodListeners(Collection) may expose internal representation by storing an externally mutable object into JUnitTestRunner.m_invokedMethodListeners</LongMessage>
    <Class classname="org.testng.junit.JUnitTestRunner" primary="true">
      <SourceLine classname="org.testng.junit.JUnitTestRunner" start="39" end="251" sourcefile="JUnitTestRunner.java" sourcepath="org/testng/junit/JUnitTestRunner.java">
        <Message>At JUnitTestRunner.java:[lines 39-251]</Message>
      </SourceLine>
      <Message>In class org.testng.junit.JUnitTestRunner</Message>
    </Class>
    <Method classname="org.testng.junit.JUnitTestRunner" name="setInvokedMethodListeners" signature="(Ljava/util/Collection;)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.junit.JUnitTestRunner" start="106" end="107" startBytecode="0" endBytecode="79" sourcefile="JUnitTestRunner.java" sourcepath="org/testng/junit/JUnitTestRunner.java"/>
      <Message>In method org.testng.junit.JUnitTestRunner.setInvokedMethodListeners(Collection)</Message>
    </Method>
    <Field classname="org.testng.junit.JUnitTestRunner" name="m_invokedMethodListeners" signature="Ljava/util/Collection;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.junit.JUnitTestRunner" sourcefile="JUnitTestRunner.java" sourcepath="org/testng/junit/JUnitTestRunner.java">
        <Message>In JUnitTestRunner.java</Message>
      </SourceLine>
      <Message>Field org.testng.junit.JUnitTestRunner.m_invokedMethodListeners</Message>
    </Field>
    <LocalVariable name="listeners" register="1" pc="2" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named listeners</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.junit.JUnitTestRunner" primary="true" start="106" end="106" startBytecode="2" endBytecode="2" sourcefile="JUnitTestRunner.java" sourcepath="org/testng/junit/JUnitTestRunner.java">
      <Message>At JUnitTestRunner.java:[line 106]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="3dfa10f1ac69e7e6374a2de36dde0a1d" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>org.testng.junit.JUnitTestRunner.setTestResultNotifier(ITestResultNotifier) may expose internal representation by storing an externally mutable object into JUnitTestRunner.m_parentRunner</LongMessage>
    <Class classname="org.testng.junit.JUnitTestRunner" primary="true">
      <SourceLine classname="org.testng.junit.JUnitTestRunner" start="39" end="251" sourcefile="JUnitTestRunner.java" sourcepath="org/testng/junit/JUnitTestRunner.java">
        <Message>At JUnitTestRunner.java:[lines 39-251]</Message>
      </SourceLine>
      <Message>In class org.testng.junit.JUnitTestRunner</Message>
    </Class>
    <Method classname="org.testng.junit.JUnitTestRunner" name="setTestResultNotifier" signature="(Lorg/testng/internal/ITestResultNotifier;)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.junit.JUnitTestRunner" start="61" end="62" startBytecode="0" endBytecode="61" sourcefile="JUnitTestRunner.java" sourcepath="org/testng/junit/JUnitTestRunner.java"/>
      <Message>In method org.testng.junit.JUnitTestRunner.setTestResultNotifier(ITestResultNotifier)</Message>
    </Method>
    <Field classname="org.testng.junit.JUnitTestRunner" name="m_parentRunner" signature="Lorg/testng/internal/ITestResultNotifier;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.junit.JUnitTestRunner" sourcefile="JUnitTestRunner.java" sourcepath="org/testng/junit/JUnitTestRunner.java">
        <Message>In JUnitTestRunner.java</Message>
      </SourceLine>
      <Message>Field org.testng.junit.JUnitTestRunner.m_parentRunner</Message>
    </Field>
    <LocalVariable name="notifier" register="1" pc="2" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named notifier</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.junit.JUnitTestRunner" primary="true" start="61" end="61" startBytecode="2" endBytecode="2" sourcefile="JUnitTestRunner.java" sourcepath="org/testng/junit/JUnitTestRunner.java">
      <Message>At JUnitTestRunner.java:[line 61]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="REC_CATCH_EXCEPTION" priority="3" rank="20" abbrev="REC" category="STYLE" instanceHash="9c4d9dda49c5f6a793a8accdd2349f43" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="396">
    <ShortMessage>Exception is caught when Exception is not thrown</ShortMessage>
    <LongMessage>Exception is caught when Exception is not thrown in org.testng.junit.JUnitTestRunner.getTest(Class, String[])</LongMessage>
    <Class classname="org.testng.junit.JUnitTestRunner" primary="true">
      <SourceLine classname="org.testng.junit.JUnitTestRunner" start="39" end="251" sourcefile="JUnitTestRunner.java" sourcepath="org/testng/junit/JUnitTestRunner.java">
        <Message>At JUnitTestRunner.java:[lines 39-251]</Message>
      </SourceLine>
      <Message>In class org.testng.junit.JUnitTestRunner</Message>
    </Class>
    <Method classname="org.testng.junit.JUnitTestRunner" name="getTest" signature="(Ljava/lang/Class;[Ljava/lang/String;)Ljunit/framework/Test;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.junit.JUnitTestRunner" start="143" end="196" startBytecode="0" endBytecode="1021" sourcefile="JUnitTestRunner.java" sourcepath="org/testng/junit/JUnitTestRunner.java"/>
      <Message>In method org.testng.junit.JUnitTestRunner.getTest(Class, String[])</Message>
    </Method>
    <SourceLine classname="org.testng.junit.JUnitTestRunner" primary="true" start="170" end="170" startBytecode="288" endBytecode="288" sourcefile="JUnitTestRunner.java" sourcepath="org/testng/junit/JUnitTestRunner.java">
      <Message>At JUnitTestRunner.java:[line 170]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DM_CONVERT_CASE" priority="3" rank="20" abbrev="Dm" category="I18N" instanceHash="436a930fa4b7705812b15cc057dd2e0f" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Consider using Locale parameterized version of invoked method</ShortMessage>
    <LongMessage>Use of non-localized String.toUpperCase() or String.toLowerCase() in org.testng.log4testng.Logger.checkProperties(Properties)</LongMessage>
    <Class classname="org.testng.log4testng.Logger" primary="true">
      <SourceLine classname="org.testng.log4testng.Logger" start="64" end="703" sourcefile="Logger.java" sourcepath="org/testng/log4testng/Logger.java">
        <Message>At Logger.java:[lines 64-703]</Message>
      </SourceLine>
      <Message>In class org.testng.log4testng.Logger</Message>
    </Class>
    <Method classname="org.testng.log4testng.Logger" name="checkProperties" signature="(Ljava/util/Properties;)V" isStatic="true" primary="true">
      <SourceLine classname="org.testng.log4testng.Logger" start="346" end="403" startBytecode="0" endBytecode="778" sourcefile="Logger.java" sourcepath="org/testng/log4testng/Logger.java"/>
      <Message>In method org.testng.log4testng.Logger.checkProperties(Properties)</Message>
    </Method>
    <SourceLine classname="org.testng.log4testng.Logger" primary="true" start="363" end="363" startBytecode="109" endBytecode="109" sourcefile="Logger.java" sourcepath="org/testng/log4testng/Logger.java">
      <Message>At Logger.java:[line 363]</Message>
    </SourceLine>
    <SourceLine classname="org.testng.log4testng.Logger" start="393" end="393" startBytecode="342" endBytecode="342" sourcefile="Logger.java" sourcepath="org/testng/log4testng/Logger.java" role="SOURCE_LINE_ANOTHER_INSTANCE">
      <Message>Another occurrence at Logger.java:[line 393]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DM_DEFAULT_ENCODING" priority="1" rank="19" abbrev="Dm" category="I18N" instanceHash="65bc5a2084ea6778e14cdac355e6d94c" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Reliance on default encoding</ShortMessage>
    <LongMessage>Found reliance on default encoding in org.testng.log4testng.Logger.testDebugDefault(): java.io.ByteArrayOutputStream.toString()</LongMessage>
    <Class classname="org.testng.log4testng.Logger" primary="true">
      <SourceLine classname="org.testng.log4testng.Logger" start="64" end="703" sourcefile="Logger.java" sourcepath="org/testng/log4testng/Logger.java">
        <Message>At Logger.java:[lines 64-703]</Message>
      </SourceLine>
      <Message>In class org.testng.log4testng.Logger</Message>
    </Class>
    <Method classname="org.testng.log4testng.Logger" name="testDebugDefault" signature="()V" isStatic="true" primary="true">
      <SourceLine classname="org.testng.log4testng.Logger" start="490" end="499" startBytecode="0" endBytecode="195" sourcefile="Logger.java" sourcepath="org/testng/log4testng/Logger.java"/>
      <Message>In method org.testng.log4testng.Logger.testDebugDefault()</Message>
    </Method>
    <Method classname="java.io.ByteArrayOutputStream" name="toString" signature="()Ljava/lang/String;" isStatic="false" role="METHOD_CALLED">
      <SourceLine classname="java.io.ByteArrayOutputStream" start="215" end="215" startBytecode="0" endBytecode="58" sourcefile="ByteArrayOutputStream.java" sourcepath="java/io/ByteArrayOutputStream.java"/>
      <Message>Called method java.io.ByteArrayOutputStream.toString()</Message>
    </Method>
    <SourceLine classname="org.testng.log4testng.Logger" primary="true" start="497" end="497" startBytecode="60" endBytecode="60" sourcefile="Logger.java" sourcepath="org/testng/log4testng/Logger.java">
      <Message>At Logger.java:[line 497]</Message>
    </SourceLine>
    <SourceLine classname="org.testng.log4testng.Logger" start="498" end="498" startBytecode="69" endBytecode="69" sourcefile="Logger.java" sourcepath="org/testng/log4testng/Logger.java" role="SOURCE_LINE_ANOTHER_INSTANCE">
      <Message>Another occurrence at Logger.java:[line 498]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DM_DEFAULT_ENCODING" priority="1" rank="19" abbrev="Dm" category="I18N" instanceHash="e40929a2546222b12aa8ae549ed92ede" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Reliance on default encoding</ShortMessage>
    <LongMessage>Found reliance on default encoding in org.testng.log4testng.Logger.testDebugDefault(): new java.io.PrintStream(OutputStream)</LongMessage>
    <Class classname="org.testng.log4testng.Logger" primary="true">
      <SourceLine classname="org.testng.log4testng.Logger" start="64" end="703" sourcefile="Logger.java" sourcepath="org/testng/log4testng/Logger.java">
        <Message>At Logger.java:[lines 64-703]</Message>
      </SourceLine>
      <Message>In class org.testng.log4testng.Logger</Message>
    </Class>
    <Method classname="org.testng.log4testng.Logger" name="testDebugDefault" signature="()V" isStatic="true" primary="true">
      <SourceLine classname="org.testng.log4testng.Logger" start="490" end="499" startBytecode="0" endBytecode="195" sourcefile="Logger.java" sourcepath="org/testng/log4testng/Logger.java"/>
      <Message>In method org.testng.log4testng.Logger.testDebugDefault()</Message>
    </Method>
    <Method classname="java.io.PrintStream" name="&lt;init&gt;" signature="(Ljava/io/OutputStream;)V" isStatic="false" role="METHOD_CALLED">
      <SourceLine classname="java.io.PrintStream" start="134" end="135" startBytecode="0" endBytecode="62" sourcefile="PrintStream.java" sourcepath="java/io/PrintStream.java"/>
      <Message>Called method new java.io.PrintStream(OutputStream)</Message>
    </Method>
    <SourceLine classname="org.testng.log4testng.Logger" primary="true" start="493" end="493" startBytecode="29" endBytecode="29" sourcefile="Logger.java" sourcepath="org/testng/log4testng/Logger.java">
      <Message>At Logger.java:[line 493]</Message>
    </SourceLine>
    <SourceLine classname="org.testng.log4testng.Logger" start="494" end="494" startBytecode="38" endBytecode="38" sourcefile="Logger.java" sourcepath="org/testng/log4testng/Logger.java" role="SOURCE_LINE_ANOTHER_INSTANCE">
      <Message>Another occurrence at Logger.java:[line 494]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DM_DEFAULT_ENCODING" priority="1" rank="19" abbrev="Dm" category="I18N" instanceHash="7c741c29ce90c333d9b27bea88ff83d" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Reliance on default encoding</ShortMessage>
    <LongMessage>Found reliance on default encoding in org.testng.log4testng.Logger.testDebugError(): java.io.ByteArrayOutputStream.toString()</LongMessage>
    <Class classname="org.testng.log4testng.Logger" primary="true">
      <SourceLine classname="org.testng.log4testng.Logger" start="64" end="703" sourcefile="Logger.java" sourcepath="org/testng/log4testng/Logger.java">
        <Message>At Logger.java:[lines 64-703]</Message>
      </SourceLine>
      <Message>In class org.testng.log4testng.Logger</Message>
    </Class>
    <Method classname="org.testng.log4testng.Logger" name="testDebugError" signature="()V" isStatic="true" primary="true">
      <SourceLine classname="org.testng.log4testng.Logger" start="531" end="547" startBytecode="0" endBytecode="279" sourcefile="Logger.java" sourcepath="org/testng/log4testng/Logger.java"/>
      <Message>In method org.testng.log4testng.Logger.testDebugError()</Message>
    </Method>
    <Method classname="java.io.ByteArrayOutputStream" name="toString" signature="()Ljava/lang/String;" isStatic="false" role="METHOD_CALLED">
      <SourceLine classname="java.io.ByteArrayOutputStream" start="215" end="215" startBytecode="0" endBytecode="58" sourcefile="ByteArrayOutputStream.java" sourcepath="java/io/ByteArrayOutputStream.java"/>
      <Message>Called method java.io.ByteArrayOutputStream.toString()</Message>
    </Method>
    <SourceLine classname="org.testng.log4testng.Logger" primary="true" start="544" end="544" startBytecode="81" endBytecode="81" sourcefile="Logger.java" sourcepath="org/testng/log4testng/Logger.java">
      <Message>At Logger.java:[line 544]</Message>
    </SourceLine>
    <SourceLine classname="org.testng.log4testng.Logger" start="545" end="545" startBytecode="90" endBytecode="90" sourcefile="Logger.java" sourcepath="org/testng/log4testng/Logger.java" role="SOURCE_LINE_ANOTHER_INSTANCE">
      <Message>Another occurrence at Logger.java:[line 545]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DM_DEFAULT_ENCODING" priority="1" rank="19" abbrev="Dm" category="I18N" instanceHash="cfc62275fdb1ef6ce48c7109d82f1148" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Reliance on default encoding</ShortMessage>
    <LongMessage>Found reliance on default encoding in org.testng.log4testng.Logger.testDebugError(): new java.io.PrintStream(OutputStream)</LongMessage>
    <Class classname="org.testng.log4testng.Logger" primary="true">
      <SourceLine classname="org.testng.log4testng.Logger" start="64" end="703" sourcefile="Logger.java" sourcepath="org/testng/log4testng/Logger.java">
        <Message>At Logger.java:[lines 64-703]</Message>
      </SourceLine>
      <Message>In class org.testng.log4testng.Logger</Message>
    </Class>
    <Method classname="org.testng.log4testng.Logger" name="testDebugError" signature="()V" isStatic="true" primary="true">
      <SourceLine classname="org.testng.log4testng.Logger" start="531" end="547" startBytecode="0" endBytecode="279" sourcefile="Logger.java" sourcepath="org/testng/log4testng/Logger.java"/>
      <Message>In method org.testng.log4testng.Logger.testDebugError()</Message>
    </Method>
    <Method classname="java.io.PrintStream" name="&lt;init&gt;" signature="(Ljava/io/OutputStream;)V" isStatic="false" role="METHOD_CALLED">
      <SourceLine classname="java.io.PrintStream" start="134" end="135" startBytecode="0" endBytecode="62" sourcefile="PrintStream.java" sourcepath="java/io/PrintStream.java"/>
      <Message>Called method new java.io.PrintStream(OutputStream)</Message>
    </Method>
    <SourceLine classname="org.testng.log4testng.Logger" primary="true" start="534" end="534" startBytecode="29" endBytecode="29" sourcefile="Logger.java" sourcepath="org/testng/log4testng/Logger.java">
      <Message>At Logger.java:[line 534]</Message>
    </SourceLine>
    <SourceLine classname="org.testng.log4testng.Logger" start="535" end="535" startBytecode="38" endBytecode="38" sourcefile="Logger.java" sourcepath="org/testng/log4testng/Logger.java" role="SOURCE_LINE_ANOTHER_INSTANCE">
      <Message>Another occurrence at Logger.java:[line 535]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DM_DEFAULT_ENCODING" priority="1" rank="19" abbrev="Dm" category="I18N" instanceHash="57014acc9c074e74b3f410a5e6340f05" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Reliance on default encoding</ShortMessage>
    <LongMessage>Found reliance on default encoding in org.testng.log4testng.Logger.testDebugOff(): java.io.ByteArrayOutputStream.toString()</LongMessage>
    <Class classname="org.testng.log4testng.Logger" primary="true">
      <SourceLine classname="org.testng.log4testng.Logger" start="64" end="703" sourcefile="Logger.java" sourcepath="org/testng/log4testng/Logger.java">
        <Message>At Logger.java:[lines 64-703]</Message>
      </SourceLine>
      <Message>In class org.testng.log4testng.Logger</Message>
    </Class>
    <Method classname="org.testng.log4testng.Logger" name="testDebugOff" signature="()V" isStatic="true" primary="true">
      <SourceLine classname="org.testng.log4testng.Logger" start="517" end="527" startBytecode="0" endBytecode="208" sourcefile="Logger.java" sourcepath="org/testng/log4testng/Logger.java"/>
      <Message>In method org.testng.log4testng.Logger.testDebugOff()</Message>
    </Method>
    <Method classname="java.io.ByteArrayOutputStream" name="toString" signature="()Ljava/lang/String;" isStatic="false" role="METHOD_CALLED">
      <SourceLine classname="java.io.ByteArrayOutputStream" start="215" end="215" startBytecode="0" endBytecode="58" sourcefile="ByteArrayOutputStream.java" sourcepath="java/io/ByteArrayOutputStream.java"/>
      <Message>Called method java.io.ByteArrayOutputStream.toString()</Message>
    </Method>
    <SourceLine classname="org.testng.log4testng.Logger" primary="true" start="525" end="525" startBytecode="69" endBytecode="69" sourcefile="Logger.java" sourcepath="org/testng/log4testng/Logger.java">
      <Message>At Logger.java:[line 525]</Message>
    </SourceLine>
    <SourceLine classname="org.testng.log4testng.Logger" start="526" end="526" startBytecode="78" endBytecode="78" sourcefile="Logger.java" sourcepath="org/testng/log4testng/Logger.java" role="SOURCE_LINE_ANOTHER_INSTANCE">
      <Message>Another occurrence at Logger.java:[line 526]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DM_DEFAULT_ENCODING" priority="1" rank="19" abbrev="Dm" category="I18N" instanceHash="edbf1560d823f89bc35d53204c6b6a48" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Reliance on default encoding</ShortMessage>
    <LongMessage>Found reliance on default encoding in org.testng.log4testng.Logger.testDebugOff(): new java.io.PrintStream(OutputStream)</LongMessage>
    <Class classname="org.testng.log4testng.Logger" primary="true">
      <SourceLine classname="org.testng.log4testng.Logger" start="64" end="703" sourcefile="Logger.java" sourcepath="org/testng/log4testng/Logger.java">
        <Message>At Logger.java:[lines 64-703]</Message>
      </SourceLine>
      <Message>In class org.testng.log4testng.Logger</Message>
    </Class>
    <Method classname="org.testng.log4testng.Logger" name="testDebugOff" signature="()V" isStatic="true" primary="true">
      <SourceLine classname="org.testng.log4testng.Logger" start="517" end="527" startBytecode="0" endBytecode="208" sourcefile="Logger.java" sourcepath="org/testng/log4testng/Logger.java"/>
      <Message>In method org.testng.log4testng.Logger.testDebugOff()</Message>
    </Method>
    <Method classname="java.io.PrintStream" name="&lt;init&gt;" signature="(Ljava/io/OutputStream;)V" isStatic="false" role="METHOD_CALLED">
      <SourceLine classname="java.io.PrintStream" start="134" end="135" startBytecode="0" endBytecode="62" sourcefile="PrintStream.java" sourcepath="java/io/PrintStream.java"/>
      <Message>Called method new java.io.PrintStream(OutputStream)</Message>
    </Method>
    <SourceLine classname="org.testng.log4testng.Logger" primary="true" start="520" end="520" startBytecode="29" endBytecode="29" sourcefile="Logger.java" sourcepath="org/testng/log4testng/Logger.java">
      <Message>At Logger.java:[line 520]</Message>
    </SourceLine>
    <SourceLine classname="org.testng.log4testng.Logger" start="521" end="521" startBytecode="38" endBytecode="38" sourcefile="Logger.java" sourcepath="org/testng/log4testng/Logger.java" role="SOURCE_LINE_ANOTHER_INSTANCE">
      <Message>Another occurrence at Logger.java:[line 521]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DM_DEFAULT_ENCODING" priority="1" rank="19" abbrev="Dm" category="I18N" instanceHash="1e5a76956c97f21584193392fd585585" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Reliance on default encoding</ShortMessage>
    <LongMessage>Found reliance on default encoding in org.testng.log4testng.Logger.testDebugOn(): java.io.ByteArrayOutputStream.toString()</LongMessage>
    <Class classname="org.testng.log4testng.Logger" primary="true">
      <SourceLine classname="org.testng.log4testng.Logger" start="64" end="703" sourcefile="Logger.java" sourcepath="org/testng/log4testng/Logger.java">
        <Message>At Logger.java:[lines 64-703]</Message>
      </SourceLine>
      <Message>In class org.testng.log4testng.Logger</Message>
    </Class>
    <Method classname="org.testng.log4testng.Logger" name="testDebugOn" signature="()V" isStatic="true" primary="true">
      <SourceLine classname="org.testng.log4testng.Logger" start="503" end="513" startBytecode="0" endBytecode="211" sourcefile="Logger.java" sourcepath="org/testng/log4testng/Logger.java"/>
      <Message>In method org.testng.log4testng.Logger.testDebugOn()</Message>
    </Method>
    <Method classname="java.io.ByteArrayOutputStream" name="toString" signature="()Ljava/lang/String;" isStatic="false" role="METHOD_CALLED">
      <SourceLine classname="java.io.ByteArrayOutputStream" start="215" end="215" startBytecode="0" endBytecode="58" sourcefile="ByteArrayOutputStream.java" sourcepath="java/io/ByteArrayOutputStream.java"/>
      <Message>Called method java.io.ByteArrayOutputStream.toString()</Message>
    </Method>
    <SourceLine classname="org.testng.log4testng.Logger" primary="true" start="511" end="511" startBytecode="69" endBytecode="69" sourcefile="Logger.java" sourcepath="org/testng/log4testng/Logger.java">
      <Message>At Logger.java:[line 511]</Message>
    </SourceLine>
    <SourceLine classname="org.testng.log4testng.Logger" start="512" end="512" startBytecode="81" endBytecode="81" sourcefile="Logger.java" sourcepath="org/testng/log4testng/Logger.java" role="SOURCE_LINE_ANOTHER_INSTANCE">
      <Message>Another occurrence at Logger.java:[line 512]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DM_DEFAULT_ENCODING" priority="1" rank="19" abbrev="Dm" category="I18N" instanceHash="8c05d386c23611120aa36be3514d450d" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Reliance on default encoding</ShortMessage>
    <LongMessage>Found reliance on default encoding in org.testng.log4testng.Logger.testDebugOn(): new java.io.PrintStream(OutputStream)</LongMessage>
    <Class classname="org.testng.log4testng.Logger" primary="true">
      <SourceLine classname="org.testng.log4testng.Logger" start="64" end="703" sourcefile="Logger.java" sourcepath="org/testng/log4testng/Logger.java">
        <Message>At Logger.java:[lines 64-703]</Message>
      </SourceLine>
      <Message>In class org.testng.log4testng.Logger</Message>
    </Class>
    <Method classname="org.testng.log4testng.Logger" name="testDebugOn" signature="()V" isStatic="true" primary="true">
      <SourceLine classname="org.testng.log4testng.Logger" start="503" end="513" startBytecode="0" endBytecode="211" sourcefile="Logger.java" sourcepath="org/testng/log4testng/Logger.java"/>
      <Message>In method org.testng.log4testng.Logger.testDebugOn()</Message>
    </Method>
    <Method classname="java.io.PrintStream" name="&lt;init&gt;" signature="(Ljava/io/OutputStream;)V" isStatic="false" role="METHOD_CALLED">
      <SourceLine classname="java.io.PrintStream" start="134" end="135" startBytecode="0" endBytecode="62" sourcefile="PrintStream.java" sourcepath="java/io/PrintStream.java"/>
      <Message>Called method new java.io.PrintStream(OutputStream)</Message>
    </Method>
    <SourceLine classname="org.testng.log4testng.Logger" primary="true" start="506" end="506" startBytecode="29" endBytecode="29" sourcefile="Logger.java" sourcepath="org/testng/log4testng/Logger.java">
      <Message>At Logger.java:[line 506]</Message>
    </SourceLine>
    <SourceLine classname="org.testng.log4testng.Logger" start="507" end="507" startBytecode="38" endBytecode="38" sourcefile="Logger.java" sourcepath="org/testng/log4testng/Logger.java" role="SOURCE_LINE_ANOTHER_INSTANCE">
      <Message>Another occurrence at Logger.java:[line 507]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DM_DEFAULT_ENCODING" priority="1" rank="19" abbrev="Dm" category="I18N" instanceHash="dce66804ebe2169de003bc9f93cb009a" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Reliance on default encoding</ShortMessage>
    <LongMessage>Found reliance on default encoding in org.testng.log4testng.Logger.testRootLoggerDefault(): java.io.ByteArrayOutputStream.toString()</LongMessage>
    <Class classname="org.testng.log4testng.Logger" primary="true">
      <SourceLine classname="org.testng.log4testng.Logger" start="64" end="703" sourcefile="Logger.java" sourcepath="org/testng/log4testng/Logger.java">
        <Message>At Logger.java:[lines 64-703]</Message>
      </SourceLine>
      <Message>In class org.testng.log4testng.Logger</Message>
    </Class>
    <Method classname="org.testng.log4testng.Logger" name="testRootLoggerDefault" signature="()V" isStatic="true" primary="true">
      <SourceLine classname="org.testng.log4testng.Logger" start="554" end="581" startBytecode="0" endBytecode="437" sourcefile="Logger.java" sourcepath="org/testng/log4testng/Logger.java"/>
      <Message>In method org.testng.log4testng.Logger.testRootLoggerDefault()</Message>
    </Method>
    <Method classname="java.io.ByteArrayOutputStream" name="toString" signature="()Ljava/lang/String;" isStatic="false" role="METHOD_CALLED">
      <SourceLine classname="java.io.ByteArrayOutputStream" start="215" end="215" startBytecode="0" endBytecode="58" sourcefile="ByteArrayOutputStream.java" sourcepath="java/io/ByteArrayOutputStream.java"/>
      <Message>Called method java.io.ByteArrayOutputStream.toString()</Message>
    </Method>
    <SourceLine classname="org.testng.log4testng.Logger" primary="true" start="563" end="563" startBytecode="65" endBytecode="65" sourcefile="Logger.java" sourcepath="org/testng/log4testng/Logger.java">
      <Message>At Logger.java:[line 563]</Message>
    </SourceLine>
    <SourceLine classname="org.testng.log4testng.Logger" start="564" end="564" startBytecode="74" endBytecode="74" sourcefile="Logger.java" sourcepath="org/testng/log4testng/Logger.java" role="SOURCE_LINE_ANOTHER_INSTANCE">
      <Message>Another occurrence at Logger.java:[line 564]</Message>
    </SourceLine>
    <SourceLine classname="org.testng.log4testng.Logger" start="566" end="566" startBytecode="90" endBytecode="90" sourcefile="Logger.java" sourcepath="org/testng/log4testng/Logger.java" role="SOURCE_LINE_ANOTHER_INSTANCE">
      <Message>Another occurrence at Logger.java:[line 566]</Message>
    </SourceLine>
    <SourceLine classname="org.testng.log4testng.Logger" start="567" end="567" startBytecode="99" endBytecode="99" sourcefile="Logger.java" sourcepath="org/testng/log4testng/Logger.java" role="SOURCE_LINE_ANOTHER_INSTANCE">
      <Message>Another occurrence at Logger.java:[line 567]</Message>
    </SourceLine>
    <SourceLine classname="org.testng.log4testng.Logger" start="569" end="569" startBytecode="115" endBytecode="115" sourcefile="Logger.java" sourcepath="org/testng/log4testng/Logger.java" role="SOURCE_LINE_ANOTHER_INSTANCE">
      <Message>Another occurrence at Logger.java:[line 569]</Message>
    </SourceLine>
    <SourceLine classname="org.testng.log4testng.Logger" start="570" end="570" startBytecode="124" endBytecode="124" sourcefile="Logger.java" sourcepath="org/testng/log4testng/Logger.java" role="SOURCE_LINE_ANOTHER_INSTANCE">
      <Message>Another occurrence at Logger.java:[line 570]</Message>
    </SourceLine>
    <SourceLine classname="org.testng.log4testng.Logger" start="572" end="572" startBytecode="140" endBytecode="140" sourcefile="Logger.java" sourcepath="org/testng/log4testng/Logger.java" role="SOURCE_LINE_ANOTHER_INSTANCE">
      <Message>Another occurrence at Logger.java:[line 572]</Message>
    </SourceLine>
    <SourceLine classname="org.testng.log4testng.Logger" start="573" end="573" startBytecode="149" endBytecode="149" sourcefile="Logger.java" sourcepath="org/testng/log4testng/Logger.java" role="SOURCE_LINE_ANOTHER_INSTANCE">
      <Message>Another occurrence at Logger.java:[line 573]</Message>
    </SourceLine>
    <SourceLine classname="org.testng.log4testng.Logger" start="574" end="574" startBytecode="161" endBytecode="161" sourcefile="Logger.java" sourcepath="org/testng/log4testng/Logger.java" role="SOURCE_LINE_ANOTHER_INSTANCE">
      <Message>Another occurrence at Logger.java:[line 574]</Message>
    </SourceLine>
    <SourceLine classname="org.testng.log4testng.Logger" start="576" end="576" startBytecode="177" endBytecode="177" sourcefile="Logger.java" sourcepath="org/testng/log4testng/Logger.java" role="SOURCE_LINE_ANOTHER_INSTANCE">
      <Message>Another occurrence at Logger.java:[line 576]</Message>
    </SourceLine>
    <SourceLine classname="org.testng.log4testng.Logger" start="577" end="577" startBytecode="189" endBytecode="189" sourcefile="Logger.java" sourcepath="org/testng/log4testng/Logger.java" role="SOURCE_LINE_ANOTHER_INSTANCE">
      <Message>Another occurrence at Logger.java:[line 577]</Message>
    </SourceLine>
    <SourceLine classname="org.testng.log4testng.Logger" start="579" end="579" startBytecode="208" endBytecode="208" sourcefile="Logger.java" sourcepath="org/testng/log4testng/Logger.java" role="SOURCE_LINE_ANOTHER_INSTANCE">
      <Message>Another occurrence at Logger.java:[line 579]</Message>
    </SourceLine>
    <SourceLine classname="org.testng.log4testng.Logger" start="580" end="580" startBytecode="220" endBytecode="220" sourcefile="Logger.java" sourcepath="org/testng/log4testng/Logger.java" role="SOURCE_LINE_ANOTHER_INSTANCE">
      <Message>Another occurrence at Logger.java:[line 580]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DM_DEFAULT_ENCODING" priority="1" rank="19" abbrev="Dm" category="I18N" instanceHash="7d7007600c4fbe191b6218a03d3d58b5" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Reliance on default encoding</ShortMessage>
    <LongMessage>Found reliance on default encoding in org.testng.log4testng.Logger.testRootLoggerDefault(): new java.io.PrintStream(OutputStream)</LongMessage>
    <Class classname="org.testng.log4testng.Logger" primary="true">
      <SourceLine classname="org.testng.log4testng.Logger" start="64" end="703" sourcefile="Logger.java" sourcepath="org/testng/log4testng/Logger.java">
        <Message>At Logger.java:[lines 64-703]</Message>
      </SourceLine>
      <Message>In class org.testng.log4testng.Logger</Message>
    </Class>
    <Method classname="org.testng.log4testng.Logger" name="testRootLoggerDefault" signature="()V" isStatic="true" primary="true">
      <SourceLine classname="org.testng.log4testng.Logger" start="554" end="581" startBytecode="0" endBytecode="437" sourcefile="Logger.java" sourcepath="org/testng/log4testng/Logger.java"/>
      <Message>In method org.testng.log4testng.Logger.testRootLoggerDefault()</Message>
    </Method>
    <Method classname="java.io.PrintStream" name="&lt;init&gt;" signature="(Ljava/io/OutputStream;)V" isStatic="false" role="METHOD_CALLED">
      <SourceLine classname="java.io.PrintStream" start="134" end="135" startBytecode="0" endBytecode="62" sourcefile="PrintStream.java" sourcepath="java/io/PrintStream.java"/>
      <Message>Called method new java.io.PrintStream(OutputStream)</Message>
    </Method>
    <SourceLine classname="org.testng.log4testng.Logger" primary="true" start="557" end="557" startBytecode="29" endBytecode="29" sourcefile="Logger.java" sourcepath="org/testng/log4testng/Logger.java">
      <Message>At Logger.java:[line 557]</Message>
    </SourceLine>
    <SourceLine classname="org.testng.log4testng.Logger" start="558" end="558" startBytecode="38" endBytecode="38" sourcefile="Logger.java" sourcepath="org/testng/log4testng/Logger.java" role="SOURCE_LINE_ANOTHER_INSTANCE">
      <Message>Another occurrence at Logger.java:[line 558]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DM_DEFAULT_ENCODING" priority="1" rank="19" abbrev="Dm" category="I18N" instanceHash="d90081489c52abf8d2722b5d7868d351" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Reliance on default encoding</ShortMessage>
    <LongMessage>Found reliance on default encoding in org.testng.log4testng.Logger.testRootLoggerSet(): java.io.ByteArrayOutputStream.toString()</LongMessage>
    <Class classname="org.testng.log4testng.Logger" primary="true">
      <SourceLine classname="org.testng.log4testng.Logger" start="64" end="703" sourcefile="Logger.java" sourcepath="org/testng/log4testng/Logger.java">
        <Message>At Logger.java:[lines 64-703]</Message>
      </SourceLine>
      <Message>In class org.testng.log4testng.Logger</Message>
    </Class>
    <Method classname="org.testng.log4testng.Logger" name="testRootLoggerSet" signature="()V" isStatic="true" primary="true">
      <SourceLine classname="org.testng.log4testng.Logger" start="585" end="600" startBytecode="0" endBytecode="267" sourcefile="Logger.java" sourcepath="org/testng/log4testng/Logger.java"/>
      <Message>In method org.testng.log4testng.Logger.testRootLoggerSet()</Message>
    </Method>
    <Method classname="java.io.ByteArrayOutputStream" name="toString" signature="()Ljava/lang/String;" isStatic="false" role="METHOD_CALLED">
      <SourceLine classname="java.io.ByteArrayOutputStream" start="215" end="215" startBytecode="0" endBytecode="58" sourcefile="ByteArrayOutputStream.java" sourcepath="java/io/ByteArrayOutputStream.java"/>
      <Message>Called method java.io.ByteArrayOutputStream.toString()</Message>
    </Method>
    <SourceLine classname="org.testng.log4testng.Logger" primary="true" start="595" end="595" startBytecode="74" endBytecode="74" sourcefile="Logger.java" sourcepath="org/testng/log4testng/Logger.java">
      <Message>At Logger.java:[line 595]</Message>
    </SourceLine>
    <SourceLine classname="org.testng.log4testng.Logger" start="596" end="596" startBytecode="83" endBytecode="83" sourcefile="Logger.java" sourcepath="org/testng/log4testng/Logger.java" role="SOURCE_LINE_ANOTHER_INSTANCE">
      <Message>Another occurrence at Logger.java:[line 596]</Message>
    </SourceLine>
    <SourceLine classname="org.testng.log4testng.Logger" start="598" end="598" startBytecode="99" endBytecode="99" sourcefile="Logger.java" sourcepath="org/testng/log4testng/Logger.java" role="SOURCE_LINE_ANOTHER_INSTANCE">
      <Message>Another occurrence at Logger.java:[line 598]</Message>
    </SourceLine>
    <SourceLine classname="org.testng.log4testng.Logger" start="599" end="599" startBytecode="111" endBytecode="111" sourcefile="Logger.java" sourcepath="org/testng/log4testng/Logger.java" role="SOURCE_LINE_ANOTHER_INSTANCE">
      <Message>Another occurrence at Logger.java:[line 599]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DM_DEFAULT_ENCODING" priority="1" rank="19" abbrev="Dm" category="I18N" instanceHash="bffa0a4a333e67a11252d481ce41b6b" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Reliance on default encoding</ShortMessage>
    <LongMessage>Found reliance on default encoding in org.testng.log4testng.Logger.testRootLoggerSet(): new java.io.PrintStream(OutputStream)</LongMessage>
    <Class classname="org.testng.log4testng.Logger" primary="true">
      <SourceLine classname="org.testng.log4testng.Logger" start="64" end="703" sourcefile="Logger.java" sourcepath="org/testng/log4testng/Logger.java">
        <Message>At Logger.java:[lines 64-703]</Message>
      </SourceLine>
      <Message>In class org.testng.log4testng.Logger</Message>
    </Class>
    <Method classname="org.testng.log4testng.Logger" name="testRootLoggerSet" signature="()V" isStatic="true" primary="true">
      <SourceLine classname="org.testng.log4testng.Logger" start="585" end="600" startBytecode="0" endBytecode="267" sourcefile="Logger.java" sourcepath="org/testng/log4testng/Logger.java"/>
      <Message>In method org.testng.log4testng.Logger.testRootLoggerSet()</Message>
    </Method>
    <Method classname="java.io.PrintStream" name="&lt;init&gt;" signature="(Ljava/io/OutputStream;)V" isStatic="false" role="METHOD_CALLED">
      <SourceLine classname="java.io.PrintStream" start="134" end="135" startBytecode="0" endBytecode="62" sourcefile="PrintStream.java" sourcepath="java/io/PrintStream.java"/>
      <Message>Called method new java.io.PrintStream(OutputStream)</Message>
    </Method>
    <SourceLine classname="org.testng.log4testng.Logger" primary="true" start="588" end="588" startBytecode="29" endBytecode="29" sourcefile="Logger.java" sourcepath="org/testng/log4testng/Logger.java">
      <Message>At Logger.java:[line 588]</Message>
    </SourceLine>
    <SourceLine classname="org.testng.log4testng.Logger" start="589" end="589" startBytecode="38" endBytecode="38" sourcefile="Logger.java" sourcepath="org/testng/log4testng/Logger.java" role="SOURCE_LINE_ANOTHER_INSTANCE">
      <Message>Another occurrence at Logger.java:[line 589]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DM_DEFAULT_ENCODING" priority="1" rank="19" abbrev="Dm" category="I18N" instanceHash="81f0b4121da3a21e9f4bc2b9087ad805" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Reliance on default encoding</ShortMessage>
    <LongMessage>Found reliance on default encoding in org.testng.log4testng.Logger.testRootLoggerSetError(): java.io.ByteArrayOutputStream.toString()</LongMessage>
    <Class classname="org.testng.log4testng.Logger" primary="true">
      <SourceLine classname="org.testng.log4testng.Logger" start="64" end="703" sourcefile="Logger.java" sourcepath="org/testng/log4testng/Logger.java">
        <Message>At Logger.java:[lines 64-703]</Message>
      </SourceLine>
      <Message>In class org.testng.log4testng.Logger</Message>
    </Class>
    <Method classname="org.testng.log4testng.Logger" name="testRootLoggerSetError" signature="()V" isStatic="true" primary="true">
      <SourceLine classname="org.testng.log4testng.Logger" start="604" end="619" startBytecode="0" endBytecode="266" sourcefile="Logger.java" sourcepath="org/testng/log4testng/Logger.java"/>
      <Message>In method org.testng.log4testng.Logger.testRootLoggerSetError()</Message>
    </Method>
    <Method classname="java.io.ByteArrayOutputStream" name="toString" signature="()Ljava/lang/String;" isStatic="false" role="METHOD_CALLED">
      <SourceLine classname="java.io.ByteArrayOutputStream" start="215" end="215" startBytecode="0" endBytecode="58" sourcefile="ByteArrayOutputStream.java" sourcepath="java/io/ByteArrayOutputStream.java"/>
      <Message>Called method java.io.ByteArrayOutputStream.toString()</Message>
    </Method>
    <SourceLine classname="org.testng.log4testng.Logger" primary="true" start="616" end="616" startBytecode="72" endBytecode="72" sourcefile="Logger.java" sourcepath="org/testng/log4testng/Logger.java">
      <Message>At Logger.java:[line 616]</Message>
    </SourceLine>
    <SourceLine classname="org.testng.log4testng.Logger" start="617" end="617" startBytecode="81" endBytecode="81" sourcefile="Logger.java" sourcepath="org/testng/log4testng/Logger.java" role="SOURCE_LINE_ANOTHER_INSTANCE">
      <Message>Another occurrence at Logger.java:[line 617]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DM_DEFAULT_ENCODING" priority="1" rank="19" abbrev="Dm" category="I18N" instanceHash="203ff97103eff0dd7c51ac9ac8655aae" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Reliance on default encoding</ShortMessage>
    <LongMessage>Found reliance on default encoding in org.testng.log4testng.Logger.testRootLoggerSetError(): new java.io.PrintStream(OutputStream)</LongMessage>
    <Class classname="org.testng.log4testng.Logger" primary="true">
      <SourceLine classname="org.testng.log4testng.Logger" start="64" end="703" sourcefile="Logger.java" sourcepath="org/testng/log4testng/Logger.java">
        <Message>At Logger.java:[lines 64-703]</Message>
      </SourceLine>
      <Message>In class org.testng.log4testng.Logger</Message>
    </Class>
    <Method classname="org.testng.log4testng.Logger" name="testRootLoggerSetError" signature="()V" isStatic="true" primary="true">
      <SourceLine classname="org.testng.log4testng.Logger" start="604" end="619" startBytecode="0" endBytecode="266" sourcefile="Logger.java" sourcepath="org/testng/log4testng/Logger.java"/>
      <Message>In method org.testng.log4testng.Logger.testRootLoggerSetError()</Message>
    </Method>
    <Method classname="java.io.PrintStream" name="&lt;init&gt;" signature="(Ljava/io/OutputStream;)V" isStatic="false" role="METHOD_CALLED">
      <SourceLine classname="java.io.PrintStream" start="134" end="135" startBytecode="0" endBytecode="62" sourcefile="PrintStream.java" sourcepath="java/io/PrintStream.java"/>
      <Message>Called method new java.io.PrintStream(OutputStream)</Message>
    </Method>
    <SourceLine classname="org.testng.log4testng.Logger" primary="true" start="607" end="607" startBytecode="29" endBytecode="29" sourcefile="Logger.java" sourcepath="org/testng/log4testng/Logger.java">
      <Message>At Logger.java:[line 607]</Message>
    </SourceLine>
    <SourceLine classname="org.testng.log4testng.Logger" start="608" end="608" startBytecode="38" endBytecode="38" sourcefile="Logger.java" sourcepath="org/testng/log4testng/Logger.java" role="SOURCE_LINE_ANOTHER_INSTANCE">
      <Message>Another occurrence at Logger.java:[line 608]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DM_DEFAULT_ENCODING" priority="1" rank="19" abbrev="Dm" category="I18N" instanceHash="d5593b324e96df94353b534362f06e35" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Reliance on default encoding</ShortMessage>
    <LongMessage>Found reliance on default encoding in org.testng.log4testng.Logger.testUserLoggerSet(): java.io.ByteArrayOutputStream.toString()</LongMessage>
    <Class classname="org.testng.log4testng.Logger" primary="true">
      <SourceLine classname="org.testng.log4testng.Logger" start="64" end="703" sourcefile="Logger.java" sourcepath="org/testng/log4testng/Logger.java">
        <Message>At Logger.java:[lines 64-703]</Message>
      </SourceLine>
      <Message>In class org.testng.log4testng.Logger</Message>
    </Class>
    <Method classname="org.testng.log4testng.Logger" name="testUserLoggerSet" signature="()V" isStatic="true" primary="true">
      <SourceLine classname="org.testng.log4testng.Logger" start="623" end="647" startBytecode="0" endBytecode="391" sourcefile="Logger.java" sourcepath="org/testng/log4testng/Logger.java"/>
      <Message>In method org.testng.log4testng.Logger.testUserLoggerSet()</Message>
    </Method>
    <Method classname="java.io.ByteArrayOutputStream" name="toString" signature="()Ljava/lang/String;" isStatic="false" role="METHOD_CALLED">
      <SourceLine classname="java.io.ByteArrayOutputStream" start="215" end="215" startBytecode="0" endBytecode="58" sourcefile="ByteArrayOutputStream.java" sourcepath="java/io/ByteArrayOutputStream.java"/>
      <Message>Called method java.io.ByteArrayOutputStream.toString()</Message>
    </Method>
    <SourceLine classname="org.testng.log4testng.Logger" primary="true" start="633" end="633" startBytecode="74" endBytecode="74" sourcefile="Logger.java" sourcepath="org/testng/log4testng/Logger.java">
      <Message>At Logger.java:[line 633]</Message>
    </SourceLine>
    <SourceLine classname="org.testng.log4testng.Logger" start="634" end="634" startBytecode="83" endBytecode="83" sourcefile="Logger.java" sourcepath="org/testng/log4testng/Logger.java" role="SOURCE_LINE_ANOTHER_INSTANCE">
      <Message>Another occurrence at Logger.java:[line 634]</Message>
    </SourceLine>
    <SourceLine classname="org.testng.log4testng.Logger" start="636" end="636" startBytecode="99" endBytecode="99" sourcefile="Logger.java" sourcepath="org/testng/log4testng/Logger.java" role="SOURCE_LINE_ANOTHER_INSTANCE">
      <Message>Another occurrence at Logger.java:[line 636]</Message>
    </SourceLine>
    <SourceLine classname="org.testng.log4testng.Logger" start="637" end="637" startBytecode="108" endBytecode="108" sourcefile="Logger.java" sourcepath="org/testng/log4testng/Logger.java" role="SOURCE_LINE_ANOTHER_INSTANCE">
      <Message>Another occurrence at Logger.java:[line 637]</Message>
    </SourceLine>
    <SourceLine classname="org.testng.log4testng.Logger" start="638" end="638" startBytecode="120" endBytecode="120" sourcefile="Logger.java" sourcepath="org/testng/log4testng/Logger.java" role="SOURCE_LINE_ANOTHER_INSTANCE">
      <Message>Another occurrence at Logger.java:[line 638]</Message>
    </SourceLine>
    <SourceLine classname="org.testng.log4testng.Logger" start="642" end="642" startBytecode="143" endBytecode="143" sourcefile="Logger.java" sourcepath="org/testng/log4testng/Logger.java" role="SOURCE_LINE_ANOTHER_INSTANCE">
      <Message>Another occurrence at Logger.java:[line 642]</Message>
    </SourceLine>
    <SourceLine classname="org.testng.log4testng.Logger" start="643" end="643" startBytecode="155" endBytecode="155" sourcefile="Logger.java" sourcepath="org/testng/log4testng/Logger.java" role="SOURCE_LINE_ANOTHER_INSTANCE">
      <Message>Another occurrence at Logger.java:[line 643]</Message>
    </SourceLine>
    <SourceLine classname="org.testng.log4testng.Logger" start="645" end="645" startBytecode="171" endBytecode="171" sourcefile="Logger.java" sourcepath="org/testng/log4testng/Logger.java" role="SOURCE_LINE_ANOTHER_INSTANCE">
      <Message>Another occurrence at Logger.java:[line 645]</Message>
    </SourceLine>
    <SourceLine classname="org.testng.log4testng.Logger" start="646" end="646" startBytecode="183" endBytecode="183" sourcefile="Logger.java" sourcepath="org/testng/log4testng/Logger.java" role="SOURCE_LINE_ANOTHER_INSTANCE">
      <Message>Another occurrence at Logger.java:[line 646]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DM_DEFAULT_ENCODING" priority="1" rank="19" abbrev="Dm" category="I18N" instanceHash="c81802ead849eb8674f2ca7fb4163af8" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Reliance on default encoding</ShortMessage>
    <LongMessage>Found reliance on default encoding in org.testng.log4testng.Logger.testUserLoggerSet(): new java.io.PrintStream(OutputStream)</LongMessage>
    <Class classname="org.testng.log4testng.Logger" primary="true">
      <SourceLine classname="org.testng.log4testng.Logger" start="64" end="703" sourcefile="Logger.java" sourcepath="org/testng/log4testng/Logger.java">
        <Message>At Logger.java:[lines 64-703]</Message>
      </SourceLine>
      <Message>In class org.testng.log4testng.Logger</Message>
    </Class>
    <Method classname="org.testng.log4testng.Logger" name="testUserLoggerSet" signature="()V" isStatic="true" primary="true">
      <SourceLine classname="org.testng.log4testng.Logger" start="623" end="647" startBytecode="0" endBytecode="391" sourcefile="Logger.java" sourcepath="org/testng/log4testng/Logger.java"/>
      <Message>In method org.testng.log4testng.Logger.testUserLoggerSet()</Message>
    </Method>
    <Method classname="java.io.PrintStream" name="&lt;init&gt;" signature="(Ljava/io/OutputStream;)V" isStatic="false" role="METHOD_CALLED">
      <SourceLine classname="java.io.PrintStream" start="134" end="135" startBytecode="0" endBytecode="62" sourcefile="PrintStream.java" sourcepath="java/io/PrintStream.java"/>
      <Message>Called method new java.io.PrintStream(OutputStream)</Message>
    </Method>
    <SourceLine classname="org.testng.log4testng.Logger" primary="true" start="626" end="626" startBytecode="29" endBytecode="29" sourcefile="Logger.java" sourcepath="org/testng/log4testng/Logger.java">
      <Message>At Logger.java:[line 626]</Message>
    </SourceLine>
    <SourceLine classname="org.testng.log4testng.Logger" start="627" end="627" startBytecode="38" endBytecode="38" sourcefile="Logger.java" sourcepath="org/testng/log4testng/Logger.java" role="SOURCE_LINE_ANOTHER_INSTANCE">
      <Message>Another occurrence at Logger.java:[line 627]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DM_DEFAULT_ENCODING" priority="1" rank="19" abbrev="Dm" category="I18N" instanceHash="914a2a7795252a75b7b9246578a2cbe2" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Reliance on default encoding</ShortMessage>
    <LongMessage>Found reliance on default encoding in org.testng.log4testng.Logger.testUserLoggerSetError(): java.io.ByteArrayOutputStream.toString()</LongMessage>
    <Class classname="org.testng.log4testng.Logger" primary="true">
      <SourceLine classname="org.testng.log4testng.Logger" start="64" end="703" sourcefile="Logger.java" sourcepath="org/testng/log4testng/Logger.java">
        <Message>At Logger.java:[lines 64-703]</Message>
      </SourceLine>
      <Message>In class org.testng.log4testng.Logger</Message>
    </Class>
    <Method classname="org.testng.log4testng.Logger" name="testUserLoggerSetError" signature="()V" isStatic="true" primary="true">
      <SourceLine classname="org.testng.log4testng.Logger" start="651" end="666" startBytecode="0" endBytecode="266" sourcefile="Logger.java" sourcepath="org/testng/log4testng/Logger.java"/>
      <Message>In method org.testng.log4testng.Logger.testUserLoggerSetError()</Message>
    </Method>
    <Method classname="java.io.ByteArrayOutputStream" name="toString" signature="()Ljava/lang/String;" isStatic="false" role="METHOD_CALLED">
      <SourceLine classname="java.io.ByteArrayOutputStream" start="215" end="215" startBytecode="0" endBytecode="58" sourcefile="ByteArrayOutputStream.java" sourcepath="java/io/ByteArrayOutputStream.java"/>
      <Message>Called method java.io.ByteArrayOutputStream.toString()</Message>
    </Method>
    <SourceLine classname="org.testng.log4testng.Logger" primary="true" start="663" end="663" startBytecode="72" endBytecode="72" sourcefile="Logger.java" sourcepath="org/testng/log4testng/Logger.java">
      <Message>At Logger.java:[line 663]</Message>
    </SourceLine>
    <SourceLine classname="org.testng.log4testng.Logger" start="664" end="664" startBytecode="81" endBytecode="81" sourcefile="Logger.java" sourcepath="org/testng/log4testng/Logger.java" role="SOURCE_LINE_ANOTHER_INSTANCE">
      <Message>Another occurrence at Logger.java:[line 664]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DM_DEFAULT_ENCODING" priority="1" rank="19" abbrev="Dm" category="I18N" instanceHash="110c00dbb40f37e0165a24ed05cfc79" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Reliance on default encoding</ShortMessage>
    <LongMessage>Found reliance on default encoding in org.testng.log4testng.Logger.testUserLoggerSetError(): new java.io.PrintStream(OutputStream)</LongMessage>
    <Class classname="org.testng.log4testng.Logger" primary="true">
      <SourceLine classname="org.testng.log4testng.Logger" start="64" end="703" sourcefile="Logger.java" sourcepath="org/testng/log4testng/Logger.java">
        <Message>At Logger.java:[lines 64-703]</Message>
      </SourceLine>
      <Message>In class org.testng.log4testng.Logger</Message>
    </Class>
    <Method classname="org.testng.log4testng.Logger" name="testUserLoggerSetError" signature="()V" isStatic="true" primary="true">
      <SourceLine classname="org.testng.log4testng.Logger" start="651" end="666" startBytecode="0" endBytecode="266" sourcefile="Logger.java" sourcepath="org/testng/log4testng/Logger.java"/>
      <Message>In method org.testng.log4testng.Logger.testUserLoggerSetError()</Message>
    </Method>
    <Method classname="java.io.PrintStream" name="&lt;init&gt;" signature="(Ljava/io/OutputStream;)V" isStatic="false" role="METHOD_CALLED">
      <SourceLine classname="java.io.PrintStream" start="134" end="135" startBytecode="0" endBytecode="62" sourcefile="PrintStream.java" sourcepath="java/io/PrintStream.java"/>
      <Message>Called method new java.io.PrintStream(OutputStream)</Message>
    </Method>
    <SourceLine classname="org.testng.log4testng.Logger" primary="true" start="654" end="654" startBytecode="29" endBytecode="29" sourcefile="Logger.java" sourcepath="org/testng/log4testng/Logger.java">
      <Message>At Logger.java:[line 654]</Message>
    </SourceLine>
    <SourceLine classname="org.testng.log4testng.Logger" start="655" end="655" startBytecode="38" endBytecode="38" sourcefile="Logger.java" sourcepath="org/testng/log4testng/Logger.java" role="SOURCE_LINE_ANOTHER_INSTANCE">
      <Message>Another occurrence at Logger.java:[line 655]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DM_DEFAULT_ENCODING" priority="1" rank="19" abbrev="Dm" category="I18N" instanceHash="8597cbe292b23106dabd53723efe9f8f" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Reliance on default encoding</ShortMessage>
    <LongMessage>Found reliance on default encoding in org.testng.log4testng.Logger.testUserLoggerSetHierarchy(): java.io.ByteArrayOutputStream.toString()</LongMessage>
    <Class classname="org.testng.log4testng.Logger" primary="true">
      <SourceLine classname="org.testng.log4testng.Logger" start="64" end="703" sourcefile="Logger.java" sourcepath="org/testng/log4testng/Logger.java">
        <Message>At Logger.java:[lines 64-703]</Message>
      </SourceLine>
      <Message>In class org.testng.log4testng.Logger</Message>
    </Class>
    <Method classname="org.testng.log4testng.Logger" name="testUserLoggerSetHierarchy" signature="()V" isStatic="true" primary="true">
      <SourceLine classname="org.testng.log4testng.Logger" start="670" end="685" startBytecode="0" endBytecode="267" sourcefile="Logger.java" sourcepath="org/testng/log4testng/Logger.java"/>
      <Message>In method org.testng.log4testng.Logger.testUserLoggerSetHierarchy()</Message>
    </Method>
    <Method classname="java.io.ByteArrayOutputStream" name="toString" signature="()Ljava/lang/String;" isStatic="false" role="METHOD_CALLED">
      <SourceLine classname="java.io.ByteArrayOutputStream" start="215" end="215" startBytecode="0" endBytecode="58" sourcefile="ByteArrayOutputStream.java" sourcepath="java/io/ByteArrayOutputStream.java"/>
      <Message>Called method java.io.ByteArrayOutputStream.toString()</Message>
    </Method>
    <SourceLine classname="org.testng.log4testng.Logger" primary="true" start="680" end="680" startBytecode="74" endBytecode="74" sourcefile="Logger.java" sourcepath="org/testng/log4testng/Logger.java">
      <Message>At Logger.java:[line 680]</Message>
    </SourceLine>
    <SourceLine classname="org.testng.log4testng.Logger" start="681" end="681" startBytecode="83" endBytecode="83" sourcefile="Logger.java" sourcepath="org/testng/log4testng/Logger.java" role="SOURCE_LINE_ANOTHER_INSTANCE">
      <Message>Another occurrence at Logger.java:[line 681]</Message>
    </SourceLine>
    <SourceLine classname="org.testng.log4testng.Logger" start="683" end="683" startBytecode="99" endBytecode="99" sourcefile="Logger.java" sourcepath="org/testng/log4testng/Logger.java" role="SOURCE_LINE_ANOTHER_INSTANCE">
      <Message>Another occurrence at Logger.java:[line 683]</Message>
    </SourceLine>
    <SourceLine classname="org.testng.log4testng.Logger" start="684" end="684" startBytecode="111" endBytecode="111" sourcefile="Logger.java" sourcepath="org/testng/log4testng/Logger.java" role="SOURCE_LINE_ANOTHER_INSTANCE">
      <Message>Another occurrence at Logger.java:[line 684]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DM_DEFAULT_ENCODING" priority="1" rank="19" abbrev="Dm" category="I18N" instanceHash="a2ee435f12edef8926b4f8d30fb150a4" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Reliance on default encoding</ShortMessage>
    <LongMessage>Found reliance on default encoding in org.testng.log4testng.Logger.testUserLoggerSetHierarchy(): new java.io.PrintStream(OutputStream)</LongMessage>
    <Class classname="org.testng.log4testng.Logger" primary="true">
      <SourceLine classname="org.testng.log4testng.Logger" start="64" end="703" sourcefile="Logger.java" sourcepath="org/testng/log4testng/Logger.java">
        <Message>At Logger.java:[lines 64-703]</Message>
      </SourceLine>
      <Message>In class org.testng.log4testng.Logger</Message>
    </Class>
    <Method classname="org.testng.log4testng.Logger" name="testUserLoggerSetHierarchy" signature="()V" isStatic="true" primary="true">
      <SourceLine classname="org.testng.log4testng.Logger" start="670" end="685" startBytecode="0" endBytecode="267" sourcefile="Logger.java" sourcepath="org/testng/log4testng/Logger.java"/>
      <Message>In method org.testng.log4testng.Logger.testUserLoggerSetHierarchy()</Message>
    </Method>
    <Method classname="java.io.PrintStream" name="&lt;init&gt;" signature="(Ljava/io/OutputStream;)V" isStatic="false" role="METHOD_CALLED">
      <SourceLine classname="java.io.PrintStream" start="134" end="135" startBytecode="0" endBytecode="62" sourcefile="PrintStream.java" sourcepath="java/io/PrintStream.java"/>
      <Message>Called method new java.io.PrintStream(OutputStream)</Message>
    </Method>
    <SourceLine classname="org.testng.log4testng.Logger" primary="true" start="673" end="673" startBytecode="29" endBytecode="29" sourcefile="Logger.java" sourcepath="org/testng/log4testng/Logger.java">
      <Message>At Logger.java:[line 673]</Message>
    </SourceLine>
    <SourceLine classname="org.testng.log4testng.Logger" start="674" end="674" startBytecode="38" endBytecode="38" sourcefile="Logger.java" sourcepath="org/testng/log4testng/Logger.java" role="SOURCE_LINE_ANOTHER_INSTANCE">
      <Message>Another occurrence at Logger.java:[line 674]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="URF_UNREAD_FIELD" priority="3" rank="20" abbrev="UrF" category="PERFORMANCE" instanceHash="bbfa9a509561288b4e50f6e691b877b9" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Unread field</ShortMessage>
    <LongMessage>Unread field: org.testng.log4testng.Logger.klass</LongMessage>
    <Class classname="org.testng.log4testng.Logger" primary="true">
      <SourceLine classname="org.testng.log4testng.Logger" start="64" end="703" sourcefile="Logger.java" sourcepath="org/testng/log4testng/Logger.java">
        <Message>At Logger.java:[lines 64-703]</Message>
      </SourceLine>
      <Message>In class org.testng.log4testng.Logger</Message>
    </Class>
    <Field classname="org.testng.log4testng.Logger" name="klass" signature="Ljava/lang/Class;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.log4testng.Logger" sourcefile="Logger.java" sourcepath="org/testng/log4testng/Logger.java">
        <Message>In Logger.java</Message>
      </SourceLine>
      <Message>Field org.testng.log4testng.Logger.klass</Message>
    </Field>
    <SourceLine classname="org.testng.log4testng.Logger" primary="true" start="315" end="315" startBytecode="11" endBytecode="11" sourcefile="Logger.java" sourcepath="org/testng/log4testng/Logger.java">
      <Message>At Logger.java:[line 315]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="2c0d548c09f872ebdca70a1a7233362b" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>new org.testng.mustache.BaseChunk(Model) may expose internal representation by storing an externally mutable object into BaseChunk.m_model</LongMessage>
    <Class classname="org.testng.mustache.BaseChunk" primary="true">
      <SourceLine classname="org.testng.mustache.BaseChunk" start="7" end="15" sourcefile="BaseChunk.java" sourcepath="org/testng/mustache/BaseChunk.java">
        <Message>At BaseChunk.java:[lines 7-15]</Message>
      </SourceLine>
      <Message>In class org.testng.mustache.BaseChunk</Message>
    </Class>
    <Method classname="org.testng.mustache.BaseChunk" name="&lt;init&gt;" signature="(Lorg/testng/mustache/Model;)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.mustache.BaseChunk" start="7" end="9" startBytecode="0" endBytecode="69" sourcefile="BaseChunk.java" sourcepath="org/testng/mustache/BaseChunk.java"/>
      <Message>In method new org.testng.mustache.BaseChunk(Model)</Message>
    </Method>
    <Field classname="org.testng.mustache.BaseChunk" name="m_model" signature="Lorg/testng/mustache/Model;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.mustache.BaseChunk" sourcefile="BaseChunk.java" sourcepath="org/testng/mustache/BaseChunk.java">
        <Message>In BaseChunk.java</Message>
      </SourceLine>
      <Message>Field org.testng.mustache.BaseChunk.m_model</Message>
    </Field>
    <LocalVariable name="model" register="1" pc="6" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named model</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.mustache.BaseChunk" primary="true" start="8" end="8" startBytecode="6" endBytecode="6" sourcefile="BaseChunk.java" sourcepath="org/testng/mustache/BaseChunk.java">
      <Message>At BaseChunk.java:[line 8]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DLS_DEAD_LOCAL_STORE" priority="1" rank="15" abbrev="DLS" category="STYLE" instanceHash="73aeda820aa16070f6674a9819885630" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="563">
    <ShortMessage>Dead store to local variable</ShortMessage>
    <LongMessage>Dead store to result in org.testng.mustache.Model.resolveValueToString(String)</LongMessage>
    <Class classname="org.testng.mustache.Model" primary="true">
      <SourceLine classname="org.testng.mustache.Model" start="9" end="82" sourcefile="Model.java" sourcepath="org/testng/mustache/Model.java">
        <Message>At Model.java:[lines 9-82]</Message>
      </SourceLine>
      <Message>In class org.testng.mustache.Model</Message>
    </Class>
    <Method classname="org.testng.mustache.Model" name="resolveValueToString" signature="(Ljava/lang/String;)Ljava/lang/String;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.mustache.Model" start="71" end="76" startBytecode="0" endBytecode="16" sourcefile="Model.java" sourcepath="org/testng/mustache/Model.java"/>
      <Message>In method org.testng.mustache.Model.resolveValueToString(String)</Message>
    </Method>
    <LocalVariable name="result" register="2" pc="8" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named result</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.mustache.Model" primary="true" start="71" end="71" startBytecode="7" endBytecode="7" sourcefile="Model.java" sourcepath="org/testng/mustache/Model.java">
      <Message>At Model.java:[line 71]</Message>
    </SourceLine>
    <Property name="edu.umd.cs.findbugs.detect.DeadLocalStoreProperty.DEAD_OBJECT_STORE" value="true"/>
    <Property name="edu.umd.cs.findbugs.detect.DeadLocalStoreProperty.LOCAL_NAME" value="result"/>
    <Property name="edu.umd.cs.findbugs.detect.DeadLocalStoreProperty.METHOD_RESULT" value="true"/>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="636be797d75badcfce9e4686c3f70457" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>new org.testng.mustache.Model(Map) may expose internal representation by storing an externally mutable object into Model.m_model</LongMessage>
    <Class classname="org.testng.mustache.Model" primary="true">
      <SourceLine classname="org.testng.mustache.Model" start="9" end="82" sourcefile="Model.java" sourcepath="org/testng/mustache/Model.java">
        <Message>At Model.java:[lines 9-82]</Message>
      </SourceLine>
      <Message>In class org.testng.mustache.Model</Message>
    </Class>
    <Method classname="org.testng.mustache.Model" name="&lt;init&gt;" signature="(Ljava/util/Map;)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.mustache.Model" start="16" end="18" startBytecode="0" endBytecode="102" sourcefile="Model.java" sourcepath="org/testng/mustache/Model.java"/>
      <Message>In method new org.testng.mustache.Model(Map)</Message>
    </Method>
    <Field classname="org.testng.mustache.Model" name="m_model" signature="Ljava/util/Map;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.mustache.Model" sourcefile="Model.java" sourcepath="org/testng/mustache/Model.java">
        <Message>In Model.java</Message>
      </SourceLine>
      <Message>Field org.testng.mustache.Model.m_model</Message>
    </Field>
    <LocalVariable name="model" register="1" pc="17" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named model</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.mustache.Model" primary="true" start="17" end="17" startBytecode="17" endBytecode="17" sourcefile="Model.java" sourcepath="org/testng/mustache/Model.java">
      <Message>At Model.java:[line 17]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DLS_DEAD_LOCAL_STORE" priority="3" rank="20" abbrev="DLS" category="STYLE" instanceHash="de509291602541348af7b809ee4bef61" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="563">
    <ShortMessage>Dead store to local variable</ShortMessage>
    <LongMessage>Dead store to $L20 in org.testng.reporters.EmailableReporter.generateSuiteSummaryReport(List)</LongMessage>
    <Class classname="org.testng.reporters.EmailableReporter" primary="true">
      <SourceLine classname="org.testng.reporters.EmailableReporter" start="38" end="521" sourcefile="EmailableReporter.java" sourcepath="org/testng/reporters/EmailableReporter.java">
        <Message>At EmailableReporter.java:[lines 38-521]</Message>
      </SourceLine>
      <Message>In class org.testng.reporters.EmailableReporter</Message>
    </Class>
    <Method classname="org.testng.reporters.EmailableReporter" name="generateSuiteSummaryReport" signature="(Ljava/util/List;)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.reporters.EmailableReporter" start="369" end="433" startBytecode="0" endBytecode="269" sourcefile="EmailableReporter.java" sourcepath="org/testng/reporters/EmailableReporter.java"/>
      <Message>In method org.testng.reporters.EmailableReporter.generateSuiteSummaryReport(List)</Message>
    </Method>
    <LocalVariable name="?" register="20" pc="509" role="LOCAL_VARIABLE_UNKNOWN">
      <Message>Local variable stored in JVM register 20</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.reporters.EmailableReporter" primary="true" start="420" end="420" startBytecode="509" endBytecode="509" sourcefile="EmailableReporter.java" sourcepath="org/testng/reporters/EmailableReporter.java">
      <Message>At EmailableReporter.java:[line 420]</Message>
    </SourceLine>
    <Property name="edu.umd.cs.findbugs.detect.DeadLocalStoreProperty.KILLED_BY_SUBSEQUENT_STORE" value="true"/>
    <Property name="edu.umd.cs.findbugs.detect.DeadLocalStoreProperty.LOCAL_NAME" value="?"/>
    <Property name="edu.umd.cs.findbugs.detect.DeadLocalStoreProperty.NO_LOADS" value="true"/>
  </BugInstance>
  <BugInstance type="RV_RETURN_VALUE_IGNORED_BAD_PRACTICE" priority="2" rank="16" abbrev="RV" category="BAD_PRACTICE" instanceHash="dcddcb33995dbc8db25c5e1ff2c6e9f1" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="253">
    <ShortMessage>Method ignores exceptional return value</ShortMessage>
    <LongMessage>Exceptional return value of java.io.File.mkdirs() ignored in org.testng.reporters.EmailableReporter.createWriter(String)</LongMessage>
    <Class classname="org.testng.reporters.EmailableReporter" primary="true">
      <SourceLine classname="org.testng.reporters.EmailableReporter" start="38" end="521" sourcefile="EmailableReporter.java" sourcepath="org/testng/reporters/EmailableReporter.java">
        <Message>At EmailableReporter.java:[lines 38-521]</Message>
      </SourceLine>
      <Message>In class org.testng.reporters.EmailableReporter</Message>
    </Class>
    <Method classname="org.testng.reporters.EmailableReporter" name="createWriter" signature="(Ljava/lang/String;)Ljava/io/PrintWriter;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.reporters.EmailableReporter" start="82" end="87" startBytecode="0" endBytecode="159" sourcefile="EmailableReporter.java" sourcepath="org/testng/reporters/EmailableReporter.java"/>
      <Message>In method org.testng.reporters.EmailableReporter.createWriter(String)</Message>
    </Method>
    <Method classname="java.io.File" name="mkdirs" signature="()Z" isStatic="false" role="METHOD_CALLED">
      <SourceLine classname="java.io.File" start="1403" end="1417" startBytecode="0" endBytecode="230" sourcefile="File.java" sourcepath="java/io/File.java"/>
      <Message>Called method java.io.File.mkdirs()</Message>
    </Method>
    <SourceLine classname="org.testng.reporters.EmailableReporter" primary="true" start="82" end="82" startBytecode="8" endBytecode="8" sourcefile="EmailableReporter.java" sourcepath="org/testng/reporters/EmailableReporter.java">
      <Message>At EmailableReporter.java:[line 82]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="SE_COMPARATOR_SHOULD_BE_SERIALIZABLE" priority="2" rank="19" abbrev="Se" category="BAD_PRACTICE" instanceHash="ee6366a0795a6c57b60778c17b6012e0" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Comparator doesn&apos;t implement Serializable</ShortMessage>
    <LongMessage>org.testng.reporters.EmailableReporter$TestSorter implements Comparator but not Serializable</LongMessage>
    <Class classname="org.testng.reporters.EmailableReporter$TestSorter" primary="true">
      <SourceLine classname="org.testng.reporters.EmailableReporter$TestSorter" start="525" end="531" sourcefile="EmailableReporter.java" sourcepath="org/testng/reporters/EmailableReporter.java">
        <Message>At EmailableReporter.java:[lines 525-531]</Message>
      </SourceLine>
      <Message>In class org.testng.reporters.EmailableReporter$TestSorter</Message>
    </Class>
    <SourceLine classname="org.testng.reporters.EmailableReporter$TestSorter" start="525" end="531" sourcefile="EmailableReporter.java" sourcepath="org/testng/reporters/EmailableReporter.java" synthetic="true">
      <Message>At EmailableReporter.java:[lines 525-531]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DLS_DEAD_LOCAL_STORE" priority="3" rank="20" abbrev="DLS" category="STYLE" instanceHash="fb1637ffddd91902742f626db59ba07f" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="563">
    <ShortMessage>Dead store to local variable</ShortMessage>
    <LongMessage>Dead store to parameterCount in org.testng.reporters.EmailableReporter2.writeScenario(int, String, ITestResult)</LongMessage>
    <Class classname="org.testng.reporters.EmailableReporter2" primary="true">
      <SourceLine classname="org.testng.reporters.EmailableReporter2" start="30" end="604" sourcefile="EmailableReporter2.java" sourcepath="org/testng/reporters/EmailableReporter2.java">
        <Message>At EmailableReporter2.java:[lines 30-604]</Message>
      </SourceLine>
      <Message>In class org.testng.reporters.EmailableReporter2</Message>
    </Class>
    <Method classname="org.testng.reporters.EmailableReporter2" name="writeScenario" signature="(ILjava/lang/String;Lorg/testng/ITestResult;)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.reporters.EmailableReporter2" start="437" end="506" startBytecode="0" endBytecode="226" sourcefile="EmailableReporter2.java" sourcepath="org/testng/reporters/EmailableReporter2.java"/>
      <Message>In method org.testng.reporters.EmailableReporter2.writeScenario(int, String, ITestResult)</Message>
    </Method>
    <LocalVariable name="parameterCount" register="6" pc="77" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named parameterCount</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.reporters.EmailableReporter2" primary="true" start="449" end="449" startBytecode="75" endBytecode="75" sourcefile="EmailableReporter2.java" sourcepath="org/testng/reporters/EmailableReporter2.java">
      <Message>At EmailableReporter2.java:[line 449]</Message>
    </SourceLine>
    <Property name="edu.umd.cs.findbugs.detect.DeadLocalStoreProperty.BASE_VALUE" value="true"/>
    <Property name="edu.umd.cs.findbugs.detect.DeadLocalStoreProperty.KILLED_BY_SUBSEQUENT_STORE" value="true"/>
    <Property name="edu.umd.cs.findbugs.detect.DeadLocalStoreProperty.LOCAL_NAME" value="parameterCount"/>
  </BugInstance>
  <BugInstance type="IM_BAD_CHECK_FOR_ODD" priority="2" rank="13" abbrev="IM" category="STYLE" instanceHash="6bc98c0cd3dcc04d8944c79464059a1c" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Check for oddness that won&apos;t work for negative numbers</ShortMessage>
    <LongMessage>Check for oddness that won&apos;t work for negative numbers in org.testng.reporters.EmailableReporter2.writeSuiteSummary()</LongMessage>
    <Class classname="org.testng.reporters.EmailableReporter2" primary="true">
      <SourceLine classname="org.testng.reporters.EmailableReporter2" start="30" end="604" sourcefile="EmailableReporter2.java" sourcepath="org/testng/reporters/EmailableReporter2.java">
        <Message>At EmailableReporter2.java:[lines 30-604]</Message>
      </SourceLine>
      <Message>In class org.testng.reporters.EmailableReporter2</Message>
    </Class>
    <Method classname="org.testng.reporters.EmailableReporter2" name="writeSuiteSummary" signature="()V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.reporters.EmailableReporter2" start="128" end="222" startBytecode="0" endBytecode="1846" sourcefile="EmailableReporter2.java" sourcepath="org/testng/reporters/EmailableReporter2.java"/>
      <Message>In method org.testng.reporters.EmailableReporter2.writeSuiteSummary()</Message>
    </Method>
    <SourceLine classname="org.testng.reporters.EmailableReporter2" primary="true" start="163" end="163" startBytecode="273" endBytecode="273" sourcefile="EmailableReporter2.java" sourcepath="org/testng/reporters/EmailableReporter2.java">
      <Message>At EmailableReporter2.java:[line 163]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="RV_RETURN_VALUE_IGNORED_BAD_PRACTICE" priority="2" rank="16" abbrev="RV" category="BAD_PRACTICE" instanceHash="45533e48d169430d0f47eb3dfd0468cf" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="253">
    <ShortMessage>Method ignores exceptional return value</ShortMessage>
    <LongMessage>Exceptional return value of java.io.File.mkdirs() ignored in org.testng.reporters.EmailableReporter2.createWriter(String)</LongMessage>
    <Class classname="org.testng.reporters.EmailableReporter2" primary="true">
      <SourceLine classname="org.testng.reporters.EmailableReporter2" start="30" end="604" sourcefile="EmailableReporter2.java" sourcepath="org/testng/reporters/EmailableReporter2.java">
        <Message>At EmailableReporter2.java:[lines 30-604]</Message>
      </SourceLine>
      <Message>In class org.testng.reporters.EmailableReporter2</Message>
    </Class>
    <Method classname="org.testng.reporters.EmailableReporter2" name="createWriter" signature="(Ljava/lang/String;)Ljava/io/PrintWriter;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.reporters.EmailableReporter2" start="72" end="77" startBytecode="0" endBytecode="159" sourcefile="EmailableReporter2.java" sourcepath="org/testng/reporters/EmailableReporter2.java"/>
      <Message>In method org.testng.reporters.EmailableReporter2.createWriter(String)</Message>
    </Method>
    <Method classname="java.io.File" name="mkdirs" signature="()Z" isStatic="false" role="METHOD_CALLED">
      <SourceLine classname="java.io.File" start="1403" end="1417" startBytecode="0" endBytecode="230" sourcefile="File.java" sourcepath="java/io/File.java"/>
      <Message>Called method java.io.File.mkdirs()</Message>
    </Method>
    <SourceLine classname="org.testng.reporters.EmailableReporter2" primary="true" start="72" end="72" startBytecode="8" endBytecode="8" sourcefile="EmailableReporter2.java" sourcepath="org/testng/reporters/EmailableReporter2.java">
      <Message>At EmailableReporter2.java:[line 72]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="798fb4c1f6767f9e9bc74e052c7bde2f" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.reporters.EmailableReporter2$ClassResult.getMethodResults() may expose internal representation by returning EmailableReporter2$ClassResult.methodResults</LongMessage>
    <Class classname="org.testng.reporters.EmailableReporter2$ClassResult" primary="true">
      <SourceLine classname="org.testng.reporters.EmailableReporter2$ClassResult" start="842" end="853" sourcefile="EmailableReporter2.java" sourcepath="org/testng/reporters/EmailableReporter2.java">
        <Message>At EmailableReporter2.java:[lines 842-853]</Message>
      </SourceLine>
      <Message>In class org.testng.reporters.EmailableReporter2$ClassResult</Message>
    </Class>
    <Method classname="org.testng.reporters.EmailableReporter2$ClassResult" name="getMethodResults" signature="()Ljava/util/List;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.reporters.EmailableReporter2$ClassResult" start="853" end="853" startBytecode="0" endBytecode="46" sourcefile="EmailableReporter2.java" sourcepath="org/testng/reporters/EmailableReporter2.java"/>
      <Message>In method org.testng.reporters.EmailableReporter2$ClassResult.getMethodResults()</Message>
    </Method>
    <Field classname="org.testng.reporters.EmailableReporter2$ClassResult" name="methodResults" signature="Ljava/util/List;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.reporters.EmailableReporter2$ClassResult" sourcefile="EmailableReporter2.java" sourcepath="org/testng/reporters/EmailableReporter2.java">
        <Message>In EmailableReporter2.java</Message>
      </SourceLine>
      <Message>Field org.testng.reporters.EmailableReporter2$ClassResult.methodResults</Message>
    </Field>
    <SourceLine classname="org.testng.reporters.EmailableReporter2$ClassResult" primary="true" start="853" end="853" startBytecode="4" endBytecode="4" sourcefile="EmailableReporter2.java" sourcepath="org/testng/reporters/EmailableReporter2.java">
      <Message>At EmailableReporter2.java:[line 853]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="c7f6106d947f8e3b9418aaaca051fb0c" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>new org.testng.reporters.EmailableReporter2$ClassResult(String, List) may expose internal representation by storing an externally mutable object into EmailableReporter2$ClassResult.methodResults</LongMessage>
    <Class classname="org.testng.reporters.EmailableReporter2$ClassResult" primary="true">
      <SourceLine classname="org.testng.reporters.EmailableReporter2$ClassResult" start="842" end="853" sourcefile="EmailableReporter2.java" sourcepath="org/testng/reporters/EmailableReporter2.java">
        <Message>At EmailableReporter2.java:[lines 842-853]</Message>
      </SourceLine>
      <Message>In class org.testng.reporters.EmailableReporter2$ClassResult</Message>
    </Class>
    <Method classname="org.testng.reporters.EmailableReporter2$ClassResult" name="&lt;init&gt;" signature="(Ljava/lang/String;Ljava/util/List;)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.reporters.EmailableReporter2$ClassResult" start="842" end="845" startBytecode="0" endBytecode="106" sourcefile="EmailableReporter2.java" sourcepath="org/testng/reporters/EmailableReporter2.java"/>
      <Message>In method new org.testng.reporters.EmailableReporter2$ClassResult(String, List)</Message>
    </Method>
    <Field classname="org.testng.reporters.EmailableReporter2$ClassResult" name="methodResults" signature="Ljava/util/List;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.reporters.EmailableReporter2$ClassResult" sourcefile="EmailableReporter2.java" sourcepath="org/testng/reporters/EmailableReporter2.java">
        <Message>In EmailableReporter2.java</Message>
      </SourceLine>
      <Message>Field org.testng.reporters.EmailableReporter2$ClassResult.methodResults</Message>
    </Field>
    <LocalVariable name="methodResults" register="2" pc="11" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named methodResults</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.reporters.EmailableReporter2$ClassResult" primary="true" start="844" end="844" startBytecode="11" endBytecode="11" sourcefile="EmailableReporter2.java" sourcepath="org/testng/reporters/EmailableReporter2.java">
      <Message>At EmailableReporter2.java:[line 844]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="8d734a566fc9bdb6086cf30f722e0ccc" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.reporters.EmailableReporter2$MethodResult.getResults() may expose internal representation by returning EmailableReporter2$MethodResult.results</LongMessage>
    <Class classname="org.testng.reporters.EmailableReporter2$MethodResult" primary="true">
      <SourceLine classname="org.testng.reporters.EmailableReporter2$MethodResult" start="862" end="868" sourcefile="EmailableReporter2.java" sourcepath="org/testng/reporters/EmailableReporter2.java">
        <Message>At EmailableReporter2.java:[lines 862-868]</Message>
      </SourceLine>
      <Message>In class org.testng.reporters.EmailableReporter2$MethodResult</Message>
    </Class>
    <Method classname="org.testng.reporters.EmailableReporter2$MethodResult" name="getResults" signature="()Ljava/util/List;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.reporters.EmailableReporter2$MethodResult" start="868" end="868" startBytecode="0" endBytecode="46" sourcefile="EmailableReporter2.java" sourcepath="org/testng/reporters/EmailableReporter2.java"/>
      <Message>In method org.testng.reporters.EmailableReporter2$MethodResult.getResults()</Message>
    </Method>
    <Field classname="org.testng.reporters.EmailableReporter2$MethodResult" name="results" signature="Ljava/util/List;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.reporters.EmailableReporter2$MethodResult" sourcefile="EmailableReporter2.java" sourcepath="org/testng/reporters/EmailableReporter2.java">
        <Message>In EmailableReporter2.java</Message>
      </SourceLine>
      <Message>Field org.testng.reporters.EmailableReporter2$MethodResult.results</Message>
    </Field>
    <SourceLine classname="org.testng.reporters.EmailableReporter2$MethodResult" primary="true" start="868" end="868" startBytecode="4" endBytecode="4" sourcefile="EmailableReporter2.java" sourcepath="org/testng/reporters/EmailableReporter2.java">
      <Message>At EmailableReporter2.java:[line 868]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="cd0f827623f55bf454c9dc13de443689" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>new org.testng.reporters.EmailableReporter2$MethodResult(List) may expose internal representation by storing an externally mutable object into EmailableReporter2$MethodResult.results</LongMessage>
    <Class classname="org.testng.reporters.EmailableReporter2$MethodResult" primary="true">
      <SourceLine classname="org.testng.reporters.EmailableReporter2$MethodResult" start="862" end="868" sourcefile="EmailableReporter2.java" sourcepath="org/testng/reporters/EmailableReporter2.java">
        <Message>At EmailableReporter2.java:[lines 862-868]</Message>
      </SourceLine>
      <Message>In class org.testng.reporters.EmailableReporter2$MethodResult</Message>
    </Class>
    <Method classname="org.testng.reporters.EmailableReporter2$MethodResult" name="&lt;init&gt;" signature="(Ljava/util/List;)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.reporters.EmailableReporter2$MethodResult" start="862" end="864" startBytecode="0" endBytecode="87" sourcefile="EmailableReporter2.java" sourcepath="org/testng/reporters/EmailableReporter2.java"/>
      <Message>In method new org.testng.reporters.EmailableReporter2$MethodResult(List)</Message>
    </Method>
    <Field classname="org.testng.reporters.EmailableReporter2$MethodResult" name="results" signature="Ljava/util/List;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.reporters.EmailableReporter2$MethodResult" sourcefile="EmailableReporter2.java" sourcepath="org/testng/reporters/EmailableReporter2.java">
        <Message>In EmailableReporter2.java</Message>
      </SourceLine>
      <Message>Field org.testng.reporters.EmailableReporter2$MethodResult.results</Message>
    </Field>
    <LocalVariable name="results" register="1" pc="6" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named results</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.reporters.EmailableReporter2$MethodResult" primary="true" start="863" end="863" startBytecode="6" endBytecode="6" sourcefile="EmailableReporter2.java" sourcepath="org/testng/reporters/EmailableReporter2.java">
      <Message>At EmailableReporter2.java:[line 863]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="9d6508b8bc4b3a2920edebc5b32e84b4" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.reporters.EmailableReporter2$SuiteResult.getTestResults() may expose internal representation by returning EmailableReporter2$SuiteResult.testResults</LongMessage>
    <Class classname="org.testng.reporters.EmailableReporter2$SuiteResult" primary="true">
      <SourceLine classname="org.testng.reporters.EmailableReporter2$SuiteResult" start="607" end="630" sourcefile="EmailableReporter2.java" sourcepath="org/testng/reporters/EmailableReporter2.java">
        <Message>At EmailableReporter2.java:[lines 607-630]</Message>
      </SourceLine>
      <Message>In class org.testng.reporters.EmailableReporter2$SuiteResult</Message>
    </Class>
    <Method classname="org.testng.reporters.EmailableReporter2$SuiteResult" name="getTestResults" signature="()Ljava/util/List;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.reporters.EmailableReporter2$SuiteResult" start="626" end="626" startBytecode="0" endBytecode="46" sourcefile="EmailableReporter2.java" sourcepath="org/testng/reporters/EmailableReporter2.java"/>
      <Message>In method org.testng.reporters.EmailableReporter2$SuiteResult.getTestResults()</Message>
    </Method>
    <Field classname="org.testng.reporters.EmailableReporter2$SuiteResult" name="testResults" signature="Ljava/util/List;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.reporters.EmailableReporter2$SuiteResult" sourcefile="EmailableReporter2.java" sourcepath="org/testng/reporters/EmailableReporter2.java">
        <Message>In EmailableReporter2.java</Message>
      </SourceLine>
      <Message>Field org.testng.reporters.EmailableReporter2$SuiteResult.testResults</Message>
    </Field>
    <SourceLine classname="org.testng.reporters.EmailableReporter2$SuiteResult" primary="true" start="626" end="626" startBytecode="4" endBytecode="4" sourcefile="EmailableReporter2.java" sourcepath="org/testng/reporters/EmailableReporter2.java">
      <Message>At EmailableReporter2.java:[line 626]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="953434dd739507882b8ad3b8226f2374" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.reporters.EmailableReporter2$TestResult.getFailedConfigurationResults() may expose internal representation by returning EmailableReporter2$TestResult.failedConfigurationResults</LongMessage>
    <Class classname="org.testng.reporters.EmailableReporter2$TestResult" primary="true">
      <SourceLine classname="org.testng.reporters.EmailableReporter2$TestResult" start="635" end="829" sourcefile="EmailableReporter2.java" sourcepath="org/testng/reporters/EmailableReporter2.java">
        <Message>At EmailableReporter2.java:[lines 635-829]</Message>
      </SourceLine>
      <Message>In class org.testng.reporters.EmailableReporter2$TestResult</Message>
    </Class>
    <Method classname="org.testng.reporters.EmailableReporter2$TestResult" name="getFailedConfigurationResults" signature="()Ljava/util/List;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.reporters.EmailableReporter2$TestResult" start="758" end="758" startBytecode="0" endBytecode="46" sourcefile="EmailableReporter2.java" sourcepath="org/testng/reporters/EmailableReporter2.java"/>
      <Message>In method org.testng.reporters.EmailableReporter2$TestResult.getFailedConfigurationResults()</Message>
    </Method>
    <Field classname="org.testng.reporters.EmailableReporter2$TestResult" name="failedConfigurationResults" signature="Ljava/util/List;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.reporters.EmailableReporter2$TestResult" sourcefile="EmailableReporter2.java" sourcepath="org/testng/reporters/EmailableReporter2.java">
        <Message>In EmailableReporter2.java</Message>
      </SourceLine>
      <Message>Field org.testng.reporters.EmailableReporter2$TestResult.failedConfigurationResults</Message>
    </Field>
    <SourceLine classname="org.testng.reporters.EmailableReporter2$TestResult" primary="true" start="758" end="758" startBytecode="4" endBytecode="4" sourcefile="EmailableReporter2.java" sourcepath="org/testng/reporters/EmailableReporter2.java">
      <Message>At EmailableReporter2.java:[line 758]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="d77a12ab55746081d294bf01faac0664" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.reporters.EmailableReporter2$TestResult.getFailedTestResults() may expose internal representation by returning EmailableReporter2$TestResult.failedTestResults</LongMessage>
    <Class classname="org.testng.reporters.EmailableReporter2$TestResult" primary="true">
      <SourceLine classname="org.testng.reporters.EmailableReporter2$TestResult" start="635" end="829" sourcefile="EmailableReporter2.java" sourcepath="org/testng/reporters/EmailableReporter2.java">
        <Message>At EmailableReporter2.java:[lines 635-829]</Message>
      </SourceLine>
      <Message>In class org.testng.reporters.EmailableReporter2$TestResult</Message>
    </Class>
    <Method classname="org.testng.reporters.EmailableReporter2$TestResult" name="getFailedTestResults" signature="()Ljava/util/List;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.reporters.EmailableReporter2$TestResult" start="763" end="763" startBytecode="0" endBytecode="46" sourcefile="EmailableReporter2.java" sourcepath="org/testng/reporters/EmailableReporter2.java"/>
      <Message>In method org.testng.reporters.EmailableReporter2$TestResult.getFailedTestResults()</Message>
    </Method>
    <Field classname="org.testng.reporters.EmailableReporter2$TestResult" name="failedTestResults" signature="Ljava/util/List;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.reporters.EmailableReporter2$TestResult" sourcefile="EmailableReporter2.java" sourcepath="org/testng/reporters/EmailableReporter2.java">
        <Message>In EmailableReporter2.java</Message>
      </SourceLine>
      <Message>Field org.testng.reporters.EmailableReporter2$TestResult.failedTestResults</Message>
    </Field>
    <SourceLine classname="org.testng.reporters.EmailableReporter2$TestResult" primary="true" start="763" end="763" startBytecode="4" endBytecode="4" sourcefile="EmailableReporter2.java" sourcepath="org/testng/reporters/EmailableReporter2.java">
      <Message>At EmailableReporter2.java:[line 763]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="387b28bf931d58e9d3c8845b650eee0c" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.reporters.EmailableReporter2$TestResult.getPassedTestResults() may expose internal representation by returning EmailableReporter2$TestResult.passedTestResults</LongMessage>
    <Class classname="org.testng.reporters.EmailableReporter2$TestResult" primary="true">
      <SourceLine classname="org.testng.reporters.EmailableReporter2$TestResult" start="635" end="829" sourcefile="EmailableReporter2.java" sourcepath="org/testng/reporters/EmailableReporter2.java">
        <Message>At EmailableReporter2.java:[lines 635-829]</Message>
      </SourceLine>
      <Message>In class org.testng.reporters.EmailableReporter2$TestResult</Message>
    </Class>
    <Method classname="org.testng.reporters.EmailableReporter2$TestResult" name="getPassedTestResults" signature="()Ljava/util/List;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.reporters.EmailableReporter2$TestResult" start="782" end="782" startBytecode="0" endBytecode="46" sourcefile="EmailableReporter2.java" sourcepath="org/testng/reporters/EmailableReporter2.java"/>
      <Message>In method org.testng.reporters.EmailableReporter2$TestResult.getPassedTestResults()</Message>
    </Method>
    <Field classname="org.testng.reporters.EmailableReporter2$TestResult" name="passedTestResults" signature="Ljava/util/List;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.reporters.EmailableReporter2$TestResult" sourcefile="EmailableReporter2.java" sourcepath="org/testng/reporters/EmailableReporter2.java">
        <Message>In EmailableReporter2.java</Message>
      </SourceLine>
      <Message>Field org.testng.reporters.EmailableReporter2$TestResult.passedTestResults</Message>
    </Field>
    <SourceLine classname="org.testng.reporters.EmailableReporter2$TestResult" primary="true" start="782" end="782" startBytecode="4" endBytecode="4" sourcefile="EmailableReporter2.java" sourcepath="org/testng/reporters/EmailableReporter2.java">
      <Message>At EmailableReporter2.java:[line 782]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="889debc37681f13f88d49c0aee67d182" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.reporters.EmailableReporter2$TestResult.getRetriedTestResults() may expose internal representation by returning EmailableReporter2$TestResult.retriedTestResults</LongMessage>
    <Class classname="org.testng.reporters.EmailableReporter2$TestResult" primary="true">
      <SourceLine classname="org.testng.reporters.EmailableReporter2$TestResult" start="635" end="829" sourcefile="EmailableReporter2.java" sourcepath="org/testng/reporters/EmailableReporter2.java">
        <Message>At EmailableReporter2.java:[lines 635-829]</Message>
      </SourceLine>
      <Message>In class org.testng.reporters.EmailableReporter2$TestResult</Message>
    </Class>
    <Method classname="org.testng.reporters.EmailableReporter2$TestResult" name="getRetriedTestResults" signature="()Ljava/util/List;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.reporters.EmailableReporter2$TestResult" start="777" end="777" startBytecode="0" endBytecode="46" sourcefile="EmailableReporter2.java" sourcepath="org/testng/reporters/EmailableReporter2.java"/>
      <Message>In method org.testng.reporters.EmailableReporter2$TestResult.getRetriedTestResults()</Message>
    </Method>
    <Field classname="org.testng.reporters.EmailableReporter2$TestResult" name="retriedTestResults" signature="Ljava/util/List;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.reporters.EmailableReporter2$TestResult" sourcefile="EmailableReporter2.java" sourcepath="org/testng/reporters/EmailableReporter2.java">
        <Message>In EmailableReporter2.java</Message>
      </SourceLine>
      <Message>Field org.testng.reporters.EmailableReporter2$TestResult.retriedTestResults</Message>
    </Field>
    <SourceLine classname="org.testng.reporters.EmailableReporter2$TestResult" primary="true" start="777" end="777" startBytecode="4" endBytecode="4" sourcefile="EmailableReporter2.java" sourcepath="org/testng/reporters/EmailableReporter2.java">
      <Message>At EmailableReporter2.java:[line 777]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="489b4d73e2783c82fbdc6bf9495ff812" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.reporters.EmailableReporter2$TestResult.getSkippedConfigurationResults() may expose internal representation by returning EmailableReporter2$TestResult.skippedConfigurationResults</LongMessage>
    <Class classname="org.testng.reporters.EmailableReporter2$TestResult" primary="true">
      <SourceLine classname="org.testng.reporters.EmailableReporter2$TestResult" start="635" end="829" sourcefile="EmailableReporter2.java" sourcepath="org/testng/reporters/EmailableReporter2.java">
        <Message>At EmailableReporter2.java:[lines 635-829]</Message>
      </SourceLine>
      <Message>In class org.testng.reporters.EmailableReporter2$TestResult</Message>
    </Class>
    <Method classname="org.testng.reporters.EmailableReporter2$TestResult" name="getSkippedConfigurationResults" signature="()Ljava/util/List;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.reporters.EmailableReporter2$TestResult" start="768" end="768" startBytecode="0" endBytecode="46" sourcefile="EmailableReporter2.java" sourcepath="org/testng/reporters/EmailableReporter2.java"/>
      <Message>In method org.testng.reporters.EmailableReporter2$TestResult.getSkippedConfigurationResults()</Message>
    </Method>
    <Field classname="org.testng.reporters.EmailableReporter2$TestResult" name="skippedConfigurationResults" signature="Ljava/util/List;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.reporters.EmailableReporter2$TestResult" sourcefile="EmailableReporter2.java" sourcepath="org/testng/reporters/EmailableReporter2.java">
        <Message>In EmailableReporter2.java</Message>
      </SourceLine>
      <Message>Field org.testng.reporters.EmailableReporter2$TestResult.skippedConfigurationResults</Message>
    </Field>
    <SourceLine classname="org.testng.reporters.EmailableReporter2$TestResult" primary="true" start="768" end="768" startBytecode="4" endBytecode="4" sourcefile="EmailableReporter2.java" sourcepath="org/testng/reporters/EmailableReporter2.java">
      <Message>At EmailableReporter2.java:[line 768]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="671fe5ddfc7698bc67a8582149f29852" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.reporters.EmailableReporter2$TestResult.getSkippedTestResults() may expose internal representation by returning EmailableReporter2$TestResult.skippedTestResults</LongMessage>
    <Class classname="org.testng.reporters.EmailableReporter2$TestResult" primary="true">
      <SourceLine classname="org.testng.reporters.EmailableReporter2$TestResult" start="635" end="829" sourcefile="EmailableReporter2.java" sourcepath="org/testng/reporters/EmailableReporter2.java">
        <Message>At EmailableReporter2.java:[lines 635-829]</Message>
      </SourceLine>
      <Message>In class org.testng.reporters.EmailableReporter2$TestResult</Message>
    </Class>
    <Method classname="org.testng.reporters.EmailableReporter2$TestResult" name="getSkippedTestResults" signature="()Ljava/util/List;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.reporters.EmailableReporter2$TestResult" start="773" end="773" startBytecode="0" endBytecode="46" sourcefile="EmailableReporter2.java" sourcepath="org/testng/reporters/EmailableReporter2.java"/>
      <Message>In method org.testng.reporters.EmailableReporter2$TestResult.getSkippedTestResults()</Message>
    </Method>
    <Field classname="org.testng.reporters.EmailableReporter2$TestResult" name="skippedTestResults" signature="Ljava/util/List;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.reporters.EmailableReporter2$TestResult" sourcefile="EmailableReporter2.java" sourcepath="org/testng/reporters/EmailableReporter2.java">
        <Message>In EmailableReporter2.java</Message>
      </SourceLine>
      <Message>Field org.testng.reporters.EmailableReporter2$TestResult.skippedTestResults</Message>
    </Field>
    <SourceLine classname="org.testng.reporters.EmailableReporter2$TestResult" primary="true" start="773" end="773" startBytecode="4" endBytecode="4" sourcefile="EmailableReporter2.java" sourcepath="org/testng/reporters/EmailableReporter2.java">
      <Message>At EmailableReporter2.java:[line 773]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="dc0b37ecbe80a0db98bbffe456676eff" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>new org.testng.reporters.ExitCodeListener(TestNG) may expose internal representation by storing an externally mutable object into ExitCodeListener.m_mainRunner</LongMessage>
    <Class classname="org.testng.reporters.ExitCodeListener" primary="true">
      <SourceLine classname="org.testng.reporters.ExitCodeListener" start="13" end="68" sourcefile="ExitCodeListener.java" sourcepath="org/testng/reporters/ExitCodeListener.java">
        <Message>At ExitCodeListener.java:[lines 13-68]</Message>
      </SourceLine>
      <Message>In class org.testng.reporters.ExitCodeListener</Message>
    </Class>
    <Method classname="org.testng.reporters.ExitCodeListener" name="&lt;init&gt;" signature="(Lorg/testng/TestNG;)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.reporters.ExitCodeListener" start="16" end="18" startBytecode="0" endBytecode="69" sourcefile="ExitCodeListener.java" sourcepath="org/testng/reporters/ExitCodeListener.java"/>
      <Message>In method new org.testng.reporters.ExitCodeListener(TestNG)</Message>
    </Method>
    <Field classname="org.testng.reporters.ExitCodeListener" name="m_mainRunner" signature="Lorg/testng/TestNG;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.reporters.ExitCodeListener" sourcefile="ExitCodeListener.java" sourcepath="org/testng/reporters/ExitCodeListener.java">
        <Message>In ExitCodeListener.java</Message>
      </SourceLine>
      <Message>Field org.testng.reporters.ExitCodeListener.m_mainRunner</Message>
    </Field>
    <LocalVariable name="runner" register="1" pc="6" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named runner</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.reporters.ExitCodeListener" primary="true" start="17" end="17" startBytecode="6" endBytecode="6" sourcefile="ExitCodeListener.java" sourcepath="org/testng/reporters/ExitCodeListener.java">
      <Message>At ExitCodeListener.java:[line 17]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="URF_UNREAD_FIELD" priority="2" rank="18" abbrev="UrF" category="PERFORMANCE" instanceHash="e3ad4469ef149ce603159bc82bbac725" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Unread field</ShortMessage>
    <LongMessage>Unread field: org.testng.reporters.ExitCodeListener.m_mainRunner</LongMessage>
    <Class classname="org.testng.reporters.ExitCodeListener" primary="true">
      <SourceLine classname="org.testng.reporters.ExitCodeListener" start="13" end="68" sourcefile="ExitCodeListener.java" sourcepath="org/testng/reporters/ExitCodeListener.java">
        <Message>At ExitCodeListener.java:[lines 13-68]</Message>
      </SourceLine>
      <Message>In class org.testng.reporters.ExitCodeListener</Message>
    </Class>
    <Field classname="org.testng.reporters.ExitCodeListener" name="m_mainRunner" signature="Lorg/testng/TestNG;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.reporters.ExitCodeListener" sourcefile="ExitCodeListener.java" sourcepath="org/testng/reporters/ExitCodeListener.java">
        <Message>In ExitCodeListener.java</Message>
      </SourceLine>
      <Message>Field org.testng.reporters.ExitCodeListener.m_mainRunner</Message>
    </Field>
    <SourceLine classname="org.testng.reporters.ExitCodeListener" primary="true" start="17" end="17" startBytecode="6" endBytecode="6" sourcefile="ExitCodeListener.java" sourcepath="org/testng/reporters/ExitCodeListener.java">
      <Message>At ExitCodeListener.java:[line 17]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="19f987812f2a9bcf57697ad91fe7f64d" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>new org.testng.reporters.FailedReporter(XmlSuite) may expose internal representation by storing an externally mutable object into FailedReporter.m_xmlSuite</LongMessage>
    <Class classname="org.testng.reporters.FailedReporter" primary="true">
      <SourceLine classname="org.testng.reporters.FailedReporter" start="39" end="227" sourcefile="FailedReporter.java" sourcepath="org/testng/reporters/FailedReporter.java">
        <Message>At FailedReporter.java:[lines 39-227]</Message>
      </SourceLine>
      <Message>In class org.testng.reporters.FailedReporter</Message>
    </Class>
    <Method classname="org.testng.reporters.FailedReporter" name="&lt;init&gt;" signature="(Lorg/testng/xml/XmlSuite;)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.reporters.FailedReporter" start="41" end="43" startBytecode="0" endBytecode="69" sourcefile="FailedReporter.java" sourcepath="org/testng/reporters/FailedReporter.java"/>
      <Message>In method new org.testng.reporters.FailedReporter(XmlSuite)</Message>
    </Method>
    <Field classname="org.testng.reporters.FailedReporter" name="m_xmlSuite" signature="Lorg/testng/xml/XmlSuite;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.reporters.FailedReporter" sourcefile="FailedReporter.java" sourcepath="org/testng/reporters/FailedReporter.java">
        <Message>In FailedReporter.java</Message>
      </SourceLine>
      <Message>Field org.testng.reporters.FailedReporter.m_xmlSuite</Message>
    </Field>
    <LocalVariable name="xmlSuite" register="1" pc="6" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named xmlSuite</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.reporters.FailedReporter" primary="true" start="42" end="42" startBytecode="6" endBytecode="6" sourcefile="FailedReporter.java" sourcepath="org/testng/reporters/FailedReporter.java">
      <Message>At FailedReporter.java:[line 42]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DM_DEFAULT_ENCODING" priority="1" rank="19" abbrev="Dm" category="I18N" instanceHash="9d37dcfcad39e6e06b8ec35dd8ca90ae" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Reliance on default encoding</ShortMessage>
    <LongMessage>Found reliance on default encoding in org.testng.reporters.FileStringBuffer.append(CharSequence): new java.io.FileWriter(File, boolean)</LongMessage>
    <Class classname="org.testng.reporters.FileStringBuffer" primary="true">
      <SourceLine classname="org.testng.reporters.FileStringBuffer" start="26" end="141" sourcefile="FileStringBuffer.java" sourcepath="org/testng/reporters/FileStringBuffer.java">
        <Message>At FileStringBuffer.java:[lines 26-141]</Message>
      </SourceLine>
      <Message>In class org.testng.reporters.FileStringBuffer</Message>
    </Class>
    <Method classname="org.testng.reporters.FileStringBuffer" name="append" signature="(Ljava/lang/CharSequence;)Lorg/testng/reporters/FileStringBuffer;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.reporters.FileStringBuffer" start="45" end="65" startBytecode="0" endBytecode="344" sourcefile="FileStringBuffer.java" sourcepath="org/testng/reporters/FileStringBuffer.java"/>
      <Message>In method org.testng.reporters.FileStringBuffer.append(CharSequence)</Message>
    </Method>
    <Method classname="java.io.FileWriter" name="&lt;init&gt;" signature="(Ljava/io/File;Z)V" isStatic="false" role="METHOD_CALLED">
      <SourceLine classname="java.io.FileWriter" start="113" end="114" startBytecode="0" endBytecode="79" sourcefile="FileWriter.java" sourcepath="java/io/FileWriter.java"/>
      <Message>Called method new java.io.FileWriter(File, boolean)</Message>
    </Method>
    <SourceLine classname="org.testng.reporters.FileStringBuffer" primary="true" start="59" end="59" startBytecode="69" endBytecode="69" sourcefile="FileStringBuffer.java" sourcepath="org/testng/reporters/FileStringBuffer.java">
      <Message>At FileStringBuffer.java:[line 59]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DM_DEFAULT_ENCODING" priority="1" rank="19" abbrev="Dm" category="I18N" instanceHash="cbfc7955dcac27785b833e91cfbc36e0" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Reliance on default encoding</ShortMessage>
    <LongMessage>Found reliance on default encoding in org.testng.reporters.FileStringBuffer.flushToFile(): new java.io.FileWriter(File, boolean)</LongMessage>
    <Class classname="org.testng.reporters.FileStringBuffer" primary="true">
      <SourceLine classname="org.testng.reporters.FileStringBuffer" start="26" end="141" sourcefile="FileStringBuffer.java" sourcepath="org/testng/reporters/FileStringBuffer.java">
        <Message>At FileStringBuffer.java:[lines 26-141]</Message>
      </SourceLine>
      <Message>In class org.testng.reporters.FileStringBuffer</Message>
    </Class>
    <Method classname="org.testng.reporters.FileStringBuffer" name="flushToFile" signature="()V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.reporters.FileStringBuffer" start="101" end="120" startBytecode="0" endBytecode="410" sourcefile="FileStringBuffer.java" sourcepath="org/testng/reporters/FileStringBuffer.java"/>
      <Message>In method org.testng.reporters.FileStringBuffer.flushToFile()</Message>
    </Method>
    <Method classname="java.io.FileWriter" name="&lt;init&gt;" signature="(Ljava/io/File;Z)V" isStatic="false" role="METHOD_CALLED">
      <SourceLine classname="java.io.FileWriter" start="113" end="114" startBytecode="0" endBytecode="79" sourcefile="FileWriter.java" sourcepath="java/io/FileWriter.java"/>
      <Message>Called method new java.io.FileWriter(File, boolean)</Message>
    </Method>
    <SourceLine classname="org.testng.reporters.FileStringBuffer" primary="true" start="114" end="114" startBytecode="125" endBytecode="125" sourcefile="FileStringBuffer.java" sourcepath="org/testng/reporters/FileStringBuffer.java">
      <Message>At FileStringBuffer.java:[line 114]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DM_DEFAULT_ENCODING" priority="1" rank="19" abbrev="Dm" category="I18N" instanceHash="cce1923db4a208a9b42be427116e2a1b" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Reliance on default encoding</ShortMessage>
    <LongMessage>Found reliance on default encoding in org.testng.reporters.FileStringBuffer.toWriter(Writer): new java.io.FileReader(File)</LongMessage>
    <Class classname="org.testng.reporters.FileStringBuffer" primary="true">
      <SourceLine classname="org.testng.reporters.FileStringBuffer" start="26" end="141" sourcefile="FileStringBuffer.java" sourcepath="org/testng/reporters/FileStringBuffer.java">
        <Message>At FileStringBuffer.java:[lines 26-141]</Message>
      </SourceLine>
      <Message>In class org.testng.reporters.FileStringBuffer</Message>
    </Class>
    <Method classname="org.testng.reporters.FileStringBuffer" name="toWriter" signature="(Ljava/io/Writer;)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.reporters.FileStringBuffer" start="70" end="89" startBytecode="0" endBytecode="356" sourcefile="FileStringBuffer.java" sourcepath="org/testng/reporters/FileStringBuffer.java"/>
      <Message>In method org.testng.reporters.FileStringBuffer.toWriter(Writer)</Message>
    </Method>
    <Method classname="java.io.FileReader" name="&lt;init&gt;" signature="(Ljava/io/File;)V" isStatic="false" role="METHOD_CALLED">
      <SourceLine classname="java.io.FileReader" start="75" end="76" startBytecode="0" endBytecode="68" sourcefile="FileReader.java" sourcepath="java/io/FileReader.java"/>
      <Message>Called method new java.io.FileReader(File)</Message>
    </Method>
    <SourceLine classname="org.testng.reporters.FileStringBuffer" primary="true" start="81" end="81" startBytecode="60" endBytecode="60" sourcefile="FileStringBuffer.java" sourcepath="org/testng/reporters/FileStringBuffer.java">
      <Message>At FileStringBuffer.java:[line 81]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DM_DEFAULT_ENCODING" priority="1" rank="19" abbrev="Dm" category="I18N" instanceHash="872f96a3a2adf37d986074a7c35eed3a" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Reliance on default encoding</ShortMessage>
    <LongMessage>Found reliance on default encoding in org.testng.reporters.Files.readFile(InputStream): new java.io.InputStreamReader(InputStream)</LongMessage>
    <Class classname="org.testng.reporters.Files" primary="true">
      <SourceLine classname="org.testng.reporters.Files" start="18" end="73" sourcefile="Files.java" sourcepath="org/testng/reporters/Files.java">
        <Message>At Files.java:[lines 18-73]</Message>
      </SourceLine>
      <Message>In class org.testng.reporters.Files</Message>
    </Class>
    <Method classname="org.testng.reporters.Files" name="readFile" signature="(Ljava/io/InputStream;)Ljava/lang/String;" isStatic="true" primary="true">
      <SourceLine classname="org.testng.reporters.Files" start="27" end="34" startBytecode="0" endBytecode="173" sourcefile="Files.java" sourcepath="org/testng/reporters/Files.java"/>
      <Message>In method org.testng.reporters.Files.readFile(InputStream)</Message>
    </Method>
    <Method classname="java.io.InputStreamReader" name="&lt;init&gt;" signature="(Ljava/io/InputStream;)V" isStatic="false" role="METHOD_CALLED">
      <SourceLine classname="java.io.InputStreamReader" start="76" end="79" startBytecode="0" endBytecode="85" sourcefile="InputStreamReader.java" sourcepath="java/io/InputStreamReader.java"/>
      <Message>Called method new java.io.InputStreamReader(InputStream)</Message>
    </Method>
    <SourceLine classname="org.testng.reporters.Files" primary="true" start="28" end="28" startBytecode="17" endBytecode="17" sourcefile="Files.java" sourcepath="org/testng/reporters/Files.java">
      <Message>At Files.java:[line 28]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DM_DEFAULT_ENCODING" priority="1" rank="19" abbrev="Dm" category="I18N" instanceHash="e7da9b442a72c1b5ca563f7e43309001" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Reliance on default encoding</ShortMessage>
    <LongMessage>Found reliance on default encoding in org.testng.reporters.Files.writeFile(String, File): new java.io.FileWriter(File)</LongMessage>
    <Class classname="org.testng.reporters.Files" primary="true">
      <SourceLine classname="org.testng.reporters.Files" start="18" end="73" sourcefile="Files.java" sourcepath="org/testng/reporters/Files.java">
        <Message>At Files.java:[lines 18-73]</Message>
      </SourceLine>
      <Message>In class org.testng.reporters.Files</Message>
    </Class>
    <Method classname="org.testng.reporters.Files" name="writeFile" signature="(Ljava/lang/String;Ljava/io/File;)V" isStatic="true" primary="true">
      <SourceLine classname="org.testng.reporters.Files" start="38" end="43" startBytecode="0" endBytecode="309" sourcefile="Files.java" sourcepath="org/testng/reporters/Files.java"/>
      <Message>In method org.testng.reporters.Files.writeFile(String, File)</Message>
    </Method>
    <Method classname="java.io.FileWriter" name="&lt;init&gt;" signature="(Ljava/io/File;)V" isStatic="false" role="METHOD_CALLED">
      <SourceLine classname="java.io.FileWriter" start="96" end="97" startBytecode="0" endBytecode="68" sourcefile="FileWriter.java" sourcepath="java/io/FileWriter.java"/>
      <Message>Called method new java.io.FileWriter(File)</Message>
    </Method>
    <SourceLine classname="org.testng.reporters.Files" primary="true" start="39" end="39" startBytecode="13" endBytecode="13" sourcefile="Files.java" sourcepath="org/testng/reporters/Files.java">
      <Message>At Files.java:[line 39]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="RV_RETURN_VALUE_IGNORED_BAD_PRACTICE" priority="2" rank="16" abbrev="RV" category="BAD_PRACTICE" instanceHash="dba37251bc4984bf3c38a0cf192f1000" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="253">
    <ShortMessage>Method ignores exceptional return value</ShortMessage>
    <LongMessage>Exceptional return value of java.io.File.mkdirs() ignored in org.testng.reporters.Files.copyFile(InputStream, File)</LongMessage>
    <Class classname="org.testng.reporters.Files" primary="true">
      <SourceLine classname="org.testng.reporters.Files" start="18" end="73" sourcefile="Files.java" sourcepath="org/testng/reporters/Files.java">
        <Message>At Files.java:[lines 18-73]</Message>
      </SourceLine>
      <Message>In class org.testng.reporters.Files</Message>
    </Class>
    <Method classname="org.testng.reporters.Files" name="copyFile" signature="(Ljava/io/InputStream;Ljava/io/File;)V" isStatic="true" primary="true">
      <SourceLine classname="org.testng.reporters.Files" start="46" end="58" startBytecode="0" endBytecode="277" sourcefile="Files.java" sourcepath="org/testng/reporters/Files.java"/>
      <Message>In method org.testng.reporters.Files.copyFile(InputStream, File)</Message>
    </Method>
    <Method classname="java.io.File" name="mkdirs" signature="()Z" isStatic="false" role="METHOD_CALLED">
      <SourceLine classname="java.io.File" start="1403" end="1417" startBytecode="0" endBytecode="230" sourcefile="File.java" sourcepath="java/io/File.java"/>
      <Message>Called method java.io.File.mkdirs()</Message>
    </Method>
    <SourceLine classname="org.testng.reporters.Files" primary="true" start="47" end="47" startBytecode="14" endBytecode="14" sourcefile="Files.java" sourcepath="org/testng/reporters/Files.java">
      <Message>At Files.java:[line 47]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="RV_RETURN_VALUE_IGNORED_BAD_PRACTICE" priority="2" rank="16" abbrev="RV" category="BAD_PRACTICE" instanceHash="4f65a0e3544772c9f6a13656d4896c53" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="253">
    <ShortMessage>Method ignores exceptional return value</ShortMessage>
    <LongMessage>Exceptional return value of java.io.File.mkdirs() ignored in org.testng.reporters.Files.writeFile(String, File)</LongMessage>
    <Class classname="org.testng.reporters.Files" primary="true">
      <SourceLine classname="org.testng.reporters.Files" start="18" end="73" sourcefile="Files.java" sourcepath="org/testng/reporters/Files.java">
        <Message>At Files.java:[lines 18-73]</Message>
      </SourceLine>
      <Message>In class org.testng.reporters.Files</Message>
    </Class>
    <Method classname="org.testng.reporters.Files" name="writeFile" signature="(Ljava/lang/String;Ljava/io/File;)V" isStatic="true" primary="true">
      <SourceLine classname="org.testng.reporters.Files" start="38" end="43" startBytecode="0" endBytecode="309" sourcefile="Files.java" sourcepath="org/testng/reporters/Files.java"/>
      <Message>In method org.testng.reporters.Files.writeFile(String, File)</Message>
    </Method>
    <Method classname="java.io.File" name="mkdirs" signature="()Z" isStatic="false" role="METHOD_CALLED">
      <SourceLine classname="java.io.File" start="1403" end="1417" startBytecode="0" endBytecode="230" sourcefile="File.java" sourcepath="java/io/File.java"/>
      <Message>Called method java.io.File.mkdirs()</Message>
    </Method>
    <SourceLine classname="org.testng.reporters.Files" primary="true" start="38" end="38" startBytecode="4" endBytecode="4" sourcefile="Files.java" sourcepath="org/testng/reporters/Files.java">
      <Message>At Files.java:[line 38]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="BC_UNCONFIRMED_CAST_OF_RETURN_VALUE" priority="3" rank="20" abbrev="BC" category="STYLE" instanceHash="4a27c7c3de18337369fa09844478453e" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Unchecked/unconfirmed cast of return value from method</ShortMessage>
    <LongMessage>Unchecked/unconfirmed cast from java.util.Collection to java.util.Set of return value in org.testng.reporters.JUnitReportReporter.generateReport(List, List, String)</LongMessage>
    <Class classname="org.testng.reporters.JUnitReportReporter" primary="true">
      <SourceLine classname="org.testng.reporters.JUnitReportReporter" start="34" end="298" sourcefile="JUnitReportReporter.java" sourcepath="org/testng/reporters/JUnitReportReporter.java">
        <Message>At JUnitReportReporter.java:[lines 34-298]</Message>
      </SourceLine>
      <Message>In class org.testng.reporters.JUnitReportReporter</Message>
    </Class>
    <Method classname="org.testng.reporters.JUnitReportReporter" name="generateReport" signature="(Ljava/util/List;Ljava/util/List;Ljava/lang/String;)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.reporters.JUnitReportReporter" start="40" end="155" startBytecode="0" endBytecode="438" sourcefile="JUnitReportReporter.java" sourcepath="org/testng/reporters/JUnitReportReporter.java"/>
      <Message>In method org.testng.reporters.JUnitReportReporter.generateReport(List, List, String)</Message>
    </Method>
    <Type descriptor="Ljava/util/Collection;" role="TYPE_FOUND">
      <SourceLine classname="java.util.Collection" start="413" end="764" sourcefile="Collection.java" sourcepath="java/util/Collection.java">
        <Message>At Collection.java:[lines 413-764]</Message>
      </SourceLine>
      <Message>Actual type java.util.Collection</Message>
    </Type>
    <Type descriptor="Ljava/util/Set;" role="TYPE_EXPECTED">
      <SourceLine classname="java.util.Set" start="441" end="732" sourcefile="Set.java" sourcepath="java/util/Set.java">
        <Message>At Set.java:[lines 441-732]</Message>
      </SourceLine>
      <Message>Expected java.util.Set</Message>
    </Type>
    <SourceLine classname="org.testng.reporters.JUnitReportReporter" primary="true" start="108" end="108" startBytecode="644" endBytecode="644" sourcefile="JUnitReportReporter.java" sourcepath="org/testng/reporters/JUnitReportReporter.java">
      <Message>At JUnitReportReporter.java:[line 108]</Message>
    </SourceLine>
    <SourceLine classname="org.testng.reporters.JUnitReportReporter" start="110" end="110" startBytecode="667" endBytecode="667" sourcefile="JUnitReportReporter.java" sourcepath="org/testng/reporters/JUnitReportReporter.java" role="SOURCE_LINE_ANOTHER_INSTANCE">
      <Message>Another occurrence at JUnitReportReporter.java:[line 110]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="BC_UNCONFIRMED_CAST_OF_RETURN_VALUE" priority="3" rank="20" abbrev="BC" category="STYLE" instanceHash="6264a88592f6d9da2eb1f368675e0ad" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Unchecked/unconfirmed cast of return value from method</ShortMessage>
    <LongMessage>Unchecked/unconfirmed cast from java.util.Collection to java.util.List of return value in org.testng.reporters.JUnitReportReporter.getNextConfiguration(ListMultiMap, ITestResult)</LongMessage>
    <Class classname="org.testng.reporters.JUnitReportReporter" primary="true">
      <SourceLine classname="org.testng.reporters.JUnitReportReporter" start="34" end="298" sourcefile="JUnitReportReporter.java" sourcepath="org/testng/reporters/JUnitReportReporter.java">
        <Message>At JUnitReportReporter.java:[lines 34-298]</Message>
      </SourceLine>
      <Message>In class org.testng.reporters.JUnitReportReporter</Message>
    </Class>
    <Method classname="org.testng.reporters.JUnitReportReporter" name="getNextConfiguration" signature="(Lorg/testng/collections/ListMultiMap;Lorg/testng/ITestResult;)J" isStatic="false" primary="true">
      <SourceLine classname="org.testng.reporters.JUnitReportReporter" start="242" end="254" startBytecode="0" endBytecode="46" sourcefile="JUnitReportReporter.java" sourcepath="org/testng/reporters/JUnitReportReporter.java"/>
      <Message>In method org.testng.reporters.JUnitReportReporter.getNextConfiguration(ListMultiMap, ITestResult)</Message>
    </Method>
    <Type descriptor="Ljava/util/Collection;" role="TYPE_FOUND">
      <SourceLine classname="java.util.Collection" start="413" end="764" sourcefile="Collection.java" sourcepath="java/util/Collection.java">
        <Message>At Collection.java:[lines 413-764]</Message>
      </SourceLine>
      <Message>Actual type java.util.Collection</Message>
    </Type>
    <Type descriptor="Ljava/util/List;" role="TYPE_EXPECTED">
      <SourceLine classname="java.util.List" start="441" end="1068" sourcefile="List.java" sourcepath="java/util/List.java">
        <Message>At List.java:[lines 441-1068]</Message>
      </SourceLine>
      <Message>Expected java.util.List</Message>
    </Type>
    <SourceLine classname="org.testng.reporters.JUnitReportReporter" primary="true" start="244" end="244" startBytecode="12" endBytecode="12" sourcefile="JUnitReportReporter.java" sourcepath="org/testng/reporters/JUnitReportReporter.java">
      <Message>At JUnitReportReporter.java:[line 244]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="SF_SWITCH_NO_DEFAULT" priority="2" rank="19" abbrev="SF" category="STYLE" instanceHash="34550604b76d2a81c9c7adee6ba243b7" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Switch statement found where default case is missing</ShortMessage>
    <LongMessage>Switch statement found in org.testng.reporters.JUnitReportReporter.generateReport(List, List, String) where default case is missing</LongMessage>
    <Class classname="org.testng.reporters.JUnitReportReporter" primary="true">
      <SourceLine classname="org.testng.reporters.JUnitReportReporter" start="34" end="298" sourcefile="JUnitReportReporter.java" sourcepath="org/testng/reporters/JUnitReportReporter.java">
        <Message>At JUnitReportReporter.java:[lines 34-298]</Message>
      </SourceLine>
      <Message>In class org.testng.reporters.JUnitReportReporter</Message>
    </Class>
    <Method classname="org.testng.reporters.JUnitReportReporter" name="generateReport" signature="(Ljava/util/List;Ljava/util/List;Ljava/lang/String;)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.reporters.JUnitReportReporter" start="40" end="155" startBytecode="0" endBytecode="2707" sourcefile="JUnitReportReporter.java" sourcepath="org/testng/reporters/JUnitReportReporter.java"/>
      <Message>In method org.testng.reporters.JUnitReportReporter.generateReport(List, List, String)</Message>
    </Method>
    <SourceLine classname="org.testng.reporters.JUnitReportReporter" primary="true" start="87" end="97" startBytecode="510" endBytecode="558" sourcefile="JUnitReportReporter.java" sourcepath="org/testng/reporters/JUnitReportReporter.java">
      <Message>At JUnitReportReporter.java:[lines 87-97]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="RV_RETURN_VALUE_IGNORED_BAD_PRACTICE" priority="2" rank="16" abbrev="RV" category="BAD_PRACTICE" instanceHash="754b23bc7a6852fbdf7d96aeda170fc2" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="253">
    <ShortMessage>Method ignores exceptional return value</ShortMessage>
    <LongMessage>Exceptional return value of java.io.File.mkdirs() ignored in org.testng.reporters.SuiteHTMLReporter.getOutputDirectory(XmlSuite)</LongMessage>
    <Class classname="org.testng.reporters.SuiteHTMLReporter" primary="true">
      <SourceLine classname="org.testng.reporters.SuiteHTMLReporter" start="35" end="764" sourcefile="SuiteHTMLReporter.java" sourcepath="org/testng/reporters/SuiteHTMLReporter.java">
        <Message>At SuiteHTMLReporter.java:[lines 35-764]</Message>
      </SourceLine>
      <Message>In class org.testng.reporters.SuiteHTMLReporter</Message>
    </Class>
    <Method classname="org.testng.reporters.SuiteHTMLReporter" name="getOutputDirectory" signature="(Lorg/testng/xml/XmlSuite;)Ljava/lang/String;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.reporters.SuiteHTMLReporter" start="693" end="702" startBytecode="0" endBytecode="202" sourcefile="SuiteHTMLReporter.java" sourcepath="org/testng/reporters/SuiteHTMLReporter.java"/>
      <Message>In method org.testng.reporters.SuiteHTMLReporter.getOutputDirectory(XmlSuite)</Message>
    </Method>
    <Method classname="java.io.File" name="mkdirs" signature="()Z" isStatic="false" role="METHOD_CALLED">
      <SourceLine classname="java.io.File" start="1403" end="1417" startBytecode="0" endBytecode="230" sourcefile="File.java" sourcepath="java/io/File.java"/>
      <Message>Called method java.io.File.mkdirs()</Message>
    </Method>
    <SourceLine classname="org.testng.reporters.SuiteHTMLReporter" primary="true" start="696" end="696" startBytecode="49" endBytecode="49" sourcefile="SuiteHTMLReporter.java" sourcepath="org/testng/reporters/SuiteHTMLReporter.java">
      <Message>At SuiteHTMLReporter.java:[line 696]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="URF_UNREAD_PUBLIC_OR_PROTECTED_FIELD" priority="3" rank="20" abbrev="UrF" category="STYLE" instanceHash="a2ed87ca5a80e9b291764a0a03c618be" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Unread public/protected field</ShortMessage>
    <LongMessage>Unread public/protected field: org.testng.reporters.Tag.indent</LongMessage>
    <Class classname="org.testng.reporters.Tag" primary="true">
      <SourceLine classname="org.testng.reporters.Tag" start="357" end="365" sourcefile="XMLStringBuffer.java" sourcepath="org/testng/reporters/XMLStringBuffer.java">
        <Message>At XMLStringBuffer.java:[lines 357-365]</Message>
      </SourceLine>
      <Message>In class org.testng.reporters.Tag</Message>
    </Class>
    <Field classname="org.testng.reporters.Tag" name="indent" signature="Ljava/lang/String;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.reporters.Tag" sourcefile="XMLStringBuffer.java" sourcepath="org/testng/reporters/XMLStringBuffer.java">
        <Message>In XMLStringBuffer.java</Message>
      </SourceLine>
      <Message>Field org.testng.reporters.Tag.indent</Message>
    </Field>
    <SourceLine classname="org.testng.reporters.Tag" primary="true" start="359" end="359" startBytecode="11" endBytecode="11" sourcefile="XMLStringBuffer.java" sourcepath="org/testng/reporters/XMLStringBuffer.java">
      <Message>At XMLStringBuffer.java:[line 359]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="fbe24db5774293ba7b351a7592e59c0d" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>org.testng.reporters.TestHTMLReporter.onStart(ITestContext) may expose internal representation by storing an externally mutable object into TestHTMLReporter.m_testContext</LongMessage>
    <Class classname="org.testng.reporters.TestHTMLReporter" primary="true">
      <SourceLine classname="org.testng.reporters.TestHTMLReporter" start="21" end="377" sourcefile="TestHTMLReporter.java" sourcepath="org/testng/reporters/TestHTMLReporter.java">
        <Message>At TestHTMLReporter.java:[lines 21-377]</Message>
      </SourceLine>
      <Message>In class org.testng.reporters.TestHTMLReporter</Message>
    </Class>
    <Method classname="org.testng.reporters.TestHTMLReporter" name="onStart" signature="(Lorg/testng/ITestContext;)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.reporters.TestHTMLReporter" start="33" end="34" startBytecode="0" endBytecode="61" sourcefile="TestHTMLReporter.java" sourcepath="org/testng/reporters/TestHTMLReporter.java"/>
      <Message>In method org.testng.reporters.TestHTMLReporter.onStart(ITestContext)</Message>
    </Method>
    <Field classname="org.testng.reporters.TestHTMLReporter" name="m_testContext" signature="Lorg/testng/ITestContext;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.reporters.TestHTMLReporter" sourcefile="TestHTMLReporter.java" sourcepath="org/testng/reporters/TestHTMLReporter.java">
        <Message>In TestHTMLReporter.java</Message>
      </SourceLine>
      <Message>Field org.testng.reporters.TestHTMLReporter.m_testContext</Message>
    </Field>
    <LocalVariable name="context" register="1" pc="2" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named context</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.reporters.TestHTMLReporter" primary="true" start="33" end="33" startBytecode="2" endBytecode="2" sourcefile="TestHTMLReporter.java" sourcepath="org/testng/reporters/TestHTMLReporter.java">
      <Message>At TestHTMLReporter.java:[line 33]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE" priority="3" rank="20" abbrev="RCN" category="STYLE" instanceHash="d6e74d8e2c587d74a18499524e774e91" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="476">
    <ShortMessage>Redundant nullcheck of value known to be non-null</ShortMessage>
    <LongMessage>Redundant nullcheck of output, which is known to be non-null in org.testng.reporters.TestHTMLReporter.generateTable(PrintWriter, String, Collection, String, Comparator)</LongMessage>
    <Class classname="org.testng.reporters.TestHTMLReporter" primary="true">
      <SourceLine classname="org.testng.reporters.TestHTMLReporter" start="21" end="377" sourcefile="TestHTMLReporter.java" sourcepath="org/testng/reporters/TestHTMLReporter.java">
        <Message>At TestHTMLReporter.java:[lines 21-377]</Message>
      </SourceLine>
      <Message>In class org.testng.reporters.TestHTMLReporter</Message>
    </Class>
    <Method classname="org.testng.reporters.TestHTMLReporter" name="generateTable" signature="(Ljava/io/PrintWriter;Ljava/lang/String;Ljava/util/Collection;Ljava/lang/String;Ljava/util/Comparator;)V" isStatic="true" primary="true">
      <SourceLine classname="org.testng.reporters.TestHTMLReporter" start="63" end="204" startBytecode="0" endBytecode="1674" sourcefile="TestHTMLReporter.java" sourcepath="org/testng/reporters/TestHTMLReporter.java"/>
      <Message>In method org.testng.reporters.TestHTMLReporter.generateTable(PrintWriter, String, Collection, String, Comparator)</Message>
    </Method>
    <LocalVariable name="output" register="13" pc="377" role="LOCAL_VARIABLE_VALUE_OF">
      <Message>Value loaded from output</Message>
    </LocalVariable>
    <Method classname="org.testng.Reporter" name="getOutput" signature="(Lorg/testng/ITestResult;)Ljava/util/List;" isStatic="true" role="METHOD_RETURN_VALUE_OF">
      <SourceLine classname="org.testng.Reporter" start="160" end="173" startBytecode="0" endBytecode="245" sourcefile="Reporter.java" sourcepath="org/testng/Reporter.java"/>
      <Message>Return value of org.testng.Reporter.getOutput(ITestResult) of type java.util.List</Message>
    </Method>
    <SourceLine classname="org.testng.reporters.TestHTMLReporter" primary="true" start="133" end="133" startBytecode="379" endBytecode="379" sourcefile="TestHTMLReporter.java" sourcepath="org/testng/reporters/TestHTMLReporter.java" role="SOURCE_REDUNDANT_NULL_CHECK">
      <Message>Redundant null check at TestHTMLReporter.java:[line 133]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="SE_COMPARATOR_SHOULD_BE_SERIALIZABLE" priority="2" rank="19" abbrev="Se" category="BAD_PRACTICE" instanceHash="3c6717faa43a748b60f434de412d1515" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Comparator doesn&apos;t implement Serializable</ShortMessage>
    <LongMessage>org.testng.reporters.TestHTMLReporter$ConfigurationComparator implements Comparator but not Serializable</LongMessage>
    <Class classname="org.testng.reporters.TestHTMLReporter$ConfigurationComparator" primary="true">
      <SourceLine classname="org.testng.reporters.TestHTMLReporter$ConfigurationComparator" start="389" end="430" sourcefile="TestHTMLReporter.java" sourcepath="org/testng/reporters/TestHTMLReporter.java">
        <Message>At TestHTMLReporter.java:[lines 389-430]</Message>
      </SourceLine>
      <Message>In class org.testng.reporters.TestHTMLReporter$ConfigurationComparator</Message>
    </Class>
    <SourceLine classname="org.testng.reporters.TestHTMLReporter$ConfigurationComparator" start="389" end="430" sourcefile="TestHTMLReporter.java" sourcepath="org/testng/reporters/TestHTMLReporter.java" synthetic="true">
      <Message>At TestHTMLReporter.java:[lines 389-430]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="SE_COMPARATOR_SHOULD_BE_SERIALIZABLE" priority="2" rank="19" abbrev="Se" category="BAD_PRACTICE" instanceHash="7097cc496f74a54843017ce1ccd97316" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Comparator doesn&apos;t implement Serializable</ShortMessage>
    <LongMessage>org.testng.reporters.TestHTMLReporter$NameComparator implements Comparator but not Serializable</LongMessage>
    <Class classname="org.testng.reporters.TestHTMLReporter$NameComparator" primary="true">
      <SourceLine classname="org.testng.reporters.TestHTMLReporter$NameComparator" start="379" end="385" sourcefile="TestHTMLReporter.java" sourcepath="org/testng/reporters/TestHTMLReporter.java">
        <Message>At TestHTMLReporter.java:[lines 379-385]</Message>
      </SourceLine>
      <Message>In class org.testng.reporters.TestHTMLReporter$NameComparator</Message>
    </Class>
    <SourceLine classname="org.testng.reporters.TestHTMLReporter$NameComparator" start="379" end="385" sourcefile="TestHTMLReporter.java" sourcepath="org/testng/reporters/TestHTMLReporter.java" synthetic="true">
      <Message>At TestHTMLReporter.java:[lines 379-385]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="4fb1f0a3105a8e0229ee78caeae462f7" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.reporters.XMLReporter.getConfig() may expose internal representation by returning XMLReporter.config</LongMessage>
    <Class classname="org.testng.reporters.XMLReporter" primary="true">
      <SourceLine classname="org.testng.reporters.XMLReporter" start="24" end="230" sourcefile="XMLReporter.java" sourcepath="org/testng/reporters/XMLReporter.java">
        <Message>At XMLReporter.java:[lines 24-230]</Message>
      </SourceLine>
      <Message>In class org.testng.reporters.XMLReporter</Message>
    </Class>
    <Method classname="org.testng.reporters.XMLReporter" name="getConfig" signature="()Lorg/testng/reporters/XMLReporterConfig;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.reporters.XMLReporter" start="230" end="230" startBytecode="0" endBytecode="46" sourcefile="XMLReporter.java" sourcepath="org/testng/reporters/XMLReporter.java"/>
      <Message>In method org.testng.reporters.XMLReporter.getConfig()</Message>
    </Method>
    <Field classname="org.testng.reporters.XMLReporter" name="config" signature="Lorg/testng/reporters/XMLReporterConfig;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.reporters.XMLReporter" sourcefile="XMLReporter.java" sourcepath="org/testng/reporters/XMLReporter.java">
        <Message>In XMLReporter.java</Message>
      </SourceLine>
      <Message>Field org.testng.reporters.XMLReporter.config</Message>
    </Field>
    <SourceLine classname="org.testng.reporters.XMLReporter" primary="true" start="230" end="230" startBytecode="4" endBytecode="4" sourcefile="XMLReporter.java" sourcepath="org/testng/reporters/XMLReporter.java">
      <Message>At XMLReporter.java:[line 230]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="RV_RETURN_VALUE_IGNORED_BAD_PRACTICE" priority="2" rank="16" abbrev="RV" category="BAD_PRACTICE" instanceHash="efec241ff7297d6f129588cd9d400843" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="253">
    <ShortMessage>Method ignores exceptional return value</ShortMessage>
    <LongMessage>Exceptional return value of java.io.File.mkdirs() ignored in org.testng.reporters.XMLReporter.writeSuiteToFile(File, ISuite)</LongMessage>
    <Class classname="org.testng.reporters.XMLReporter" primary="true">
      <SourceLine classname="org.testng.reporters.XMLReporter" start="24" end="230" sourcefile="XMLReporter.java" sourcepath="org/testng/reporters/XMLReporter.java">
        <Message>At XMLReporter.java:[lines 24-230]</Message>
      </SourceLine>
      <Message>In class org.testng.reporters.XMLReporter</Message>
    </Class>
    <Method classname="org.testng.reporters.XMLReporter" name="writeSuiteToFile" signature="(Ljava/io/File;Lorg/testng/ISuite;)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.reporters.XMLReporter" start="121" end="128" startBytecode="0" endBytecode="186" sourcefile="XMLReporter.java" sourcepath="org/testng/reporters/XMLReporter.java"/>
      <Message>In method org.testng.reporters.XMLReporter.writeSuiteToFile(File, ISuite)</Message>
    </Method>
    <Method classname="java.io.File" name="mkdirs" signature="()Z" isStatic="false" role="METHOD_CALLED">
      <SourceLine classname="java.io.File" start="1403" end="1417" startBytecode="0" endBytecode="230" sourcefile="File.java" sourcepath="java/io/File.java"/>
      <Message>Called method java.io.File.mkdirs()</Message>
    </Method>
    <SourceLine classname="org.testng.reporters.XMLReporter" primary="true" start="124" end="124" startBytecode="24" endBytecode="24" sourcefile="XMLReporter.java" sourcepath="org/testng/reporters/XMLReporter.java">
      <Message>At XMLReporter.java:[line 124]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="NM_CONFUSING" priority="3" rank="19" abbrev="Nm" category="BAD_PRACTICE" instanceHash="848a9957b727fe7795c5595c3528ec85" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Confusing method names</ShortMessage>
    <LongMessage>Confusing to have methods org.testng.reporters.XMLStringBuffer.toXML() and org.testng.xml.XmlSuite.toXml()</LongMessage>
    <Class classname="org.testng.reporters.XMLStringBuffer" primary="true">
      <SourceLine classname="org.testng.reporters.XMLStringBuffer" start="17" end="347" sourcefile="XMLStringBuffer.java" sourcepath="org/testng/reporters/XMLStringBuffer.java">
        <Message>At XMLStringBuffer.java:[lines 17-347]</Message>
      </SourceLine>
      <Message>In class org.testng.reporters.XMLStringBuffer</Message>
    </Class>
    <Method classname="org.testng.reporters.XMLStringBuffer" name="toXML" signature="()Ljava/lang/String;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.reporters.XMLStringBuffer" start="338" end="338" startBytecode="0" endBytecode="60" sourcefile="XMLStringBuffer.java" sourcepath="org/testng/reporters/XMLStringBuffer.java"/>
      <Message>In method org.testng.reporters.XMLStringBuffer.toXML()</Message>
    </Method>
    <Class classname="org.testng.xml.XmlSuite">
      <SourceLine classname="org.testng.xml.XmlSuite" start="19" end="981" sourcefile="XmlSuite.java" sourcepath="org/testng/xml/XmlSuite.java">
        <Message>At XmlSuite.java:[lines 19-981]</Message>
      </SourceLine>
      <Message>In class org.testng.xml.XmlSuite</Message>
    </Class>
    <Method classname="org.testng.xml.XmlSuite" name="toXml" signature="()Ljava/lang/String;" isStatic="false">
      <SourceLine classname="org.testng.xml.XmlSuite" start="532" end="532" startBytecode="0" endBytecode="46" sourcefile="XmlSuite.java" sourcepath="org/testng/xml/XmlSuite.java"/>
      <Message>In method org.testng.xml.XmlSuite.toXml()</Message>
    </Method>
    <SourceLine classname="org.testng.reporters.XMLStringBuffer" start="338" end="338" startBytecode="0" endBytecode="60" sourcefile="XMLStringBuffer.java" sourcepath="org/testng/reporters/XMLStringBuffer.java" synthetic="true">
      <Message>At XMLStringBuffer.java:[line 338]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="fd9a9b88e50deac1f9b44c7858eb77ab" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>new org.testng.reporters.XMLSuiteResultWriter(XMLReporterConfig, ICustomizeXmlReport) may expose internal representation by storing an externally mutable object into XMLSuiteResultWriter.config</LongMessage>
    <Class classname="org.testng.reporters.XMLSuiteResultWriter" primary="true">
      <SourceLine classname="org.testng.reporters.XMLSuiteResultWriter" start="38" end="359" sourcefile="XMLSuiteResultWriter.java" sourcepath="org/testng/reporters/XMLSuiteResultWriter.java">
        <Message>At XMLSuiteResultWriter.java:[lines 38-359]</Message>
      </SourceLine>
      <Message>In class org.testng.reporters.XMLSuiteResultWriter</Message>
    </Class>
    <Method classname="org.testng.reporters.XMLSuiteResultWriter" name="&lt;init&gt;" signature="(Lorg/testng/reporters/XMLReporterConfig;Lorg/testng/reporters/ICustomizeXmlReport;)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.reporters.XMLSuiteResultWriter" start="38" end="41" startBytecode="0" endBytecode="88" sourcefile="XMLSuiteResultWriter.java" sourcepath="org/testng/reporters/XMLSuiteResultWriter.java"/>
      <Message>In method new org.testng.reporters.XMLSuiteResultWriter(XMLReporterConfig, ICustomizeXmlReport)</Message>
    </Method>
    <Field classname="org.testng.reporters.XMLSuiteResultWriter" name="config" signature="Lorg/testng/reporters/XMLReporterConfig;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.reporters.XMLSuiteResultWriter" sourcefile="XMLSuiteResultWriter.java" sourcepath="org/testng/reporters/XMLSuiteResultWriter.java">
        <Message>In XMLSuiteResultWriter.java</Message>
      </SourceLine>
      <Message>Field org.testng.reporters.XMLSuiteResultWriter.config</Message>
    </Field>
    <LocalVariable name="config" register="1" pc="6" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named config</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.reporters.XMLSuiteResultWriter" primary="true" start="39" end="39" startBytecode="6" endBytecode="6" sourcefile="XMLSuiteResultWriter.java" sourcepath="org/testng/reporters/XMLSuiteResultWriter.java">
      <Message>At XMLSuiteResultWriter.java:[line 39]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="820b0dfc9ccaf080bd6d25c9b83f1f00" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>new org.testng.reporters.XMLSuiteResultWriter(XMLReporterConfig, ICustomizeXmlReport) may expose internal representation by storing an externally mutable object into XMLSuiteResultWriter.customizer</LongMessage>
    <Class classname="org.testng.reporters.XMLSuiteResultWriter" primary="true">
      <SourceLine classname="org.testng.reporters.XMLSuiteResultWriter" start="38" end="359" sourcefile="XMLSuiteResultWriter.java" sourcepath="org/testng/reporters/XMLSuiteResultWriter.java">
        <Message>At XMLSuiteResultWriter.java:[lines 38-359]</Message>
      </SourceLine>
      <Message>In class org.testng.reporters.XMLSuiteResultWriter</Message>
    </Class>
    <Method classname="org.testng.reporters.XMLSuiteResultWriter" name="&lt;init&gt;" signature="(Lorg/testng/reporters/XMLReporterConfig;Lorg/testng/reporters/ICustomizeXmlReport;)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.reporters.XMLSuiteResultWriter" start="38" end="41" startBytecode="0" endBytecode="88" sourcefile="XMLSuiteResultWriter.java" sourcepath="org/testng/reporters/XMLSuiteResultWriter.java"/>
      <Message>In method new org.testng.reporters.XMLSuiteResultWriter(XMLReporterConfig, ICustomizeXmlReport)</Message>
    </Method>
    <Field classname="org.testng.reporters.XMLSuiteResultWriter" name="customizer" signature="Lorg/testng/reporters/ICustomizeXmlReport;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.reporters.XMLSuiteResultWriter" sourcefile="XMLSuiteResultWriter.java" sourcepath="org/testng/reporters/XMLSuiteResultWriter.java">
        <Message>In XMLSuiteResultWriter.java</Message>
      </SourceLine>
      <Message>Field org.testng.reporters.XMLSuiteResultWriter.customizer</Message>
    </Field>
    <LocalVariable name="customizer" register="2" pc="11" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named customizer</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.reporters.XMLSuiteResultWriter" primary="true" start="40" end="40" startBytecode="11" endBytecode="11" sourcefile="XMLSuiteResultWriter.java" sourcepath="org/testng/reporters/XMLSuiteResultWriter.java">
      <Message>At XMLSuiteResultWriter.java:[line 40]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="UC_USELESS_OBJECT_STACK" priority="2" rank="17" abbrev="UC" category="STYLE" instanceHash="e919e1dd13230d2abd87832695f11061" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Useless object created on stack</ShortMessage>
    <LongMessage>Useless object created in method org.testng.reporters.XMLSuiteResultWriter.addAllTestResults(Set, IResultMap)</LongMessage>
    <Class classname="org.testng.reporters.XMLSuiteResultWriter" primary="true">
      <SourceLine classname="org.testng.reporters.XMLSuiteResultWriter" start="38" end="359" sourcefile="XMLSuiteResultWriter.java" sourcepath="org/testng/reporters/XMLSuiteResultWriter.java">
        <Message>At XMLSuiteResultWriter.java:[lines 38-359]</Message>
      </SourceLine>
      <Message>In class org.testng.reporters.XMLSuiteResultWriter</Message>
    </Class>
    <Method classname="org.testng.reporters.XMLSuiteResultWriter" name="addAllTestResults" signature="(Ljava/util/Set;Lorg/testng/IResultMap;)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.reporters.XMLSuiteResultWriter" start="85" end="96" startBytecode="0" endBytecode="171" sourcefile="XMLSuiteResultWriter.java" sourcepath="org/testng/reporters/XMLSuiteResultWriter.java"/>
      <Message>In method org.testng.reporters.XMLSuiteResultWriter.addAllTestResults(Set, IResultMap)</Message>
    </Method>
    <Type descriptor="Ljava/util/ArrayList;">
      <SourceLine classname="java.util.ArrayList" start="123" end="1730" sourcefile="ArrayList.java" sourcepath="java/util/ArrayList.java">
        <Message>At ArrayList.java:[lines 123-1730]</Message>
      </SourceLine>
      <Message>Type java.util.ArrayList</Message>
    </Type>
    <SourceLine classname="org.testng.reporters.XMLSuiteResultWriter" primary="true" start="89" end="89" startBytecode="23" endBytecode="23" sourcefile="XMLSuiteResultWriter.java" sourcepath="org/testng/reporters/XMLSuiteResultWriter.java">
      <Message>At XMLSuiteResultWriter.java:[line 89]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="SIC_INNER_SHOULD_BE_STATIC_ANON" priority="3" rank="20" abbrev="SIC" category="PERFORMANCE" instanceHash="f56e30476b1dfdbb28c167a6d58bcfa1" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Could be refactored into a named static inner class</ShortMessage>
    <LongMessage>The class org.testng.reporters.jq.ChronologicalPanel$1 could be refactored into a named _static_ inner class</LongMessage>
    <Class classname="org.testng.reporters.jq.ChronologicalPanel$1" role="CLASS_ANONYMOUS">
      <SourceLine classname="org.testng.reporters.jq.ChronologicalPanel$1" start="36" end="40" sourcefile="ChronologicalPanel.java" sourcepath="org/testng/reporters/jq/ChronologicalPanel.java">
        <Message>At ChronologicalPanel.java:[lines 36-40]</Message>
      </SourceLine>
      <Message>Anonymous class org.testng.reporters.jq.ChronologicalPanel$1</Message>
    </Class>
    <Class classname="org.testng.reporters.jq.ChronologicalPanel" primary="true">
      <SourceLine classname="org.testng.reporters.jq.ChronologicalPanel" start="16" end="100" sourcefile="ChronologicalPanel.java" sourcepath="org/testng/reporters/jq/ChronologicalPanel.java">
        <Message>At ChronologicalPanel.java:[lines 16-100]</Message>
      </SourceLine>
      <Message>In class org.testng.reporters.jq.ChronologicalPanel</Message>
    </Class>
    <Method classname="org.testng.reporters.jq.ChronologicalPanel" name="getContent" signature="(Lorg/testng/ISuite;Lorg/testng/reporters/XMLStringBuffer;)Ljava/lang/String;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.reporters.jq.ChronologicalPanel" start="31" end="95" startBytecode="0" endBytecode="931" sourcefile="ChronologicalPanel.java" sourcepath="org/testng/reporters/jq/ChronologicalPanel.java"/>
      <Message>In method org.testng.reporters.jq.ChronologicalPanel.getContent(ISuite, XMLStringBuffer)</Message>
    </Method>
    <SourceLine classname="org.testng.reporters.jq.ChronologicalPanel" primary="true" start="34" end="34" startBytecode="27" endBytecode="27" sourcefile="ChronologicalPanel.java" sourcepath="org/testng/reporters/jq/ChronologicalPanel.java">
      <Message>At ChronologicalPanel.java:[line 34]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="BC_UNCONFIRMED_CAST_OF_RETURN_VALUE" priority="3" rank="20" abbrev="BC" category="STYLE" instanceHash="88d8151c75f60b0646d12785cf1051e4" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Unchecked/unconfirmed cast of return value from method</ShortMessage>
    <LongMessage>Unchecked/unconfirmed cast from java.util.Collection to java.util.Set of return value in org.testng.reporters.jq.IgnoredMethodsPanel.getContent(ISuite, XMLStringBuffer)</LongMessage>
    <Class classname="org.testng.reporters.jq.IgnoredMethodsPanel" primary="true">
      <SourceLine classname="org.testng.reporters.jq.IgnoredMethodsPanel" start="12" end="50" sourcefile="IgnoredMethodsPanel.java" sourcepath="org/testng/reporters/jq/IgnoredMethodsPanel.java">
        <Message>At IgnoredMethodsPanel.java:[lines 12-50]</Message>
      </SourceLine>
      <Message>In class org.testng.reporters.jq.IgnoredMethodsPanel</Message>
    </Class>
    <Method classname="org.testng.reporters.jq.IgnoredMethodsPanel" name="getContent" signature="(Lorg/testng/ISuite;Lorg/testng/reporters/XMLStringBuffer;)Ljava/lang/String;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.reporters.jq.IgnoredMethodsPanel" start="27" end="45" startBytecode="0" endBytecode="120" sourcefile="IgnoredMethodsPanel.java" sourcepath="org/testng/reporters/jq/IgnoredMethodsPanel.java"/>
      <Message>In method org.testng.reporters.jq.IgnoredMethodsPanel.getContent(ISuite, XMLStringBuffer)</Message>
    </Method>
    <Type descriptor="Ljava/util/Collection;" role="TYPE_FOUND">
      <SourceLine classname="java.util.Collection" start="413" end="764" sourcefile="Collection.java" sourcepath="java/util/Collection.java">
        <Message>At Collection.java:[lines 413-764]</Message>
      </SourceLine>
      <Message>Actual type java.util.Collection</Message>
    </Type>
    <Type descriptor="Ljava/util/Set;" role="TYPE_EXPECTED">
      <SourceLine classname="java.util.Set" start="441" end="732" sourcefile="Set.java" sourcepath="java/util/Set.java">
        <Message>At Set.java:[lines 441-732]</Message>
      </SourceLine>
      <Message>Expected java.util.Set</Message>
    </Type>
    <SourceLine classname="org.testng.reporters.jq.IgnoredMethodsPanel" primary="true" start="38" end="38" startBytecode="181" endBytecode="181" sourcefile="IgnoredMethodsPanel.java" sourcepath="org/testng/reporters/jq/IgnoredMethodsPanel.java">
      <Message>At IgnoredMethodsPanel.java:[line 38]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="UI_INHERITANCE_UNSAFE_GETRESOURCE" priority="3" rank="19" abbrev="UI" category="BAD_PRACTICE" instanceHash="57253172725e45a4d1fea11d6eaa93ad" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Usage of GetResource may be unsafe if class is extended</ShortMessage>
    <LongMessage>Usage of GetResource in org.testng.reporters.jq.Main.generateReport(List, List, String) may be unsafe if class is extended</LongMessage>
    <Class classname="org.testng.reporters.jq.Main" primary="true">
      <SourceLine classname="org.testng.reporters.jq.Main" start="20" end="107" sourcefile="Main.java" sourcepath="org/testng/reporters/jq/Main.java">
        <Message>At Main.java:[lines 20-107]</Message>
      </SourceLine>
      <Message>In class org.testng.reporters.jq.Main</Message>
    </Class>
    <Method classname="org.testng.reporters.jq.Main" name="generateReport" signature="(Ljava/util/List;Ljava/util/List;Ljava/lang/String;)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.reporters.jq.Main" start="44" end="107" startBytecode="0" endBytecode="1155" sourcefile="Main.java" sourcepath="org/testng/reporters/jq/Main.java"/>
      <Message>In method org.testng.reporters.jq.Main.generateReport(List, List, String)</Message>
    </Method>
    <SourceLine classname="org.testng.reporters.jq.Main" primary="true" start="89" end="89" startBytecode="313" endBytecode="313" sourcefile="Main.java" sourcepath="org/testng/reporters/jq/Main.java">
      <Message>At Main.java:[line 89]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="BC_UNCONFIRMED_CAST_OF_RETURN_VALUE" priority="3" rank="20" abbrev="BC" category="STYLE" instanceHash="552077378dbf572c4ca9d1346f4fffbf" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Unchecked/unconfirmed cast of return value from method</ShortMessage>
    <LongMessage>Unchecked/unconfirmed cast from java.util.Collection to java.util.List of return value in org.testng.reporters.jq.Model.getTestResults(ISuite)</LongMessage>
    <Class classname="org.testng.reporters.jq.Model" primary="true">
      <SourceLine classname="org.testng.reporters.jq.Model" start="20" end="207" sourcefile="Model.java" sourcepath="org/testng/reporters/jq/Model.java">
        <Message>At Model.java:[lines 20-207]</Message>
      </SourceLine>
      <Message>In class org.testng.reporters.jq.Model</Message>
    </Class>
    <Method classname="org.testng.reporters.jq.Model" name="getTestResults" signature="(Lorg/testng/ISuite;)Ljava/util/List;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.reporters.jq.Model" start="133" end="133" startBytecode="0" endBytecode="5" sourcefile="Model.java" sourcepath="org/testng/reporters/jq/Model.java"/>
      <Message>In method org.testng.reporters.jq.Model.getTestResults(ISuite)</Message>
    </Method>
    <Type descriptor="Ljava/util/Collection;" role="TYPE_FOUND">
      <SourceLine classname="java.util.Collection" start="413" end="764" sourcefile="Collection.java" sourcepath="java/util/Collection.java">
        <Message>At Collection.java:[lines 413-764]</Message>
      </SourceLine>
      <Message>Actual type java.util.Collection</Message>
    </Type>
    <Type descriptor="Ljava/util/List;" role="TYPE_EXPECTED">
      <SourceLine classname="java.util.List" start="441" end="1068" sourcefile="List.java" sourcepath="java/util/List.java">
        <Message>At List.java:[lines 441-1068]</Message>
      </SourceLine>
      <Message>Expected java.util.List</Message>
    </Type>
    <SourceLine classname="org.testng.reporters.jq.Model" primary="true" start="133" end="133" startBytecode="8" endBytecode="8" sourcefile="Model.java" sourcepath="org/testng/reporters/jq/Model.java">
      <Message>At Model.java:[line 133]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="de469bceb770cb4956b52e2e41452244" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.reporters.jq.Model.getAllFailedResults() may expose internal representation by returning Model.m_allFailedResults</LongMessage>
    <Class classname="org.testng.reporters.jq.Model" primary="true">
      <SourceLine classname="org.testng.reporters.jq.Model" start="20" end="207" sourcefile="Model.java" sourcepath="org/testng/reporters/jq/Model.java">
        <Message>At Model.java:[lines 20-207]</Message>
      </SourceLine>
      <Message>In class org.testng.reporters.jq.Model</Message>
    </Class>
    <Method classname="org.testng.reporters.jq.Model" name="getAllFailedResults" signature="()Ljava/util/List;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.reporters.jq.Model" start="167" end="167" startBytecode="0" endBytecode="46" sourcefile="Model.java" sourcepath="org/testng/reporters/jq/Model.java"/>
      <Message>In method org.testng.reporters.jq.Model.getAllFailedResults()</Message>
    </Method>
    <Field classname="org.testng.reporters.jq.Model" name="m_allFailedResults" signature="Ljava/util/List;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.reporters.jq.Model" sourcefile="Model.java" sourcepath="org/testng/reporters/jq/Model.java">
        <Message>In Model.java</Message>
      </SourceLine>
      <Message>Field org.testng.reporters.jq.Model.m_allFailedResults</Message>
    </Field>
    <SourceLine classname="org.testng.reporters.jq.Model" primary="true" start="167" end="167" startBytecode="4" endBytecode="4" sourcefile="Model.java" sourcepath="org/testng/reporters/jq/Model.java">
      <Message>At Model.java:[line 167]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="8de6f0d042e008d8451cc41b4978eda9" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.reporters.jq.Model.getSuites() may expose internal representation by returning Model.m_suites</LongMessage>
    <Class classname="org.testng.reporters.jq.Model" primary="true">
      <SourceLine classname="org.testng.reporters.jq.Model" start="20" end="207" sourcefile="Model.java" sourcepath="org/testng/reporters/jq/Model.java">
        <Message>At Model.java:[lines 20-207]</Message>
      </SourceLine>
      <Message>In class org.testng.reporters.jq.Model</Message>
    </Class>
    <Method classname="org.testng.reporters.jq.Model" name="getSuites" signature="()Ljava/util/List;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.reporters.jq.Model" start="39" end="39" startBytecode="0" endBytecode="46" sourcefile="Model.java" sourcepath="org/testng/reporters/jq/Model.java"/>
      <Message>In method org.testng.reporters.jq.Model.getSuites()</Message>
    </Method>
    <Field classname="org.testng.reporters.jq.Model" name="m_suites" signature="Ljava/util/List;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.reporters.jq.Model" sourcefile="Model.java" sourcepath="org/testng/reporters/jq/Model.java">
        <Message>In Model.java</Message>
      </SourceLine>
      <Message>Field org.testng.reporters.jq.Model.m_suites</Message>
    </Field>
    <SourceLine classname="org.testng.reporters.jq.Model" primary="true" start="39" end="39" startBytecode="4" endBytecode="4" sourcefile="Model.java" sourcepath="org/testng/reporters/jq/Model.java">
      <Message>At Model.java:[line 39]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="785418738ea36357dc9ee704fd088eb" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>new org.testng.reporters.jq.Model(List) may expose internal representation by storing an externally mutable object into Model.m_suites</LongMessage>
    <Class classname="org.testng.reporters.jq.Model" primary="true">
      <SourceLine classname="org.testng.reporters.jq.Model" start="20" end="207" sourcefile="Model.java" sourcepath="org/testng/reporters/jq/Model.java">
        <Message>At Model.java:[lines 20-207]</Message>
      </SourceLine>
      <Message>In class org.testng.reporters.jq.Model</Message>
    </Class>
    <Method classname="org.testng.reporters.jq.Model" name="&lt;init&gt;" signature="(Ljava/util/List;)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.reporters.jq.Model" start="33" end="36" startBytecode="0" endBytecode="214" sourcefile="Model.java" sourcepath="org/testng/reporters/jq/Model.java"/>
      <Message>In method new org.testng.reporters.jq.Model(List)</Message>
    </Method>
    <Field classname="org.testng.reporters.jq.Model" name="m_suites" signature="Ljava/util/List;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.reporters.jq.Model" sourcefile="Model.java" sourcepath="org/testng/reporters/jq/Model.java">
        <Message>In Model.java</Message>
      </SourceLine>
      <Message>Field org.testng.reporters.jq.Model.m_suites</Message>
    </Field>
    <LocalVariable name="suites" register="1" pc="81" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named suites</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.reporters.jq.Model" primary="true" start="34" end="34" startBytecode="81" endBytecode="81" sourcefile="Model.java" sourcepath="org/testng/reporters/jq/Model.java">
      <Message>At Model.java:[line 34]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="7d1433f69e1ca1375b53e44f4aa7d40b" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>new org.testng.reporters.jq.NavigatorPanel(Model, List) may expose internal representation by storing an externally mutable object into NavigatorPanel.m_panels</LongMessage>
    <Class classname="org.testng.reporters.jq.NavigatorPanel" primary="true">
      <SourceLine classname="org.testng.reporters.jq.NavigatorPanel" start="14" end="290" sourcefile="NavigatorPanel.java" sourcepath="org/testng/reporters/jq/NavigatorPanel.java">
        <Message>At NavigatorPanel.java:[lines 14-290]</Message>
      </SourceLine>
      <Message>In class org.testng.reporters.jq.NavigatorPanel</Message>
    </Class>
    <Method classname="org.testng.reporters.jq.NavigatorPanel" name="&lt;init&gt;" signature="(Lorg/testng/reporters/jq/Model;Ljava/util/List;)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.reporters.jq.NavigatorPanel" start="19" end="21" startBytecode="0" endBytecode="98" sourcefile="NavigatorPanel.java" sourcepath="org/testng/reporters/jq/NavigatorPanel.java"/>
      <Message>In method new org.testng.reporters.jq.NavigatorPanel(Model, List)</Message>
    </Method>
    <Field classname="org.testng.reporters.jq.NavigatorPanel" name="m_panels" signature="Ljava/util/List;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.reporters.jq.NavigatorPanel" sourcefile="NavigatorPanel.java" sourcepath="org/testng/reporters/jq/NavigatorPanel.java">
        <Message>In NavigatorPanel.java</Message>
      </SourceLine>
      <Message>Field org.testng.reporters.jq.NavigatorPanel.m_panels</Message>
    </Field>
    <LocalVariable name="panels" register="2" pc="7" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named panels</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.reporters.jq.NavigatorPanel" primary="true" start="20" end="20" startBytecode="7" endBytecode="7" sourcefile="NavigatorPanel.java" sourcepath="org/testng/reporters/jq/NavigatorPanel.java">
      <Message>At NavigatorPanel.java:[line 20]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="BC_UNCONFIRMED_CAST_OF_RETURN_VALUE" priority="3" rank="20" abbrev="BC" category="STYLE" instanceHash="efa9a8ebfdd78b8b621b210a2294e629" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Unchecked/unconfirmed cast of return value from method</ShortMessage>
    <LongMessage>Unchecked/unconfirmed cast from java.util.Collection to java.util.List of return value in org.testng.reporters.jq.ResultsByClass.getResults(Class)</LongMessage>
    <Class classname="org.testng.reporters.jq.ResultsByClass" primary="true">
      <SourceLine classname="org.testng.reporters.jq.ResultsByClass" start="12" end="35" sourcefile="ResultsByClass.java" sourcepath="org/testng/reporters/jq/ResultsByClass.java">
        <Message>At ResultsByClass.java:[lines 12-35]</Message>
      </SourceLine>
      <Message>In class org.testng.reporters.jq.ResultsByClass</Message>
    </Class>
    <Method classname="org.testng.reporters.jq.ResultsByClass" name="getResults" signature="(Ljava/lang/Class;)Ljava/util/List;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.reporters.jq.ResultsByClass" start="29" end="31" startBytecode="0" endBytecode="10" sourcefile="ResultsByClass.java" sourcepath="org/testng/reporters/jq/ResultsByClass.java"/>
      <Message>In method org.testng.reporters.jq.ResultsByClass.getResults(Class)</Message>
    </Method>
    <Type descriptor="Ljava/util/Collection;" role="TYPE_FOUND">
      <SourceLine classname="java.util.Collection" start="413" end="764" sourcefile="Collection.java" sourcepath="java/util/Collection.java">
        <Message>At Collection.java:[lines 413-764]</Message>
      </SourceLine>
      <Message>Actual type java.util.Collection</Message>
    </Type>
    <Type descriptor="Ljava/util/List;" role="TYPE_EXPECTED">
      <SourceLine classname="java.util.List" start="441" end="1068" sourcefile="List.java" sourcepath="java/util/List.java">
        <Message>At List.java:[lines 441-1068]</Message>
      </SourceLine>
      <Message>Expected java.util.List</Message>
    </Type>
    <SourceLine classname="org.testng.reporters.jq.ResultsByClass" primary="true" start="29" end="29" startBytecode="8" endBytecode="8" sourcefile="ResultsByClass.java" sourcepath="org/testng/reporters/jq/ResultsByClass.java">
      <Message>At ResultsByClass.java:[line 29]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="OBL_UNSATISFIED_OBLIGATION" priority="2" rank="20" abbrev="OBL" category="EXPERIMENTAL" instanceHash="8d17e43a720a5da4c0d04aafefb9496d" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Method may fail to clean up stream or resource</ShortMessage>
    <LongMessage>org.testng.xml.Parser.parse() may fail to clean up java.io.InputStream</LongMessage>
    <Class classname="org.testng.xml.Parser" primary="true">
      <SourceLine classname="org.testng.xml.Parser" start="36" end="282" sourcefile="Parser.java" sourcepath="org/testng/xml/Parser.java">
        <Message>At Parser.java:[lines 36-282]</Message>
      </SourceLine>
      <Message>In class org.testng.xml.Parser</Message>
    </Class>
    <Method classname="org.testng.xml.Parser" name="parse" signature="()Ljava/util/Collection;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.xml.Parser" start="125" end="221" startBytecode="0" endBytecode="1358" sourcefile="Parser.java" sourcepath="org/testng/xml/Parser.java"/>
      <Message>In method org.testng.xml.Parser.parse()</Message>
    </Method>
    <Class classname="java.io.InputStream" role="CLASS_REFTYPE">
      <SourceLine classname="java.io.InputStream" start="61" end="786" sourcefile="InputStream.java" sourcepath="java/io/InputStream.java">
        <Message>At InputStream.java:[lines 61-786]</Message>
      </SourceLine>
      <Message>Reference type java.io.InputStream</Message>
    </Class>
    <Int value="1" role="INT_OBLIGATIONS_REMAINING">
      <Message>1 instances of obligation remaining</Message>
    </Int>
    <SourceLine classname="org.testng.xml.Parser" primary="true" start="158" end="158" startBytecode="212" endBytecode="212" sourcefile="Parser.java" sourcepath="org/testng/xml/Parser.java" role="SOURCE_LINE_OBLIGATION_CREATED">
      <Message>Obligation to clean up resource created at Parser.java:[line 158] is not discharged</Message>
    </SourceLine>
    <SourceLine classname="org.testng.xml.Parser" start="161" end="161" startBytecode="217" endBytecode="217" sourcefile="Parser.java" sourcepath="org/testng/xml/Parser.java" role="SOURCE_LINE_PATH_CONTINUES">
      <Message>Path continues at Parser.java:[line 161]</Message>
    </SourceLine>
    <SourceLine classname="org.testng.xml.Parser" start="162" end="162" startBytecode="224" endBytecode="224" sourcefile="Parser.java" sourcepath="org/testng/xml/Parser.java" role="SOURCE_LINE_PATH_CONTINUES">
      <Message>Path continues at Parser.java:[line 162]</Message>
    </SourceLine>
    <SourceLine classname="org.testng.xml.Parser" start="163" end="163" startBytecode="244" endBytecode="244" sourcefile="Parser.java" sourcepath="org/testng/xml/Parser.java" role="SOURCE_LINE_PATH_CONTINUES">
      <Message>Path continues at Parser.java:[line 163]</Message>
    </SourceLine>
    <SourceLine classname="org.testng.xml.Parser" start="164" end="164" startBytecode="250" endBytecode="250" sourcefile="Parser.java" sourcepath="org/testng/xml/Parser.java" role="SOURCE_LINE_PATH_CONTINUES">
      <Message>Path continues at Parser.java:[line 164]</Message>
    </SourceLine>
    <SourceLine classname="org.testng.xml.Parser" start="165" end="165" startBytecode="259" endBytecode="259" sourcefile="Parser.java" sourcepath="org/testng/xml/Parser.java" role="SOURCE_LINE_PATH_CONTINUES">
      <Message>Path continues at Parser.java:[line 165]</Message>
    </SourceLine>
    <SourceLine classname="org.testng.xml.Parser" start="167" end="167" startBytecode="269" endBytecode="269" sourcefile="Parser.java" sourcepath="org/testng/xml/Parser.java" role="SOURCE_LINE_PATH_CONTINUES">
      <Message>Path continues at Parser.java:[line 167]</Message>
    </SourceLine>
    <SourceLine classname="org.testng.xml.Parser" start="175" end="175" startBytecode="323" endBytecode="323" sourcefile="Parser.java" sourcepath="org/testng/xml/Parser.java" role="SOURCE_LINE_PATH_CONTINUES">
      <Message>Path continues at Parser.java:[line 175]</Message>
    </SourceLine>
    <SourceLine classname="org.testng.xml.Parser" start="179" end="179" startBytecode="331" endBytecode="331" sourcefile="Parser.java" sourcepath="org/testng/xml/Parser.java" role="SOURCE_LINE_PATH_CONTINUES">
      <Message>Path continues at Parser.java:[line 179]</Message>
    </SourceLine>
    <SourceLine classname="org.testng.xml.Parser" start="180" end="180" startBytecode="338" endBytecode="338" sourcefile="Parser.java" sourcepath="org/testng/xml/Parser.java" role="SOURCE_LINE_PATH_CONTINUES">
      <Message>Path continues at Parser.java:[line 180]</Message>
    </SourceLine>
    <SourceLine classname="org.testng.xml.Parser" start="202" end="202" startBytecode="536" endBytecode="536" sourcefile="Parser.java" sourcepath="org/testng/xml/Parser.java" role="SOURCE_LINE_PATH_CONTINUES">
      <Message>Path continues at Parser.java:[line 202]</Message>
    </SourceLine>
    <SourceLine classname="org.testng.xml.Parser" start="151" end="151" startBytecode="138" endBytecode="138" sourcefile="Parser.java" sourcepath="org/testng/xml/Parser.java" role="SOURCE_LINE_PATH_CONTINUES">
      <Message>Path continues at Parser.java:[line 151]</Message>
    </SourceLine>
    <SourceLine classname="org.testng.xml.Parser" start="207" end="207" startBytecode="539" endBytecode="539" sourcefile="Parser.java" sourcepath="org/testng/xml/Parser.java" role="SOURCE_LINE_PATH_CONTINUES">
      <Message>Path continues at Parser.java:[line 207]</Message>
    </SourceLine>
    <SourceLine classname="org.testng.xml.Parser" start="208" end="208" startBytecode="548" endBytecode="548" sourcefile="Parser.java" sourcepath="org/testng/xml/Parser.java" role="SOURCE_LINE_PATH_CONTINUES">
      <Message>Path continues at Parser.java:[line 208]</Message>
    </SourceLine>
    <SourceLine classname="org.testng.xml.Parser" start="210" end="210" startBytecode="553" endBytecode="553" sourcefile="Parser.java" sourcepath="org/testng/xml/Parser.java" role="SOURCE_LINE_PATH_CONTINUES">
      <Message>Path continues at Parser.java:[line 210]</Message>
    </SourceLine>
    <SourceLine classname="org.testng.xml.Parser" start="211" end="211" startBytecode="562" endBytecode="562" sourcefile="Parser.java" sourcepath="org/testng/xml/Parser.java" role="SOURCE_LINE_PATH_CONTINUES">
      <Message>Path continues at Parser.java:[line 211]</Message>
    </SourceLine>
    <SourceLine classname="org.testng.xml.Parser" start="149" end="149" startBytecode="121" endBytecode="121" sourcefile="Parser.java" sourcepath="org/testng/xml/Parser.java" role="SOURCE_LINE_PATH_CONTINUES">
      <Message>Path continues at Parser.java:[line 149]</Message>
    </SourceLine>
    <SourceLine classname="org.testng.xml.Parser" start="215" end="215" startBytecode="570" endBytecode="570" sourcefile="Parser.java" sourcepath="org/testng/xml/Parser.java" role="SOURCE_LINE_PATH_CONTINUES">
      <Message>Path continues at Parser.java:[line 215]</Message>
    </SourceLine>
    <SourceLine classname="org.testng.xml.Parser" start="216" end="216" startBytecode="575" endBytecode="575" sourcefile="Parser.java" sourcepath="org/testng/xml/Parser.java" role="SOURCE_LINE_PATH_CONTINUES">
      <Message>Path continues at Parser.java:[line 216]</Message>
    </SourceLine>
    <SourceLine classname="org.testng.xml.Parser" start="218" end="218" startBytecode="584" endBytecode="584" sourcefile="Parser.java" sourcepath="org/testng/xml/Parser.java" role="SOURCE_LINE_PATH_CONTINUES">
      <Message>Path continues at Parser.java:[line 218]</Message>
    </SourceLine>
    <SourceLine classname="org.testng.xml.Parser" start="221" end="221" startBytecode="603" endBytecode="603" sourcefile="Parser.java" sourcepath="org/testng/xml/Parser.java" role="SOURCE_LINE_PATH_CONTINUES">
      <Message>Path continues at Parser.java:[line 221]</Message>
    </SourceLine>
    <String value="{InputStream x 1}" role="STRING_REMAINING_OBLIGATIONS">
      <Message>Remaining obligations: {InputStream x 1}</Message>
    </String>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="24ee4a4d9fbed3f0c1e6432b9fec65b3" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.xml.TestNGContentHandler.getSuite() may expose internal representation by returning TestNGContentHandler.m_currentSuite</LongMessage>
    <Class classname="org.testng.xml.TestNGContentHandler" primary="true">
      <SourceLine classname="org.testng.xml.TestNGContentHandler" start="38" end="785" sourcefile="TestNGContentHandler.java" sourcepath="org/testng/xml/TestNGContentHandler.java">
        <Message>At TestNGContentHandler.java:[lines 38-785]</Message>
      </SourceLine>
      <Message>In class org.testng.xml.TestNGContentHandler</Message>
    </Class>
    <Method classname="org.testng.xml.TestNGContentHandler" name="getSuite" signature="()Lorg/testng/xml/XmlSuite;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.xml.TestNGContentHandler" start="751" end="751" startBytecode="0" endBytecode="46" sourcefile="TestNGContentHandler.java" sourcepath="org/testng/xml/TestNGContentHandler.java"/>
      <Message>In method org.testng.xml.TestNGContentHandler.getSuite()</Message>
    </Method>
    <Field classname="org.testng.xml.TestNGContentHandler" name="m_currentSuite" signature="Lorg/testng/xml/XmlSuite;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.xml.TestNGContentHandler" sourcefile="TestNGContentHandler.java" sourcepath="org/testng/xml/TestNGContentHandler.java">
        <Message>In TestNGContentHandler.java</Message>
      </SourceLine>
      <Message>Field org.testng.xml.TestNGContentHandler.m_currentSuite</Message>
    </Field>
    <SourceLine classname="org.testng.xml.TestNGContentHandler" primary="true" start="751" end="751" startBytecode="4" endBytecode="4" sourcefile="TestNGContentHandler.java" sourcepath="org/testng/xml/TestNGContentHandler.java">
      <Message>At TestNGContentHandler.java:[line 751]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="REC_CATCH_EXCEPTION" priority="3" rank="20" abbrev="REC" category="STYLE" instanceHash="48dc4c336e8cd25d901723d51c9c0567" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="396">
    <ShortMessage>Exception is caught when Exception is not thrown</ShortMessage>
    <LongMessage>Exception is caught when Exception is not thrown in org.testng.xml.XMLParser.supportsValidation(SAXParserFactory)</LongMessage>
    <Class classname="org.testng.xml.XMLParser" primary="true">
      <SourceLine classname="org.testng.xml.XMLParser" start="16" end="65" sourcefile="XMLParser.java" sourcepath="org/testng/xml/XMLParser.java">
        <Message>At XMLParser.java:[lines 16-65]</Message>
      </SourceLine>
      <Message>In class org.testng.xml.XMLParser</Message>
    </Class>
    <Method classname="org.testng.xml.XMLParser" name="supportsValidation" signature="(Ljavax/xml/parsers/SAXParserFactory;)Z" isStatic="true" primary="true">
      <SourceLine classname="org.testng.xml.XMLParser" start="62" end="65" startBytecode="0" endBytecode="95" sourcefile="XMLParser.java" sourcepath="org/testng/xml/XMLParser.java"/>
      <Message>In method org.testng.xml.XMLParser.supportsValidation(SAXParserFactory)</Message>
    </Method>
    <SourceLine classname="org.testng.xml.XMLParser" primary="true" start="64" end="64" startBytecode="9" endBytecode="9" sourcefile="XMLParser.java" sourcepath="org/testng/xml/XMLParser.java">
      <Message>At XMLParser.java:[line 64]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="CN_IDIOM_NO_SUPER_CALL" priority="2" rank="16" abbrev="CN" category="BAD_PRACTICE" instanceHash="d7822a921dac37189028473298b54146" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="580">
    <ShortMessage>clone method does not call super.clone()</ShortMessage>
    <LongMessage>org.testng.xml.XmlClass.clone() does not call super.clone()</LongMessage>
    <Class classname="org.testng.xml.XmlClass" primary="true">
      <SourceLine classname="org.testng.xml.XmlClass" start="17" end="256" sourcefile="XmlClass.java" sourcepath="org/testng/xml/XmlClass.java">
        <Message>At XmlClass.java:[lines 17-256]</Message>
      </SourceLine>
      <Message>In class org.testng.xml.XmlClass</Message>
    </Class>
    <Method classname="org.testng.xml.XmlClass" name="clone" signature="()Ljava/lang/Object;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.xml.XmlClass" start="180" end="184" startBytecode="0" endBytecode="101" sourcefile="XmlClass.java" sourcepath="org/testng/xml/XmlClass.java"/>
      <Message>In method org.testng.xml.XmlClass.clone()</Message>
    </Method>
    <SourceLine classname="org.testng.xml.XmlClass" start="180" end="184" startBytecode="0" endBytecode="101" sourcefile="XmlClass.java" sourcepath="org/testng/xml/XmlClass.java" synthetic="true">
      <Message>At XmlClass.java:[lines 180-184]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="2caa24716bbb015270b00db52637ad66" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.xml.XmlClass.getExcludedMethods() may expose internal representation by returning XmlClass.m_excludedMethods</LongMessage>
    <Class classname="org.testng.xml.XmlClass" primary="true">
      <SourceLine classname="org.testng.xml.XmlClass" start="17" end="256" sourcefile="XmlClass.java" sourcepath="org/testng/xml/XmlClass.java">
        <Message>At XmlClass.java:[lines 17-256]</Message>
      </SourceLine>
      <Message>In class org.testng.xml.XmlClass</Message>
    </Class>
    <Method classname="org.testng.xml.XmlClass" name="getExcludedMethods" signature="()Ljava/util/List;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.xml.XmlClass" start="92" end="92" startBytecode="0" endBytecode="46" sourcefile="XmlClass.java" sourcepath="org/testng/xml/XmlClass.java"/>
      <Message>In method org.testng.xml.XmlClass.getExcludedMethods()</Message>
    </Method>
    <Field classname="org.testng.xml.XmlClass" name="m_excludedMethods" signature="Ljava/util/List;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.xml.XmlClass" sourcefile="XmlClass.java" sourcepath="org/testng/xml/XmlClass.java">
        <Message>In XmlClass.java</Message>
      </SourceLine>
      <Message>Field org.testng.xml.XmlClass.m_excludedMethods</Message>
    </Field>
    <SourceLine classname="org.testng.xml.XmlClass" primary="true" start="92" end="92" startBytecode="4" endBytecode="4" sourcefile="XmlClass.java" sourcepath="org/testng/xml/XmlClass.java">
      <Message>At XmlClass.java:[line 92]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="9b04391898a9ebe7707ffe0a395db5d8" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.xml.XmlClass.getIncludedMethods() may expose internal representation by returning XmlClass.m_includedMethods</LongMessage>
    <Class classname="org.testng.xml.XmlClass" primary="true">
      <SourceLine classname="org.testng.xml.XmlClass" start="17" end="256" sourcefile="XmlClass.java" sourcepath="org/testng/xml/XmlClass.java">
        <Message>At XmlClass.java:[lines 17-256]</Message>
      </SourceLine>
      <Message>In class org.testng.xml.XmlClass</Message>
    </Class>
    <Method classname="org.testng.xml.XmlClass" name="getIncludedMethods" signature="()Ljava/util/List;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.xml.XmlClass" start="102" end="102" startBytecode="0" endBytecode="46" sourcefile="XmlClass.java" sourcepath="org/testng/xml/XmlClass.java"/>
      <Message>In method org.testng.xml.XmlClass.getIncludedMethods()</Message>
    </Method>
    <Field classname="org.testng.xml.XmlClass" name="m_includedMethods" signature="Ljava/util/List;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.xml.XmlClass" sourcefile="XmlClass.java" sourcepath="org/testng/xml/XmlClass.java">
        <Message>In XmlClass.java</Message>
      </SourceLine>
      <Message>Field org.testng.xml.XmlClass.m_includedMethods</Message>
    </Field>
    <SourceLine classname="org.testng.xml.XmlClass" primary="true" start="102" end="102" startBytecode="4" endBytecode="4" sourcefile="XmlClass.java" sourcepath="org/testng/xml/XmlClass.java">
      <Message>At XmlClass.java:[line 102]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="cca54a0cbcd90b80aef17c6b1b8d8c71" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.xml.XmlClass.getLocalParameters() may expose internal representation by returning XmlClass.m_parameters</LongMessage>
    <Class classname="org.testng.xml.XmlClass" primary="true">
      <SourceLine classname="org.testng.xml.XmlClass" start="17" end="256" sourcefile="XmlClass.java" sourcepath="org/testng/xml/XmlClass.java">
        <Message>At XmlClass.java:[lines 17-256]</Message>
      </SourceLine>
      <Message>In class org.testng.xml.XmlClass</Message>
    </Class>
    <Method classname="org.testng.xml.XmlClass" name="getLocalParameters" signature="()Ljava/util/Map;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.xml.XmlClass" start="251" end="251" startBytecode="0" endBytecode="46" sourcefile="XmlClass.java" sourcepath="org/testng/xml/XmlClass.java"/>
      <Message>In method org.testng.xml.XmlClass.getLocalParameters()</Message>
    </Method>
    <Field classname="org.testng.xml.XmlClass" name="m_parameters" signature="Ljava/util/Map;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.xml.XmlClass" sourcefile="XmlClass.java" sourcepath="org/testng/xml/XmlClass.java">
        <Message>In XmlClass.java</Message>
      </SourceLine>
      <Message>Field org.testng.xml.XmlClass.m_parameters</Message>
    </Field>
    <SourceLine classname="org.testng.xml.XmlClass" primary="true" start="251" end="251" startBytecode="4" endBytecode="4" sourcefile="XmlClass.java" sourcepath="org/testng/xml/XmlClass.java">
      <Message>At XmlClass.java:[line 251]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="bdb0d63718faa0cc8dfe492c1a86f077" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>org.testng.xml.XmlClass.setExcludedMethods(List) may expose internal representation by storing an externally mutable object into XmlClass.m_excludedMethods</LongMessage>
    <Class classname="org.testng.xml.XmlClass" primary="true">
      <SourceLine classname="org.testng.xml.XmlClass" start="17" end="256" sourcefile="XmlClass.java" sourcepath="org/testng/xml/XmlClass.java">
        <Message>At XmlClass.java:[lines 17-256]</Message>
      </SourceLine>
      <Message>In class org.testng.xml.XmlClass</Message>
    </Class>
    <Method classname="org.testng.xml.XmlClass" name="setExcludedMethods" signature="(Ljava/util/List;)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.xml.XmlClass" start="97" end="98" startBytecode="0" endBytecode="79" sourcefile="XmlClass.java" sourcepath="org/testng/xml/XmlClass.java"/>
      <Message>In method org.testng.xml.XmlClass.setExcludedMethods(List)</Message>
    </Method>
    <Field classname="org.testng.xml.XmlClass" name="m_excludedMethods" signature="Ljava/util/List;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.xml.XmlClass" sourcefile="XmlClass.java" sourcepath="org/testng/xml/XmlClass.java">
        <Message>In XmlClass.java</Message>
      </SourceLine>
      <Message>Field org.testng.xml.XmlClass.m_excludedMethods</Message>
    </Field>
    <LocalVariable name="excludedMethods" register="1" pc="2" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named excludedMethods</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.xml.XmlClass" primary="true" start="97" end="97" startBytecode="2" endBytecode="2" sourcefile="XmlClass.java" sourcepath="org/testng/xml/XmlClass.java">
      <Message>At XmlClass.java:[line 97]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="684d90d588dae89cd3780e82f01168da" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>org.testng.xml.XmlClass.setIncludedMethods(List) may expose internal representation by storing an externally mutable object into XmlClass.m_includedMethods</LongMessage>
    <Class classname="org.testng.xml.XmlClass" primary="true">
      <SourceLine classname="org.testng.xml.XmlClass" start="17" end="256" sourcefile="XmlClass.java" sourcepath="org/testng/xml/XmlClass.java">
        <Message>At XmlClass.java:[lines 17-256]</Message>
      </SourceLine>
      <Message>In class org.testng.xml.XmlClass</Message>
    </Class>
    <Method classname="org.testng.xml.XmlClass" name="setIncludedMethods" signature="(Ljava/util/List;)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.xml.XmlClass" start="107" end="108" startBytecode="0" endBytecode="79" sourcefile="XmlClass.java" sourcepath="org/testng/xml/XmlClass.java"/>
      <Message>In method org.testng.xml.XmlClass.setIncludedMethods(List)</Message>
    </Method>
    <Field classname="org.testng.xml.XmlClass" name="m_includedMethods" signature="Ljava/util/List;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.xml.XmlClass" sourcefile="XmlClass.java" sourcepath="org/testng/xml/XmlClass.java">
        <Message>In XmlClass.java</Message>
      </SourceLine>
      <Message>Field org.testng.xml.XmlClass.m_includedMethods</Message>
    </Field>
    <LocalVariable name="includedMethods" register="1" pc="2" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named includedMethods</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.xml.XmlClass" primary="true" start="107" end="107" startBytecode="2" endBytecode="2" sourcefile="XmlClass.java" sourcepath="org/testng/xml/XmlClass.java">
      <Message>At XmlClass.java:[line 107]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="b304528a24d9070cd77471919993c298" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>org.testng.xml.XmlClass.setXmlTest(XmlTest) may expose internal representation by storing an externally mutable object into XmlClass.m_xmlTest</LongMessage>
    <Class classname="org.testng.xml.XmlClass" primary="true">
      <SourceLine classname="org.testng.xml.XmlClass" start="17" end="256" sourcefile="XmlClass.java" sourcepath="org/testng/xml/XmlClass.java">
        <Message>At XmlClass.java:[lines 17-256]</Message>
      </SourceLine>
      <Message>In class org.testng.xml.XmlClass</Message>
    </Class>
    <Method classname="org.testng.xml.XmlClass" name="setXmlTest" signature="(Lorg/testng/xml/XmlTest;)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.xml.XmlClass" start="255" end="256" startBytecode="0" endBytecode="61" sourcefile="XmlClass.java" sourcepath="org/testng/xml/XmlClass.java"/>
      <Message>In method org.testng.xml.XmlClass.setXmlTest(XmlTest)</Message>
    </Method>
    <Field classname="org.testng.xml.XmlClass" name="m_xmlTest" signature="Lorg/testng/xml/XmlTest;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.xml.XmlClass" sourcefile="XmlClass.java" sourcepath="org/testng/xml/XmlClass.java">
        <Message>In XmlClass.java</Message>
      </SourceLine>
      <Message>Field org.testng.xml.XmlClass.m_xmlTest</Message>
    </Field>
    <LocalVariable name="test" register="1" pc="2" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named test</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.xml.XmlClass" primary="true" start="255" end="255" startBytecode="2" endBytecode="2" sourcefile="XmlClass.java" sourcepath="org/testng/xml/XmlClass.java">
      <Message>At XmlClass.java:[line 255]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="ce17436d71b81e9759fd90e5301e7b3a" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.xml.XmlDefine.getIncludes() may expose internal representation by returning XmlDefine.m_includes</LongMessage>
    <Class classname="org.testng.xml.XmlDefine" primary="true">
      <SourceLine classname="org.testng.xml.XmlDefine" start="10" end="68" sourcefile="XmlDefine.java" sourcepath="org/testng/xml/XmlDefine.java">
        <Message>At XmlDefine.java:[lines 10-68]</Message>
      </SourceLine>
      <Message>In class org.testng.xml.XmlDefine</Message>
    </Class>
    <Method classname="org.testng.xml.XmlDefine" name="getIncludes" signature="()Ljava/util/List;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.xml.XmlDefine" start="45" end="45" startBytecode="0" endBytecode="46" sourcefile="XmlDefine.java" sourcepath="org/testng/xml/XmlDefine.java"/>
      <Message>In method org.testng.xml.XmlDefine.getIncludes()</Message>
    </Method>
    <Field classname="org.testng.xml.XmlDefine" name="m_includes" signature="Ljava/util/List;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.xml.XmlDefine" sourcefile="XmlDefine.java" sourcepath="org/testng/xml/XmlDefine.java">
        <Message>In XmlDefine.java</Message>
      </SourceLine>
      <Message>Field org.testng.xml.XmlDefine.m_includes</Message>
    </Field>
    <SourceLine classname="org.testng.xml.XmlDefine" primary="true" start="45" end="45" startBytecode="4" endBytecode="4" sourcefile="XmlDefine.java" sourcepath="org/testng/xml/XmlDefine.java">
      <Message>At XmlDefine.java:[line 45]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="b9ce35dd9e87ec37d57c7539156a0a54" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.xml.XmlDependencies.getDependencies() may expose internal representation by returning XmlDependencies.m_xmlDependencyGroups</LongMessage>
    <Class classname="org.testng.xml.XmlDependencies" primary="true">
      <SourceLine classname="org.testng.xml.XmlDependencies" start="10" end="35" sourcefile="XmlDependencies.java" sourcepath="org/testng/xml/XmlDependencies.java">
        <Message>At XmlDependencies.java:[lines 10-35]</Message>
      </SourceLine>
      <Message>In class org.testng.xml.XmlDependencies</Message>
    </Class>
    <Method classname="org.testng.xml.XmlDependencies" name="getDependencies" signature="()Ljava/util/Map;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.xml.XmlDependencies" start="19" end="19" startBytecode="0" endBytecode="46" sourcefile="XmlDependencies.java" sourcepath="org/testng/xml/XmlDependencies.java"/>
      <Message>In method org.testng.xml.XmlDependencies.getDependencies()</Message>
    </Method>
    <Field classname="org.testng.xml.XmlDependencies" name="m_xmlDependencyGroups" signature="Ljava/util/Map;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.xml.XmlDependencies" sourcefile="XmlDependencies.java" sourcepath="org/testng/xml/XmlDependencies.java">
        <Message>In XmlDependencies.java</Message>
      </SourceLine>
      <Message>Field org.testng.xml.XmlDependencies.m_xmlDependencyGroups</Message>
    </Field>
    <SourceLine classname="org.testng.xml.XmlDependencies" primary="true" start="19" end="19" startBytecode="4" endBytecode="4" sourcefile="XmlDependencies.java" sourcepath="org/testng/xml/XmlDependencies.java">
      <Message>At XmlDependencies.java:[line 19]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="a64cbc08b804ab453e76ca877cc9a372" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.xml.XmlGroups.getDefines() may expose internal representation by returning XmlGroups.m_defines</LongMessage>
    <Class classname="org.testng.xml.XmlGroups" primary="true">
      <SourceLine classname="org.testng.xml.XmlGroups" start="10" end="76" sourcefile="XmlGroups.java" sourcepath="org/testng/xml/XmlGroups.java">
        <Message>At XmlGroups.java:[lines 10-76]</Message>
      </SourceLine>
      <Message>In class org.testng.xml.XmlGroups</Message>
    </Class>
    <Method classname="org.testng.xml.XmlGroups" name="getDefines" signature="()Ljava/util/List;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.xml.XmlGroups" start="17" end="17" startBytecode="0" endBytecode="46" sourcefile="XmlGroups.java" sourcepath="org/testng/xml/XmlGroups.java"/>
      <Message>In method org.testng.xml.XmlGroups.getDefines()</Message>
    </Method>
    <Field classname="org.testng.xml.XmlGroups" name="m_defines" signature="Ljava/util/List;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.xml.XmlGroups" sourcefile="XmlGroups.java" sourcepath="org/testng/xml/XmlGroups.java">
        <Message>In XmlGroups.java</Message>
      </SourceLine>
      <Message>Field org.testng.xml.XmlGroups.m_defines</Message>
    </Field>
    <SourceLine classname="org.testng.xml.XmlGroups" primary="true" start="17" end="17" startBytecode="4" endBytecode="4" sourcefile="XmlGroups.java" sourcepath="org/testng/xml/XmlGroups.java">
      <Message>At XmlGroups.java:[line 17]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="bdc7edc2c4d879f6a190a776534c7e94" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.xml.XmlGroups.getDependencies() may expose internal representation by returning XmlGroups.m_dependencies</LongMessage>
    <Class classname="org.testng.xml.XmlGroups" primary="true">
      <SourceLine classname="org.testng.xml.XmlGroups" start="10" end="76" sourcefile="XmlGroups.java" sourcepath="org/testng/xml/XmlGroups.java">
        <Message>At XmlGroups.java:[lines 10-76]</Message>
      </SourceLine>
      <Message>In class org.testng.xml.XmlGroups</Message>
    </Class>
    <Method classname="org.testng.xml.XmlGroups" name="getDependencies" signature="()Ljava/util/List;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.xml.XmlGroups" start="37" end="37" startBytecode="0" endBytecode="46" sourcefile="XmlGroups.java" sourcepath="org/testng/xml/XmlGroups.java"/>
      <Message>In method org.testng.xml.XmlGroups.getDependencies()</Message>
    </Method>
    <Field classname="org.testng.xml.XmlGroups" name="m_dependencies" signature="Ljava/util/List;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.xml.XmlGroups" sourcefile="XmlGroups.java" sourcepath="org/testng/xml/XmlGroups.java">
        <Message>In XmlGroups.java</Message>
      </SourceLine>
      <Message>Field org.testng.xml.XmlGroups.m_dependencies</Message>
    </Field>
    <SourceLine classname="org.testng.xml.XmlGroups" primary="true" start="37" end="37" startBytecode="4" endBytecode="4" sourcefile="XmlGroups.java" sourcepath="org/testng/xml/XmlGroups.java">
      <Message>At XmlGroups.java:[line 37]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="f3e1f9a82aa61bc05d12318e354296d" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>org.testng.xml.XmlGroups.setDefines(List) may expose internal representation by storing an externally mutable object into XmlGroups.m_defines</LongMessage>
    <Class classname="org.testng.xml.XmlGroups" primary="true">
      <SourceLine classname="org.testng.xml.XmlGroups" start="10" end="76" sourcefile="XmlGroups.java" sourcepath="org/testng/xml/XmlGroups.java">
        <Message>At XmlGroups.java:[lines 10-76]</Message>
      </SourceLine>
      <Message>In class org.testng.xml.XmlGroups</Message>
    </Class>
    <Method classname="org.testng.xml.XmlGroups" name="setDefines" signature="(Ljava/util/List;)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.xml.XmlGroups" start="25" end="26" startBytecode="0" endBytecode="79" sourcefile="XmlGroups.java" sourcepath="org/testng/xml/XmlGroups.java"/>
      <Message>In method org.testng.xml.XmlGroups.setDefines(List)</Message>
    </Method>
    <Field classname="org.testng.xml.XmlGroups" name="m_defines" signature="Ljava/util/List;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.xml.XmlGroups" sourcefile="XmlGroups.java" sourcepath="org/testng/xml/XmlGroups.java">
        <Message>In XmlGroups.java</Message>
      </SourceLine>
      <Message>Field org.testng.xml.XmlGroups.m_defines</Message>
    </Field>
    <LocalVariable name="defines" register="1" pc="2" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named defines</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.xml.XmlGroups" primary="true" start="25" end="25" startBytecode="2" endBytecode="2" sourcefile="XmlGroups.java" sourcepath="org/testng/xml/XmlGroups.java">
      <Message>At XmlGroups.java:[line 25]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="3a578761da74e02b126d7516a693c08a" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.xml.XmlInclude.getInvocationNumbers() may expose internal representation by returning XmlInclude.m_invocationNumbers</LongMessage>
    <Class classname="org.testng.xml.XmlInclude" primary="true">
      <SourceLine classname="org.testng.xml.XmlInclude" start="17" end="143" sourcefile="XmlInclude.java" sourcepath="org/testng/xml/XmlInclude.java">
        <Message>At XmlInclude.java:[lines 17-143]</Message>
      </SourceLine>
      <Message>In class org.testng.xml.XmlInclude</Message>
    </Class>
    <Method classname="org.testng.xml.XmlInclude" name="getInvocationNumbers" signature="()Ljava/util/List;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.xml.XmlInclude" start="61" end="61" startBytecode="0" endBytecode="46" sourcefile="XmlInclude.java" sourcepath="org/testng/xml/XmlInclude.java"/>
      <Message>In method org.testng.xml.XmlInclude.getInvocationNumbers()</Message>
    </Method>
    <Field classname="org.testng.xml.XmlInclude" name="m_invocationNumbers" signature="Ljava/util/List;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.xml.XmlInclude" sourcefile="XmlInclude.java" sourcepath="org/testng/xml/XmlInclude.java">
        <Message>In XmlInclude.java</Message>
      </SourceLine>
      <Message>Field org.testng.xml.XmlInclude.m_invocationNumbers</Message>
    </Field>
    <SourceLine classname="org.testng.xml.XmlInclude" primary="true" start="61" end="61" startBytecode="4" endBytecode="4" sourcefile="XmlInclude.java" sourcepath="org/testng/xml/XmlInclude.java">
      <Message>At XmlInclude.java:[line 61]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="b8fc64f1c74b3a858bec2630770a9428" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.xml.XmlInclude.getLocalParameters() may expose internal representation by returning XmlInclude.m_parameters</LongMessage>
    <Class classname="org.testng.xml.XmlInclude" primary="true">
      <SourceLine classname="org.testng.xml.XmlInclude" start="17" end="143" sourcefile="XmlInclude.java" sourcepath="org/testng/xml/XmlInclude.java">
        <Message>At XmlInclude.java:[lines 17-143]</Message>
      </SourceLine>
      <Message>In class org.testng.xml.XmlInclude</Message>
    </Class>
    <Method classname="org.testng.xml.XmlInclude" name="getLocalParameters" signature="()Ljava/util/Map;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.xml.XmlInclude" start="128" end="128" startBytecode="0" endBytecode="46" sourcefile="XmlInclude.java" sourcepath="org/testng/xml/XmlInclude.java"/>
      <Message>In method org.testng.xml.XmlInclude.getLocalParameters()</Message>
    </Method>
    <Field classname="org.testng.xml.XmlInclude" name="m_parameters" signature="Ljava/util/Map;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.xml.XmlInclude" sourcefile="XmlInclude.java" sourcepath="org/testng/xml/XmlInclude.java">
        <Message>In XmlInclude.java</Message>
      </SourceLine>
      <Message>Field org.testng.xml.XmlInclude.m_parameters</Message>
    </Field>
    <SourceLine classname="org.testng.xml.XmlInclude" primary="true" start="128" end="128" startBytecode="4" endBytecode="4" sourcefile="XmlInclude.java" sourcepath="org/testng/xml/XmlInclude.java">
      <Message>At XmlInclude.java:[line 128]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="a68ca2c74072df54834cdbf1c8443078" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>new org.testng.xml.XmlInclude(String, List, int) may expose internal representation by storing an externally mutable object into XmlInclude.m_invocationNumbers</LongMessage>
    <Class classname="org.testng.xml.XmlInclude" primary="true">
      <SourceLine classname="org.testng.xml.XmlInclude" start="17" end="143" sourcefile="XmlInclude.java" sourcepath="org/testng/xml/XmlInclude.java">
        <Message>At XmlInclude.java:[lines 17-143]</Message>
      </SourceLine>
      <Message>In class org.testng.xml.XmlInclude</Message>
    </Class>
    <Method classname="org.testng.xml.XmlInclude" name="&lt;init&gt;" signature="(Ljava/lang/String;Ljava/util/List;I)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.xml.XmlInclude" start="33" end="37" startBytecode="0" endBytecode="136" sourcefile="XmlInclude.java" sourcepath="org/testng/xml/XmlInclude.java"/>
      <Message>In method new org.testng.xml.XmlInclude(String, List, int)</Message>
    </Method>
    <Field classname="org.testng.xml.XmlInclude" name="m_invocationNumbers" signature="Ljava/util/List;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.xml.XmlInclude" sourcefile="XmlInclude.java" sourcepath="org/testng/xml/XmlInclude.java">
        <Message>In XmlInclude.java</Message>
      </SourceLine>
      <Message>Field org.testng.xml.XmlInclude.m_invocationNumbers</Message>
    </Field>
    <LocalVariable name="list" register="2" pc="18" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named list</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.xml.XmlInclude" primary="true" start="35" end="35" startBytecode="18" endBytecode="18" sourcefile="XmlInclude.java" sourcepath="org/testng/xml/XmlInclude.java">
      <Message>At XmlInclude.java:[line 35]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="650ea6fd8be9e0a8429f84497037cdec" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>org.testng.xml.XmlInclude.setXmlClass(XmlClass) may expose internal representation by storing an externally mutable object into XmlInclude.m_xmlClass</LongMessage>
    <Class classname="org.testng.xml.XmlInclude" primary="true">
      <SourceLine classname="org.testng.xml.XmlInclude" start="17" end="143" sourcefile="XmlInclude.java" sourcepath="org/testng/xml/XmlInclude.java">
        <Message>At XmlInclude.java:[lines 17-143]</Message>
      </SourceLine>
      <Message>In class org.testng.xml.XmlInclude</Message>
    </Class>
    <Method classname="org.testng.xml.XmlInclude" name="setXmlClass" signature="(Lorg/testng/xml/XmlClass;)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.xml.XmlInclude" start="142" end="143" startBytecode="0" endBytecode="61" sourcefile="XmlInclude.java" sourcepath="org/testng/xml/XmlInclude.java"/>
      <Message>In method org.testng.xml.XmlInclude.setXmlClass(XmlClass)</Message>
    </Method>
    <Field classname="org.testng.xml.XmlInclude" name="m_xmlClass" signature="Lorg/testng/xml/XmlClass;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.xml.XmlInclude" sourcefile="XmlInclude.java" sourcepath="org/testng/xml/XmlInclude.java">
        <Message>In XmlInclude.java</Message>
      </SourceLine>
      <Message>Field org.testng.xml.XmlInclude.m_xmlClass</Message>
    </Field>
    <LocalVariable name="xmlClass" register="1" pc="2" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named xmlClass</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.xml.XmlInclude" primary="true" start="142" end="142" startBytecode="2" endBytecode="2" sourcefile="XmlInclude.java" sourcepath="org/testng/xml/XmlInclude.java">
      <Message>At XmlInclude.java:[line 142]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="50394886cf20804a2c860b911189bcf" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.xml.XmlMethodSelector.getScript() may expose internal representation by returning XmlMethodSelector.m_script</LongMessage>
    <Class classname="org.testng.xml.XmlMethodSelector" primary="true">
      <SourceLine classname="org.testng.xml.XmlMethodSelector" start="11" end="163" sourcefile="XmlMethodSelector.java" sourcepath="org/testng/xml/XmlMethodSelector.java">
        <Message>At XmlMethodSelector.java:[lines 11-163]</Message>
      </SourceLine>
      <Message>In class org.testng.xml.XmlMethodSelector</Message>
    </Class>
    <Method classname="org.testng.xml.XmlMethodSelector" name="getScript" signature="()Lorg/testng/xml/XmlScript;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.xml.XmlMethodSelector" start="39" end="39" startBytecode="0" endBytecode="46" sourcefile="XmlMethodSelector.java" sourcepath="org/testng/xml/XmlMethodSelector.java"/>
      <Message>In method org.testng.xml.XmlMethodSelector.getScript()</Message>
    </Method>
    <Field classname="org.testng.xml.XmlMethodSelector" name="m_script" signature="Lorg/testng/xml/XmlScript;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.xml.XmlMethodSelector" sourcefile="XmlMethodSelector.java" sourcepath="org/testng/xml/XmlMethodSelector.java">
        <Message>In XmlMethodSelector.java</Message>
      </SourceLine>
      <Message>Field org.testng.xml.XmlMethodSelector.m_script</Message>
    </Field>
    <SourceLine classname="org.testng.xml.XmlMethodSelector" primary="true" start="39" end="39" startBytecode="4" endBytecode="4" sourcefile="XmlMethodSelector.java" sourcepath="org/testng/xml/XmlMethodSelector.java">
      <Message>At XmlMethodSelector.java:[line 39]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="2c80d0e22a44ba1ffdc1a1334bd9ebd" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>org.testng.xml.XmlMethodSelector.setScript(XmlScript) may expose internal representation by storing an externally mutable object into XmlMethodSelector.m_script</LongMessage>
    <Class classname="org.testng.xml.XmlMethodSelector" primary="true">
      <SourceLine classname="org.testng.xml.XmlMethodSelector" start="11" end="163" sourcefile="XmlMethodSelector.java" sourcepath="org/testng/xml/XmlMethodSelector.java">
        <Message>At XmlMethodSelector.java:[lines 11-163]</Message>
      </SourceLine>
      <Message>In class org.testng.xml.XmlMethodSelector</Message>
    </Class>
    <Method classname="org.testng.xml.XmlMethodSelector" name="setScript" signature="(Lorg/testng/xml/XmlScript;)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.xml.XmlMethodSelector" start="43" end="44" startBytecode="0" endBytecode="61" sourcefile="XmlMethodSelector.java" sourcepath="org/testng/xml/XmlMethodSelector.java"/>
      <Message>In method org.testng.xml.XmlMethodSelector.setScript(XmlScript)</Message>
    </Method>
    <Field classname="org.testng.xml.XmlMethodSelector" name="m_script" signature="Lorg/testng/xml/XmlScript;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.xml.XmlMethodSelector" sourcefile="XmlMethodSelector.java" sourcepath="org/testng/xml/XmlMethodSelector.java">
        <Message>In XmlMethodSelector.java</Message>
      </SourceLine>
      <Message>Field org.testng.xml.XmlMethodSelector.m_script</Message>
    </Field>
    <LocalVariable name="script" register="1" pc="2" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named script</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.xml.XmlMethodSelector" primary="true" start="43" end="43" startBytecode="2" endBytecode="2" sourcefile="XmlMethodSelector.java" sourcepath="org/testng/xml/XmlMethodSelector.java">
      <Message>At XmlMethodSelector.java:[line 43]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="317777901af8f7d665b76aebc93f36c9" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.xml.XmlMethodSelectors.getMethodSelectors() may expose internal representation by returning XmlMethodSelectors.m_methodSelectors</LongMessage>
    <Class classname="org.testng.xml.XmlMethodSelectors" primary="true">
      <SourceLine classname="org.testng.xml.XmlMethodSelectors" start="12" end="34" sourcefile="XmlMethodSelectors.java" sourcepath="org/testng/xml/XmlMethodSelectors.java">
        <Message>At XmlMethodSelectors.java:[lines 12-34]</Message>
      </SourceLine>
      <Message>In class org.testng.xml.XmlMethodSelectors</Message>
    </Class>
    <Method classname="org.testng.xml.XmlMethodSelectors" name="getMethodSelectors" signature="()Ljava/util/List;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.xml.XmlMethodSelectors" start="17" end="17" startBytecode="0" endBytecode="46" sourcefile="XmlMethodSelectors.java" sourcepath="org/testng/xml/XmlMethodSelectors.java"/>
      <Message>In method org.testng.xml.XmlMethodSelectors.getMethodSelectors()</Message>
    </Method>
    <Field classname="org.testng.xml.XmlMethodSelectors" name="m_methodSelectors" signature="Ljava/util/List;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.xml.XmlMethodSelectors" sourcefile="XmlMethodSelectors.java" sourcepath="org/testng/xml/XmlMethodSelectors.java">
        <Message>In XmlMethodSelectors.java</Message>
      </SourceLine>
      <Message>Field org.testng.xml.XmlMethodSelectors.m_methodSelectors</Message>
    </Field>
    <SourceLine classname="org.testng.xml.XmlMethodSelectors" primary="true" start="17" end="17" startBytecode="4" endBytecode="4" sourcefile="XmlMethodSelectors.java" sourcepath="org/testng/xml/XmlMethodSelectors.java">
      <Message>At XmlMethodSelectors.java:[line 17]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="60fb18b1ec09e1993eac4759c5a65c10" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.xml.XmlPackage.getExclude() may expose internal representation by returning XmlPackage.m_exclude</LongMessage>
    <Class classname="org.testng.xml.XmlPackage" primary="true">
      <SourceLine classname="org.testng.xml.XmlPackage" start="16" end="137" sourcefile="XmlPackage.java" sourcepath="org/testng/xml/XmlPackage.java">
        <Message>At XmlPackage.java:[lines 16-137]</Message>
      </SourceLine>
      <Message>In class org.testng.xml.XmlPackage</Message>
    </Class>
    <Method classname="org.testng.xml.XmlPackage" name="getExclude" signature="()Ljava/util/List;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.xml.XmlPackage" start="29" end="29" startBytecode="0" endBytecode="46" sourcefile="XmlPackage.java" sourcepath="org/testng/xml/XmlPackage.java"/>
      <Message>In method org.testng.xml.XmlPackage.getExclude()</Message>
    </Method>
    <Field classname="org.testng.xml.XmlPackage" name="m_exclude" signature="Ljava/util/List;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.xml.XmlPackage" sourcefile="XmlPackage.java" sourcepath="org/testng/xml/XmlPackage.java">
        <Message>In XmlPackage.java</Message>
      </SourceLine>
      <Message>Field org.testng.xml.XmlPackage.m_exclude</Message>
    </Field>
    <SourceLine classname="org.testng.xml.XmlPackage" primary="true" start="29" end="29" startBytecode="4" endBytecode="4" sourcefile="XmlPackage.java" sourcepath="org/testng/xml/XmlPackage.java">
      <Message>At XmlPackage.java:[line 29]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="e2c3487cd1d3c63365bdca11c866dddd" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.xml.XmlPackage.getInclude() may expose internal representation by returning XmlPackage.m_include</LongMessage>
    <Class classname="org.testng.xml.XmlPackage" primary="true">
      <SourceLine classname="org.testng.xml.XmlPackage" start="16" end="137" sourcefile="XmlPackage.java" sourcepath="org/testng/xml/XmlPackage.java">
        <Message>At XmlPackage.java:[lines 16-137]</Message>
      </SourceLine>
      <Message>In class org.testng.xml.XmlPackage</Message>
    </Class>
    <Method classname="org.testng.xml.XmlPackage" name="getInclude" signature="()Ljava/util/List;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.xml.XmlPackage" start="39" end="39" startBytecode="0" endBytecode="46" sourcefile="XmlPackage.java" sourcepath="org/testng/xml/XmlPackage.java"/>
      <Message>In method org.testng.xml.XmlPackage.getInclude()</Message>
    </Method>
    <Field classname="org.testng.xml.XmlPackage" name="m_include" signature="Ljava/util/List;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.xml.XmlPackage" sourcefile="XmlPackage.java" sourcepath="org/testng/xml/XmlPackage.java">
        <Message>In XmlPackage.java</Message>
      </SourceLine>
      <Message>Field org.testng.xml.XmlPackage.m_include</Message>
    </Field>
    <SourceLine classname="org.testng.xml.XmlPackage" primary="true" start="39" end="39" startBytecode="4" endBytecode="4" sourcefile="XmlPackage.java" sourcepath="org/testng/xml/XmlPackage.java">
      <Message>At XmlPackage.java:[line 39]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="71bba23cbebbf007b2300ef8de2ee9c3" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.xml.XmlPackage.getXmlClasses() may expose internal representation by returning XmlPackage.m_xmlClasses</LongMessage>
    <Class classname="org.testng.xml.XmlPackage" primary="true">
      <SourceLine classname="org.testng.xml.XmlPackage" start="16" end="137" sourcefile="XmlPackage.java" sourcepath="org/testng/xml/XmlPackage.java">
        <Message>At XmlPackage.java:[lines 16-137]</Message>
      </SourceLine>
      <Message>In class org.testng.xml.XmlPackage</Message>
    </Class>
    <Method classname="org.testng.xml.XmlPackage" name="getXmlClasses" signature="()Ljava/util/List;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.xml.XmlPackage" start="58" end="62" startBytecode="0" endBytecode="79" sourcefile="XmlPackage.java" sourcepath="org/testng/xml/XmlPackage.java"/>
      <Message>In method org.testng.xml.XmlPackage.getXmlClasses()</Message>
    </Method>
    <Field classname="org.testng.xml.XmlPackage" name="m_xmlClasses" signature="Ljava/util/List;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.xml.XmlPackage" sourcefile="XmlPackage.java" sourcepath="org/testng/xml/XmlPackage.java">
        <Message>In XmlPackage.java</Message>
      </SourceLine>
      <Message>Field org.testng.xml.XmlPackage.m_xmlClasses</Message>
    </Field>
    <SourceLine classname="org.testng.xml.XmlPackage" primary="true" start="62" end="62" startBytecode="20" endBytecode="20" sourcefile="XmlPackage.java" sourcepath="org/testng/xml/XmlPackage.java">
      <Message>At XmlPackage.java:[line 62]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="a7fd667193cde3b8a19f567bfa58074c" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>org.testng.xml.XmlPackage.setExclude(List) may expose internal representation by storing an externally mutable object into XmlPackage.m_exclude</LongMessage>
    <Class classname="org.testng.xml.XmlPackage" primary="true">
      <SourceLine classname="org.testng.xml.XmlPackage" start="16" end="137" sourcefile="XmlPackage.java" sourcepath="org/testng/xml/XmlPackage.java">
        <Message>At XmlPackage.java:[lines 16-137]</Message>
      </SourceLine>
      <Message>In class org.testng.xml.XmlPackage</Message>
    </Class>
    <Method classname="org.testng.xml.XmlPackage" name="setExclude" signature="(Ljava/util/List;)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.xml.XmlPackage" start="34" end="35" startBytecode="0" endBytecode="79" sourcefile="XmlPackage.java" sourcepath="org/testng/xml/XmlPackage.java"/>
      <Message>In method org.testng.xml.XmlPackage.setExclude(List)</Message>
    </Method>
    <Field classname="org.testng.xml.XmlPackage" name="m_exclude" signature="Ljava/util/List;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.xml.XmlPackage" sourcefile="XmlPackage.java" sourcepath="org/testng/xml/XmlPackage.java">
        <Message>In XmlPackage.java</Message>
      </SourceLine>
      <Message>Field org.testng.xml.XmlPackage.m_exclude</Message>
    </Field>
    <LocalVariable name="exclude" register="1" pc="2" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named exclude</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.xml.XmlPackage" primary="true" start="34" end="34" startBytecode="2" endBytecode="2" sourcefile="XmlPackage.java" sourcepath="org/testng/xml/XmlPackage.java">
      <Message>At XmlPackage.java:[line 34]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="3241faf2001706583621bfa659c9129" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>org.testng.xml.XmlPackage.setInclude(List) may expose internal representation by storing an externally mutable object into XmlPackage.m_include</LongMessage>
    <Class classname="org.testng.xml.XmlPackage" primary="true">
      <SourceLine classname="org.testng.xml.XmlPackage" start="16" end="137" sourcefile="XmlPackage.java" sourcepath="org/testng/xml/XmlPackage.java">
        <Message>At XmlPackage.java:[lines 16-137]</Message>
      </SourceLine>
      <Message>In class org.testng.xml.XmlPackage</Message>
    </Class>
    <Method classname="org.testng.xml.XmlPackage" name="setInclude" signature="(Ljava/util/List;)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.xml.XmlPackage" start="44" end="45" startBytecode="0" endBytecode="79" sourcefile="XmlPackage.java" sourcepath="org/testng/xml/XmlPackage.java"/>
      <Message>In method org.testng.xml.XmlPackage.setInclude(List)</Message>
    </Method>
    <Field classname="org.testng.xml.XmlPackage" name="m_include" signature="Ljava/util/List;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.xml.XmlPackage" sourcefile="XmlPackage.java" sourcepath="org/testng/xml/XmlPackage.java">
        <Message>In XmlPackage.java</Message>
      </SourceLine>
      <Message>Field org.testng.xml.XmlPackage.m_include</Message>
    </Field>
    <LocalVariable name="include" register="1" pc="2" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named include</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.xml.XmlPackage" primary="true" start="44" end="44" startBytecode="2" endBytecode="2" sourcefile="XmlPackage.java" sourcepath="org/testng/xml/XmlPackage.java">
      <Message>At XmlPackage.java:[line 44]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="4a4554883e87c9e06aaf4570896e426" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.xml.XmlRun.getExcludes() may expose internal representation by returning XmlRun.m_excludes</LongMessage>
    <Class classname="org.testng.xml.XmlRun" primary="true">
      <SourceLine classname="org.testng.xml.XmlRun" start="10" end="49" sourcefile="XmlRun.java" sourcepath="org/testng/xml/XmlRun.java">
        <Message>At XmlRun.java:[lines 10-49]</Message>
      </SourceLine>
      <Message>In class org.testng.xml.XmlRun</Message>
    </Class>
    <Method classname="org.testng.xml.XmlRun" name="getExcludes" signature="()Ljava/util/List;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.xml.XmlRun" start="34" end="34" startBytecode="0" endBytecode="46" sourcefile="XmlRun.java" sourcepath="org/testng/xml/XmlRun.java"/>
      <Message>In method org.testng.xml.XmlRun.getExcludes()</Message>
    </Method>
    <Field classname="org.testng.xml.XmlRun" name="m_excludes" signature="Ljava/util/List;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.xml.XmlRun" sourcefile="XmlRun.java" sourcepath="org/testng/xml/XmlRun.java">
        <Message>In XmlRun.java</Message>
      </SourceLine>
      <Message>Field org.testng.xml.XmlRun.m_excludes</Message>
    </Field>
    <SourceLine classname="org.testng.xml.XmlRun" primary="true" start="34" end="34" startBytecode="4" endBytecode="4" sourcefile="XmlRun.java" sourcepath="org/testng/xml/XmlRun.java">
      <Message>At XmlRun.java:[line 34]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="cf34e8889cbac0f7ca1b104b9f6fb57b" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.xml.XmlRun.getIncludes() may expose internal representation by returning XmlRun.m_includes</LongMessage>
    <Class classname="org.testng.xml.XmlRun" primary="true">
      <SourceLine classname="org.testng.xml.XmlRun" start="10" end="49" sourcefile="XmlRun.java" sourcepath="org/testng/xml/XmlRun.java">
        <Message>At XmlRun.java:[lines 10-49]</Message>
      </SourceLine>
      <Message>In class org.testng.xml.XmlRun</Message>
    </Class>
    <Method classname="org.testng.xml.XmlRun" name="getIncludes" signature="()Ljava/util/List;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.xml.XmlRun" start="44" end="44" startBytecode="0" endBytecode="46" sourcefile="XmlRun.java" sourcepath="org/testng/xml/XmlRun.java"/>
      <Message>In method org.testng.xml.XmlRun.getIncludes()</Message>
    </Method>
    <Field classname="org.testng.xml.XmlRun" name="m_includes" signature="Ljava/util/List;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.xml.XmlRun" sourcefile="XmlRun.java" sourcepath="org/testng/xml/XmlRun.java">
        <Message>In XmlRun.java</Message>
      </SourceLine>
      <Message>Field org.testng.xml.XmlRun.m_includes</Message>
    </Field>
    <SourceLine classname="org.testng.xml.XmlRun" primary="true" start="44" end="44" startBytecode="4" endBytecode="4" sourcefile="XmlRun.java" sourcepath="org/testng/xml/XmlRun.java">
      <Message>At XmlRun.java:[line 44]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="CN_IDIOM_NO_SUPER_CALL" priority="2" rank="16" abbrev="CN" category="BAD_PRACTICE" instanceHash="1e58666227cdd47dcbeb448069a0acab" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="580">
    <ShortMessage>clone method does not call super.clone()</ShortMessage>
    <LongMessage>org.testng.xml.XmlSuite.clone() does not call super.clone()</LongMessage>
    <Class classname="org.testng.xml.XmlSuite" primary="true">
      <SourceLine classname="org.testng.xml.XmlSuite" start="19" end="981" sourcefile="XmlSuite.java" sourcepath="org/testng/xml/XmlSuite.java">
        <Message>At XmlSuite.java:[lines 19-981]</Message>
      </SourceLine>
      <Message>In class org.testng.xml.XmlSuite</Message>
    </Class>
    <Method classname="org.testng.xml.XmlSuite" name="clone" signature="()Ljava/lang/Object;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.xml.XmlSuite" start="572" end="584" startBytecode="0" endBytecode="197" sourcefile="XmlSuite.java" sourcepath="org/testng/xml/XmlSuite.java"/>
      <Message>In method org.testng.xml.XmlSuite.clone()</Message>
    </Method>
    <SourceLine classname="org.testng.xml.XmlSuite" start="572" end="584" startBytecode="0" endBytecode="197" sourcefile="XmlSuite.java" sourcepath="org/testng/xml/XmlSuite.java" synthetic="true">
      <Message>At XmlSuite.java:[lines 572-584]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="109c366f3f79cf1fa2bd0045ca7a91a0" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.xml.XmlSuite.getChildSuites() may expose internal representation by returning XmlSuite.m_childSuites</LongMessage>
    <Class classname="org.testng.xml.XmlSuite" primary="true">
      <SourceLine classname="org.testng.xml.XmlSuite" start="19" end="981" sourcefile="XmlSuite.java" sourcepath="org/testng/xml/XmlSuite.java">
        <Message>At XmlSuite.java:[lines 19-981]</Message>
      </SourceLine>
      <Message>In class org.testng.xml.XmlSuite</Message>
    </Class>
    <Method classname="org.testng.xml.XmlSuite" name="getChildSuites" signature="()Ljava/util/List;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.xml.XmlSuite" start="710" end="710" startBytecode="0" endBytecode="46" sourcefile="XmlSuite.java" sourcepath="org/testng/xml/XmlSuite.java"/>
      <Message>In method org.testng.xml.XmlSuite.getChildSuites()</Message>
    </Method>
    <Field classname="org.testng.xml.XmlSuite" name="m_childSuites" signature="Ljava/util/List;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.xml.XmlSuite" sourcefile="XmlSuite.java" sourcepath="org/testng/xml/XmlSuite.java">
        <Message>In XmlSuite.java</Message>
      </SourceLine>
      <Message>Field org.testng.xml.XmlSuite.m_childSuites</Message>
    </Field>
    <SourceLine classname="org.testng.xml.XmlSuite" primary="true" start="710" end="710" startBytecode="4" endBytecode="4" sourcefile="XmlSuite.java" sourcepath="org/testng/xml/XmlSuite.java">
      <Message>At XmlSuite.java:[line 710]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="7cd94b2ca476dac20aacc3f41ae11c48" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.xml.XmlSuite.getExcludedGroups() may expose internal representation by returning XmlSuite.m_excludedGroups</LongMessage>
    <Class classname="org.testng.xml.XmlSuite" primary="true">
      <SourceLine classname="org.testng.xml.XmlSuite" start="19" end="981" sourcefile="XmlSuite.java" sourcepath="org/testng/xml/XmlSuite.java">
        <Message>At XmlSuite.java:[lines 19-981]</Message>
      </SourceLine>
      <Message>In class org.testng.xml.XmlSuite</Message>
    </Class>
    <Method classname="org.testng.xml.XmlSuite" name="getExcludedGroups" signature="()Ljava/util/List;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.xml.XmlSuite" start="909" end="914" startBytecode="0" endBytecode="115" sourcefile="XmlSuite.java" sourcepath="org/testng/xml/XmlSuite.java"/>
      <Message>In method org.testng.xml.XmlSuite.getExcludedGroups()</Message>
    </Method>
    <Field classname="org.testng.xml.XmlSuite" name="m_excludedGroups" signature="Ljava/util/List;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.xml.XmlSuite" sourcefile="XmlSuite.java" sourcepath="org/testng/xml/XmlSuite.java">
        <Message>In XmlSuite.java</Message>
      </SourceLine>
      <Message>Field org.testng.xml.XmlSuite.m_excludedGroups</Message>
    </Field>
    <SourceLine classname="org.testng.xml.XmlSuite" primary="true" start="914" end="914" startBytecode="47" endBytecode="47" sourcefile="XmlSuite.java" sourcepath="org/testng/xml/XmlSuite.java">
      <Message>At XmlSuite.java:[line 914]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="cdeea41212d24df68c0514f2d416ab8e" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.xml.XmlSuite.getGroups() may expose internal representation by returning XmlSuite.m_xmlGroups</LongMessage>
    <Class classname="org.testng.xml.XmlSuite" primary="true">
      <SourceLine classname="org.testng.xml.XmlSuite" start="19" end="981" sourcefile="XmlSuite.java" sourcepath="org/testng/xml/XmlSuite.java">
        <Message>At XmlSuite.java:[lines 19-981]</Message>
      </SourceLine>
      <Message>In class org.testng.xml.XmlSuite</Message>
    </Class>
    <Method classname="org.testng.xml.XmlSuite" name="getGroups" signature="()Lorg/testng/xml/XmlGroups;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.xml.XmlSuite" start="969" end="969" startBytecode="0" endBytecode="46" sourcefile="XmlSuite.java" sourcepath="org/testng/xml/XmlSuite.java"/>
      <Message>In method org.testng.xml.XmlSuite.getGroups()</Message>
    </Method>
    <Field classname="org.testng.xml.XmlSuite" name="m_xmlGroups" signature="Lorg/testng/xml/XmlGroups;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.xml.XmlSuite" sourcefile="XmlSuite.java" sourcepath="org/testng/xml/XmlSuite.java">
        <Message>In XmlSuite.java</Message>
      </SourceLine>
      <Message>Field org.testng.xml.XmlSuite.m_xmlGroups</Message>
    </Field>
    <SourceLine classname="org.testng.xml.XmlSuite" primary="true" start="969" end="969" startBytecode="4" endBytecode="4" sourcefile="XmlSuite.java" sourcepath="org/testng/xml/XmlSuite.java">
      <Message>At XmlSuite.java:[line 969]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="eadd89621d11fe5c9e928ae17d6e0df9" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.xml.XmlSuite.getIncludedGroups() may expose internal representation by returning XmlSuite.m_includedGroups</LongMessage>
    <Class classname="org.testng.xml.XmlSuite" primary="true">
      <SourceLine classname="org.testng.xml.XmlSuite" start="19" end="981" sourcefile="XmlSuite.java" sourcepath="org/testng/xml/XmlSuite.java">
        <Message>At XmlSuite.java:[lines 19-981]</Message>
      </SourceLine>
      <Message>In class org.testng.xml.XmlSuite</Message>
    </Class>
    <Method classname="org.testng.xml.XmlSuite" name="getIncludedGroups" signature="()Ljava/util/List;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.xml.XmlSuite" start="880" end="886" startBytecode="0" endBytecode="115" sourcefile="XmlSuite.java" sourcepath="org/testng/xml/XmlSuite.java"/>
      <Message>In method org.testng.xml.XmlSuite.getIncludedGroups()</Message>
    </Method>
    <Field classname="org.testng.xml.XmlSuite" name="m_includedGroups" signature="Ljava/util/List;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.xml.XmlSuite" sourcefile="XmlSuite.java" sourcepath="org/testng/xml/XmlSuite.java">
        <Message>In XmlSuite.java</Message>
      </SourceLine>
      <Message>Field org.testng.xml.XmlSuite.m_includedGroups</Message>
    </Field>
    <SourceLine classname="org.testng.xml.XmlSuite" primary="true" start="886" end="886" startBytecode="47" endBytecode="47" sourcefile="XmlSuite.java" sourcepath="org/testng/xml/XmlSuite.java">
      <Message>At XmlSuite.java:[line 886]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="fb334b82a49013a5e4ce4d0b67974a99" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.xml.XmlSuite.getListeners() may expose internal representation by returning XmlSuite.m_listeners</LongMessage>
    <Class classname="org.testng.xml.XmlSuite" primary="true">
      <SourceLine classname="org.testng.xml.XmlSuite" start="19" end="981" sourcefile="XmlSuite.java" sourcepath="org/testng/xml/XmlSuite.java">
        <Message>At XmlSuite.java:[lines 19-981]</Message>
      </SourceLine>
      <Message>In class org.testng.xml.XmlSuite</Message>
    </Class>
    <Method classname="org.testng.xml.XmlSuite" name="getListeners" signature="()Ljava/util/List;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.xml.XmlSuite" start="673" end="681" startBytecode="0" endBytecode="197" sourcefile="XmlSuite.java" sourcepath="org/testng/xml/XmlSuite.java"/>
      <Message>In method org.testng.xml.XmlSuite.getListeners()</Message>
    </Method>
    <Field classname="org.testng.xml.XmlSuite" name="m_listeners" signature="Ljava/util/List;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.xml.XmlSuite" sourcefile="XmlSuite.java" sourcepath="org/testng/xml/XmlSuite.java">
        <Message>In XmlSuite.java</Message>
      </SourceLine>
      <Message>Field org.testng.xml.XmlSuite.m_listeners</Message>
    </Field>
    <SourceLine classname="org.testng.xml.XmlSuite" primary="true" start="681" end="681" startBytecode="72" endBytecode="72" sourcefile="XmlSuite.java" sourcepath="org/testng/xml/XmlSuite.java">
      <Message>At XmlSuite.java:[line 681]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="c71972157e9f94f49402493dc82769c8" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.xml.XmlSuite.getLocalListeners() may expose internal representation by returning XmlSuite.m_listeners</LongMessage>
    <Class classname="org.testng.xml.XmlSuite" primary="true">
      <SourceLine classname="org.testng.xml.XmlSuite" start="19" end="981" sourcefile="XmlSuite.java" sourcepath="org/testng/xml/XmlSuite.java">
        <Message>At XmlSuite.java:[lines 19-981]</Message>
      </SourceLine>
      <Message>In class org.testng.xml.XmlSuite</Message>
    </Class>
    <Method classname="org.testng.xml.XmlSuite" name="getLocalListeners" signature="()Ljava/util/List;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.xml.XmlSuite" start="537" end="537" startBytecode="0" endBytecode="46" sourcefile="XmlSuite.java" sourcepath="org/testng/xml/XmlSuite.java"/>
      <Message>In method org.testng.xml.XmlSuite.getLocalListeners()</Message>
    </Method>
    <Field classname="org.testng.xml.XmlSuite" name="m_listeners" signature="Ljava/util/List;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.xml.XmlSuite" sourcefile="XmlSuite.java" sourcepath="org/testng/xml/XmlSuite.java">
        <Message>In XmlSuite.java</Message>
      </SourceLine>
      <Message>Field org.testng.xml.XmlSuite.m_listeners</Message>
    </Field>
    <SourceLine classname="org.testng.xml.XmlSuite" primary="true" start="537" end="537" startBytecode="4" endBytecode="4" sourcefile="XmlSuite.java" sourcepath="org/testng/xml/XmlSuite.java">
      <Message>At XmlSuite.java:[line 537]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="91312c6005b10bac415ec5df15b32584" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.xml.XmlSuite.getMethodSelectors() may expose internal representation by returning XmlSuite.m_methodSelectors</LongMessage>
    <Class classname="org.testng.xml.XmlSuite" primary="true">
      <SourceLine classname="org.testng.xml.XmlSuite" start="19" end="981" sourcefile="XmlSuite.java" sourcepath="org/testng/xml/XmlSuite.java">
        <Message>At XmlSuite.java:[lines 19-981]</Message>
      </SourceLine>
      <Message>In class org.testng.xml.XmlSuite</Message>
    </Class>
    <Method classname="org.testng.xml.XmlSuite" name="getMethodSelectors" signature="()Ljava/util/List;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.xml.XmlSuite" start="372" end="376" startBytecode="0" endBytecode="78" sourcefile="XmlSuite.java" sourcepath="org/testng/xml/XmlSuite.java"/>
      <Message>In method org.testng.xml.XmlSuite.getMethodSelectors()</Message>
    </Method>
    <Field classname="org.testng.xml.XmlSuite" name="m_methodSelectors" signature="Ljava/util/List;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.xml.XmlSuite" sourcefile="XmlSuite.java" sourcepath="org/testng/xml/XmlSuite.java">
        <Message>In XmlSuite.java</Message>
      </SourceLine>
      <Message>Field org.testng.xml.XmlSuite.m_methodSelectors</Message>
    </Field>
    <SourceLine classname="org.testng.xml.XmlSuite" primary="true" start="376" end="376" startBytecode="19" endBytecode="19" sourcefile="XmlSuite.java" sourcepath="org/testng/xml/XmlSuite.java">
      <Message>At XmlSuite.java:[line 376]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="64253face340c0f0029ce2f23d9bb38e" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.xml.XmlSuite.getParameters() may expose internal representation by returning XmlSuite.m_parameters</LongMessage>
    <Class classname="org.testng.xml.XmlSuite" primary="true">
      <SourceLine classname="org.testng.xml.XmlSuite" start="19" end="981" sourcefile="XmlSuite.java" sourcepath="org/testng/xml/XmlSuite.java">
        <Message>At XmlSuite.java:[lines 19-981]</Message>
      </SourceLine>
      <Message>In class org.testng.xml.XmlSuite</Message>
    </Class>
    <Method classname="org.testng.xml.XmlSuite" name="getParameters" signature="()Ljava/util/Map;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.xml.XmlSuite" start="427" end="427" startBytecode="0" endBytecode="46" sourcefile="XmlSuite.java" sourcepath="org/testng/xml/XmlSuite.java"/>
      <Message>In method org.testng.xml.XmlSuite.getParameters()</Message>
    </Method>
    <Field classname="org.testng.xml.XmlSuite" name="m_parameters" signature="Ljava/util/Map;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.xml.XmlSuite" sourcefile="XmlSuite.java" sourcepath="org/testng/xml/XmlSuite.java">
        <Message>In XmlSuite.java</Message>
      </SourceLine>
      <Message>Field org.testng.xml.XmlSuite.m_parameters</Message>
    </Field>
    <SourceLine classname="org.testng.xml.XmlSuite" primary="true" start="427" end="427" startBytecode="4" endBytecode="4" sourcefile="XmlSuite.java" sourcepath="org/testng/xml/XmlSuite.java">
      <Message>At XmlSuite.java:[line 427]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="860e42e64756a2cbc2018e7b3a00b683" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.xml.XmlSuite.getParentSuite() may expose internal representation by returning XmlSuite.m_parentSuite</LongMessage>
    <Class classname="org.testng.xml.XmlSuite" primary="true">
      <SourceLine classname="org.testng.xml.XmlSuite" start="19" end="981" sourcefile="XmlSuite.java" sourcepath="org/testng/xml/XmlSuite.java">
        <Message>At XmlSuite.java:[lines 19-981]</Message>
      </SourceLine>
      <Message>In class org.testng.xml.XmlSuite</Message>
    </Class>
    <Method classname="org.testng.xml.XmlSuite" name="getParentSuite" signature="()Lorg/testng/xml/XmlSuite;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.xml.XmlSuite" start="706" end="706" startBytecode="0" endBytecode="46" sourcefile="XmlSuite.java" sourcepath="org/testng/xml/XmlSuite.java"/>
      <Message>In method org.testng.xml.XmlSuite.getParentSuite()</Message>
    </Method>
    <Field classname="org.testng.xml.XmlSuite" name="m_parentSuite" signature="Lorg/testng/xml/XmlSuite;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.xml.XmlSuite" sourcefile="XmlSuite.java" sourcepath="org/testng/xml/XmlSuite.java">
        <Message>In XmlSuite.java</Message>
      </SourceLine>
      <Message>Field org.testng.xml.XmlSuite.m_parentSuite</Message>
    </Field>
    <SourceLine classname="org.testng.xml.XmlSuite" primary="true" start="706" end="706" startBytecode="4" endBytecode="4" sourcefile="XmlSuite.java" sourcepath="org/testng/xml/XmlSuite.java">
      <Message>At XmlSuite.java:[line 706]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="153258e987388f296dbc1e64dd1e3a86" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.xml.XmlSuite.getSuiteFiles() may expose internal representation by returning XmlSuite.m_suiteFiles</LongMessage>
    <Class classname="org.testng.xml.XmlSuite" primary="true">
      <SourceLine classname="org.testng.xml.XmlSuite" start="19" end="981" sourcefile="XmlSuite.java" sourcepath="org/testng/xml/XmlSuite.java">
        <Message>At XmlSuite.java:[lines 19-981]</Message>
      </SourceLine>
      <Message>In class org.testng.xml.XmlSuite</Message>
    </Class>
    <Method classname="org.testng.xml.XmlSuite" name="getSuiteFiles" signature="()Ljava/util/List;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.xml.XmlSuite" start="665" end="665" startBytecode="0" endBytecode="46" sourcefile="XmlSuite.java" sourcepath="org/testng/xml/XmlSuite.java"/>
      <Message>In method org.testng.xml.XmlSuite.getSuiteFiles()</Message>
    </Method>
    <Field classname="org.testng.xml.XmlSuite" name="m_suiteFiles" signature="Ljava/util/List;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.xml.XmlSuite" sourcefile="XmlSuite.java" sourcepath="org/testng/xml/XmlSuite.java">
        <Message>In XmlSuite.java</Message>
      </SourceLine>
      <Message>Field org.testng.xml.XmlSuite.m_suiteFiles</Message>
    </Field>
    <SourceLine classname="org.testng.xml.XmlSuite" primary="true" start="665" end="665" startBytecode="4" endBytecode="4" sourcefile="XmlSuite.java" sourcepath="org/testng/xml/XmlSuite.java">
      <Message>At XmlSuite.java:[line 665]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="937f2f4b4b6fbceabb175f8ae63d1b5f" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.xml.XmlSuite.getTests() may expose internal representation by returning XmlSuite.m_tests</LongMessage>
    <Class classname="org.testng.xml.XmlSuite" primary="true">
      <SourceLine classname="org.testng.xml.XmlSuite" start="19" end="981" sourcefile="XmlSuite.java" sourcepath="org/testng/xml/XmlSuite.java">
        <Message>At XmlSuite.java:[lines 19-981]</Message>
      </SourceLine>
      <Message>In class org.testng.xml.XmlSuite</Message>
    </Class>
    <Method classname="org.testng.xml.XmlSuite" name="getTests" signature="()Ljava/util/List;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.xml.XmlSuite" start="358" end="358" startBytecode="0" endBytecode="46" sourcefile="XmlSuite.java" sourcepath="org/testng/xml/XmlSuite.java"/>
      <Message>In method org.testng.xml.XmlSuite.getTests()</Message>
    </Method>
    <Field classname="org.testng.xml.XmlSuite" name="m_tests" signature="Ljava/util/List;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.xml.XmlSuite" sourcefile="XmlSuite.java" sourcepath="org/testng/xml/XmlSuite.java">
        <Message>In XmlSuite.java</Message>
      </SourceLine>
      <Message>Field org.testng.xml.XmlSuite.m_tests</Message>
    </Field>
    <SourceLine classname="org.testng.xml.XmlSuite" primary="true" start="358" end="358" startBytecode="4" endBytecode="4" sourcefile="XmlSuite.java" sourcepath="org/testng/xml/XmlSuite.java">
      <Message>At XmlSuite.java:[line 358]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="1142fad4cae71ce422f1566cd5c66eb5" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.xml.XmlSuite.getXmlMethodSelectors() may expose internal representation by returning XmlSuite.m_xmlMethodSelectors</LongMessage>
    <Class classname="org.testng.xml.XmlSuite" primary="true">
      <SourceLine classname="org.testng.xml.XmlSuite" start="19" end="981" sourcefile="XmlSuite.java" sourcepath="org/testng/xml/XmlSuite.java">
        <Message>At XmlSuite.java:[lines 19-981]</Message>
      </SourceLine>
      <Message>In class org.testng.xml.XmlSuite</Message>
    </Class>
    <Method classname="org.testng.xml.XmlSuite" name="getXmlMethodSelectors" signature="()Lorg/testng/xml/XmlMethodSelectors;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.xml.XmlSuite" start="545" end="545" startBytecode="0" endBytecode="46" sourcefile="XmlSuite.java" sourcepath="org/testng/xml/XmlSuite.java"/>
      <Message>In method org.testng.xml.XmlSuite.getXmlMethodSelectors()</Message>
    </Method>
    <Field classname="org.testng.xml.XmlSuite" name="m_xmlMethodSelectors" signature="Lorg/testng/xml/XmlMethodSelectors;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.xml.XmlSuite" sourcefile="XmlSuite.java" sourcepath="org/testng/xml/XmlSuite.java">
        <Message>In XmlSuite.java</Message>
      </SourceLine>
      <Message>Field org.testng.xml.XmlSuite.m_xmlMethodSelectors</Message>
    </Field>
    <SourceLine classname="org.testng.xml.XmlSuite" primary="true" start="545" end="545" startBytecode="4" endBytecode="4" sourcefile="XmlSuite.java" sourcepath="org/testng/xml/XmlSuite.java">
      <Message>At XmlSuite.java:[line 545]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="7ec572a5faca7408d19a930e316a575" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.xml.XmlSuite.getXmlPackages() may expose internal representation by returning XmlSuite.m_xmlPackages</LongMessage>
    <Class classname="org.testng.xml.XmlSuite" primary="true">
      <SourceLine classname="org.testng.xml.XmlSuite" start="19" end="981" sourcefile="XmlSuite.java" sourcepath="org/testng/xml/XmlSuite.java">
        <Message>At XmlSuite.java:[lines 19-981]</Message>
      </SourceLine>
      <Message>In class org.testng.xml.XmlSuite</Message>
    </Class>
    <Method classname="org.testng.xml.XmlSuite" name="getXmlPackages" signature="()Ljava/util/List;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.xml.XmlSuite" start="513" end="513" startBytecode="0" endBytecode="46" sourcefile="XmlSuite.java" sourcepath="org/testng/xml/XmlSuite.java"/>
      <Message>In method org.testng.xml.XmlSuite.getXmlPackages()</Message>
    </Method>
    <Field classname="org.testng.xml.XmlSuite" name="m_xmlPackages" signature="Ljava/util/List;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.xml.XmlSuite" sourcefile="XmlSuite.java" sourcepath="org/testng/xml/XmlSuite.java">
        <Message>In XmlSuite.java</Message>
      </SourceLine>
      <Message>Field org.testng.xml.XmlSuite.m_xmlPackages</Message>
    </Field>
    <SourceLine classname="org.testng.xml.XmlSuite" primary="true" start="513" end="513" startBytecode="4" endBytecode="4" sourcefile="XmlSuite.java" sourcepath="org/testng/xml/XmlSuite.java">
      <Message>At XmlSuite.java:[line 513]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="f3c1589df455dbfdc29dcb2b96857967" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>org.testng.xml.XmlSuite.setExcludedGroups(List) may expose internal representation by storing an externally mutable object into XmlSuite.m_excludedGroups</LongMessage>
    <Class classname="org.testng.xml.XmlSuite" primary="true">
      <SourceLine classname="org.testng.xml.XmlSuite" start="19" end="981" sourcefile="XmlSuite.java" sourcepath="org/testng/xml/XmlSuite.java">
        <Message>At XmlSuite.java:[lines 19-981]</Message>
      </SourceLine>
      <Message>In class org.testng.xml.XmlSuite</Message>
    </Class>
    <Method classname="org.testng.xml.XmlSuite" name="setExcludedGroups" signature="(Ljava/util/List;)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.xml.XmlSuite" start="901" end="902" startBytecode="0" endBytecode="79" sourcefile="XmlSuite.java" sourcepath="org/testng/xml/XmlSuite.java"/>
      <Message>In method org.testng.xml.XmlSuite.setExcludedGroups(List)</Message>
    </Method>
    <Field classname="org.testng.xml.XmlSuite" name="m_excludedGroups" signature="Ljava/util/List;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.xml.XmlSuite" sourcefile="XmlSuite.java" sourcepath="org/testng/xml/XmlSuite.java">
        <Message>In XmlSuite.java</Message>
      </SourceLine>
      <Message>Field org.testng.xml.XmlSuite.m_excludedGroups</Message>
    </Field>
    <LocalVariable name="g" register="1" pc="2" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named g</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.xml.XmlSuite" primary="true" start="901" end="901" startBytecode="2" endBytecode="2" sourcefile="XmlSuite.java" sourcepath="org/testng/xml/XmlSuite.java">
      <Message>At XmlSuite.java:[line 901]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="12b82eb9630fdfceee239b920b5aef57" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>org.testng.xml.XmlSuite.setGroups(XmlGroups) may expose internal representation by storing an externally mutable object into XmlSuite.m_xmlGroups</LongMessage>
    <Class classname="org.testng.xml.XmlSuite" primary="true">
      <SourceLine classname="org.testng.xml.XmlSuite" start="19" end="981" sourcefile="XmlSuite.java" sourcepath="org/testng/xml/XmlSuite.java">
        <Message>At XmlSuite.java:[lines 19-981]</Message>
      </SourceLine>
      <Message>In class org.testng.xml.XmlSuite</Message>
    </Class>
    <Method classname="org.testng.xml.XmlSuite" name="setGroups" signature="(Lorg/testng/xml/XmlGroups;)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.xml.XmlSuite" start="945" end="946" startBytecode="0" endBytecode="61" sourcefile="XmlSuite.java" sourcepath="org/testng/xml/XmlSuite.java"/>
      <Message>In method org.testng.xml.XmlSuite.setGroups(XmlGroups)</Message>
    </Method>
    <Field classname="org.testng.xml.XmlSuite" name="m_xmlGroups" signature="Lorg/testng/xml/XmlGroups;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.xml.XmlSuite" sourcefile="XmlSuite.java" sourcepath="org/testng/xml/XmlSuite.java">
        <Message>In XmlSuite.java</Message>
      </SourceLine>
      <Message>Field org.testng.xml.XmlSuite.m_xmlGroups</Message>
    </Field>
    <LocalVariable name="xmlGroups" register="1" pc="2" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named xmlGroups</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.xml.XmlSuite" primary="true" start="945" end="945" startBytecode="2" endBytecode="2" sourcefile="XmlSuite.java" sourcepath="org/testng/xml/XmlSuite.java">
      <Message>At XmlSuite.java:[line 945]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="cecfc9d34575bab3791dde5694673fb4" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>org.testng.xml.XmlSuite.setIncludedGroups(List) may expose internal representation by storing an externally mutable object into XmlSuite.m_includedGroups</LongMessage>
    <Class classname="org.testng.xml.XmlSuite" primary="true">
      <SourceLine classname="org.testng.xml.XmlSuite" start="19" end="981" sourcefile="XmlSuite.java" sourcepath="org/testng/xml/XmlSuite.java">
        <Message>At XmlSuite.java:[lines 19-981]</Message>
      </SourceLine>
      <Message>In class org.testng.xml.XmlSuite</Message>
    </Class>
    <Method classname="org.testng.xml.XmlSuite" name="setIncludedGroups" signature="(Ljava/util/List;)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.xml.XmlSuite" start="896" end="897" startBytecode="0" endBytecode="79" sourcefile="XmlSuite.java" sourcepath="org/testng/xml/XmlSuite.java"/>
      <Message>In method org.testng.xml.XmlSuite.setIncludedGroups(List)</Message>
    </Method>
    <Field classname="org.testng.xml.XmlSuite" name="m_includedGroups" signature="Ljava/util/List;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.xml.XmlSuite" sourcefile="XmlSuite.java" sourcepath="org/testng/xml/XmlSuite.java">
        <Message>In XmlSuite.java</Message>
      </SourceLine>
      <Message>Field org.testng.xml.XmlSuite.m_includedGroups</Message>
    </Field>
    <LocalVariable name="g" register="1" pc="2" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named g</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.xml.XmlSuite" primary="true" start="896" end="896" startBytecode="2" endBytecode="2" sourcefile="XmlSuite.java" sourcepath="org/testng/xml/XmlSuite.java">
      <Message>At XmlSuite.java:[line 896]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="cd3fc523425a2443cff4b745c4952e69" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>org.testng.xml.XmlSuite.setListeners(List) may expose internal representation by storing an externally mutable object into XmlSuite.m_listeners</LongMessage>
    <Class classname="org.testng.xml.XmlSuite" primary="true">
      <SourceLine classname="org.testng.xml.XmlSuite" start="19" end="981" sourcefile="XmlSuite.java" sourcepath="org/testng/xml/XmlSuite.java">
        <Message>At XmlSuite.java:[lines 19-981]</Message>
      </SourceLine>
      <Message>In class org.testng.xml.XmlSuite</Message>
    </Class>
    <Method classname="org.testng.xml.XmlSuite" name="setListeners" signature="(Ljava/util/List;)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.xml.XmlSuite" start="669" end="670" startBytecode="0" endBytecode="79" sourcefile="XmlSuite.java" sourcepath="org/testng/xml/XmlSuite.java"/>
      <Message>In method org.testng.xml.XmlSuite.setListeners(List)</Message>
    </Method>
    <Field classname="org.testng.xml.XmlSuite" name="m_listeners" signature="Ljava/util/List;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.xml.XmlSuite" sourcefile="XmlSuite.java" sourcepath="org/testng/xml/XmlSuite.java">
        <Message>In XmlSuite.java</Message>
      </SourceLine>
      <Message>Field org.testng.xml.XmlSuite.m_listeners</Message>
    </Field>
    <LocalVariable name="listeners" register="1" pc="2" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named listeners</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.xml.XmlSuite" primary="true" start="669" end="669" startBytecode="2" endBytecode="2" sourcefile="XmlSuite.java" sourcepath="org/testng/xml/XmlSuite.java">
      <Message>At XmlSuite.java:[line 669]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="f5a5f9d5b7a34537dc9498c3ca88e918" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>org.testng.xml.XmlSuite.setMethodSelectors(XmlMethodSelectors) may expose internal representation by storing an externally mutable object into XmlSuite.m_xmlMethodSelectors</LongMessage>
    <Class classname="org.testng.xml.XmlSuite" primary="true">
      <SourceLine classname="org.testng.xml.XmlSuite" start="19" end="981" sourcefile="XmlSuite.java" sourcepath="org/testng/xml/XmlSuite.java">
        <Message>At XmlSuite.java:[lines 19-981]</Message>
      </SourceLine>
      <Message>In class org.testng.xml.XmlSuite</Message>
    </Class>
    <Method classname="org.testng.xml.XmlSuite" name="setMethodSelectors" signature="(Lorg/testng/xml/XmlMethodSelectors;)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.xml.XmlSuite" start="522" end="523" startBytecode="0" endBytecode="61" sourcefile="XmlSuite.java" sourcepath="org/testng/xml/XmlSuite.java"/>
      <Message>In method org.testng.xml.XmlSuite.setMethodSelectors(XmlMethodSelectors)</Message>
    </Method>
    <Field classname="org.testng.xml.XmlSuite" name="m_xmlMethodSelectors" signature="Lorg/testng/xml/XmlMethodSelectors;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.xml.XmlSuite" sourcefile="XmlSuite.java" sourcepath="org/testng/xml/XmlSuite.java">
        <Message>In XmlSuite.java</Message>
      </SourceLine>
      <Message>Field org.testng.xml.XmlSuite.m_xmlMethodSelectors</Message>
    </Field>
    <LocalVariable name="xms" register="1" pc="2" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named xms</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.xml.XmlSuite" primary="true" start="522" end="522" startBytecode="2" endBytecode="2" sourcefile="XmlSuite.java" sourcepath="org/testng/xml/XmlSuite.java">
      <Message>At XmlSuite.java:[line 522]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="b0e25dcdc85b604ef84dce577b6816d" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>org.testng.xml.XmlSuite.setParameters(Map) may expose internal representation by storing an externally mutable object into XmlSuite.m_parameters</LongMessage>
    <Class classname="org.testng.xml.XmlSuite" primary="true">
      <SourceLine classname="org.testng.xml.XmlSuite" start="19" end="981" sourcefile="XmlSuite.java" sourcepath="org/testng/xml/XmlSuite.java">
        <Message>At XmlSuite.java:[lines 19-981]</Message>
      </SourceLine>
      <Message>In class org.testng.xml.XmlSuite</Message>
    </Class>
    <Method classname="org.testng.xml.XmlSuite" name="setParameters" signature="(Ljava/util/Map;)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.xml.XmlSuite" start="417" end="419" startBytecode="0" endBytecode="87" sourcefile="XmlSuite.java" sourcepath="org/testng/xml/XmlSuite.java"/>
      <Message>In method org.testng.xml.XmlSuite.setParameters(Map)</Message>
    </Method>
    <Field classname="org.testng.xml.XmlSuite" name="m_parameters" signature="Ljava/util/Map;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.xml.XmlSuite" sourcefile="XmlSuite.java" sourcepath="org/testng/xml/XmlSuite.java">
        <Message>In XmlSuite.java</Message>
      </SourceLine>
      <Message>Field org.testng.xml.XmlSuite.m_parameters</Message>
    </Field>
    <LocalVariable name="parameters" register="1" pc="2" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named parameters</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.xml.XmlSuite" primary="true" start="417" end="417" startBytecode="2" endBytecode="2" sourcefile="XmlSuite.java" sourcepath="org/testng/xml/XmlSuite.java">
      <Message>At XmlSuite.java:[line 417]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="2a16e8b8b6e730a562253ecd52729c65" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>org.testng.xml.XmlSuite.setParentSuite(XmlSuite) may expose internal representation by storing an externally mutable object into XmlSuite.m_parentSuite</LongMessage>
    <Class classname="org.testng.xml.XmlSuite" primary="true">
      <SourceLine classname="org.testng.xml.XmlSuite" start="19" end="981" sourcefile="XmlSuite.java" sourcepath="org/testng/xml/XmlSuite.java">
        <Message>At XmlSuite.java:[lines 19-981]</Message>
      </SourceLine>
      <Message>In class org.testng.xml.XmlSuite</Message>
    </Class>
    <Method classname="org.testng.xml.XmlSuite" name="setParentSuite" signature="(Lorg/testng/xml/XmlSuite;)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.xml.XmlSuite" start="701" end="703" startBytecode="0" endBytecode="69" sourcefile="XmlSuite.java" sourcepath="org/testng/xml/XmlSuite.java"/>
      <Message>In method org.testng.xml.XmlSuite.setParentSuite(XmlSuite)</Message>
    </Method>
    <Field classname="org.testng.xml.XmlSuite" name="m_parentSuite" signature="Lorg/testng/xml/XmlSuite;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.xml.XmlSuite" sourcefile="XmlSuite.java" sourcepath="org/testng/xml/XmlSuite.java">
        <Message>In XmlSuite.java</Message>
      </SourceLine>
      <Message>Field org.testng.xml.XmlSuite.m_parentSuite</Message>
    </Field>
    <LocalVariable name="parentSuite" register="1" pc="2" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named parentSuite</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.xml.XmlSuite" primary="true" start="701" end="701" startBytecode="2" endBytecode="2" sourcefile="XmlSuite.java" sourcepath="org/testng/xml/XmlSuite.java">
      <Message>At XmlSuite.java:[line 701]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="e7f057d105acc66d859cc9c58c277066" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>org.testng.xml.XmlSuite.setSuiteFiles(List) may expose internal representation by storing an externally mutable object into XmlSuite.m_suiteFiles</LongMessage>
    <Class classname="org.testng.xml.XmlSuite" primary="true">
      <SourceLine classname="org.testng.xml.XmlSuite" start="19" end="981" sourcefile="XmlSuite.java" sourcepath="org/testng/xml/XmlSuite.java">
        <Message>At XmlSuite.java:[lines 19-981]</Message>
      </SourceLine>
      <Message>In class org.testng.xml.XmlSuite</Message>
    </Class>
    <Method classname="org.testng.xml.XmlSuite" name="setSuiteFiles" signature="(Ljava/util/List;)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.xml.XmlSuite" start="656" end="657" startBytecode="0" endBytecode="79" sourcefile="XmlSuite.java" sourcepath="org/testng/xml/XmlSuite.java"/>
      <Message>In method org.testng.xml.XmlSuite.setSuiteFiles(List)</Message>
    </Method>
    <Field classname="org.testng.xml.XmlSuite" name="m_suiteFiles" signature="Ljava/util/List;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.xml.XmlSuite" sourcefile="XmlSuite.java" sourcepath="org/testng/xml/XmlSuite.java">
        <Message>In XmlSuite.java</Message>
      </SourceLine>
      <Message>Field org.testng.xml.XmlSuite.m_suiteFiles</Message>
    </Field>
    <LocalVariable name="files" register="1" pc="2" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named files</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.xml.XmlSuite" primary="true" start="656" end="656" startBytecode="2" endBytecode="2" sourcefile="XmlSuite.java" sourcepath="org/testng/xml/XmlSuite.java">
      <Message>At XmlSuite.java:[line 656]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="6f570d74270bada159c6c1730ab3a534" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>org.testng.xml.XmlSuite.setTests(List) may expose internal representation by storing an externally mutable object into XmlSuite.m_tests</LongMessage>
    <Class classname="org.testng.xml.XmlSuite" primary="true">
      <SourceLine classname="org.testng.xml.XmlSuite" start="19" end="981" sourcefile="XmlSuite.java" sourcepath="org/testng/xml/XmlSuite.java">
        <Message>At XmlSuite.java:[lines 19-981]</Message>
      </SourceLine>
      <Message>In class org.testng.xml.XmlSuite</Message>
    </Class>
    <Method classname="org.testng.xml.XmlSuite" name="setTests" signature="(Ljava/util/List;)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.xml.XmlSuite" start="363" end="364" startBytecode="0" endBytecode="79" sourcefile="XmlSuite.java" sourcepath="org/testng/xml/XmlSuite.java"/>
      <Message>In method org.testng.xml.XmlSuite.setTests(List)</Message>
    </Method>
    <Field classname="org.testng.xml.XmlSuite" name="m_tests" signature="Ljava/util/List;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.xml.XmlSuite" sourcefile="XmlSuite.java" sourcepath="org/testng/xml/XmlSuite.java">
        <Message>In XmlSuite.java</Message>
      </SourceLine>
      <Message>Field org.testng.xml.XmlSuite.m_tests</Message>
    </Field>
    <LocalVariable name="tests" register="1" pc="2" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named tests</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.xml.XmlSuite" primary="true" start="363" end="363" startBytecode="2" endBytecode="2" sourcefile="XmlSuite.java" sourcepath="org/testng/xml/XmlSuite.java">
      <Message>At XmlSuite.java:[line 363]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="1f8d2803da588f31868c69c39aa872e3" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>org.testng.xml.XmlSuite.setXmlMethodSelectors(XmlMethodSelectors) may expose internal representation by storing an externally mutable object into XmlSuite.m_xmlMethodSelectors</LongMessage>
    <Class classname="org.testng.xml.XmlSuite" primary="true">
      <SourceLine classname="org.testng.xml.XmlSuite" start="19" end="981" sourcefile="XmlSuite.java" sourcepath="org/testng/xml/XmlSuite.java">
        <Message>At XmlSuite.java:[lines 19-981]</Message>
      </SourceLine>
      <Message>In class org.testng.xml.XmlSuite</Message>
    </Class>
    <Method classname="org.testng.xml.XmlSuite" name="setXmlMethodSelectors" signature="(Lorg/testng/xml/XmlMethodSelectors;)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.xml.XmlSuite" start="541" end="542" startBytecode="0" endBytecode="61" sourcefile="XmlSuite.java" sourcepath="org/testng/xml/XmlSuite.java"/>
      <Message>In method org.testng.xml.XmlSuite.setXmlMethodSelectors(XmlMethodSelectors)</Message>
    </Method>
    <Field classname="org.testng.xml.XmlSuite" name="m_xmlMethodSelectors" signature="Lorg/testng/xml/XmlMethodSelectors;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.xml.XmlSuite" sourcefile="XmlSuite.java" sourcepath="org/testng/xml/XmlSuite.java">
        <Message>In XmlSuite.java</Message>
      </SourceLine>
      <Message>Field org.testng.xml.XmlSuite.m_xmlMethodSelectors</Message>
    </Field>
    <LocalVariable name="xms" register="1" pc="2" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named xms</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.xml.XmlSuite" primary="true" start="541" end="541" startBytecode="2" endBytecode="2" sourcefile="XmlSuite.java" sourcepath="org/testng/xml/XmlSuite.java">
      <Message>At XmlSuite.java:[line 541]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="UWF_UNWRITTEN_FIELD" priority="3" rank="15" abbrev="UwF" category="CORRECTNESS" instanceHash="aa43799061262ab94a5d46c29f6cebf9" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Unwritten field</ShortMessage>
    <LongMessage>Unwritten field: org.testng.xml.XmlSuite.m_test</LongMessage>
    <Class classname="org.testng.xml.XmlSuite" primary="true">
      <SourceLine classname="org.testng.xml.XmlSuite" start="19" end="981" sourcefile="XmlSuite.java" sourcepath="org/testng/xml/XmlSuite.java">
        <Message>At XmlSuite.java:[lines 19-981]</Message>
      </SourceLine>
      <Message>In class org.testng.xml.XmlSuite</Message>
    </Class>
    <Field classname="org.testng.xml.XmlSuite" name="m_test" signature="Ljava/lang/String;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.xml.XmlSuite" sourcefile="XmlSuite.java" sourcepath="org/testng/xml/XmlSuite.java">
        <Message>In XmlSuite.java</Message>
      </SourceLine>
      <Message>Field org.testng.xml.XmlSuite.m_test</Message>
    </Field>
    <SourceLine classname="org.testng.xml.XmlSuite" primary="true" start="349" end="349" startBytecode="1" endBytecode="1" sourcefile="XmlSuite.java" sourcepath="org/testng/xml/XmlSuite.java">
      <Message>At XmlSuite.java:[line 349]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DM_CONVERT_CASE" priority="3" rank="20" abbrev="Dm" category="I18N" instanceHash="307a75a4e4d5337572dd7e97d73c3d2a" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Consider using Locale parameterized version of invoked method</ShortMessage>
    <LongMessage>Use of non-localized String.toUpperCase() or String.toLowerCase() in org.testng.xml.XmlSuite$FailurePolicy.getValidPolicy(String)</LongMessage>
    <Class classname="org.testng.xml.XmlSuite$FailurePolicy" primary="true">
      <SourceLine classname="org.testng.xml.XmlSuite$FailurePolicy" start="90" end="113" sourcefile="XmlSuite.java" sourcepath="org/testng/xml/XmlSuite.java">
        <Message>At XmlSuite.java:[lines 90-113]</Message>
      </SourceLine>
      <Message>In class org.testng.xml.XmlSuite$FailurePolicy</Message>
    </Class>
    <Method classname="org.testng.xml.XmlSuite$FailurePolicy" name="getValidPolicy" signature="(Ljava/lang/String;)Lorg/testng/xml/XmlSuite$FailurePolicy;" isStatic="true" primary="true">
      <SourceLine classname="org.testng.xml.XmlSuite$FailurePolicy" start="101" end="107" startBytecode="0" endBytecode="105" sourcefile="XmlSuite.java" sourcepath="org/testng/xml/XmlSuite.java"/>
      <Message>In method org.testng.xml.XmlSuite$FailurePolicy.getValidPolicy(String)</Message>
    </Method>
    <SourceLine classname="org.testng.xml.XmlSuite$FailurePolicy" primary="true" start="105" end="105" startBytecode="7" endBytecode="7" sourcefile="XmlSuite.java" sourcepath="org/testng/xml/XmlSuite.java">
      <Message>At XmlSuite.java:[line 105]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DM_CONVERT_CASE" priority="3" rank="20" abbrev="Dm" category="I18N" instanceHash="b0eb32015b2cdecc292d43d49b6f425" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Consider using Locale parameterized version of invoked method</ShortMessage>
    <LongMessage>Use of non-localized String.toUpperCase() or String.toLowerCase() in org.testng.xml.XmlSuite$ParallelMode.getValidParallel(String)</LongMessage>
    <Class classname="org.testng.xml.XmlSuite$ParallelMode" primary="true">
      <SourceLine classname="org.testng.xml.XmlSuite$ParallelMode" start="21" end="85" sourcefile="XmlSuite.java" sourcepath="org/testng/xml/XmlSuite.java">
        <Message>At XmlSuite.java:[lines 21-85]</Message>
      </SourceLine>
      <Message>In class org.testng.xml.XmlSuite$ParallelMode</Message>
    </Class>
    <Method classname="org.testng.xml.XmlSuite$ParallelMode" name="getValidParallel" signature="(Ljava/lang/String;)Lorg/testng/xml/XmlSuite$ParallelMode;" isStatic="true" primary="true">
      <SourceLine classname="org.testng.xml.XmlSuite$ParallelMode" start="45" end="51" startBytecode="0" endBytecode="109" sourcefile="XmlSuite.java" sourcepath="org/testng/xml/XmlSuite.java"/>
      <Message>In method org.testng.xml.XmlSuite$ParallelMode.getValidParallel(String)</Message>
    </Method>
    <SourceLine classname="org.testng.xml.XmlSuite$ParallelMode" primary="true" start="49" end="49" startBytecode="9" endBytecode="9" sourcefile="XmlSuite.java" sourcepath="org/testng/xml/XmlSuite.java">
      <Message>At XmlSuite.java:[line 49]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="CN_IDIOM_NO_SUPER_CALL" priority="2" rank="16" abbrev="CN" category="BAD_PRACTICE" instanceHash="3aa7b14bd7c1e8324a4c3a57b7d9b637" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="580">
    <ShortMessage>clone method does not call super.clone()</ShortMessage>
    <LongMessage>org.testng.xml.XmlTest.clone() does not call super.clone()</LongMessage>
    <Class classname="org.testng.xml.XmlTest" primary="true">
      <SourceLine classname="org.testng.xml.XmlTest" start="19" end="670" sourcefile="XmlTest.java" sourcepath="org/testng/xml/XmlTest.java">
        <Message>At XmlTest.java:[lines 19-670]</Message>
      </SourceLine>
      <Message>In class org.testng.xml.XmlTest</Message>
    </Class>
    <Method classname="org.testng.xml.XmlTest" name="clone" signature="()Ljava/lang/Object;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.xml.XmlTest" start="428" end="445" startBytecode="0" endBytecode="328" sourcefile="XmlTest.java" sourcepath="org/testng/xml/XmlTest.java"/>
      <Message>In method org.testng.xml.XmlTest.clone()</Message>
    </Method>
    <SourceLine classname="org.testng.xml.XmlTest" start="428" end="445" startBytecode="0" endBytecode="328" sourcefile="XmlTest.java" sourcepath="org/testng/xml/XmlTest.java" synthetic="true">
      <Message>At XmlTest.java:[lines 428-445]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="19d9446e1af70c0295151a443800e8a1" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.xml.XmlTest.getLocalParameters() may expose internal representation by returning XmlTest.m_parameters</LongMessage>
    <Class classname="org.testng.xml.XmlTest" primary="true">
      <SourceLine classname="org.testng.xml.XmlTest" start="19" end="670" sourcefile="XmlTest.java" sourcepath="org/testng/xml/XmlTest.java">
        <Message>At XmlTest.java:[lines 19-670]</Message>
      </SourceLine>
      <Message>In class org.testng.xml.XmlTest</Message>
    </Class>
    <Method classname="org.testng.xml.XmlTest" name="getLocalParameters" signature="()Ljava/util/Map;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.xml.XmlTest" start="352" end="352" startBytecode="0" endBytecode="46" sourcefile="XmlTest.java" sourcepath="org/testng/xml/XmlTest.java"/>
      <Message>In method org.testng.xml.XmlTest.getLocalParameters()</Message>
    </Method>
    <Field classname="org.testng.xml.XmlTest" name="m_parameters" signature="Ljava/util/Map;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.xml.XmlTest" sourcefile="XmlTest.java" sourcepath="org/testng/xml/XmlTest.java">
        <Message>In XmlTest.java</Message>
      </SourceLine>
      <Message>Field org.testng.xml.XmlTest.m_parameters</Message>
    </Field>
    <SourceLine classname="org.testng.xml.XmlTest" primary="true" start="352" end="352" startBytecode="4" endBytecode="4" sourcefile="XmlTest.java" sourcepath="org/testng/xml/XmlTest.java">
      <Message>At XmlTest.java:[line 352]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="56abebffbd8d1013710044f08b24fd69" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.xml.XmlTest.getMethodSelectors() may expose internal representation by returning XmlTest.m_methodSelectors</LongMessage>
    <Class classname="org.testng.xml.XmlTest" primary="true">
      <SourceLine classname="org.testng.xml.XmlTest" start="19" end="670" sourcefile="XmlTest.java" sourcepath="org/testng/xml/XmlTest.java">
        <Message>At XmlTest.java:[lines 19-670]</Message>
      </SourceLine>
      <Message>In class org.testng.xml.XmlTest</Message>
    </Class>
    <Method classname="org.testng.xml.XmlTest" name="getMethodSelectors" signature="()Ljava/util/List;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.xml.XmlTest" start="91" end="91" startBytecode="0" endBytecode="46" sourcefile="XmlTest.java" sourcepath="org/testng/xml/XmlTest.java"/>
      <Message>In method org.testng.xml.XmlTest.getMethodSelectors()</Message>
    </Method>
    <Field classname="org.testng.xml.XmlTest" name="m_methodSelectors" signature="Ljava/util/List;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.xml.XmlTest" sourcefile="XmlTest.java" sourcepath="org/testng/xml/XmlTest.java">
        <Message>In XmlTest.java</Message>
      </SourceLine>
      <Message>Field org.testng.xml.XmlTest.m_methodSelectors</Message>
    </Field>
    <SourceLine classname="org.testng.xml.XmlTest" primary="true" start="91" end="91" startBytecode="4" endBytecode="4" sourcefile="XmlTest.java" sourcepath="org/testng/xml/XmlTest.java">
      <Message>At XmlTest.java:[line 91]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="a739b2c31f59d73e6a58d678e3966eca" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.xml.XmlTest.getSuite() may expose internal representation by returning XmlTest.m_suite</LongMessage>
    <Class classname="org.testng.xml.XmlTest" primary="true">
      <SourceLine classname="org.testng.xml.XmlTest" start="19" end="670" sourcefile="XmlTest.java" sourcepath="org/testng/xml/XmlTest.java">
        <Message>At XmlTest.java:[lines 19-670]</Message>
      </SourceLine>
      <Message>In class org.testng.xml.XmlTest</Message>
    </Class>
    <Method classname="org.testng.xml.XmlTest" name="getSuite" signature="()Lorg/testng/xml/XmlSuite;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.xml.XmlTest" start="104" end="108" startBytecode="0" endBytecode="80" sourcefile="XmlTest.java" sourcepath="org/testng/xml/XmlTest.java"/>
      <Message>In method org.testng.xml.XmlTest.getSuite()</Message>
    </Method>
    <Field classname="org.testng.xml.XmlTest" name="m_suite" signature="Lorg/testng/xml/XmlSuite;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.xml.XmlTest" sourcefile="XmlTest.java" sourcepath="org/testng/xml/XmlTest.java">
        <Message>In XmlTest.java</Message>
      </SourceLine>
      <Message>Field org.testng.xml.XmlTest.m_suite</Message>
    </Field>
    <SourceLine classname="org.testng.xml.XmlTest" primary="true" start="108" end="108" startBytecode="21" endBytecode="21" sourcefile="XmlTest.java" sourcepath="org/testng/xml/XmlTest.java">
      <Message>At XmlTest.java:[line 108]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="4438ef4e3022aef8ab618687dabe772e" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.xml.XmlTest.getXmlClasses() may expose internal representation by returning XmlTest.m_xmlClasses</LongMessage>
    <Class classname="org.testng.xml.XmlTest" primary="true">
      <SourceLine classname="org.testng.xml.XmlTest" start="19" end="670" sourcefile="XmlTest.java" sourcepath="org/testng/xml/XmlTest.java">
        <Message>At XmlTest.java:[lines 19-670]</Message>
      </SourceLine>
      <Message>In class org.testng.xml.XmlTest</Message>
    </Class>
    <Method classname="org.testng.xml.XmlTest" name="getXmlClasses" signature="()Ljava/util/List;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.xml.XmlTest" start="127" end="127" startBytecode="0" endBytecode="46" sourcefile="XmlTest.java" sourcepath="org/testng/xml/XmlTest.java"/>
      <Message>In method org.testng.xml.XmlTest.getXmlClasses()</Message>
    </Method>
    <Field classname="org.testng.xml.XmlTest" name="m_xmlClasses" signature="Ljava/util/List;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.xml.XmlTest" sourcefile="XmlTest.java" sourcepath="org/testng/xml/XmlTest.java">
        <Message>In XmlTest.java</Message>
      </SourceLine>
      <Message>Field org.testng.xml.XmlTest.m_xmlClasses</Message>
    </Field>
    <SourceLine classname="org.testng.xml.XmlTest" primary="true" start="127" end="127" startBytecode="4" endBytecode="4" sourcefile="XmlTest.java" sourcepath="org/testng/xml/XmlTest.java">
      <Message>At XmlTest.java:[line 127]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="cc4ef345e737ae59fadf0edff64b5cb6" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.xml.XmlTest.getXmlDependencyGroups() may expose internal representation by returning XmlTest.m_xmlDependencyGroups</LongMessage>
    <Class classname="org.testng.xml.XmlTest" primary="true">
      <SourceLine classname="org.testng.xml.XmlTest" start="19" end="670" sourcefile="XmlTest.java" sourcepath="org/testng/xml/XmlTest.java">
        <Message>At XmlTest.java:[lines 19-670]</Message>
      </SourceLine>
      <Message>In class org.testng.xml.XmlTest</Message>
    </Class>
    <Method classname="org.testng.xml.XmlTest" name="getXmlDependencyGroups" signature="()Ljava/util/Map;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.xml.XmlTest" start="636" end="643" startBytecode="0" endBytecode="209" sourcefile="XmlTest.java" sourcepath="org/testng/xml/XmlTest.java"/>
      <Message>In method org.testng.xml.XmlTest.getXmlDependencyGroups()</Message>
    </Method>
    <Field classname="org.testng.xml.XmlTest" name="m_xmlDependencyGroups" signature="Ljava/util/Map;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.xml.XmlTest" sourcefile="XmlTest.java" sourcepath="org/testng/xml/XmlTest.java">
        <Message>In XmlTest.java</Message>
      </SourceLine>
      <Message>Field org.testng.xml.XmlTest.m_xmlDependencyGroups</Message>
    </Field>
    <SourceLine classname="org.testng.xml.XmlTest" primary="true" start="643" end="643" startBytecode="62" endBytecode="62" sourcefile="XmlTest.java" sourcepath="org/testng/xml/XmlTest.java">
      <Message>At XmlTest.java:[line 643]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="6ee98deea9b5f4ac07fc127301105175" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.xml.XmlTest.getXmlGroups() may expose internal representation by returning XmlTest.m_xmlGroups</LongMessage>
    <Class classname="org.testng.xml.XmlTest" primary="true">
      <SourceLine classname="org.testng.xml.XmlTest" start="19" end="670" sourcefile="XmlTest.java" sourcepath="org/testng/xml/XmlTest.java">
        <Message>At XmlTest.java:[lines 19-670]</Message>
      </SourceLine>
      <Message>In class org.testng.xml.XmlTest</Message>
    </Class>
    <Method classname="org.testng.xml.XmlTest" name="getXmlGroups" signature="()Lorg/testng/xml/XmlGroups;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.xml.XmlTest" start="662" end="662" startBytecode="0" endBytecode="46" sourcefile="XmlTest.java" sourcepath="org/testng/xml/XmlTest.java"/>
      <Message>In method org.testng.xml.XmlTest.getXmlGroups()</Message>
    </Method>
    <Field classname="org.testng.xml.XmlTest" name="m_xmlGroups" signature="Lorg/testng/xml/XmlGroups;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.xml.XmlTest" sourcefile="XmlTest.java" sourcepath="org/testng/xml/XmlTest.java">
        <Message>In XmlTest.java</Message>
      </SourceLine>
      <Message>Field org.testng.xml.XmlTest.m_xmlGroups</Message>
    </Field>
    <SourceLine classname="org.testng.xml.XmlTest" primary="true" start="662" end="662" startBytecode="4" endBytecode="4" sourcefile="XmlTest.java" sourcepath="org/testng/xml/XmlTest.java">
      <Message>At XmlTest.java:[line 662]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="d12461de5b1267db03681243a511bf16" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.xml.XmlTest.getXmlPackages() may expose internal representation by returning XmlTest.m_xmlPackages</LongMessage>
    <Class classname="org.testng.xml.XmlTest" primary="true">
      <SourceLine classname="org.testng.xml.XmlTest" start="19" end="670" sourcefile="XmlTest.java" sourcepath="org/testng/xml/XmlTest.java">
        <Message>At XmlTest.java:[lines 19-670]</Message>
      </SourceLine>
      <Message>In class org.testng.xml.XmlTest</Message>
    </Class>
    <Method classname="org.testng.xml.XmlTest" name="getXmlPackages" signature="()Ljava/util/List;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.xml.XmlTest" start="77" end="77" startBytecode="0" endBytecode="46" sourcefile="XmlTest.java" sourcepath="org/testng/xml/XmlTest.java"/>
      <Message>In method org.testng.xml.XmlTest.getXmlPackages()</Message>
    </Method>
    <Field classname="org.testng.xml.XmlTest" name="m_xmlPackages" signature="Ljava/util/List;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.xml.XmlTest" sourcefile="XmlTest.java" sourcepath="org/testng/xml/XmlTest.java">
        <Message>In XmlTest.java</Message>
      </SourceLine>
      <Message>Field org.testng.xml.XmlTest.m_xmlPackages</Message>
    </Field>
    <SourceLine classname="org.testng.xml.XmlTest" primary="true" start="77" end="77" startBytecode="4" endBytecode="4" sourcefile="XmlTest.java" sourcepath="org/testng/xml/XmlTest.java">
      <Message>At XmlTest.java:[line 77]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="64894427588080215b758ecdd1c88225" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>org.testng.xml.XmlTest.setGroups(XmlGroups) may expose internal representation by storing an externally mutable object into XmlTest.m_xmlGroups</LongMessage>
    <Class classname="org.testng.xml.XmlTest" primary="true">
      <SourceLine classname="org.testng.xml.XmlTest" start="19" end="670" sourcefile="XmlTest.java" sourcepath="org/testng/xml/XmlTest.java">
        <Message>At XmlTest.java:[lines 19-670]</Message>
      </SourceLine>
      <Message>In class org.testng.xml.XmlTest</Message>
    </Class>
    <Method classname="org.testng.xml.XmlTest" name="setGroups" signature="(Lorg/testng/xml/XmlGroups;)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.xml.XmlTest" start="658" end="659" startBytecode="0" endBytecode="61" sourcefile="XmlTest.java" sourcepath="org/testng/xml/XmlTest.java"/>
      <Message>In method org.testng.xml.XmlTest.setGroups(XmlGroups)</Message>
    </Method>
    <Field classname="org.testng.xml.XmlTest" name="m_xmlGroups" signature="Lorg/testng/xml/XmlGroups;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.xml.XmlTest" sourcefile="XmlTest.java" sourcepath="org/testng/xml/XmlTest.java">
        <Message>In XmlTest.java</Message>
      </SourceLine>
      <Message>Field org.testng.xml.XmlTest.m_xmlGroups</Message>
    </Field>
    <LocalVariable name="xmlGroups" register="1" pc="2" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named xmlGroups</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.xml.XmlTest" primary="true" start="658" end="658" startBytecode="2" endBytecode="2" sourcefile="XmlTest.java" sourcepath="org/testng/xml/XmlTest.java">
      <Message>At XmlTest.java:[line 658]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="7b4c482c7952e8ae5522c62d0ed307e4" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>org.testng.xml.XmlTest.setParameters(Map) may expose internal representation by storing an externally mutable object into XmlTest.m_parameters</LongMessage>
    <Class classname="org.testng.xml.XmlTest" primary="true">
      <SourceLine classname="org.testng.xml.XmlTest" start="19" end="670" sourcefile="XmlTest.java" sourcepath="org/testng/xml/XmlTest.java">
        <Message>At XmlTest.java:[lines 19-670]</Message>
      </SourceLine>
      <Message>In class org.testng.xml.XmlTest</Message>
    </Class>
    <Method classname="org.testng.xml.XmlTest" name="setParameters" signature="(Ljava/util/Map;)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.xml.XmlTest" start="323" end="324" startBytecode="0" endBytecode="79" sourcefile="XmlTest.java" sourcepath="org/testng/xml/XmlTest.java"/>
      <Message>In method org.testng.xml.XmlTest.setParameters(Map)</Message>
    </Method>
    <Field classname="org.testng.xml.XmlTest" name="m_parameters" signature="Ljava/util/Map;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.xml.XmlTest" sourcefile="XmlTest.java" sourcepath="org/testng/xml/XmlTest.java">
        <Message>In XmlTest.java</Message>
      </SourceLine>
      <Message>Field org.testng.xml.XmlTest.m_parameters</Message>
    </Field>
    <LocalVariable name="parameters" register="1" pc="2" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named parameters</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.xml.XmlTest" primary="true" start="323" end="323" startBytecode="2" endBytecode="2" sourcefile="XmlTest.java" sourcepath="org/testng/xml/XmlTest.java">
      <Message>At XmlTest.java:[line 323]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="f0ab052b4af18ae3d50ac4b52ee30b63" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>org.testng.xml.XmlTest.setSuite(XmlSuite) may expose internal representation by storing an externally mutable object into XmlTest.m_suite</LongMessage>
    <Class classname="org.testng.xml.XmlTest" primary="true">
      <SourceLine classname="org.testng.xml.XmlTest" start="19" end="670" sourcefile="XmlTest.java" sourcepath="org/testng/xml/XmlTest.java">
        <Message>At XmlTest.java:[lines 19-670]</Message>
      </SourceLine>
      <Message>In class org.testng.xml.XmlTest</Message>
    </Class>
    <Method classname="org.testng.xml.XmlTest" name="setSuite" signature="(Lorg/testng/xml/XmlSuite;)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.xml.XmlTest" start="491" end="492" startBytecode="0" endBytecode="61" sourcefile="XmlTest.java" sourcepath="org/testng/xml/XmlTest.java"/>
      <Message>In method org.testng.xml.XmlTest.setSuite(XmlSuite)</Message>
    </Method>
    <Field classname="org.testng.xml.XmlTest" name="m_suite" signature="Lorg/testng/xml/XmlSuite;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.xml.XmlTest" sourcefile="XmlTest.java" sourcepath="org/testng/xml/XmlTest.java">
        <Message>In XmlTest.java</Message>
      </SourceLine>
      <Message>Field org.testng.xml.XmlTest.m_suite</Message>
    </Field>
    <LocalVariable name="result" register="1" pc="2" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named result</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.xml.XmlTest" primary="true" start="491" end="491" startBytecode="2" endBytecode="2" sourcefile="XmlTest.java" sourcepath="org/testng/xml/XmlTest.java">
      <Message>At XmlTest.java:[line 491]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="f63503d6583be90bb8f57e4742e19b57" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>org.testng.xml.XmlTest.setXmlClasses(List) may expose internal representation by storing an externally mutable object into XmlTest.m_xmlClasses</LongMessage>
    <Class classname="org.testng.xml.XmlTest" primary="true">
      <SourceLine classname="org.testng.xml.XmlTest" start="19" end="670" sourcefile="XmlTest.java" sourcepath="org/testng/xml/XmlTest.java">
        <Message>At XmlTest.java:[lines 19-670]</Message>
      </SourceLine>
      <Message>In class org.testng.xml.XmlTest</Message>
    </Class>
    <Method classname="org.testng.xml.XmlTest" name="setXmlClasses" signature="(Ljava/util/List;)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.xml.XmlTest" start="146" end="147" startBytecode="0" endBytecode="79" sourcefile="XmlTest.java" sourcepath="org/testng/xml/XmlTest.java"/>
      <Message>In method org.testng.xml.XmlTest.setXmlClasses(List)</Message>
    </Method>
    <Field classname="org.testng.xml.XmlTest" name="m_xmlClasses" signature="Ljava/util/List;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.xml.XmlTest" sourcefile="XmlTest.java" sourcepath="org/testng/xml/XmlTest.java">
        <Message>In XmlTest.java</Message>
      </SourceLine>
      <Message>Field org.testng.xml.XmlTest.m_xmlClasses</Message>
    </Field>
    <LocalVariable name="classes" register="1" pc="2" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named classes</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.xml.XmlTest" primary="true" start="146" end="146" startBytecode="2" endBytecode="2" sourcefile="XmlTest.java" sourcepath="org/testng/xml/XmlTest.java">
      <Message>At XmlTest.java:[line 146]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="7531f3c31029810ffc7eda96166c6f18" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>org.testng.xml.XmlTest.setXmlDependencyGroups(Map) may expose internal representation by storing an externally mutable object into XmlTest.m_xmlDependencyGroups</LongMessage>
    <Class classname="org.testng.xml.XmlTest" primary="true">
      <SourceLine classname="org.testng.xml.XmlTest" start="19" end="670" sourcefile="XmlTest.java" sourcepath="org/testng/xml/XmlTest.java">
        <Message>At XmlTest.java:[lines 19-670]</Message>
      </SourceLine>
      <Message>In class org.testng.xml.XmlTest</Message>
    </Class>
    <Method classname="org.testng.xml.XmlTest" name="setXmlDependencyGroups" signature="(Ljava/util/Map;)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.xml.XmlTest" start="648" end="649" startBytecode="0" endBytecode="79" sourcefile="XmlTest.java" sourcepath="org/testng/xml/XmlTest.java"/>
      <Message>In method org.testng.xml.XmlTest.setXmlDependencyGroups(Map)</Message>
    </Method>
    <Field classname="org.testng.xml.XmlTest" name="m_xmlDependencyGroups" signature="Ljava/util/Map;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.xml.XmlTest" sourcefile="XmlTest.java" sourcepath="org/testng/xml/XmlTest.java">
        <Message>In XmlTest.java</Message>
      </SourceLine>
      <Message>Field org.testng.xml.XmlTest.m_xmlDependencyGroups</Message>
    </Field>
    <LocalVariable name="xmlDependencyGroups" register="1" pc="2" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named xmlDependencyGroups</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.xml.XmlTest" primary="true" start="648" end="648" startBytecode="2" endBytecode="2" sourcefile="XmlTest.java" sourcepath="org/testng/xml/XmlTest.java">
      <Message>At XmlTest.java:[line 648]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="c24cb4f2688c2ce36f11e726fc6ffadb" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>org.testng.xml.XmlTest.setXmlSuite(XmlSuite) may expose internal representation by storing an externally mutable object into XmlTest.m_suite</LongMessage>
    <Class classname="org.testng.xml.XmlTest" primary="true">
      <SourceLine classname="org.testng.xml.XmlTest" start="19" end="670" sourcefile="XmlTest.java" sourcepath="org/testng/xml/XmlTest.java">
        <Message>At XmlTest.java:[lines 19-670]</Message>
      </SourceLine>
      <Message>In class org.testng.xml.XmlTest</Message>
    </Class>
    <Method classname="org.testng.xml.XmlTest" name="setXmlSuite" signature="(Lorg/testng/xml/XmlSuite;)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.xml.XmlTest" start="652" end="653" startBytecode="0" endBytecode="61" sourcefile="XmlTest.java" sourcepath="org/testng/xml/XmlTest.java"/>
      <Message>In method org.testng.xml.XmlTest.setXmlSuite(XmlSuite)</Message>
    </Method>
    <Field classname="org.testng.xml.XmlTest" name="m_suite" signature="Lorg/testng/xml/XmlSuite;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.xml.XmlTest" sourcefile="XmlTest.java" sourcepath="org/testng/xml/XmlTest.java">
        <Message>In XmlTest.java</Message>
      </SourceLine>
      <Message>Field org.testng.xml.XmlTest.m_suite</Message>
    </Field>
    <LocalVariable name="suite" register="1" pc="2" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named suite</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.xml.XmlTest" primary="true" start="652" end="652" startBytecode="2" endBytecode="2" sourcefile="XmlTest.java" sourcepath="org/testng/xml/XmlTest.java">
      <Message>At XmlTest.java:[line 652]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE" priority="2" rank="18" abbrev="RCN" category="STYLE" instanceHash="6d56dfe858ff260abdc0f6152621fe48" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="476">
    <ShortMessage>Redundant nullcheck of value known to be non-null</ShortMessage>
    <LongMessage>Redundant nullcheck of org.testng.xml.XmlTest.m_xmlGroups, which is known to be non-null in org.testng.xml.XmlTest.equals(Object)</LongMessage>
    <Class classname="org.testng.xml.XmlTest" primary="true">
      <SourceLine classname="org.testng.xml.XmlTest" start="19" end="670" sourcefile="XmlTest.java" sourcepath="org/testng/xml/XmlTest.java">
        <Message>At XmlTest.java:[lines 19-670]</Message>
      </SourceLine>
      <Message>In class org.testng.xml.XmlTest</Message>
    </Class>
    <Method classname="org.testng.xml.XmlTest" name="equals" signature="(Ljava/lang/Object;)Z" isStatic="false" primary="true">
      <SourceLine classname="org.testng.xml.XmlTest" start="553" end="620" startBytecode="0" endBytecode="1000" sourcefile="XmlTest.java" sourcepath="org/testng/xml/XmlTest.java"/>
      <Message>In method org.testng.xml.XmlTest.equals(Object)</Message>
    </Method>
    <Field classname="org.testng.xml.XmlTest" name="m_xmlGroups" signature="Lorg/testng/xml/XmlGroups;" isStatic="false" primary="true" role="FIELD_VALUE_OF">
      <SourceLine classname="org.testng.xml.XmlTest" sourcefile="XmlTest.java" sourcepath="org/testng/xml/XmlTest.java">
        <Message>In XmlTest.java</Message>
      </SourceLine>
      <Message>Value loaded from field org.testng.xml.XmlTest.m_xmlGroups</Message>
    </Field>
    <SourceLine classname="org.testng.xml.XmlTest" primary="true" start="565" end="565" startBytecode="76" endBytecode="76" sourcefile="XmlTest.java" sourcepath="org/testng/xml/XmlTest.java" role="SOURCE_REDUNDANT_NULL_CHECK">
      <Message>Redundant null check at XmlTest.java:[line 565]</Message>
    </SourceLine>
    <SourceLine classname="org.testng.xml.XmlTest" start="566" end="566" startBytecode="93" endBytecode="93" sourcefile="XmlTest.java" sourcepath="org/testng/xml/XmlTest.java" role="SOURCE_LINE_ANOTHER_INSTANCE">
      <Message>Another occurrence at XmlTest.java:[line 566]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="LI_LAZY_INIT_STATIC" priority="3" rank="17" abbrev="LI" category="MT_CORRECTNESS" instanceHash="6c9ee413d1ac575fcfa23925e9aa9a85" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="543">
    <ShortMessage>Incorrect lazy initialization of static field</ShortMessage>
    <LongMessage>Incorrect lazy initialization of static field org.testng.xml.XmlWeaver.instance in org.testng.xml.XmlWeaver.instantiateIfRequired()</LongMessage>
    <Class classname="org.testng.xml.XmlWeaver" primary="true">
      <SourceLine classname="org.testng.xml.XmlWeaver" start="11" end="89" sourcefile="XmlWeaver.java" sourcepath="org/testng/xml/XmlWeaver.java">
        <Message>At XmlWeaver.java:[lines 11-89]</Message>
      </SourceLine>
      <Message>In class org.testng.xml.XmlWeaver</Message>
    </Class>
    <Method classname="org.testng.xml.XmlWeaver" name="instantiateIfRequired" signature="()Lorg/testng/xml/IWeaveXml;" isStatic="true" primary="true">
      <SourceLine classname="org.testng.xml.XmlWeaver" start="26" end="46" startBytecode="0" endBytecode="47" sourcefile="XmlWeaver.java" sourcepath="org/testng/xml/XmlWeaver.java"/>
      <Message>In method org.testng.xml.XmlWeaver.instantiateIfRequired()</Message>
    </Method>
    <Field classname="org.testng.xml.XmlWeaver" name="instance" signature="Lorg/testng/xml/IWeaveXml;" isStatic="true" primary="true" role="FIELD_ON">
      <SourceLine classname="org.testng.xml.XmlWeaver" sourcefile="XmlWeaver.java" sourcepath="org/testng/xml/XmlWeaver.java">
        <Message>In XmlWeaver.java</Message>
      </SourceLine>
      <Message>On field org.testng.xml.XmlWeaver.instance</Message>
    </Field>
    <SourceLine classname="org.testng.xml.XmlWeaver" primary="true" start="30" end="45" startBytecode="16" endBytecode="106" sourcefile="XmlWeaver.java" sourcepath="org/testng/xml/XmlWeaver.java">
      <Message>At XmlWeaver.java:[lines 30-45]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="ffe94331ab0376a9a533e7771d2e20d0" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.xml.internal.TestNamesMatcher.getMatchedTests() may expose internal representation by returning TestNamesMatcher.matchedTests</LongMessage>
    <Class classname="org.testng.xml.internal.TestNamesMatcher" primary="true">
      <SourceLine classname="org.testng.xml.internal.TestNamesMatcher" start="12" end="82" sourcefile="TestNamesMatcher.java" sourcepath="org/testng/xml/internal/TestNamesMatcher.java">
        <Message>At TestNamesMatcher.java:[lines 12-82]</Message>
      </SourceLine>
      <Message>In class org.testng.xml.internal.TestNamesMatcher</Message>
    </Class>
    <Method classname="org.testng.xml.internal.TestNamesMatcher" name="getMatchedTests" signature="()Ljava/util/List;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.xml.internal.TestNamesMatcher" start="54" end="54" startBytecode="0" endBytecode="46" sourcefile="TestNamesMatcher.java" sourcepath="org/testng/xml/internal/TestNamesMatcher.java"/>
      <Message>In method org.testng.xml.internal.TestNamesMatcher.getMatchedTests()</Message>
    </Method>
    <Field classname="org.testng.xml.internal.TestNamesMatcher" name="matchedTests" signature="Ljava/util/List;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.xml.internal.TestNamesMatcher" sourcefile="TestNamesMatcher.java" sourcepath="org/testng/xml/internal/TestNamesMatcher.java">
        <Message>In TestNamesMatcher.java</Message>
      </SourceLine>
      <Message>Field org.testng.xml.internal.TestNamesMatcher.matchedTests</Message>
    </Field>
    <SourceLine classname="org.testng.xml.internal.TestNamesMatcher" primary="true" start="54" end="54" startBytecode="4" endBytecode="4" sourcefile="TestNamesMatcher.java" sourcepath="org/testng/xml/internal/TestNamesMatcher.java">
      <Message>At TestNamesMatcher.java:[line 54]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="eb7259ce403b17064866fd1477fec901" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.testng.xml.internal.TestNamesMatcher.getSuitesMatchingTestNames() may expose internal representation by returning TestNamesMatcher.cloneSuites</LongMessage>
    <Class classname="org.testng.xml.internal.TestNamesMatcher" primary="true">
      <SourceLine classname="org.testng.xml.internal.TestNamesMatcher" start="12" end="82" sourcefile="TestNamesMatcher.java" sourcepath="org/testng/xml/internal/TestNamesMatcher.java">
        <Message>At TestNamesMatcher.java:[lines 12-82]</Message>
      </SourceLine>
      <Message>In class org.testng.xml.internal.TestNamesMatcher</Message>
    </Class>
    <Method classname="org.testng.xml.internal.TestNamesMatcher" name="getSuitesMatchingTestNames" signature="()Ljava/util/List;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.xml.internal.TestNamesMatcher" start="43" end="43" startBytecode="0" endBytecode="46" sourcefile="TestNamesMatcher.java" sourcepath="org/testng/xml/internal/TestNamesMatcher.java"/>
      <Message>In method org.testng.xml.internal.TestNamesMatcher.getSuitesMatchingTestNames()</Message>
    </Method>
    <Field classname="org.testng.xml.internal.TestNamesMatcher" name="cloneSuites" signature="Ljava/util/List;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.xml.internal.TestNamesMatcher" sourcefile="TestNamesMatcher.java" sourcepath="org/testng/xml/internal/TestNamesMatcher.java">
        <Message>In TestNamesMatcher.java</Message>
      </SourceLine>
      <Message>Field org.testng.xml.internal.TestNamesMatcher.cloneSuites</Message>
    </Field>
    <SourceLine classname="org.testng.xml.internal.TestNamesMatcher" primary="true" start="43" end="43" startBytecode="4" endBytecode="4" sourcefile="TestNamesMatcher.java" sourcepath="org/testng/xml/internal/TestNamesMatcher.java">
      <Message>At TestNamesMatcher.java:[line 43]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="a96a7d1da8645ca37dbd208fda514df2" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>new org.testng.xml.internal.TestNamesMatcher(XmlSuite, List) may expose internal representation by storing an externally mutable object into TestNamesMatcher.testNames</LongMessage>
    <Class classname="org.testng.xml.internal.TestNamesMatcher" primary="true">
      <SourceLine classname="org.testng.xml.internal.TestNamesMatcher" start="12" end="82" sourcefile="TestNamesMatcher.java" sourcepath="org/testng/xml/internal/TestNamesMatcher.java">
        <Message>At TestNamesMatcher.java:[lines 12-82]</Message>
      </SourceLine>
      <Message>In class org.testng.xml.internal.TestNamesMatcher</Message>
    </Class>
    <Method classname="org.testng.xml.internal.TestNamesMatcher" name="&lt;init&gt;" signature="(Lorg/testng/xml/XmlSuite;Ljava/util/List;)V" isStatic="false" primary="true">
      <SourceLine classname="org.testng.xml.internal.TestNamesMatcher" start="17" end="20" startBytecode="0" endBytecode="143" sourcefile="TestNamesMatcher.java" sourcepath="org/testng/xml/internal/TestNamesMatcher.java"/>
      <Message>In method new org.testng.xml.internal.TestNamesMatcher(XmlSuite, List)</Message>
    </Method>
    <Field classname="org.testng.xml.internal.TestNamesMatcher" name="testNames" signature="Ljava/util/List;" isStatic="false" primary="true">
      <SourceLine classname="org.testng.xml.internal.TestNamesMatcher" sourcefile="TestNamesMatcher.java" sourcepath="org/testng/xml/internal/TestNamesMatcher.java">
        <Message>In TestNamesMatcher.java</Message>
      </SourceLine>
      <Message>Field org.testng.xml.internal.TestNamesMatcher.testNames</Message>
    </Field>
    <LocalVariable name="testNames" register="2" pc="27" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named testNames</Message>
    </LocalVariable>
    <SourceLine classname="org.testng.xml.internal.TestNamesMatcher" primary="true" start="18" end="18" startBytecode="27" endBytecode="27" sourcefile="TestNamesMatcher.java" sourcepath="org/testng/xml/internal/TestNamesMatcher.java">
      <Message>At TestNamesMatcher.java:[line 18]</Message>
    </SourceLine>
  </BugInstance>
  <BugCategory category="BAD_PRACTICE">
    <Description>Bad practice</Description>
  </BugCategory>
  <BugCategory category="MALICIOUS_CODE">
    <Description>Malicious code vulnerability</Description>
  </BugCategory>
  <BugCategory category="CORRECTNESS">
    <Description>Correctness</Description>
  </BugCategory>
  <BugCategory category="PERFORMANCE">
    <Description>Performance</Description>
  </BugCategory>
  <BugCategory category="STYLE">
    <Description>Dodgy code</Description>
  </BugCategory>
  <BugCategory category="EXPERIMENTAL">
    <Description>Experimental</Description>
  </BugCategory>
  <BugCategory category="MT_CORRECTNESS">
    <Description>Multithreaded correctness</Description>
  </BugCategory>
  <BugCategory category="I18N">
    <Description>Internationalization</Description>
  </BugCategory>
  <BugPattern type="CN_IDIOM_NO_SUPER_CALL" abbrev="CN" category="BAD_PRACTICE">
    <ShortDescription>clone method does not call super.clone()</ShortDescription>
    <Details><![CDATA[

<p> This non-final class defines a clone() method that does not call super.clone().
If this class ("<i>A</i>") is extended by a subclass ("<i>B</i>"),
and the subclass <i>B</i> calls super.clone(), then it is likely that
<i>B</i>'s clone() method will return an object of type <i>A</i>,
which violates the standard contract for clone().</p>

<p> If all clone() methods call super.clone(), then they are guaranteed
to use Object.clone(), which always returns an object of the correct type.</p>

    ]]></Details>
  </BugPattern>
  <BugPattern type="DLS_DEAD_LOCAL_STORE" abbrev="DLS" category="STYLE">
    <ShortDescription>Dead store to local variable</ShortDescription>
    <Details><![CDATA[

<p>
This instruction assigns a value to a local variable,
but the value is not read or used in any subsequent instruction.
Often, this indicates an error, because the value computed is never
used.
</p>
<p>
Note that Sun's javac compiler often generates dead stores for
final local variables. Because SpotBugs is a bytecode-based tool,
there is no easy way to eliminate these false positives.
</p>

    ]]></Details>
  </BugPattern>
  <BugPattern type="EI_EXPOSE_REP2" abbrev="EI2" category="MALICIOUS_CODE" cweid="374">
    <ShortDescription>May expose internal representation by incorporating reference to mutable object</ShortDescription>
    <Details><![CDATA[

  <p> This code stores a reference to an externally mutable object into the
  internal representation of the object.&nbsp;
   If instances
   are accessed by untrusted code, and unchecked changes to
   the mutable object would compromise security or other
   important properties, you will need to do something different.
  Storing a copy of the object is better approach in many situations.</p>

    ]]></Details>
  </BugPattern>
  <BugPattern type="NM_SAME_SIMPLE_NAME_AS_INTERFACE" abbrev="Nm" category="BAD_PRACTICE">
    <ShortDescription>Class names shouldn&apos;t shadow simple name of implemented interface</ShortDescription>
    <Details><![CDATA[

  <p> This class/interface has a simple name that is identical to that of an implemented/extended interface, except
that the interface is in a different package (e.g., <code>alpha.Foo</code> extends <code>beta.Foo</code>).
This can be exceptionally confusing, create lots of situations in which you have to look at import statements
to resolve references and creates many
opportunities to accidentally define methods that do not override methods in their superclasses.
</p>

    ]]></Details>
  </BugPattern>
  <BugPattern type="WMI_WRONG_MAP_ITERATOR" abbrev="WMI" category="PERFORMANCE">
    <ShortDescription>Inefficient use of keySet iterator instead of entrySet iterator</ShortDescription>
    <Details><![CDATA[

<p> This method accesses the value of a Map entry, using a key that was retrieved from
a keySet iterator. It is more efficient to use an iterator on the entrySet of the map, to avoid the
Map.get(key) lookup.</p>

        ]]></Details>
  </BugPattern>
  <BugPattern type="UI_INHERITANCE_UNSAFE_GETRESOURCE" abbrev="UI" category="BAD_PRACTICE">
    <ShortDescription>Usage of GetResource may be unsafe if class is extended</ShortDescription>
    <Details><![CDATA[

<p>Calling <code>this.getClass().getResource(...)</code> could give
results other than expected if this class is extended by a class in
another package.</p>

    ]]></Details>
  </BugPattern>
  <BugPattern type="NM_SAME_SIMPLE_NAME_AS_SUPERCLASS" abbrev="Nm" category="BAD_PRACTICE">
    <ShortDescription>Class names shouldn&apos;t shadow simple name of superclass</ShortDescription>
    <Details><![CDATA[

  <p> This class has a simple name that is identical to that of its superclass, except
that its superclass is in a different package (e.g., <code>alpha.Foo</code> extends <code>beta.Foo</code>).
This can be exceptionally confusing, create lots of situations in which you have to look at import statements
to resolve references and creates many
opportunities to accidentally define methods that do not override methods in their superclasses.
</p>

    ]]></Details>
  </BugPattern>
  <BugPattern type="NP_NULL_ON_SOME_PATH_FROM_RETURN_VALUE" abbrev="NP" category="STYLE">
    <ShortDescription>Possible null pointer dereference due to return value of called method</ShortDescription>
    <Details><![CDATA[
      
<p> The return value from a method is dereferenced without a null check,
and the return value of that method is one that should generally be checked
for null.  This may lead to a <code>NullPointerException</code> when the code is executed.
</p>
      
   ]]></Details>
  </BugPattern>
  <BugPattern type="LI_LAZY_INIT_STATIC" abbrev="LI" category="MT_CORRECTNESS" cweid="543">
    <ShortDescription>Incorrect lazy initialization of static field</ShortDescription>
    <Details><![CDATA[

<p> This method contains an unsynchronized lazy initialization of a non-volatile static field.
Because the compiler or processor may reorder instructions,
threads are not guaranteed to see a completely initialized object,
<em>if the method can be called by multiple threads</em>.
You can make the field volatile to correct the problem.
For more information, see the
<a href="http://www.cs.umd.edu/~pugh/java/memoryModel/">Java Memory Model web site</a>.
</p>

    ]]></Details>
  </BugPattern>
  <BugPattern type="URF_UNREAD_FIELD" abbrev="UrF" category="PERFORMANCE">
    <ShortDescription>Unread field</ShortDescription>
    <Details><![CDATA[

  <p> This field is never read.&nbsp; Consider removing it from the class.</p>

    ]]></Details>
  </BugPattern>
  <BugPattern type="REC_CATCH_EXCEPTION" abbrev="REC" category="STYLE" cweid="396">
    <ShortDescription>Exception is caught when Exception is not thrown</ShortDescription>
    <Details><![CDATA[
  
  <p>
  This method uses a try-catch block that catches Exception objects, but Exception is not
  thrown within the try block, and RuntimeException is not explicitly caught.  It is a common bug pattern to
  say try { ... } catch (Exception e) { something } as a shorthand for catching a number of types of exception
  each of whose catch blocks is identical, but this construct also accidentally catches RuntimeException as well,
  masking potential bugs.
  </p>
  <p>A better approach is to either explicitly catch the specific exceptions that are thrown,
  or to explicitly catch RuntimeException exception, rethrow it, and then catch all non-Runtime Exceptions, as shown below:</p>
<pre><code>try {
    ...
} catch (RuntimeException e) {
    throw e;
} catch (Exception e) {
    ... deal with all non-runtime exceptions ...
}
</code></pre>
  
     ]]></Details>
  </BugPattern>
  <BugPattern type="BC_UNCONFIRMED_CAST" abbrev="BC" category="STYLE">
    <ShortDescription>Unchecked/unconfirmed cast</ShortDescription>
    <Details><![CDATA[

<p>
This cast is unchecked, and not all instances of the type casted from can be cast to
the type it is being cast to. Check that your program logic ensures that this
cast will not fail.
</p>

    ]]></Details>
  </BugPattern>
  <BugPattern type="MS_EXPOSE_REP" abbrev="MS" category="MALICIOUS_CODE">
    <ShortDescription>Public static method may expose internal representation by returning a mutable object or array</ShortDescription>
    <Details><![CDATA[

  <p> A public static method returns a reference to a mutable object or
   an array that is part of the static state of the class.
   Any code that calls this method can freely modify
   the underlying array.
   One fix is to return a copy of the array.</p>

    ]]></Details>
  </BugPattern>
  <BugPattern type="OBL_UNSATISFIED_OBLIGATION" abbrev="OBL" category="EXPERIMENTAL">
    <ShortDescription>Method may fail to clean up stream or resource</ShortDescription>
    <Details><![CDATA[
          
          <p>
          This method may fail to clean up (close, dispose of) a stream,
          database object, or other
          resource requiring an explicit cleanup operation.
          </p>

          <p>
          In general, if a method opens a stream or other resource,
          the method should use a try/finally block to ensure that
          the stream or resource is cleaned up before the method
          returns.
          </p>

          <p>
          This bug pattern is essentially the same as the
          OS_OPEN_STREAM and ODR_OPEN_DATABASE_RESOURCE
          bug patterns, but is based on a different
          (and hopefully better) static analysis technique.
          We are interested is getting feedback about the
          usefulness of this bug pattern.
          For sending feedback, check:
          </p>
          <ul>
            <li><a href="https://github.com/spotbugs/spotbugs/blob/master/.github/CONTRIBUTING.md">contributing guideline</a></li>
            <li><a href="https://github.com/spotbugs/discuss/issues?q=">mailinglist</a></li>
          </ul>

          <p>
          In particular,
          the false-positive suppression heuristics for this
          bug pattern have not been extensively tuned, so
          reports about false positives are helpful to us.
          </p>

          <p>
          See Weimer and Necula, <i>Finding and Preventing Run-Time Error Handling Mistakes</i>
          (<a href="https://people.eecs.berkeley.edu/~necula/Papers/rte_oopsla04.pdf">PDF</a>),
          for a description of the analysis technique.
          </p>
          
      ]]></Details>
  </BugPattern>
  <BugPattern type="IM_BAD_CHECK_FOR_ODD" abbrev="IM" category="STYLE">
    <ShortDescription>Check for oddness that won&apos;t work for negative numbers</ShortDescription>
    <Details><![CDATA[

<p>
The code uses x % 2 == 1 to check to see if a value is odd, but this won't work
for negative numbers (e.g., (-5) % 2 == -1). If this code is intending to check
for oddness, consider using (x &amp; 1) == 1, or x % 2 != 0.
</p>

    ]]></Details>
  </BugPattern>
  <BugPattern type="RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE" abbrev="RCN" category="STYLE">
    <ShortDescription>Redundant nullcheck of value known to be non-null</ShortDescription>
    <Details><![CDATA[

<p> This method contains a redundant check of a known non-null value against
the constant null.</p>

    ]]></Details>
  </BugPattern>
  <BugPattern type="EQ_COMPARETO_USE_OBJECT_EQUALS" abbrev="Eq" category="BAD_PRACTICE">
    <ShortDescription>Class defines compareTo(...) and uses Object.equals()</ShortDescription>
    <Details><![CDATA[

  <p> This class defines a <code>compareTo(...)</code> method but inherits its
  <code>equals()</code> method from <code>java.lang.Object</code>.
    Generally, the value of compareTo should return zero if and only if
    equals returns true. If this is violated, weird and unpredictable
    failures will occur in classes such as PriorityQueue.
    In Java 5 the PriorityQueue.remove method uses the compareTo method,
    while in Java 6 it uses the equals method.</p>

<p>From the JavaDoc for the compareTo method in the Comparable interface:
<blockquote>
It is strongly recommended, but not strictly required that <code>(x.compareTo(y)==0) == (x.equals(y))</code>.
Generally speaking, any class that implements the Comparable interface and violates this condition
should clearly indicate this fact. The recommended language
is "Note: this class has a natural ordering that is inconsistent with equals."
</blockquote></p>

    ]]></Details>
  </BugPattern>
  <BugPattern type="ST_WRITE_TO_STATIC_FROM_INSTANCE_METHOD" abbrev="ST" category="STYLE">
    <ShortDescription>Write to static field from instance method</ShortDescription>
    <Details><![CDATA[

  <p> This instance method writes to a static field. This is tricky to get
correct if multiple instances are being manipulated,
and generally bad practice.
</p>

    ]]></Details>
  </BugPattern>
  <BugPattern type="BC_UNCONFIRMED_CAST_OF_RETURN_VALUE" abbrev="BC" category="STYLE">
    <ShortDescription>Unchecked/unconfirmed cast of return value from method</ShortDescription>
    <Details><![CDATA[

<p>
This code performs an unchecked cast of the return value of a method.
The code might be calling the method in such a way that the cast is guaranteed to be
safe, but SpotBugs is unable to verify that the cast is safe.  Check that your program logic ensures that this
cast will not fail.
</p>

    ]]></Details>
  </BugPattern>
  <BugPattern type="EI_EXPOSE_REP" abbrev="EI" category="MALICIOUS_CODE" cweid="374">
    <ShortDescription>May expose internal representation by returning reference to mutable object</ShortDescription>
    <Details><![CDATA[

  <p> Returning a reference to a mutable object value stored in one of the object's fields
  exposes the internal representation of the object.&nbsp;
   If instances
   are accessed by untrusted code, and unchecked changes to
   the mutable object would compromise security or other
   important properties, you will need to do something different.
  Returning a new copy of the object is better approach in many situations.</p>

    ]]></Details>
  </BugPattern>
  <BugPattern type="DMI_RANDOM_USED_ONLY_ONCE" abbrev="DMI" category="BAD_PRACTICE">
    <ShortDescription>Random object created and used only once</ShortDescription>
    <Details><![CDATA[

<p> This code creates a java.util.Random object, uses it to generate one random number, and then discards
the Random object. This produces mediocre quality random numbers and is inefficient.
If possible, rewrite the code so that the Random object is created once and saved, and each time a new random number
is required invoke a method on the existing Random object to obtain it.
</p>

<p>If it is important that the generated Random numbers not be guessable, you <em>must</em> not create a new Random for each random
number; the values are too easily guessable. You should strongly consider using a java.security.SecureRandom instead
(and avoid allocating a new SecureRandom for each random number needed).
</p>

    ]]></Details>
  </BugPattern>
  <BugPattern type="SIC_INNER_SHOULD_BE_STATIC_ANON" abbrev="SIC" category="PERFORMANCE">
    <ShortDescription>Could be refactored into a named static inner class</ShortDescription>
    <Details><![CDATA[

  <p> This class is an inner class, but does not use its embedded reference
  to the object which created it.&nbsp; This reference makes the instances
  of the class larger, and may keep the reference to the creator object
  alive longer than necessary.&nbsp; If possible, the class should be
  made into a <em>static</em> inner class. Since anonymous inner
classes cannot be marked as static, doing this will require refactoring
the inner class so that it is a named inner class.</p>

    ]]></Details>
  </BugPattern>
  <BugPattern type="EQ_DOESNT_OVERRIDE_EQUALS" abbrev="Eq" category="STYLE">
    <ShortDescription>Class doesn&apos;t override equals in superclass</ShortDescription>
    <Details><![CDATA[

  <p> This class extends a class that defines an equals method and adds fields, but doesn't
define an equals method itself. Thus, equality on instances of this class will
ignore the identity of the subclass and the added fields. Be sure this is what is intended,
and that you don't need to override the equals method. Even if you don't need to override
the equals method, consider overriding it anyway to document the fact
that the equals method for the subclass just return the result of
invoking super.equals(o).
  </p>

    ]]></Details>
  </BugPattern>
  <BugPattern type="DM_DEFAULT_ENCODING" abbrev="Dm" category="I18N">
    <ShortDescription>Reliance on default encoding</ShortDescription>
    <Details><![CDATA[

<p> Found a call to a method which will perform a byte to String (or String to byte) conversion,
and will assume that the default platform encoding is suitable. This will cause the application
behavior to vary between platforms. Use an alternative API and specify a charset name or Charset
object explicitly.</p>

      ]]></Details>
  </BugPattern>
  <BugPattern type="UWF_NULL_FIELD" abbrev="UwF" category="CORRECTNESS">
    <ShortDescription>Field only ever set to null</ShortDescription>
    <Details><![CDATA[

  <p> All writes to this field are of the constant value null, and thus
all reads of the field will return null.
Check for errors, or remove it if it is useless.</p>

    ]]></Details>
  </BugPattern>
  <BugPattern type="SE_COMPARATOR_SHOULD_BE_SERIALIZABLE" abbrev="Se" category="BAD_PRACTICE">
    <ShortDescription>Comparator doesn&apos;t implement Serializable</ShortDescription>
    <Details><![CDATA[

  <p> This class implements the <code>Comparator</code> interface. You
should consider whether or not it should also implement the <code>Serializable</code>
interface. If a comparator is used to construct an ordered collection
such as a <code>TreeMap</code>, then the <code>TreeMap</code>
will be serializable only if the comparator is also serializable.
As most comparators have little or no state, making them serializable
is generally easy and good defensive programming.
</p>

    ]]></Details>
  </BugPattern>
  <BugPattern type="SF_SWITCH_NO_DEFAULT" abbrev="SF" category="STYLE">
    <ShortDescription>Switch statement found where default case is missing</ShortDescription>
    <Details><![CDATA[

  <p> This method contains a switch statement where default case is missing.
  Usually you need to provide a default case.</p>
  <p>Because the analysis only looks at the generated bytecode, this warning can be incorrect triggered if
the default case is at the end of the switch statement and the switch statement doesn't contain break statements for other
cases.

    ]]></Details>
  </BugPattern>
  <BugPattern type="PA_PUBLIC_PRIMITIVE_ATTRIBUTE" abbrev="PA" category="BAD_PRACTICE">
    <ShortDescription>Primitive field is public</ShortDescription>
    <Details><![CDATA[
      
    <p>
    <a href="https://wiki.sei.cmu.edu/confluence/display/java/OBJ01-J.+Limit+accessibility+of+fields">SEI CERT rule OBJ01-J</a> requires that accessibility to fields must be limited.
    Otherwise, the values of the fields may be manipulated from outside the class, which may be unexpected or
    undesired behaviour.
    In general, requiring that no fields are allowed to be public is overkill and unrealistic. Even
    the rule mentions that final fields may be public. Besides final fields, there may be other
    usages for public fields: some public fields may serve as "flags" that affect the behavior of
    the class. Such flag fields are expected to be read by the current instance (or the current
    class, in case of static fields), but written by others. If a field is both written by the
    methods of the current instance (or the current class, in case of static fields) and from the
    outside, the code is suspicious. Consider making these fields private and provide appropriate
    setters, if necessary. Please note that constructors, initializers and finalizers are
    exceptions, if only they write the field inside the class, the field is not considered as
    written by the class itself.</p>
    
    ]]></Details>
  </BugPattern>
  <BugPattern type="URF_UNREAD_PUBLIC_OR_PROTECTED_FIELD" abbrev="UrF" category="STYLE">
    <ShortDescription>Unread public/protected field</ShortDescription>
    <Details><![CDATA[

  <p> This field is never read.&nbsp;
The field is public or protected, so perhaps
    it is intended to be used with classes not seen as part of the analysis. If not,
consider removing it from the class.</p>

    ]]></Details>
  </BugPattern>
  <BugPattern type="NP_LOAD_OF_KNOWN_NULL_VALUE" abbrev="NP" category="STYLE">
    <ShortDescription>Load of known null value</ShortDescription>
    <Details><![CDATA[

  <p> The variable referenced at this point is known to be null due to an earlier
   check against null. Although this is valid, it might be a mistake (perhaps you
intended to refer to a different variable, or perhaps the earlier check to see if the
variable is null should have been a check to see if it was non-null).
</p>

    ]]></Details>
  </BugPattern>
  <BugPattern type="RI_REDUNDANT_INTERFACES" abbrev="RI" category="STYLE">
    <ShortDescription>Class implements same interface as superclass</ShortDescription>
    <Details><![CDATA[
   
    <p>
    This class declares that it implements an interface that is also implemented by a superclass.
    This is redundant because once a superclass implements an interface, all subclasses by default also
    implement this interface. It may point out that the inheritance hierarchy has changed since
    this class was created, and consideration should be given to the ownership of
    the interface's implementation.
    </p>
    
     ]]></Details>
  </BugPattern>
  <BugPattern type="DP_DO_INSIDE_DO_PRIVILEGED" abbrev="DP" category="MALICIOUS_CODE">
    <ShortDescription>Method invoked that should be only be invoked inside a doPrivileged block</ShortDescription>
    <Details><![CDATA[

  <p> This code invokes a method that requires a security permission check.
  If this code will be granted security permissions, but might be invoked by code that does not
  have security permissions, then the invocation needs to occur inside a doPrivileged block.</p>

    ]]></Details>
  </BugPattern>
  <BugPattern type="DCN_NULLPOINTER_EXCEPTION" abbrev="DCN" category="STYLE">
    <ShortDescription>NullPointerException caught</ShortDescription>
    <Details><![CDATA[
   
<p>
According to SEI Cert rule <a href="https://wiki.sei.cmu.edu/confluence/display/java/ERR08-J.+Do+not+catch+NullPointerException+or+any+of+its+ancestors">ERR08-J</a> NullPointerException should not be caught. Handling NullPointerException is considered an inferior alternative to null-checking.
<p>
This non-compliant code catches a NullPointerException to see if an incoming parameter is null:
</p>
<pre><code>
boolean hasSpace(String m) {
  try {
    String ms[] = m.split(" ");
    return names.length != 1;
  } catch (NullPointerException e) {
    return false;
  }
}
</code></pre>
<p>
A compliant solution would use a null-check as in the following example:
</p>
<pre><code>
boolean hasSpace(String m) {
    if (m == null) return false;
    String ms[] = m.split(" ");
    return names.length != 1;
}
</code></pre>
    
     ]]></Details>
  </BugPattern>
  <BugPattern type="UC_USELESS_OBJECT_STACK" abbrev="UC" category="STYLE">
    <ShortDescription>Useless object created on stack</ShortDescription>
    <Details><![CDATA[

<p>This object is created just to perform some modifications which don't have any side-effect.
Probably something else was meant or the object can be removed.</p>

    ]]></Details>
  </BugPattern>
  <BugPattern type="CT_CONSTRUCTOR_THROW" abbrev="CT" category="BAD_PRACTICE">
    <ShortDescription>Be wary of letting constructors throw exceptions.</ShortDescription>
    <Details><![CDATA[
      
            <p>Classes that throw exceptions in their constructors are vulnerable to Finalizer attacks</p>

            <p>A finalizer attack can be prevented, by declaring the class final, using an empty finalizer declared as final, or by a clever use of a private constructor.</p>

            <p>See <a href="https://wiki.sei.cmu.edu/confluence/display/java/OBJ11-J.+Be+wary+of+letting+constructors+throw+exceptions"><code>SEI CERT Rule OBJ-11</code></a>
            for more information.
            </p>
            
    ]]></Details>
  </BugPattern>
  <BugPattern type="REFLC_REFLECTION_MAY_INCREASE_ACCESSIBILITY_OF_CLASS" abbrev="REFLC" category="MALICIOUS_CODE">
    <ShortDescription>Public method uses reflection to create a class it gets in its parameter which could increase the accessibility of any class</ShortDescription>
    <Details><![CDATA[
      
        <p>
        <a href="https://wiki.sei.cmu.edu/confluence/display/java/SEC05-J.+Do+not+use+reflection+to+increase+accessibility+of+classes%2C+methods%2C+or+fields">SEI CERT SEC05-J</a> rule forbids the use of reflection to increase accessibility of classes, methods or fields. If
        a class in a package provides a public method which takes an instance of java.lang.Class as its parameter and
        calls its newInstance() method then it increases accessibility of classes in the same package without public
        constructors. An attacker code may call this method and pass such class to create an instance of it. This should
        be avoided by either making the method non-public or by checking for package access permission on the package.
        A third possibility is to use the java.beans.Beans.instantiate() method instead of java.lang.Class.newInstance()
        which checks whether the Class object being received has any public constructors.
        </p>
    ]]></Details>
  </BugPattern>
  <BugPattern type="VA_FORMAT_STRING_USES_NEWLINE" abbrev="FS" category="BAD_PRACTICE">
    <ShortDescription>Format string should use %n rather than \n</ShortDescription>
    <Details><![CDATA[

<p>
This format string includes a newline character (\n). In format strings, it is generally
 preferable to use %n, which will produce the platform-specific line separator.
</p>

     ]]></Details>
  </BugPattern>
  <BugPattern type="PZLA_PREFER_ZERO_LENGTH_ARRAYS" abbrev="PZLA" category="STYLE">
    <ShortDescription>Consider returning a zero length array rather than null</ShortDescription>
    <Details><![CDATA[

<p> It is often a better design to
return a length zero array rather than a null reference to indicate that there
are no results (i.e., an empty list of results).
This way, no explicit check for null is needed by clients of the method.</p>

<p>On the other hand, using null to indicate
"there is no answer to this question" is probably appropriate.
For example, <code>File.listFiles()</code> returns an empty list
if given a directory containing no files, and returns null if the file
is not a directory.</p>

    ]]></Details>
  </BugPattern>
  <BugPattern type="UWF_UNWRITTEN_FIELD" abbrev="UwF" category="CORRECTNESS">
    <ShortDescription>Unwritten field</ShortDescription>
    <Details><![CDATA[

  <p> This field is never written.&nbsp; All reads of it will return the default
value. Check for errors (should it have been initialized?), or remove it if it is useless.</p>

    ]]></Details>
  </BugPattern>
  <BugPattern type="MC_OVERRIDABLE_METHOD_CALL_IN_CONSTRUCTOR" abbrev="MC" category="MALICIOUS_CODE">
    <ShortDescription>An overridable method is called from a constructor</ShortDescription>
    <Details><![CDATA[
      <p>
      Calling an overridable method during in a constructor may result in the use of uninitialized data. It may also
      leak the this reference of the partially constructed object. Only static, final or private methods should be
      invoked from a constructor.</p>
      <p>
      See SEI CERT rule <a href="https://wiki.sei.cmu.edu/confluence/display/java/MET05-J.+Ensure+that+constructors+do+not+call+overridable+methods">MET05-J. Ensure that constructors do not call overridable methods</a>.
      </p>
    ]]></Details>
  </BugPattern>
  <BugPattern type="DE_MIGHT_IGNORE" abbrev="DE" category="BAD_PRACTICE">
    <ShortDescription>Method might ignore exception</ShortDescription>
    <Details><![CDATA[

  <p> This method might ignore an exception.&nbsp; In general, exceptions
  should be handled or reported in some way, or they should be thrown
  out of the method.</p>

    ]]></Details>
  </BugPattern>
  <BugPattern type="IS2_INCONSISTENT_SYNC" abbrev="IS" category="MT_CORRECTNESS">
    <ShortDescription>Inconsistent synchronization</ShortDescription>
    <Details><![CDATA[

  <p> The fields of this class appear to be accessed inconsistently with respect
  to synchronization.&nbsp; This bug report indicates that the bug pattern detector
  judged that
  </p>
  <ul>
  <li> The class contains a mix of locked and unlocked accesses,</li>
  <li> The class is <b>not</b> annotated as javax.annotation.concurrent.NotThreadSafe,</li>
  <li> At least one locked access was performed by one of the class's own methods, and</li>
  <li> The number of unsynchronized field accesses (reads and writes) was no more than
       one third of all accesses, with writes being weighed twice as high as reads</li>
  </ul>

  <p> A typical bug matching this bug pattern is forgetting to synchronize
  one of the methods in a class that is intended to be thread-safe.</p>

  <p> You can select the nodes labeled "Unsynchronized access" to show the
  code locations where the detector believed that a field was accessed
  without synchronization.</p>

  <p> Note that there are various sources of inaccuracy in this detector;
  for example, the detector cannot statically detect all situations in which
  a lock is held.&nbsp; Also, even when the detector is accurate in
  distinguishing locked vs. unlocked accesses, the code in question may still
  be correct.</p>


    ]]></Details>
  </BugPattern>
  <BugPattern type="CN_IMPLEMENTS_CLONE_BUT_NOT_CLONEABLE" abbrev="CN" category="BAD_PRACTICE">
    <ShortDescription>Class defines clone() but doesn&apos;t implement Cloneable</ShortDescription>
    <Details><![CDATA[

<p> This class defines a clone() method but the class doesn't implement Cloneable.
There are some situations in which this is OK (e.g., you want to control how subclasses
can clone themselves), but just make sure that this is what you intended.
</p>

    ]]></Details>
  </BugPattern>
  <BugPattern type="NM_CONFUSING" abbrev="Nm" category="BAD_PRACTICE">
    <ShortDescription>Confusing method names</ShortDescription>
    <Details><![CDATA[

  <p> The referenced methods have names that differ only by capitalization.</p>

    ]]></Details>
  </BugPattern>
  <BugPattern type="RV_RETURN_VALUE_IGNORED_BAD_PRACTICE" abbrev="RV" category="BAD_PRACTICE" cweid="253">
    <ShortDescription>Method ignores exceptional return value</ShortDescription>
    <Details><![CDATA[

   <p> This method returns a value that is not checked. The return value should be checked
since it can indicate an unusual or unexpected function execution. For
example, the <code>File.delete()</code> method returns false
if the file could not be successfully deleted (rather than
throwing an Exception).
If you don't check the result, you won't notice if the method invocation
signals unexpected behavior by returning an atypical return value.
</p>

    ]]></Details>
  </BugPattern>
  <BugPattern type="DM_CONVERT_CASE" abbrev="Dm" category="I18N">
    <ShortDescription>Consider using Locale parameterized version of invoked method</ShortDescription>
    <Details><![CDATA[

  <p> A String is being converted to upper or lowercase, using the platform's default encoding. This may
      result in improper conversions when used with international characters. Use the </p>
      <ul>
    <li>String.toUpperCase( Locale l )</li>
    <li>String.toLowerCase( Locale l )</li>
    </ul>
      <p>versions instead.</p>

    ]]></Details>
  </BugPattern>
  <BugCode abbrev="BC">
    <Description>Bad casts of object references</Description>
  </BugCode>
  <BugCode abbrev="DE" cweid="391">
    <Description>Dropped or ignored exception</Description>
  </BugCode>
  <BugCode abbrev="NP" cweid="476">
    <Description>Null pointer dereference</Description>
  </BugCode>
  <BugCode abbrev="RV" cweid="440">
    <Description>Bad use of return value from method</Description>
  </BugCode>
  <BugCode abbrev="UwF">
    <Description>Unwritten field</Description>
  </BugCode>
  <BugCode abbrev="REFLC">
    <Description>Reflection increasing accessibility of classes</Description>
  </BugCode>
  <BugCode abbrev="DLS" cweid="563">
    <Description>Dead local store</Description>
  </BugCode>
  <BugCode abbrev="Eq">
    <Description>Problems with implementation of equals()</Description>
  </BugCode>
  <BugCode abbrev="DP">
    <Description>Use doPrivileged</Description>
  </BugCode>
  <BugCode abbrev="FS">
    <Description>Format string problem</Description>
  </BugCode>
  <BugCode abbrev="UC">
    <Description>Useless code</Description>
  </BugCode>
  <BugCode abbrev="EI2">
    <Description>Storing reference to mutable object</Description>
  </BugCode>
  <BugCode abbrev="SF">
    <Description>Switch case falls through</Description>
  </BugCode>
  <BugCode abbrev="UI">
    <Description>Unsafe inheritance</Description>
  </BugCode>
  <BugCode abbrev="MC">
    <Description>Dangerous call to overridable method</Description>
  </BugCode>
  <BugCode abbrev="OBL">
    <Description>Unsatisfied obligation to clean up stream or resource</Description>
  </BugCode>
  <BugCode abbrev="PZLA">
    <Description>Prefer zero length arrays to null to indicate no results</Description>
  </BugCode>
  <BugCode abbrev="Nm">
    <Description>Confusing method name</Description>
  </BugCode>
  <BugCode abbrev="ST">
    <Description>Misuse of static fields</Description>
  </BugCode>
  <BugCode abbrev="DMI" cweid="440">
    <Description>Dubious method invocation</Description>
  </BugCode>
  <BugCode abbrev="EI">
    <Description>Method returning array may expose internal representation</Description>
  </BugCode>
  <BugCode abbrev="IM">
    <Description>Questionable integer math</Description>
  </BugCode>
  <BugCode abbrev="MS" cweid="218">
    <Description>Mutable static field</Description>
  </BugCode>
  <BugCode abbrev="UrF">
    <Description>Unread field</Description>
  </BugCode>
  <BugCode abbrev="Dm">
    <Description>Dubious method used</Description>
  </BugCode>
  <BugCode abbrev="IS" cweid="366">
    <Description>Inconsistent synchronization</Description>
  </BugCode>
  <BugCode abbrev="CN" cweid="580">
    <Description>Bad implementation of cloneable idiom</Description>
  </BugCode>
  <BugCode abbrev="SIC">
    <Description>Inner class could be made static</Description>
  </BugCode>
  <BugCode abbrev="DCN">
    <Description>Don&apos;t Catch NullPointer Exception</Description>
  </BugCode>
  <BugCode abbrev="REC">
    <Description>RuntimeException capture</Description>
  </BugCode>
  <BugCode abbrev="PA">
    <Description>Public Attribute</Description>
  </BugCode>
  <BugCode abbrev="CT">
    <Description>Constructor throws</Description>
  </BugCode>
  <BugCode abbrev="WMI">
    <Description>Inefficient Map Iterator</Description>
  </BugCode>
  <BugCode abbrev="Se">
    <Description>Incorrect definition of Serializable class</Description>
  </BugCode>
  <BugCode abbrev="RI">
    <Description>Redundant Interfaces</Description>
  </BugCode>
  <BugCode abbrev="RCN" cweid="476">
    <Description>Redundant comparison to null</Description>
  </BugCode>
  <BugCode abbrev="LI">
    <Description>Unsynchronized Lazy Initialization</Description>
  </BugCode>
  <Errors errors="0" missingClasses="52">
    <MissingClass>com.beust.jcommander.JCommander</MissingClass>
    <MissingClass>com.beust.jcommander.ParameterException</MissingClass>
    <MissingClass>com.google.inject.Guice</MissingClass>
    <MissingClass>com.google.inject.Injector</MissingClass>
    <MissingClass>com.google.inject.Module</MissingClass>
    <MissingClass>com.google.inject.Stage</MissingClass>
    <MissingClass>junit.framework.AssertionFailedError</MissingClass>
    <MissingClass>junit.framework.Test</MissingClass>
    <MissingClass>junit.framework.TestListener</MissingClass>
    <MissingClass>junit.framework.TestResult</MissingClass>
    <MissingClass>junit.framework.TestSuite</MissingClass>
    <MissingClass>org.apache.tools.ant.BuildException</MissingClass>
    <MissingClass>org.apache.tools.ant.Location</MissingClass>
    <MissingClass>org.apache.tools.ant.Project</MissingClass>
    <MissingClass>org.apache.tools.ant.Target</MissingClass>
    <MissingClass>org.apache.tools.ant.Task</MissingClass>
    <MissingClass>org.apache.tools.ant.taskdefs.Execute</MissingClass>
    <MissingClass>org.apache.tools.ant.taskdefs.ExecuteStreamHandler</MissingClass>
    <MissingClass>org.apache.tools.ant.taskdefs.ExecuteWatchdog</MissingClass>
    <MissingClass>org.apache.tools.ant.taskdefs.LogOutputStream</MissingClass>
    <MissingClass>org.apache.tools.ant.taskdefs.PumpStreamHandler</MissingClass>
    <MissingClass>org.apache.tools.ant.types.Commandline</MissingClass>
    <MissingClass>org.apache.tools.ant.types.Commandline$Argument</MissingClass>
    <MissingClass>org.apache.tools.ant.types.CommandlineJava</MissingClass>
    <MissingClass>org.apache.tools.ant.types.Environment</MissingClass>
    <MissingClass>org.apache.tools.ant.types.Environment$Variable</MissingClass>
    <MissingClass>org.apache.tools.ant.types.FileSet</MissingClass>
    <MissingClass>org.apache.tools.ant.types.Path</MissingClass>
    <MissingClass>org.apache.tools.ant.types.PropertySet</MissingClass>
    <MissingClass>org.apache.tools.ant.types.Reference</MissingClass>
    <MissingClass>org.apache.tools.ant.types.Resource</MissingClass>
    <MissingClass>org.apache.tools.ant.types.ResourceCollection</MissingClass>
    <MissingClass>org.apache.tools.ant.types.resources.FileResource</MissingClass>
    <MissingClass>org.apache.tools.ant.types.selectors.FileSelector</MissingClass>
    <MissingClass>org.apache.tools.ant.types.selectors.FilenameSelector</MissingClass>
    <MissingClass>org.junit.Test</MissingClass>
    <MissingClass>org.junit.runner.Description</MissingClass>
    <MissingClass>org.junit.runner.JUnitCore</MissingClass>
    <MissingClass>org.junit.runner.Request</MissingClass>
    <MissingClass>org.junit.runner.Result</MissingClass>
    <MissingClass>org.junit.runner.RunWith</MissingClass>
    <MissingClass>org.junit.runner.manipulation.Filter</MissingClass>
    <MissingClass>org.junit.runner.notification.Failure</MissingClass>
    <MissingClass>org.junit.runner.notification.RunListener</MissingClass>
    <MissingClass>org.yaml.snakeyaml.TypeDescription</MissingClass>
    <MissingClass>org.yaml.snakeyaml.Yaml</MissingClass>
    <MissingClass>org.yaml.snakeyaml.constructor.BaseConstructor</MissingClass>
    <MissingClass>org.yaml.snakeyaml.constructor.Constructor</MissingClass>
    <MissingClass>org.yaml.snakeyaml.constructor.Constructor$ConstructScalar</MissingClass>
    <MissingClass>org.yaml.snakeyaml.nodes.Node</MissingClass>
    <MissingClass>org.yaml.snakeyaml.nodes.NodeId</MissingClass>
    <MissingClass>org.yaml.snakeyaml.nodes.ScalarNode</MissingClass>
  </Errors>
  <FindBugsSummary timestamp="Fri, 8 Dec 2023 14:26:40 +0900" total_classes="552" referenced_classes="821" total_bugs="499" total_size="25364" num_packages="24" java_version="17.0.9" vm_version="17.0.9+11-LTS-201" cpu_seconds="7.73" clock_seconds="8.36" peak_mbytes="499.38" alloc_mbytes="4078.00" gc_seconds="0.20" priority_3="57" priority_2="409" priority_1="33">
    <FileStats path="org/testng/Assert.java" bugCount="4" size="731" bugHash="fa7763f6e79ef74b6b38dc916062eebb"/>
    <FileStats path="org/testng/AssertJUnit.java" bugCount="0" size="161"/>
    <FileStats path="org/testng/ClassMethodMap.java" bugCount="2" size="44" bugHash="1e8d95fc55378190e0414b5d5171156b"/>
    <FileStats path="org/testng/CommandLineArgs.java" bugCount="1" size="91" bugHash="64b53c0f66892f0ff4ede21dd136254d"/>
    <FileStats path="org/testng/ConversionUtils.java" bugCount="1" size="20" bugHash="a6749b01eb351929d4e08948e496f41a"/>
    <FileStats path="org/testng/Converter.java" bugCount="2" size="55" bugHash="506408173fd8543cf922da6200fe244d"/>
    <FileStats path="org/testng/DataProviderHolder.java" bugCount="0" size="27"/>
    <FileStats path="org/testng/DataProviderInvocationException.java" bugCount="0" size="4"/>
    <FileStats path="org/testng/DependencyMap.java" bugCount="1" size="51" bugHash="85634acfebf5430672ed36d87f0281db"/>
    <FileStats path="org/testng/FileAssert.java" bugCount="3" size="155" bugHash="1f6262be3ce742a9526e33cd8a42d286"/>
    <FileStats path="org/testng/GuiceHelper.java" bugCount="0" size="84"/>
    <FileStats path="org/testng/IAlterSuiteListener.java" bugCount="0" size="3"/>
    <FileStats path="org/testng/IAnnotationTransformer.java" bugCount="0" size="11"/>
    <FileStats path="org/testng/IAttributes.java" bugCount="0" size="5"/>
    <FileStats path="org/testng/IClass.java" bugCount="0" size="11"/>
    <FileStats path="org/testng/IClassListener.java" bugCount="0" size="5"/>
    <FileStats path="org/testng/IConfigurable.java" bugCount="0" size="2"/>
    <FileStats path="org/testng/IConfigurationListener.java" bugCount="0" size="17"/>
    <FileStats path="org/testng/IConfigurationListener2.java" bugCount="0" size="1"/>
    <FileStats path="org/testng/IConfigureCallBack.java" bugCount="0" size="3"/>
    <FileStats path="org/testng/IDataProviderInterceptor.java" bugCount="0" size="2"/>
    <FileStats path="org/testng/IDataProviderListener.java" bugCount="0" size="5"/>
    <FileStats path="org/testng/IDataProviderMethod.java" bugCount="0" size="6"/>
    <FileStats path="org/testng/IDynamicGraph.java" bugCount="0" size="26"/>
    <FileStats path="org/testng/IExecutionListener.java" bugCount="0" size="5"/>
    <FileStats path="org/testng/IExecutionVisualiser.java" bugCount="0" size="2"/>
    <FileStats path="org/testng/IExpectedExceptionsHolder.java" bugCount="0" size="3"/>
    <FileStats path="org/testng/IHookCallBack.java" bugCount="0" size="3"/>
    <FileStats path="org/testng/IHookable.java" bugCount="0" size="2"/>
    <FileStats path="org/testng/IInjectorFactory.java" bugCount="0" size="2"/>
    <FileStats path="org/testng/IInstanceInfo.java" bugCount="0" size="3"/>
    <FileStats path="org/testng/IInvokedMethod.java" bugCount="0" size="6"/>
    <FileStats path="org/testng/IInvokedMethodListener.java" bugCount="0" size="9"/>
    <FileStats path="org/testng/IMethodInstance.java" bugCount="0" size="3"/>
    <FileStats path="org/testng/IMethodInterceptor.java" bugCount="0" size="2"/>
    <FileStats path="org/testng/IMethodSelector.java" bugCount="0" size="3"/>
    <FileStats path="org/testng/IMethodSelectorContext.java" bugCount="0" size="4"/>
    <FileStats path="org/testng/IModule.java" bugCount="0" size="2"/>
    <FileStats path="org/testng/IModuleFactory.java" bugCount="0" size="2"/>
    <FileStats path="org/testng/IObjectFactory.java" bugCount="0" size="2"/>
    <FileStats path="org/testng/IObjectFactory2.java" bugCount="0" size="2"/>
    <FileStats path="org/testng/IReporter.java" bugCount="0" size="5"/>
    <FileStats path="org/testng/IResultMap.java" bugCount="0" size="8"/>
    <FileStats path="org/testng/IRetryAnalyzer.java" bugCount="0" size="2"/>
    <FileStats path="org/testng/ISuite.java" bugCount="0" size="22"/>
    <FileStats path="org/testng/ISuiteListener.java" bugCount="0" size="5"/>
    <FileStats path="org/testng/ISuiteResult.java" bugCount="0" size="3"/>
    <FileStats path="org/testng/ITest.java" bugCount="0" size="2"/>
    <FileStats path="org/testng/ITestClass.java" bugCount="0" size="12"/>
    <FileStats path="org/testng/ITestClassFinder.java" bugCount="0" size="3"/>
    <FileStats path="org/testng/ITestContext.java" bugCount="0" size="23"/>
    <FileStats path="org/testng/ITestListener.java" bugCount="0" size="18"/>
    <FileStats path="org/testng/ITestMethodFinder.java" bugCount="0" size="12"/>
    <FileStats path="org/testng/ITestNGListener.java" bugCount="0" size="1"/>
    <FileStats path="org/testng/ITestNGListenerFactory.java" bugCount="0" size="2"/>
    <FileStats path="org/testng/ITestNGMethod.java" bugCount="0" size="87"/>
    <FileStats path="org/testng/ITestObjectFactory.java" bugCount="0" size="1"/>
    <FileStats path="org/testng/ITestResult.java" bugCount="0" size="38"/>
    <FileStats path="org/testng/ITestRunnerFactory.java" bugCount="0" size="6"/>
    <FileStats path="org/testng/InstanceOrderingMethodInterceptor.java" bugCount="0" size="21"/>
    <FileStats path="org/testng/JarFileUtils.java" bugCount="2" size="77" bugHash="033642d2c761afdf611cc7c142870a44"/>
    <FileStats path="org/testng/PreserveOrderMethodInterceptor.java" bugCount="0" size="6"/>
    <FileStats path="org/testng/Reporter.java" bugCount="1" size="77" bugHash="73ec8dd357bafdb22dcd180380f3bf65"/>
    <FileStats path="org/testng/ReporterConfig.java" bugCount="1" size="20" bugHash="adc6c7b254ff44c4fa25f30338942474"/>
    <FileStats path="org/testng/SkipException.java" bugCount="1" size="31" bugHash="de1240eeed5e0f312c60fa18b191f5b1"/>
    <FileStats path="org/testng/SuiteResult.java" bugCount="2" size="29" bugHash="ef066151f32f2463c73e8cb3c0352362"/>
    <FileStats path="org/testng/SuiteRunState.java" bugCount="0" size="10"/>
    <FileStats path="org/testng/SuiteRunner.java" bugCount="4" size="378" bugHash="75cd512bd654f80c042e08d1aabff51e"/>
    <FileStats path="org/testng/SuiteRunnerWorker.java" bugCount="3" size="123" bugHash="fc176b5e0026ce2e86d222f9933f2cce"/>
    <FileStats path="org/testng/TestClass.java" bugCount="1" size="127" bugHash="6e2af8912be9731586a014b2905c8fc7"/>
    <FileStats path="org/testng/TestException.java" bugCount="0" size="11"/>
    <FileStats path="org/testng/TestListenerAdapter.java" bugCount="5" size="101" bugHash="4f7b101ca2a28bcf8fcf3c05e1014e92"/>
    <FileStats path="org/testng/TestNG.java" bugCount="11" size="1031" bugHash="99739de9a401a82a7fef60b0bc896bc7"/>
    <FileStats path="org/testng/TestNGAntTask.java" bugCount="4" size="640" bugHash="cdc89f600d7236093d86735f3fe10cef"/>
    <FileStats path="org/testng/TestNGException.java" bugCount="0" size="11"/>
    <FileStats path="org/testng/TestNGUtils.java" bugCount="0" size="5"/>
    <FileStats path="org/testng/TestRunner.java" bugCount="21" size="650" bugHash="5f5e7460b0a2aaa7492dc275140e5f33"/>
    <FileStats path="org/testng/TimeBombSkipException.java" bugCount="0" size="88"/>
    <FileStats path="org/testng/annotations/AfterClass.java" bugCount="0" size="9"/>
    <FileStats path="org/testng/annotations/AfterGroups.java" bugCount="0" size="10"/>
    <FileStats path="org/testng/annotations/AfterMethod.java" bugCount="0" size="11"/>
    <FileStats path="org/testng/annotations/AfterSuite.java" bugCount="0" size="9"/>
    <FileStats path="org/testng/annotations/AfterTest.java" bugCount="0" size="9"/>
    <FileStats path="org/testng/annotations/BeforeClass.java" bugCount="0" size="9"/>
    <FileStats path="org/testng/annotations/BeforeGroups.java" bugCount="0" size="10"/>
    <FileStats path="org/testng/annotations/BeforeMethod.java" bugCount="0" size="11"/>
    <FileStats path="org/testng/annotations/BeforeSuite.java" bugCount="0" size="9"/>
    <FileStats path="org/testng/annotations/BeforeTest.java" bugCount="0" size="9"/>
    <FileStats path="org/testng/annotations/CustomAttribute.java" bugCount="0" size="3"/>
    <FileStats path="org/testng/annotations/DataProvider.java" bugCount="0" size="4"/>
    <FileStats path="org/testng/annotations/Factory.java" bugCount="0" size="5"/>
    <FileStats path="org/testng/annotations/Guice.java" bugCount="0" size="3"/>
    <FileStats path="org/testng/annotations/IAnnotation.java" bugCount="0" size="1"/>
    <FileStats path="org/testng/annotations/IConfigurationAnnotation.java" bugCount="0" size="18"/>
    <FileStats path="org/testng/annotations/IDataProviderAnnotation.java" bugCount="0" size="7"/>
    <FileStats path="org/testng/annotations/IFactoryAnnotation.java" bugCount="0" size="3"/>
    <FileStats path="org/testng/annotations/IListenersAnnotation.java" bugCount="0" size="3"/>
    <FileStats path="org/testng/annotations/IObjectFactoryAnnotation.java" bugCount="0" size="1"/>
    <FileStats path="org/testng/annotations/IParameterizable.java" bugCount="0" size="3"/>
    <FileStats path="org/testng/annotations/IParametersAnnotation.java" bugCount="0" size="2"/>
    <FileStats path="org/testng/annotations/ITestAnnotation.java" bugCount="0" size="37"/>
    <FileStats path="org/testng/annotations/ITestOrConfiguration.java" bugCount="0" size="11"/>
    <FileStats path="org/testng/annotations/Ignore.java" bugCount="0" size="2"/>
    <FileStats path="org/testng/annotations/Listeners.java" bugCount="0" size="2"/>
    <FileStats path="org/testng/annotations/NoInjection.java" bugCount="0" size="1"/>
    <FileStats path="org/testng/annotations/ObjectFactory.java" bugCount="0" size="1"/>
    <FileStats path="org/testng/annotations/Optional.java" bugCount="0" size="2"/>
    <FileStats path="org/testng/annotations/Parameters.java" bugCount="0" size="2"/>
    <FileStats path="org/testng/annotations/Test.java" bugCount="0" size="24"/>
    <FileStats path="org/testng/annotations/TestInstance.java" bugCount="0" size="1"/>
    <FileStats path="org/testng/asserts/Assertion.java" bugCount="0" size="911"/>
    <FileStats path="org/testng/asserts/IAssert.java" bugCount="0" size="5"/>
    <FileStats path="org/testng/asserts/IAssertLifecycle.java" bugCount="0" size="6"/>
    <FileStats path="org/testng/asserts/LoggingAssert.java" bugCount="1" size="10" bugHash="67a1192a8a7053816cd2523cefdcba0f"/>
    <FileStats path="org/testng/asserts/SoftAssert.java" bugCount="0" size="32"/>
    <FileStats path="org/testng/collections/CollectionUtils.java" bugCount="0" size="10"/>
    <FileStats path="org/testng/collections/ListMultiMap.java" bugCount="0" size="8"/>
    <FileStats path="org/testng/collections/Lists.java" bugCount="0" size="23"/>
    <FileStats path="org/testng/collections/Maps.java" bugCount="0" size="19"/>
    <FileStats path="org/testng/collections/MultiMap.java" bugCount="0" size="55"/>
    <FileStats path="org/testng/collections/Objects.java" bugCount="0" size="56"/>
    <FileStats path="org/testng/collections/SetMultiMap.java" bugCount="0" size="8"/>
    <FileStats path="org/testng/collections/Sets.java" bugCount="0" size="13"/>
    <FileStats path="org/testng/internal/AbstractParallelWorker.java" bugCount="3" size="72" bugHash="2ea402887acecdacbc8170428a9dcc37"/>
    <FileStats path="org/testng/internal/Arguments.java" bugCount="2" size="16" bugHash="804066a8b6405d56ea1fdf0ccb8bb10a"/>
    <FileStats path="org/testng/internal/Attributes.java" bugCount="0" size="14"/>
    <FileStats path="org/testng/internal/BaseClassFinder.java" bugCount="0" size="19"/>
    <FileStats path="org/testng/internal/BaseInvoker.java" bugCount="1" size="43" bugHash="5d96e5cdc80df2e3d9a6e9011e78b36e"/>
    <FileStats path="org/testng/internal/BaseTestMethod.java" bugCount="11" size="407" bugHash="b65ea1018b1b49f4b2efd0e36bee51d1"/>
    <FileStats path="org/testng/internal/ClassBasedParallelWorker.java" bugCount="0" size="60"/>
    <FileStats path="org/testng/internal/ClassHelper.java" bugCount="0" size="207"/>
    <FileStats path="org/testng/internal/ClassImpl.java" bugCount="6" size="93" bugHash="44fc210e44502a4202db5cdb0116cbb5"/>
    <FileStats path="org/testng/internal/ClassInfoMap.java" bugCount="1" size="44" bugHash="e3cb16adaa6eaffb037597fa0fcee359"/>
    <FileStats path="org/testng/internal/ClonedMethod.java" bugCount="7" size="170" bugHash="3f41b632e5217e76eec35782d9da58ea"/>
    <FileStats path="org/testng/internal/ConfigInvoker.java" bugCount="1" size="333" bugHash="aec2504ad20acdac81283b8e54a4eabd"/>
    <FileStats path="org/testng/internal/ConfigMethodArguments.java" bugCount="13" size="73" bugHash="9eee80e5c0469cd6fa0666a004c324a7"/>
    <FileStats path="org/testng/internal/Configuration.java" bugCount="0" size="72"/>
    <FileStats path="org/testng/internal/ConfigurationGroupMethods.java" bugCount="4" size="70" bugHash="ede019c59c0aa05f3b2d3aae820613d6"/>
    <FileStats path="org/testng/internal/ConfigurationMethod.java" bugCount="1" size="181" bugHash="0ef873d162acffe980577275fea4ccea"/>
    <FileStats path="org/testng/internal/ConstructorOrMethod.java" bugCount="7" size="67" bugHash="8863629d0e7f7c5af3735d82453e76d2"/>
    <FileStats path="org/testng/internal/DataProviderMethod.java" bugCount="0" size="20"/>
    <FileStats path="org/testng/internal/DefaultListenerFactory.java" bugCount="0" size="5"/>
    <FileStats path="org/testng/internal/DefaultMethodSelectorContext.java" bugCount="1" size="14" bugHash="69dbeaa4a14d0e617ed8f15e463b8850"/>
    <FileStats path="org/testng/internal/DynamicGraph.java" bugCount="4" size="235" bugHash="1d156799721e4ff913e941ea3085bd72"/>
    <FileStats path="org/testng/internal/DynamicGraphHelper.java" bugCount="3" size="104" bugHash="9a02692ca5679fb97868d2eb0d069758"/>
    <FileStats path="org/testng/internal/EclipseInterface.java" bugCount="0" size="18"/>
    <FileStats path="org/testng/internal/ExceptionUtils.java" bugCount="0" size="24"/>
    <FileStats path="org/testng/internal/ExitCode.java" bugCount="0" size="50"/>
    <FileStats path="org/testng/internal/ExitCodeListener.java" bugCount="0" size="47"/>
    <FileStats path="org/testng/internal/ExpectedExceptionsHolder.java" bugCount="2" size="49" bugHash="d250e90bc2ffb8336b7c4dbad3ecf44f"/>
    <FileStats path="org/testng/internal/FactoryMethod.java" bugCount="2" size="126" bugHash="8baa7d838fcefbdcac6703bcb2f39293"/>
    <FileStats path="org/testng/internal/Graph.java" bugCount="3" size="180" bugHash="551b1df53518536f0481006ddb5a7ef6"/>
    <FileStats path="org/testng/internal/GroupConfigMethodArguments.java" bugCount="5" size="40" bugHash="fab0e9690be9bc8d21786a8ca86ba083"/>
    <FileStats path="org/testng/internal/GroupsHelper.java" bugCount="0" size="31"/>
    <FileStats path="org/testng/internal/GuiceBackedInjectorFactory.java" bugCount="0" size="5"/>
    <FileStats path="org/testng/internal/IConfigInvoker.java" bugCount="0" size="5"/>
    <FileStats path="org/testng/internal/IConfiguration.java" bugCount="0" size="22"/>
    <FileStats path="org/testng/internal/IInvoker.java" bugCount="0" size="3"/>
    <FileStats path="org/testng/internal/IMethodRunner.java" bugCount="0" size="3"/>
    <FileStats path="org/testng/internal/IParameterInfo.java" bugCount="0" size="7"/>
    <FileStats path="org/testng/internal/IResultListener.java" bugCount="0" size="1"/>
    <FileStats path="org/testng/internal/IResultListener2.java" bugCount="0" size="1"/>
    <FileStats path="org/testng/internal/ITestInvoker.java" bugCount="0" size="19"/>
    <FileStats path="org/testng/internal/ITestResultNotifier.java" bugCount="0" size="12"/>
    <FileStats path="org/testng/internal/InstanceBasedParallelParallelWorker.java" bugCount="0" size="23"/>
    <FileStats path="org/testng/internal/InstanceCreator.java" bugCount="2" size="95" bugHash="fa52643a9ab8f5da2ed2ff26f4fd4cda"/>
    <FileStats path="org/testng/internal/InstanceInfo.java" bugCount="0" size="12"/>
    <FileStats path="org/testng/internal/InvokeMethodRunnable.java" bugCount="3" size="52" bugHash="a60f97f1eed7df65d5064a83d4d00ad2"/>
    <FileStats path="org/testng/internal/InvokedMethod.java" bugCount="4" size="28" bugHash="41a9354f59fe965419d4cde26a3f7cd2"/>
    <FileStats path="org/testng/internal/Invoker.java" bugCount="1" size="22" bugHash="8000e575d6e1e9ee00675a9f8156fb55"/>
    <FileStats path="org/testng/internal/MethodArguments.java" bugCount="1" size="8" bugHash="8733262baa485d0442c8d992cff5886e"/>
    <FileStats path="org/testng/internal/MethodGroupsHelper.java" bugCount="0" size="134"/>
    <FileStats path="org/testng/internal/MethodHelper.java" bugCount="4" size="258" bugHash="5099a339408d3bf5d7cf7c33f9e5ffaa"/>
    <FileStats path="org/testng/internal/MethodInheritance.java" bugCount="1" size="82" bugHash="c3f9d7105cb3b02d3ba53f15c8e50523"/>
    <FileStats path="org/testng/internal/MethodInstance.java" bugCount="2" size="52" bugHash="8216530526748604d200980e645edcd8"/>
    <FileStats path="org/testng/internal/MethodInvocationHelper.java" bugCount="2" size="220" bugHash="fb075819ab6ecc3d5cac93ad0ecd48ff"/>
    <FileStats path="org/testng/internal/MethodRunner.java" bugCount="0" size="81"/>
    <FileStats path="org/testng/internal/MethodSelectorDescriptor.java" bugCount="3" size="19" bugHash="c2540556c049fc2a4dd7fb9fa6534746"/>
    <FileStats path="org/testng/internal/NoOpTestClass.java" bugCount="17" size="101" bugHash="bf3bbf48dae1b88643c81c5a601dbd31"/>
    <FileStats path="org/testng/internal/ObjectFactoryImpl.java" bugCount="0" size="15"/>
    <FileStats path="org/testng/internal/OverrideProcessor.java" bugCount="2" size="20" bugHash="766f17ed470bd1dad25a29a7cf1c24b2"/>
    <FileStats path="org/testng/internal/PackageUtils.java" bugCount="4" size="153" bugHash="4ff4070bbad7d79e959cf9766c36f361"/>
    <FileStats path="org/testng/internal/ParameterHandler.java" bugCount="0" size="44"/>
    <FileStats path="org/testng/internal/ParameterHolder.java" bugCount="1" size="23" bugHash="113d013fec2a8fb76c6e0b70b76e22ce"/>
    <FileStats path="org/testng/internal/ParameterInfo.java" bugCount="2" size="12" bugHash="c4f9293e027a9b4e5245fd38f4a94778"/>
    <FileStats path="org/testng/internal/Parameters.java" bugCount="6" size="426" bugHash="a7d11df8b2bc31fe865802d10cda3b44"/>
    <FileStats path="org/testng/internal/PoolService.java" bugCount="0" size="32"/>
    <FileStats path="org/testng/internal/PropertyUtils.java" bugCount="0" size="52"/>
    <FileStats path="org/testng/internal/RegexpExpectedExceptionsHolder.java" bugCount="1" size="25" bugHash="095bcbb912fafab73602f86de5b579c3"/>
    <FileStats path="org/testng/internal/ReporterConfig.java" bugCount="2" size="66" bugHash="36c8437022b965f7c2bd16e22cb49028"/>
    <FileStats path="org/testng/internal/ResultMap.java" bugCount="0" size="33"/>
    <FileStats path="org/testng/internal/RunInfo.java" bugCount="0" size="34"/>
    <FileStats path="org/testng/internal/RuntimeBehavior.java" bugCount="0" size="47"/>
    <FileStats path="org/testng/internal/ScriptMethodSelector.java" bugCount="0" size="35"/>
    <FileStats path="org/testng/internal/ScriptSelectorFactory.java" bugCount="1" size="20" bugHash="3139304fc44f7b871a7768f9e12ae6aa"/>
    <FileStats path="org/testng/internal/SuiteRunnerMap.java" bugCount="0" size="15"/>
    <FileStats path="org/testng/internal/Systematiser.java" bugCount="0" size="70"/>
    <FileStats path="org/testng/internal/Tarjan.java" bugCount="1" size="35" bugHash="2f060d4410f28818c2b3edda7d536d3a"/>
    <FileStats path="org/testng/internal/TestInvoker.java" bugCount="0" size="474"/>
    <FileStats path="org/testng/internal/TestListenerHelper.java" bugCount="3" size="104" bugHash="c46f2ee93281e4cbaab58f8643efb773"/>
    <FileStats path="org/testng/internal/TestMethodArguments.java" bugCount="9" size="78" bugHash="50dda8a227f36cecb4bc699638b51347"/>
    <FileStats path="org/testng/internal/TestMethodComparator.java" bugCount="1" size="14" bugHash="04c1c739c414903bb33164b10d9691e9"/>
    <FileStats path="org/testng/internal/TestMethodWithDataProviderMethodWorker.java" bugCount="9" size="83" bugHash="87358221dc5f44e01cd731a904894171"/>
    <FileStats path="org/testng/internal/TestMethodWorker.java" bugCount="8" size="161" bugHash="05d0e5e93dfd53e5adf3f4e5953aad13"/>
    <FileStats path="org/testng/internal/TestNGClassFinder.java" bugCount="4" size="172" bugHash="24ef7888e9c9aa9323aa2bc51696396d"/>
    <FileStats path="org/testng/internal/TestNGMethod.java" bugCount="2" size="140" bugHash="9f94e9c67ccd65aec793b949b782eec5"/>
    <FileStats path="org/testng/internal/TestNGMethodFinder.java" bugCount="1" size="141" bugHash="ba0aefb188522cdb58f643b8ccb2f57d"/>
    <FileStats path="org/testng/internal/TestNgMethodUtils.java" bugCount="0" size="70"/>
    <FileStats path="org/testng/internal/TestResult.java" bugCount="9" size="269" bugHash="7ace4f97dae5c9bf2079d4a0a12affa3"/>
    <FileStats path="org/testng/internal/Utils.java" bugCount="9" size="318" bugHash="27b8ddca1193c43f0f94f0b0d780793b"/>
    <FileStats path="org/testng/internal/Version.java" bugCount="0" size="9"/>
    <FileStats path="org/testng/internal/WrappedTestNGMethod.java" bugCount="3" size="174" bugHash="36d6d011b30a3528a664893eef16c283"/>
    <FileStats path="org/testng/internal/XmlMethodSelector.java" bugCount="7" size="197" bugHash="45cc4fa482b0ff06f3fbaeaa56bb5c3c"/>
    <FileStats path="org/testng/internal/Yaml.java" bugCount="1" size="213" bugHash="ef4b043eb025fcf944522f775b45ec67"/>
    <FileStats path="org/testng/internal/YamlParser.java" bugCount="0" size="10"/>
    <FileStats path="org/testng/internal/annotations/AnnotationHelper.java" bugCount="1" size="189" bugHash="829bdb46f8b8bf43b02eba6027271a33"/>
    <FileStats path="org/testng/internal/annotations/BaseAnnotation.java" bugCount="4" size="21" bugHash="443d76ba4903072d216d828308641ca3"/>
    <FileStats path="org/testng/internal/annotations/BaseBeforeAfter.java" bugCount="4" size="37" bugHash="292e900d5b0efcef886ba2fbd4351a26"/>
    <FileStats path="org/testng/internal/annotations/ConfigurationAnnotation.java" bugCount="5" size="128" bugHash="be7a0110b9f6649c682f6c21a22af20d"/>
    <FileStats path="org/testng/internal/annotations/DataProviderAnnotation.java" bugCount="2" size="21" bugHash="5fe7a61dd96b489c122e14d50bca0cda"/>
    <FileStats path="org/testng/internal/annotations/DefaultAnnotationTransformer.java" bugCount="1" size="9" bugHash="3ea93f039db3868970a32c90c3cc61e1"/>
    <FileStats path="org/testng/internal/annotations/DisabledRetryAnalyzer.java" bugCount="0" size="5"/>
    <FileStats path="org/testng/internal/annotations/FactoryAnnotation.java" bugCount="2" size="29" bugHash="d87cb48e03138560e70a619d8fe16a9d"/>
    <FileStats path="org/testng/internal/annotations/IAfterClass.java" bugCount="0" size="1"/>
    <FileStats path="org/testng/internal/annotations/IAfterGroups.java" bugCount="0" size="1"/>
    <FileStats path="org/testng/internal/annotations/IAfterMethod.java" bugCount="0" size="1"/>
    <FileStats path="org/testng/internal/annotations/IAfterSuite.java" bugCount="0" size="1"/>
    <FileStats path="org/testng/internal/annotations/IAfterTest.java" bugCount="0" size="1"/>
    <FileStats path="org/testng/internal/annotations/IAnnotationFinder.java" bugCount="0" size="10"/>
    <FileStats path="org/testng/internal/annotations/IAnnotationTransformer.java" bugCount="1" size="3" bugHash="750d85e112e3a67ebdfd4e24b38cb36a"/>
    <FileStats path="org/testng/internal/annotations/IBaseBeforeAfter.java" bugCount="0" size="8"/>
    <FileStats path="org/testng/internal/annotations/IBaseBeforeAfterMethod.java" bugCount="0" size="2"/>
    <FileStats path="org/testng/internal/annotations/IBeforeClass.java" bugCount="0" size="1"/>
    <FileStats path="org/testng/internal/annotations/IBeforeGroups.java" bugCount="0" size="1"/>
    <FileStats path="org/testng/internal/annotations/IBeforeMethod.java" bugCount="0" size="1"/>
    <FileStats path="org/testng/internal/annotations/IBeforeSuite.java" bugCount="0" size="1"/>
    <FileStats path="org/testng/internal/annotations/IBeforeTest.java" bugCount="0" size="1"/>
    <FileStats path="org/testng/internal/annotations/IDataProvidable.java" bugCount="0" size="5"/>
    <FileStats path="org/testng/internal/annotations/IListeners.java" bugCount="0" size="1"/>
    <FileStats path="org/testng/internal/annotations/ITest.java" bugCount="0" size="1"/>
    <FileStats path="org/testng/internal/annotations/IgnoreListener.java" bugCount="0" size="49"/>
    <FileStats path="org/testng/internal/annotations/JDK15AnnotationFinder.java" bugCount="1" size="126" bugHash="7748df7d41204177ee9c19713f84ff74"/>
    <FileStats path="org/testng/internal/annotations/JDK15TagFactory.java" bugCount="0" size="291"/>
    <FileStats path="org/testng/internal/annotations/ListenersAnnotation.java" bugCount="2" size="9" bugHash="6e45215563408c4b2d96af5ca94b3c1d"/>
    <FileStats path="org/testng/internal/annotations/ObjectFactoryAnnotation.java" bugCount="0" size="3"/>
    <FileStats path="org/testng/internal/annotations/ParametersAnnotation.java" bugCount="2" size="10" bugHash="8d5a3bfb32c9442e3e7ca1e75e64096d"/>
    <FileStats path="org/testng/internal/annotations/TestAnnotation.java" bugCount="4" size="123" bugHash="c0446b7df0f73a7c49e1649736a78477"/>
    <FileStats path="org/testng/internal/annotations/TestOrConfiguration.java" bugCount="6" size="51" bugHash="7e8be8053b84f6fcf9ed1784bc193fda"/>
    <FileStats path="org/testng/internal/ant/AntReporterConfig.java" bugCount="0" size="31"/>
    <FileStats path="org/testng/internal/collections/ArrayIterator.java" bugCount="1" size="18" bugHash="7a54a33817667ef677f3913462dcf9ee"/>
    <FileStats path="org/testng/internal/collections/Ints.java" bugCount="0" size="5"/>
    <FileStats path="org/testng/internal/collections/OneToTwoDimArrayIterator.java" bugCount="1" size="18" bugHash="d8fbbad173ae621f7a9dfee42434a394"/>
    <FileStats path="org/testng/internal/collections/OneToTwoDimIterator.java" bugCount="1" size="14" bugHash="6e910d3c3d906aba90f0ef81d9d879dc"/>
    <FileStats path="org/testng/internal/collections/Pair.java" bugCount="0" size="46"/>
    <FileStats path="org/testng/internal/invokers/InvokedMethodListenerInvoker.java" bugCount="2" size="18" bugHash="c939cecec7f4aa20812c51c954cb9aa8"/>
    <FileStats path="org/testng/internal/invokers/InvokedMethodListenerMethod.java" bugCount="0" size="11"/>
    <FileStats path="org/testng/internal/junit/ArrayAsserts.java" bugCount="0" size="60"/>
    <FileStats path="org/testng/internal/junit/ArrayComparisonFailure.java" bugCount="1" size="28" bugHash="077a073c2185106c1e00c879e0ca31b6"/>
    <FileStats path="org/testng/internal/junit/ComparisonCriteria.java" bugCount="0" size="32"/>
    <FileStats path="org/testng/internal/junit/ExactComparisonCriteria.java" bugCount="0" size="6"/>
    <FileStats path="org/testng/internal/junit/InexactComparisonCriteria.java" bugCount="0" size="11"/>
    <FileStats path="org/testng/internal/reflect/AbstractMethodMatcher.java" bugCount="0" size="19"/>
    <FileStats path="org/testng/internal/reflect/AbstractNodeMethodMatcher.java" bugCount="0" size="36"/>
    <FileStats path="org/testng/internal/reflect/ArrayEndingMethodMatcher.java" bugCount="0" size="21"/>
    <FileStats path="org/testng/internal/reflect/DataProviderMethodMatcher.java" bugCount="1" size="28" bugHash="56e91adef1700942006124c4585b1282"/>
    <FileStats path="org/testng/internal/reflect/DirectMethodMatcher.java" bugCount="0" size="13"/>
    <FileStats path="org/testng/internal/reflect/InjectableParameter.java" bugCount="0" size="24"/>
    <FileStats path="org/testng/internal/reflect/MethodMatcher.java" bugCount="0" size="3"/>
    <FileStats path="org/testng/internal/reflect/MethodMatcherContext.java" bugCount="9" size="24" bugHash="900c7c3bc2428717da7f29262bc6f695"/>
    <FileStats path="org/testng/internal/reflect/MethodMatcherException.java" bugCount="0" size="50"/>
    <FileStats path="org/testng/internal/reflect/Parameter.java" bugCount="2" size="32" bugHash="acd1c6d69e4ab19be8e8803b43fcb926"/>
    <FileStats path="org/testng/internal/reflect/ReflectionHelper.java" bugCount="0" size="62"/>
    <FileStats path="org/testng/internal/reflect/ReflectionRecipes.java" bugCount="0" size="231"/>
    <FileStats path="org/testng/internal/thread/DefaultThreadPoolExecutorFactory.java" bugCount="0" size="7"/>
    <FileStats path="org/testng/internal/thread/TestNGThreadFactory.java" bugCount="0" size="10"/>
    <FileStats path="org/testng/internal/thread/ThreadExecutionException.java" bugCount="0" size="5"/>
    <FileStats path="org/testng/internal/thread/ThreadTimeoutException.java" bugCount="0" size="11"/>
    <FileStats path="org/testng/internal/thread/ThreadUtil.java" bugCount="0" size="32"/>
    <FileStats path="org/testng/internal/thread/graph/GraphThreadPoolExecutor.java" bugCount="4" size="117" bugHash="d16851a52e5450c08d4b32d2986cd4ce"/>
    <FileStats path="org/testng/internal/thread/graph/SuiteWorkerFactory.java" bugCount="1" size="18" bugHash="7bbb0919c5f4d7dca00fc70553045714"/>
    <FileStats path="org/testng/junit/IJUnitTestRunner.java" bugCount="1" size="27" bugHash="f48ad1b215c593382ed4ea7eb0f47026"/>
    <FileStats path="org/testng/junit/JUnit3TestClass.java" bugCount="0" size="4"/>
    <FileStats path="org/testng/junit/JUnit3TestMethod.java" bugCount="0" size="13"/>
    <FileStats path="org/testng/junit/JUnit3TestRecognizer.java" bugCount="0" size="19"/>
    <FileStats path="org/testng/junit/JUnit4ConfigurationMethod.java" bugCount="1" size="12" bugHash="b160b40276b190a22336cd175561dfa5"/>
    <FileStats path="org/testng/junit/JUnit4SpockMethod.java" bugCount="1" size="24" bugHash="de31dcdfa27bc36fd58e8527c5923a6c"/>
    <FileStats path="org/testng/junit/JUnit4TestClass.java" bugCount="0" size="9"/>
    <FileStats path="org/testng/junit/JUnit4TestMethod.java" bugCount="0" size="22"/>
    <FileStats path="org/testng/junit/JUnit4TestRecognizer.java" bugCount="0" size="14"/>
    <FileStats path="org/testng/junit/JUnit4TestRunner.java" bugCount="4" size="184" bugHash="4ad51e9dac5a928a36ce3a485f88cfb5"/>
    <FileStats path="org/testng/junit/JUnitMethodFinder.java" bugCount="1" size="52" bugHash="dc2e713298afcdd740cf0541a7b45adf"/>
    <FileStats path="org/testng/junit/JUnitTestClass.java" bugCount="2" size="63" bugHash="11deb68854346e469d6d0cf647a99cd7"/>
    <FileStats path="org/testng/junit/JUnitTestFinder.java" bugCount="0" size="31"/>
    <FileStats path="org/testng/junit/JUnitTestMethod.java" bugCount="1" size="15" bugHash="9509ee995574f56e63d3f26984a7f7f1"/>
    <FileStats path="org/testng/junit/JUnitTestRecognizer.java" bugCount="0" size="2"/>
    <FileStats path="org/testng/junit/JUnitTestRunner.java" bugCount="5" size="139" bugHash="f983809b0497b30d636610ca8db75f04"/>
    <FileStats path="org/testng/log/TextFormatter.java" bugCount="0" size="5"/>
    <FileStats path="org/testng/log4testng/Logger.java" bugCount="22" size="364" bugHash="8dc78bb6994a80834f2ce100c3c8eb93"/>
    <FileStats path="org/testng/mustache/BaseChunk.java" bugCount="1" size="9" bugHash="d6eb2d5415b21974c276506ecffb7456"/>
    <FileStats path="org/testng/mustache/Model.java" bugCount="2" size="48" bugHash="f699059a2f9ff8e58b9a7ffe244000c2"/>
    <FileStats path="org/testng/mustache/Mustache.java" bugCount="0" size="76"/>
    <FileStats path="org/testng/mustache/StringChunk.java" bugCount="0" size="10"/>
    <FileStats path="org/testng/mustache/Value.java" bugCount="0" size="8"/>
    <FileStats path="org/testng/mustache/VariableChunk.java" bugCount="0" size="12"/>
    <FileStats path="org/testng/reporters/Buffer.java" bugCount="0" size="5"/>
    <FileStats path="org/testng/reporters/DotTestListener.java" bugCount="0" size="19"/>
    <FileStats path="org/testng/reporters/EmailableReporter.java" bugCount="3" size="375" bugHash="7b68412a93187dbcb815453f4b868dc9"/>
    <FileStats path="org/testng/reporters/EmailableReporter2.java" bugCount="14" size="585" bugHash="b23d9cb05d7b177ed1338c42057345aa"/>
    <FileStats path="org/testng/reporters/ExitCodeListener.java" bugCount="2" size="39" bugHash="d3e1c80026ac72e9d528c3307bc23230"/>
    <FileStats path="org/testng/reporters/FailedReporter.java" bugCount="1" size="125" bugHash="bab3475401191c6b2687ff7e3a8bdae2"/>
    <FileStats path="org/testng/reporters/FileStringBuffer.java" bugCount="3" size="89" bugHash="b5748a3d7526c44c8813d131fc3cf93d"/>
    <FileStats path="org/testng/reporters/Files.java" bugCount="4" size="43" bugHash="40e4ece6326fdeec228c09a1e1831434"/>
    <FileStats path="org/testng/reporters/HtmlHelper.java" bugCount="0" size="14"/>
    <FileStats path="org/testng/reporters/IBuffer.java" bugCount="0" size="3"/>
    <FileStats path="org/testng/reporters/ICustomizeXmlReport.java" bugCount="0" size="2"/>
    <FileStats path="org/testng/reporters/IReporterConfig.java" bugCount="0" size="9"/>
    <FileStats path="org/testng/reporters/JUnitReportReporter.java" bugCount="3" size="188" bugHash="e46776a405f546d14e739de35bac17f2"/>
    <FileStats path="org/testng/reporters/JUnitXMLReporter.java" bugCount="0" size="184"/>
    <FileStats path="org/testng/reporters/PojoReporterConfig.java" bugCount="0" size="9"/>
    <FileStats path="org/testng/reporters/RuntimeBehavior.java" bugCount="0" size="19"/>
    <FileStats path="org/testng/reporters/SuiteHTMLReporter.java" bugCount="1" size="547" bugHash="3a1786183bfc67ae53c6d4d876362a62"/>
    <FileStats path="org/testng/reporters/TestHTMLReporter.java" bugCount="4" size="242" bugHash="2283fcab804b900023637c23353c79a7"/>
    <FileStats path="org/testng/reporters/TextReporter.java" bugCount="0" size="132"/>
    <FileStats path="org/testng/reporters/VerboseReporter.java" bugCount="0" size="185"/>
    <FileStats path="org/testng/reporters/XMLConstants.java" bugCount="0" size="24"/>
    <FileStats path="org/testng/reporters/XMLReporter.java" bugCount="2" size="153" bugHash="9f789c130eeffc3fcb2682be4f9d1ba9"/>
    <FileStats path="org/testng/reporters/XMLReporterConfig.java" bugCount="0" size="154"/>
    <FileStats path="org/testng/reporters/XMLStringBuffer.java" bugCount="2" size="173" bugHash="2ab3f2618acff644f6138bc6654e1f63"/>
    <FileStats path="org/testng/reporters/XMLSuiteResultWriter.java" bugCount="3" size="237" bugHash="908a97ac35874c58c788e506fed1f5de"/>
    <FileStats path="org/testng/reporters/XMLUtils.java" bugCount="0" size="81"/>
    <FileStats path="org/testng/reporters/jq/BannerPanel.java" bugCount="0" size="15"/>
    <FileStats path="org/testng/reporters/jq/BaseMultiSuitePanel.java" bugCount="0" size="22"/>
    <FileStats path="org/testng/reporters/jq/BasePanel.java" bugCount="0" size="22"/>
    <FileStats path="org/testng/reporters/jq/ChronologicalPanel.java" bugCount="1" size="62" bugHash="9e452ffc6a872eb59520635fd6855915"/>
    <FileStats path="org/testng/reporters/jq/GroupPanel.java" bugCount="0" size="28"/>
    <FileStats path="org/testng/reporters/jq/INavigatorPanel.java" bugCount="0" size="5"/>
    <FileStats path="org/testng/reporters/jq/IPanel.java" bugCount="0" size="2"/>
    <FileStats path="org/testng/reporters/jq/IgnoredMethodsPanel.java" bugCount="1" size="28" bugHash="97091412e1f76113a73c2668166e8be8"/>
    <FileStats path="org/testng/reporters/jq/Main.java" bugCount="1" size="46" bugHash="91e6f6b48aec297bbd4e7c9355250375"/>
    <FileStats path="org/testng/reporters/jq/Model.java" bugCount="4" size="142" bugHash="430fde85771003b7bb9c151f23e75897"/>
    <FileStats path="org/testng/reporters/jq/NavigatorPanel.java" bugCount="1" size="175" bugHash="d1c0abc4f70cd1ca8e90cc8d87470dbd"/>
    <FileStats path="org/testng/reporters/jq/ReporterPanel.java" bugCount="0" size="25"/>
    <FileStats path="org/testng/reporters/jq/ResultsByClass.java" bugCount="1" size="23" bugHash="311c84d024913a105c151b779df8e9d2"/>
    <FileStats path="org/testng/reporters/jq/SuitePanel.java" bugCount="0" size="66"/>
    <FileStats path="org/testng/reporters/jq/TestNgXmlPanel.java" bugCount="0" size="18"/>
    <FileStats path="org/testng/reporters/jq/TestPanel.java" bugCount="0" size="24"/>
    <FileStats path="org/testng/reporters/jq/TimesPanel.java" bugCount="0" size="80"/>
    <FileStats path="org/testng/reporters/util/StackTraceTools.java" bugCount="0" size="22"/>
    <FileStats path="org/testng/thread/IExecutorFactory.java" bugCount="0" size="3"/>
    <FileStats path="org/testng/thread/ITestNGThreadPoolExecutor.java" bugCount="0" size="2"/>
    <FileStats path="org/testng/thread/IThreadWorkerFactory.java" bugCount="0" size="2"/>
    <FileStats path="org/testng/thread/IWorker.java" bugCount="0" size="12"/>
    <FileStats path="org/testng/util/RetryAnalyzerCount.java" bugCount="0" size="15"/>
    <FileStats path="org/testng/util/Strings.java" bugCount="0" size="41"/>
    <FileStats path="org/testng/util/TimeUtils.java" bugCount="0" size="8"/>
    <FileStats path="org/testng/xml/CommentDisabledXmlWeaver.java" bugCount="0" size="4"/>
    <FileStats path="org/testng/xml/DefaultXmlWeaver.java" bugCount="0" size="187"/>
    <FileStats path="org/testng/xml/IFileParser.java" bugCount="0" size="2"/>
    <FileStats path="org/testng/xml/IPostProcessor.java" bugCount="0" size="2"/>
    <FileStats path="org/testng/xml/ISuiteParser.java" bugCount="0" size="2"/>
    <FileStats path="org/testng/xml/IWeaveXml.java" bugCount="0" size="3"/>
    <FileStats path="org/testng/xml/LaunchSuite.java" bugCount="0" size="193"/>
    <FileStats path="org/testng/xml/Parser.java" bugCount="1" size="145" bugHash="540ab5ea36ec4fac1751cfc33bd1659e"/>
    <FileStats path="org/testng/xml/SuiteGenerator.java" bugCount="0" size="16"/>
    <FileStats path="org/testng/xml/SuiteXmlParser.java" bugCount="0" size="12"/>
    <FileStats path="org/testng/xml/TestNGContentHandler.java" bugCount="1" size="580" bugHash="1255cc9756e30e5d467fcc85d235532a"/>
    <FileStats path="org/testng/xml/XMLParser.java" bugCount="1" size="31" bugHash="82896489ca1a9cfb081719c5d860bc35"/>
    <FileStats path="org/testng/xml/XmlClass.java" bugCount="7" size="160" bugHash="9bd2ec67d6c42baff40fecb57d9c6a9f"/>
    <FileStats path="org/testng/xml/XmlDefine.java" bugCount="1" size="40" bugHash="96a5b91732af589e1ade236f24addcf5"/>
    <FileStats path="org/testng/xml/XmlDependencies.java" bugCount="1" size="21" bugHash="0c33172928042c585d9803c811f8c0ff"/>
    <FileStats path="org/testng/xml/XmlGroups.java" bugCount="3" size="43" bugHash="19460fb815b5d0053fc056cce4641a2f"/>
    <FileStats path="org/testng/xml/XmlInclude.java" bugCount="4" size="90" bugHash="d262c885e1fe9b99fd7406292d5706b6"/>
    <FileStats path="org/testng/xml/XmlMethodSelector.java" bugCount="2" size="92" bugHash="6ad200275b9946216b217f95bc2b97b9"/>
    <FileStats path="org/testng/xml/XmlMethodSelectors.java" bugCount="1" size="19" bugHash="3bdbd85351f3a72c61f123129ee1270f"/>
    <FileStats path="org/testng/xml/XmlPackage.java" bugCount="5" size="88" bugHash="4a4799d1bc9148a8d7f419942b421795"/>
    <FileStats path="org/testng/xml/XmlRun.java" bugCount="2" size="31" bugHash="ab8c76615f2017fc7a592869503843e2"/>
    <FileStats path="org/testng/xml/XmlScript.java" bugCount="0" size="15"/>
    <FileStats path="org/testng/xml/XmlSuite.java" bugCount="27" size="546" bugHash="f3bbf924d895893e0185e1698d34cf73"/>
    <FileStats path="org/testng/xml/XmlTest.java" bugCount="15" size="421" bugHash="1f450a544f3abf10519281ac1531bb3a"/>
    <FileStats path="org/testng/xml/XmlUtils.java" bugCount="0" size="25"/>
    <FileStats path="org/testng/xml/XmlWeaver.java" bugCount="1" size="46" bugHash="828b5755e99e0f5cd4c11c61ad677055"/>
    <FileStats path="org/testng/xml/internal/TestNamesMatcher.java" bugCount="3" size="50" bugHash="263c81b3ac423caa65980d1511003755"/>
    <FileStats path="org/testng/xml/internal/XmlSuiteUtils.java" bugCount="0" size="50"/>
    <PackageStats package="org.testng" total_bugs="70" total_types="91" total_size="5261" priority_3="9" priority_2="57" priority_1="4">
      <ClassStats class="org.testng.Assert" sourceFile="Assert.java" interface="false" size="729" bugs="4" priority_2="4"/>
      <ClassStats class="org.testng.Assert$ThrowingRunnable" sourceFile="Assert.java" interface="true" size="2" bugs="0"/>
      <ClassStats class="org.testng.AssertJUnit" sourceFile="AssertJUnit.java" interface="false" size="161" bugs="0"/>
      <ClassStats class="org.testng.ClassMethodMap" sourceFile="ClassMethodMap.java" interface="false" size="44" bugs="2" priority_2="2"/>
      <ClassStats class="org.testng.CommandLineArgs" sourceFile="CommandLineArgs.java" interface="false" size="91" bugs="1" priority_2="1"/>
      <ClassStats class="org.testng.ConversionUtils" sourceFile="ConversionUtils.java" interface="false" size="20" bugs="1" priority_3="1"/>
      <ClassStats class="org.testng.Converter" sourceFile="Converter.java" interface="false" size="55" bugs="2" priority_2="1" priority_1="1"/>
      <ClassStats class="org.testng.DataProviderHolder" sourceFile="DataProviderHolder.java" interface="false" size="27" bugs="0"/>
      <ClassStats class="org.testng.DataProviderInvocationException" sourceFile="DataProviderInvocationException.java" interface="false" size="4" bugs="0"/>
      <ClassStats class="org.testng.DependencyMap" sourceFile="DependencyMap.java" interface="false" size="51" bugs="1" priority_3="1"/>
      <ClassStats class="org.testng.FileAssert" sourceFile="FileAssert.java" interface="false" size="155" bugs="3" priority_2="3"/>
      <ClassStats class="org.testng.GuiceHelper" sourceFile="GuiceHelper.java" interface="false" size="71" bugs="0"/>
      <ClassStats class="org.testng.GuiceHelper$LazyHolder" sourceFile="GuiceHelper.java" interface="false" size="13" bugs="0"/>
      <ClassStats class="org.testng.IAlterSuiteListener" sourceFile="IAlterSuiteListener.java" interface="true" size="3" bugs="0"/>
      <ClassStats class="org.testng.IAnnotationTransformer" sourceFile="IAnnotationTransformer.java" interface="true" size="11" bugs="0"/>
      <ClassStats class="org.testng.IAttributes" sourceFile="IAttributes.java" interface="true" size="5" bugs="0"/>
      <ClassStats class="org.testng.IClass" sourceFile="IClass.java" interface="true" size="11" bugs="0"/>
      <ClassStats class="org.testng.IClassListener" sourceFile="IClassListener.java" interface="true" size="5" bugs="0"/>
      <ClassStats class="org.testng.IConfigurable" sourceFile="IConfigurable.java" interface="true" size="2" bugs="0"/>
      <ClassStats class="org.testng.IConfigurationListener" sourceFile="IConfigurationListener.java" interface="true" size="17" bugs="0"/>
      <ClassStats class="org.testng.IConfigurationListener2" sourceFile="IConfigurationListener2.java" interface="true" size="1" bugs="0"/>
      <ClassStats class="org.testng.IConfigureCallBack" sourceFile="IConfigureCallBack.java" interface="true" size="3" bugs="0"/>
      <ClassStats class="org.testng.IDataProviderInterceptor" sourceFile="IDataProviderInterceptor.java" interface="true" size="2" bugs="0"/>
      <ClassStats class="org.testng.IDataProviderListener" sourceFile="IDataProviderListener.java" interface="true" size="5" bugs="0"/>
      <ClassStats class="org.testng.IDataProviderMethod" sourceFile="IDataProviderMethod.java" interface="true" size="6" bugs="0"/>
      <ClassStats class="org.testng.IDynamicGraph" sourceFile="IDynamicGraph.java" interface="true" size="13" bugs="0"/>
      <ClassStats class="org.testng.IDynamicGraph$Status" sourceFile="IDynamicGraph.java" interface="false" size="13" bugs="0"/>
      <ClassStats class="org.testng.IExecutionListener" sourceFile="IExecutionListener.java" interface="true" size="5" bugs="0"/>
      <ClassStats class="org.testng.IExecutionVisualiser" sourceFile="IExecutionVisualiser.java" interface="true" size="2" bugs="0"/>
      <ClassStats class="org.testng.IExpectedExceptionsHolder" sourceFile="IExpectedExceptionsHolder.java" interface="true" size="3" bugs="0"/>
      <ClassStats class="org.testng.IHookCallBack" sourceFile="IHookCallBack.java" interface="true" size="3" bugs="0"/>
      <ClassStats class="org.testng.IHookable" sourceFile="IHookable.java" interface="true" size="2" bugs="0"/>
      <ClassStats class="org.testng.IInjectorFactory" sourceFile="IInjectorFactory.java" interface="true" size="2" bugs="0"/>
      <ClassStats class="org.testng.IInstanceInfo" sourceFile="IInstanceInfo.java" interface="true" size="3" bugs="0"/>
      <ClassStats class="org.testng.IInvokedMethod" sourceFile="IInvokedMethod.java" interface="true" size="6" bugs="0"/>
      <ClassStats class="org.testng.IInvokedMethodListener" sourceFile="IInvokedMethodListener.java" interface="true" size="9" bugs="0"/>
      <ClassStats class="org.testng.IMethodInstance" sourceFile="IMethodInstance.java" interface="true" size="3" bugs="0"/>
      <ClassStats class="org.testng.IMethodInterceptor" sourceFile="IMethodInterceptor.java" interface="true" size="2" bugs="0"/>
      <ClassStats class="org.testng.IMethodSelector" sourceFile="IMethodSelector.java" interface="true" size="3" bugs="0"/>
      <ClassStats class="org.testng.IMethodSelectorContext" sourceFile="IMethodSelectorContext.java" interface="true" size="4" bugs="0"/>
      <ClassStats class="org.testng.IModule" sourceFile="IModule.java" interface="true" size="2" bugs="0"/>
      <ClassStats class="org.testng.IModuleFactory" sourceFile="IModuleFactory.java" interface="true" size="2" bugs="0"/>
      <ClassStats class="org.testng.IObjectFactory" sourceFile="IObjectFactory.java" interface="true" size="2" bugs="0"/>
      <ClassStats class="org.testng.IObjectFactory2" sourceFile="IObjectFactory2.java" interface="true" size="2" bugs="0"/>
      <ClassStats class="org.testng.IReporter" sourceFile="IReporter.java" interface="true" size="5" bugs="0"/>
      <ClassStats class="org.testng.IResultMap" sourceFile="IResultMap.java" interface="true" size="8" bugs="0"/>
      <ClassStats class="org.testng.IRetryAnalyzer" sourceFile="IRetryAnalyzer.java" interface="true" size="2" bugs="0"/>
      <ClassStats class="org.testng.ISuite" sourceFile="ISuite.java" interface="true" size="22" bugs="0"/>
      <ClassStats class="org.testng.ISuiteListener" sourceFile="ISuiteListener.java" interface="true" size="5" bugs="0"/>
      <ClassStats class="org.testng.ISuiteResult" sourceFile="ISuiteResult.java" interface="true" size="3" bugs="0"/>
      <ClassStats class="org.testng.ITest" sourceFile="ITest.java" interface="true" size="2" bugs="0"/>
      <ClassStats class="org.testng.ITestClass" sourceFile="ITestClass.java" interface="true" size="12" bugs="0"/>
      <ClassStats class="org.testng.ITestClassFinder" sourceFile="ITestClassFinder.java" interface="true" size="3" bugs="0"/>
      <ClassStats class="org.testng.ITestContext" sourceFile="ITestContext.java" interface="true" size="23" bugs="0"/>
      <ClassStats class="org.testng.ITestListener" sourceFile="ITestListener.java" interface="true" size="18" bugs="0"/>
      <ClassStats class="org.testng.ITestMethodFinder" sourceFile="ITestMethodFinder.java" interface="true" size="12" bugs="0"/>
      <ClassStats class="org.testng.ITestNGListener" sourceFile="ITestNGListener.java" interface="true" size="1" bugs="0"/>
      <ClassStats class="org.testng.ITestNGListenerFactory" sourceFile="ITestNGListenerFactory.java" interface="true" size="2" bugs="0"/>
      <ClassStats class="org.testng.ITestNGMethod" sourceFile="ITestNGMethod.java" interface="true" size="87" bugs="0"/>
      <ClassStats class="org.testng.ITestObjectFactory" sourceFile="ITestObjectFactory.java" interface="true" size="1" bugs="0"/>
      <ClassStats class="org.testng.ITestResult" sourceFile="ITestResult.java" interface="true" size="38" bugs="0"/>
      <ClassStats class="org.testng.ITestRunnerFactory" sourceFile="ITestRunnerFactory.java" interface="true" size="6" bugs="0"/>
      <ClassStats class="org.testng.InstanceOrderingMethodInterceptor" sourceFile="InstanceOrderingMethodInterceptor.java" interface="false" size="21" bugs="0"/>
      <ClassStats class="org.testng.JarFileUtils" sourceFile="JarFileUtils.java" interface="false" size="77" bugs="2" priority_3="1" priority_2="1"/>
      <ClassStats class="org.testng.PreserveOrderMethodInterceptor" sourceFile="PreserveOrderMethodInterceptor.java" interface="false" size="6" bugs="0"/>
      <ClassStats class="org.testng.Reporter" sourceFile="Reporter.java" interface="false" size="77" bugs="1" priority_2="1"/>
      <ClassStats class="org.testng.ReporterConfig" sourceFile="ReporterConfig.java" interface="false" size="20" bugs="1" priority_1="1"/>
      <ClassStats class="org.testng.SkipException" sourceFile="SkipException.java" interface="false" size="31" bugs="1" priority_2="1"/>
      <ClassStats class="org.testng.SuiteResult" sourceFile="SuiteResult.java" interface="false" size="29" bugs="2" priority_3="1" priority_2="1"/>
      <ClassStats class="org.testng.SuiteResultCounts" sourceFile="SuiteRunnerWorker.java" interface="false" size="62" bugs="0"/>
      <ClassStats class="org.testng.SuiteRunState" sourceFile="SuiteRunState.java" interface="false" size="10" bugs="0"/>
      <ClassStats class="org.testng.SuiteRunner" sourceFile="SuiteRunner.java" interface="false" size="309" bugs="4" priority_2="4"/>
      <ClassStats class="org.testng.SuiteRunner$DefaultTestRunnerFactory" sourceFile="SuiteRunner.java" interface="false" size="37" bugs="0"/>
      <ClassStats class="org.testng.SuiteRunner$ProxyTestRunnerFactory" sourceFile="SuiteRunner.java" interface="false" size="20" bugs="0"/>
      <ClassStats class="org.testng.SuiteRunner$SuiteWorker" sourceFile="SuiteRunner.java" interface="false" size="12" bugs="0"/>
      <ClassStats class="org.testng.SuiteRunnerWorker" sourceFile="SuiteRunnerWorker.java" interface="false" size="61" bugs="3" priority_2="3"/>
      <ClassStats class="org.testng.TestClass" sourceFile="TestClass.java" interface="false" size="127" bugs="1" priority_3="1"/>
      <ClassStats class="org.testng.TestException" sourceFile="TestException.java" interface="false" size="11" bugs="0"/>
      <ClassStats class="org.testng.TestListenerAdapter" sourceFile="TestListenerAdapter.java" interface="false" size="101" bugs="5" priority_2="5"/>
      <ClassStats class="org.testng.TestNG" sourceFile="TestNG.java" interface="false" size="1031" bugs="11" priority_3="2" priority_2="9"/>
      <ClassStats class="org.testng.TestNGAntTask" sourceFile="TestNGAntTask.java" interface="false" size="610" bugs="4" priority_3="1" priority_2="2" priority_1="1"/>
      <ClassStats class="org.testng.TestNGAntTask$Mode" sourceFile="TestNGAntTask.java" interface="false" size="13" bugs="0"/>
      <ClassStats class="org.testng.TestNGAntTask$TestNGLogOS" sourceFile="TestNGAntTask.java" interface="false" size="13" bugs="0"/>
      <ClassStats class="org.testng.TestNGAntTask$TestNGLogSH" sourceFile="TestNGAntTask.java" interface="false" size="4" bugs="0"/>
      <ClassStats class="org.testng.TestNGException" sourceFile="TestNGException.java" interface="false" size="11" bugs="0"/>
      <ClassStats class="org.testng.TestNGUtils" sourceFile="TestNGUtils.java" interface="false" size="5" bugs="0"/>
      <ClassStats class="org.testng.TestRunner" sourceFile="TestRunner.java" interface="false" size="583" bugs="20" priority_3="1" priority_2="18" priority_1="1"/>
      <ClassStats class="org.testng.TestRunner$1" sourceFile="TestRunner.java" interface="false" size="34" bugs="1" priority_2="1"/>
      <ClassStats class="org.testng.TestRunner$ConfigurationListener" sourceFile="TestRunner.java" interface="false" size="16" bugs="0"/>
      <ClassStats class="org.testng.TestRunner$PriorityWeight" sourceFile="TestRunner.java" interface="false" size="17" bugs="0"/>
      <ClassStats class="org.testng.TimeBombSkipException" sourceFile="TimeBombSkipException.java" interface="false" size="88" bugs="0"/>
    </PackageStats>
    <PackageStats package="org.testng.annotations" total_bugs="0" total_types="32" total_size="232">
      <ClassStats class="org.testng.annotations.AfterClass" sourceFile="AfterClass.java" interface="true" size="9" bugs="0"/>
      <ClassStats class="org.testng.annotations.AfterGroups" sourceFile="AfterGroups.java" interface="true" size="10" bugs="0"/>
      <ClassStats class="org.testng.annotations.AfterMethod" sourceFile="AfterMethod.java" interface="true" size="11" bugs="0"/>
      <ClassStats class="org.testng.annotations.AfterSuite" sourceFile="AfterSuite.java" interface="true" size="9" bugs="0"/>
      <ClassStats class="org.testng.annotations.AfterTest" sourceFile="AfterTest.java" interface="true" size="9" bugs="0"/>
      <ClassStats class="org.testng.annotations.BeforeClass" sourceFile="BeforeClass.java" interface="true" size="9" bugs="0"/>
      <ClassStats class="org.testng.annotations.BeforeGroups" sourceFile="BeforeGroups.java" interface="true" size="10" bugs="0"/>
      <ClassStats class="org.testng.annotations.BeforeMethod" sourceFile="BeforeMethod.java" interface="true" size="11" bugs="0"/>
      <ClassStats class="org.testng.annotations.BeforeSuite" sourceFile="BeforeSuite.java" interface="true" size="9" bugs="0"/>
      <ClassStats class="org.testng.annotations.BeforeTest" sourceFile="BeforeTest.java" interface="true" size="9" bugs="0"/>
      <ClassStats class="org.testng.annotations.CustomAttribute" sourceFile="CustomAttribute.java" interface="true" size="3" bugs="0"/>
      <ClassStats class="org.testng.annotations.DataProvider" sourceFile="DataProvider.java" interface="true" size="4" bugs="0"/>
      <ClassStats class="org.testng.annotations.Factory" sourceFile="Factory.java" interface="true" size="5" bugs="0"/>
      <ClassStats class="org.testng.annotations.Guice" sourceFile="Guice.java" interface="true" size="3" bugs="0"/>
      <ClassStats class="org.testng.annotations.IAnnotation" sourceFile="IAnnotation.java" interface="true" size="1" bugs="0"/>
      <ClassStats class="org.testng.annotations.IConfigurationAnnotation" sourceFile="IConfigurationAnnotation.java" interface="true" size="18" bugs="0"/>
      <ClassStats class="org.testng.annotations.IDataProviderAnnotation" sourceFile="IDataProviderAnnotation.java" interface="true" size="7" bugs="0"/>
      <ClassStats class="org.testng.annotations.IFactoryAnnotation" sourceFile="IFactoryAnnotation.java" interface="true" size="3" bugs="0"/>
      <ClassStats class="org.testng.annotations.IListenersAnnotation" sourceFile="IListenersAnnotation.java" interface="true" size="3" bugs="0"/>
      <ClassStats class="org.testng.annotations.IObjectFactoryAnnotation" sourceFile="IObjectFactoryAnnotation.java" interface="true" size="1" bugs="0"/>
      <ClassStats class="org.testng.annotations.IParameterizable" sourceFile="IParameterizable.java" interface="true" size="3" bugs="0"/>
      <ClassStats class="org.testng.annotations.IParametersAnnotation" sourceFile="IParametersAnnotation.java" interface="true" size="2" bugs="0"/>
      <ClassStats class="org.testng.annotations.ITestAnnotation" sourceFile="ITestAnnotation.java" interface="true" size="37" bugs="0"/>
      <ClassStats class="org.testng.annotations.ITestOrConfiguration" sourceFile="ITestOrConfiguration.java" interface="true" size="11" bugs="0"/>
      <ClassStats class="org.testng.annotations.Ignore" sourceFile="Ignore.java" interface="true" size="2" bugs="0"/>
      <ClassStats class="org.testng.annotations.Listeners" sourceFile="Listeners.java" interface="true" size="2" bugs="0"/>
      <ClassStats class="org.testng.annotations.NoInjection" sourceFile="NoInjection.java" interface="true" size="1" bugs="0"/>
      <ClassStats class="org.testng.annotations.ObjectFactory" sourceFile="ObjectFactory.java" interface="true" size="1" bugs="0"/>
      <ClassStats class="org.testng.annotations.Optional" sourceFile="Optional.java" interface="true" size="2" bugs="0"/>
      <ClassStats class="org.testng.annotations.Parameters" sourceFile="Parameters.java" interface="true" size="2" bugs="0"/>
      <ClassStats class="org.testng.annotations.Test" sourceFile="Test.java" interface="true" size="24" bugs="0"/>
      <ClassStats class="org.testng.annotations.TestInstance" sourceFile="TestInstance.java" interface="true" size="1" bugs="0"/>
    </PackageStats>
    <PackageStats package="org.testng.asserts" total_bugs="1" total_types="72" total_size="964" priority_2="1">
      <ClassStats class="org.testng.asserts.Assertion" sourceFile="Assertion.java" interface="false" size="266" bugs="0"/>
      <ClassStats class="org.testng.asserts.Assertion$1" sourceFile="Assertion.java" interface="false" size="9" bugs="0"/>
      <ClassStats class="org.testng.asserts.Assertion$10" sourceFile="Assertion.java" interface="false" size="10" bugs="0"/>
      <ClassStats class="org.testng.asserts.Assertion$11" sourceFile="Assertion.java" interface="false" size="9" bugs="0"/>
      <ClassStats class="org.testng.asserts.Assertion$12" sourceFile="Assertion.java" interface="false" size="11" bugs="0"/>
      <ClassStats class="org.testng.asserts.Assertion$13" sourceFile="Assertion.java" interface="false" size="10" bugs="0"/>
      <ClassStats class="org.testng.asserts.Assertion$14" sourceFile="Assertion.java" interface="false" size="11" bugs="0"/>
      <ClassStats class="org.testng.asserts.Assertion$15" sourceFile="Assertion.java" interface="false" size="10" bugs="0"/>
      <ClassStats class="org.testng.asserts.Assertion$16" sourceFile="Assertion.java" interface="false" size="10" bugs="0"/>
      <ClassStats class="org.testng.asserts.Assertion$17" sourceFile="Assertion.java" interface="false" size="9" bugs="0"/>
      <ClassStats class="org.testng.asserts.Assertion$18" sourceFile="Assertion.java" interface="false" size="10" bugs="0"/>
      <ClassStats class="org.testng.asserts.Assertion$19" sourceFile="Assertion.java" interface="false" size="9" bugs="0"/>
      <ClassStats class="org.testng.asserts.Assertion$2" sourceFile="Assertion.java" interface="false" size="8" bugs="0"/>
      <ClassStats class="org.testng.asserts.Assertion$20" sourceFile="Assertion.java" interface="false" size="10" bugs="0"/>
      <ClassStats class="org.testng.asserts.Assertion$21" sourceFile="Assertion.java" interface="false" size="9" bugs="0"/>
      <ClassStats class="org.testng.asserts.Assertion$22" sourceFile="Assertion.java" interface="false" size="10" bugs="0"/>
      <ClassStats class="org.testng.asserts.Assertion$23" sourceFile="Assertion.java" interface="false" size="9" bugs="0"/>
      <ClassStats class="org.testng.asserts.Assertion$24" sourceFile="Assertion.java" interface="false" size="10" bugs="0"/>
      <ClassStats class="org.testng.asserts.Assertion$25" sourceFile="Assertion.java" interface="false" size="9" bugs="0"/>
      <ClassStats class="org.testng.asserts.Assertion$26" sourceFile="Assertion.java" interface="false" size="10" bugs="0"/>
      <ClassStats class="org.testng.asserts.Assertion$27" sourceFile="Assertion.java" interface="false" size="9" bugs="0"/>
      <ClassStats class="org.testng.asserts.Assertion$28" sourceFile="Assertion.java" interface="false" size="8" bugs="0"/>
      <ClassStats class="org.testng.asserts.Assertion$29" sourceFile="Assertion.java" interface="false" size="9" bugs="0"/>
      <ClassStats class="org.testng.asserts.Assertion$3" sourceFile="Assertion.java" interface="false" size="9" bugs="0"/>
      <ClassStats class="org.testng.asserts.Assertion$30" sourceFile="Assertion.java" interface="false" size="8" bugs="0"/>
      <ClassStats class="org.testng.asserts.Assertion$31" sourceFile="Assertion.java" interface="false" size="9" bugs="0"/>
      <ClassStats class="org.testng.asserts.Assertion$32" sourceFile="Assertion.java" interface="false" size="10" bugs="0"/>
      <ClassStats class="org.testng.asserts.Assertion$33" sourceFile="Assertion.java" interface="false" size="9" bugs="0"/>
      <ClassStats class="org.testng.asserts.Assertion$34" sourceFile="Assertion.java" interface="false" size="10" bugs="0"/>
      <ClassStats class="org.testng.asserts.Assertion$35" sourceFile="Assertion.java" interface="false" size="9" bugs="0"/>
      <ClassStats class="org.testng.asserts.Assertion$36" sourceFile="Assertion.java" interface="false" size="9" bugs="0"/>
      <ClassStats class="org.testng.asserts.Assertion$37" sourceFile="Assertion.java" interface="false" size="10" bugs="0"/>
      <ClassStats class="org.testng.asserts.Assertion$38" sourceFile="Assertion.java" interface="false" size="10" bugs="0"/>
      <ClassStats class="org.testng.asserts.Assertion$39" sourceFile="Assertion.java" interface="false" size="10" bugs="0"/>
      <ClassStats class="org.testng.asserts.Assertion$4" sourceFile="Assertion.java" interface="false" size="8" bugs="0"/>
      <ClassStats class="org.testng.asserts.Assertion$40" sourceFile="Assertion.java" interface="false" size="9" bugs="0"/>
      <ClassStats class="org.testng.asserts.Assertion$41" sourceFile="Assertion.java" interface="false" size="9" bugs="0"/>
      <ClassStats class="org.testng.asserts.Assertion$42" sourceFile="Assertion.java" interface="false" size="9" bugs="0"/>
      <ClassStats class="org.testng.asserts.Assertion$43" sourceFile="Assertion.java" interface="false" size="10" bugs="0"/>
      <ClassStats class="org.testng.asserts.Assertion$44" sourceFile="Assertion.java" interface="false" size="9" bugs="0"/>
      <ClassStats class="org.testng.asserts.Assertion$45" sourceFile="Assertion.java" interface="false" size="10" bugs="0"/>
      <ClassStats class="org.testng.asserts.Assertion$46" sourceFile="Assertion.java" interface="false" size="9" bugs="0"/>
      <ClassStats class="org.testng.asserts.Assertion$47" sourceFile="Assertion.java" interface="false" size="10" bugs="0"/>
      <ClassStats class="org.testng.asserts.Assertion$48" sourceFile="Assertion.java" interface="false" size="9" bugs="0"/>
      <ClassStats class="org.testng.asserts.Assertion$49" sourceFile="Assertion.java" interface="false" size="10" bugs="0"/>
      <ClassStats class="org.testng.asserts.Assertion$5" sourceFile="Assertion.java" interface="false" size="9" bugs="0"/>
      <ClassStats class="org.testng.asserts.Assertion$50" sourceFile="Assertion.java" interface="false" size="9" bugs="0"/>
      <ClassStats class="org.testng.asserts.Assertion$51" sourceFile="Assertion.java" interface="false" size="10" bugs="0"/>
      <ClassStats class="org.testng.asserts.Assertion$52" sourceFile="Assertion.java" interface="false" size="9" bugs="0"/>
      <ClassStats class="org.testng.asserts.Assertion$53" sourceFile="Assertion.java" interface="false" size="10" bugs="0"/>
      <ClassStats class="org.testng.asserts.Assertion$54" sourceFile="Assertion.java" interface="false" size="9" bugs="0"/>
      <ClassStats class="org.testng.asserts.Assertion$55" sourceFile="Assertion.java" interface="false" size="10" bugs="0"/>
      <ClassStats class="org.testng.asserts.Assertion$56" sourceFile="Assertion.java" interface="false" size="9" bugs="0"/>
      <ClassStats class="org.testng.asserts.Assertion$57" sourceFile="Assertion.java" interface="false" size="10" bugs="0"/>
      <ClassStats class="org.testng.asserts.Assertion$58" sourceFile="Assertion.java" interface="false" size="9" bugs="0"/>
      <ClassStats class="org.testng.asserts.Assertion$59" sourceFile="Assertion.java" interface="false" size="10" bugs="0"/>
      <ClassStats class="org.testng.asserts.Assertion$6" sourceFile="Assertion.java" interface="false" size="8" bugs="0"/>
      <ClassStats class="org.testng.asserts.Assertion$60" sourceFile="Assertion.java" interface="false" size="9" bugs="0"/>
      <ClassStats class="org.testng.asserts.Assertion$61" sourceFile="Assertion.java" interface="false" size="10" bugs="0"/>
      <ClassStats class="org.testng.asserts.Assertion$62" sourceFile="Assertion.java" interface="false" size="9" bugs="0"/>
      <ClassStats class="org.testng.asserts.Assertion$63" sourceFile="Assertion.java" interface="false" size="11" bugs="0"/>
      <ClassStats class="org.testng.asserts.Assertion$64" sourceFile="Assertion.java" interface="false" size="10" bugs="0"/>
      <ClassStats class="org.testng.asserts.Assertion$65" sourceFile="Assertion.java" interface="false" size="11" bugs="0"/>
      <ClassStats class="org.testng.asserts.Assertion$66" sourceFile="Assertion.java" interface="false" size="10" bugs="0"/>
      <ClassStats class="org.testng.asserts.Assertion$7" sourceFile="Assertion.java" interface="false" size="7" bugs="0"/>
      <ClassStats class="org.testng.asserts.Assertion$8" sourceFile="Assertion.java" interface="false" size="10" bugs="0"/>
      <ClassStats class="org.testng.asserts.Assertion$9" sourceFile="Assertion.java" interface="false" size="9" bugs="0"/>
      <ClassStats class="org.testng.asserts.Assertion$SimpleAssert" sourceFile="Assertion.java" interface="false" size="23" bugs="0"/>
      <ClassStats class="org.testng.asserts.IAssert" sourceFile="IAssert.java" interface="true" size="5" bugs="0"/>
      <ClassStats class="org.testng.asserts.IAssertLifecycle" sourceFile="IAssertLifecycle.java" interface="true" size="6" bugs="0"/>
      <ClassStats class="org.testng.asserts.LoggingAssert" sourceFile="LoggingAssert.java" interface="false" size="10" bugs="1" priority_2="1"/>
      <ClassStats class="org.testng.asserts.SoftAssert" sourceFile="SoftAssert.java" interface="false" size="32" bugs="0"/>
    </PackageStats>
    <PackageStats package="org.testng.collections" total_bugs="0" total_types="10" total_size="192">
      <ClassStats class="org.testng.collections.CollectionUtils" sourceFile="CollectionUtils.java" interface="false" size="10" bugs="0"/>
      <ClassStats class="org.testng.collections.ListMultiMap" sourceFile="ListMultiMap.java" interface="false" size="8" bugs="0"/>
      <ClassStats class="org.testng.collections.Lists" sourceFile="Lists.java" interface="false" size="23" bugs="0"/>
      <ClassStats class="org.testng.collections.Maps" sourceFile="Maps.java" interface="false" size="19" bugs="0"/>
      <ClassStats class="org.testng.collections.MultiMap" sourceFile="MultiMap.java" interface="false" size="55" bugs="0"/>
      <ClassStats class="org.testng.collections.Objects" sourceFile="Objects.java" interface="false" size="5" bugs="0"/>
      <ClassStats class="org.testng.collections.Objects$ToStringHelper" sourceFile="Objects.java" interface="false" size="37" bugs="0"/>
      <ClassStats class="org.testng.collections.Objects$ValueHolder" sourceFile="Objects.java" interface="false" size="14" bugs="0"/>
      <ClassStats class="org.testng.collections.SetMultiMap" sourceFile="SetMultiMap.java" interface="false" size="8" bugs="0"/>
      <ClassStats class="org.testng.collections.Sets" sourceFile="Sets.java" interface="false" size="13" bugs="0"/>
    </PackageStats>
    <PackageStats package="org.testng.internal" total_bugs="203" total_types="135" total_size="7933" priority_3="23" priority_2="177" priority_1="3">
      <ClassStats class="org.testng.internal.AbstractParallelWorker" sourceFile="AbstractParallelWorker.java" interface="false" size="8" bugs="0"/>
      <ClassStats class="org.testng.internal.AbstractParallelWorker$1" sourceFile="AbstractParallelWorker.java" interface="false" size="1" bugs="0"/>
      <ClassStats class="org.testng.internal.AbstractParallelWorker$Arguments" sourceFile="AbstractParallelWorker.java" interface="false" size="34" bugs="3" priority_2="3"/>
      <ClassStats class="org.testng.internal.AbstractParallelWorker$Arguments$Builder" sourceFile="AbstractParallelWorker.java" interface="false" size="29" bugs="0"/>
      <ClassStats class="org.testng.internal.Arguments" sourceFile="Arguments.java" interface="false" size="16" bugs="2" priority_2="2"/>
      <ClassStats class="org.testng.internal.Attributes" sourceFile="Attributes.java" interface="false" size="14" bugs="0"/>
      <ClassStats class="org.testng.internal.BaseClassFinder" sourceFile="BaseClassFinder.java" interface="false" size="19" bugs="0"/>
      <ClassStats class="org.testng.internal.BaseInvoker" sourceFile="BaseInvoker.java" interface="false" size="43" bugs="1" priority_3="1"/>
      <ClassStats class="org.testng.internal.BaseTestMethod" sourceFile="BaseTestMethod.java" interface="false" size="407" bugs="11" priority_2="11"/>
      <ClassStats class="org.testng.internal.ClassBasedParallelWorker" sourceFile="ClassBasedParallelWorker.java" interface="false" size="60" bugs="0"/>
      <ClassStats class="org.testng.internal.ClassHelper" sourceFile="ClassHelper.java" interface="false" size="207" bugs="0"/>
      <ClassStats class="org.testng.internal.ClassImpl" sourceFile="ClassImpl.java" interface="false" size="93" bugs="6" priority_3="1" priority_2="5"/>
      <ClassStats class="org.testng.internal.ClassInfoMap" sourceFile="ClassInfoMap.java" interface="false" size="44" bugs="1" priority_2="1"/>
      <ClassStats class="org.testng.internal.ClonedMethod" sourceFile="ClonedMethod.java" interface="false" size="170" bugs="7" priority_2="7"/>
      <ClassStats class="org.testng.internal.ConfigInvoker" sourceFile="ConfigInvoker.java" interface="false" size="333" bugs="1" priority_2="1"/>
      <ClassStats class="org.testng.internal.ConfigMethodArguments" sourceFile="ConfigMethodArguments.java" interface="false" size="31" bugs="7" priority_2="7"/>
      <ClassStats class="org.testng.internal.ConfigMethodArguments$1" sourceFile="ConfigMethodArguments.java" interface="false" size="1" bugs="0"/>
      <ClassStats class="org.testng.internal.ConfigMethodArguments$Builder" sourceFile="ConfigMethodArguments.java" interface="false" size="41" bugs="6" priority_2="6"/>
      <ClassStats class="org.testng.internal.Configuration" sourceFile="Configuration.java" interface="false" size="72" bugs="0"/>
      <ClassStats class="org.testng.internal.ConfigurationGroupMethods" sourceFile="ConfigurationGroupMethods.java" interface="false" size="70" bugs="4" priority_2="4"/>
      <ClassStats class="org.testng.internal.ConfigurationMethod" sourceFile="ConfigurationMethod.java" interface="false" size="181" bugs="1" priority_2="1"/>
      <ClassStats class="org.testng.internal.ConstructorOrMethod" sourceFile="ConstructorOrMethod.java" interface="false" size="67" bugs="7" priority_3="1" priority_2="6"/>
      <ClassStats class="org.testng.internal.DataProviderMethod" sourceFile="DataProviderMethod.java" interface="false" size="20" bugs="0"/>
      <ClassStats class="org.testng.internal.DefaultListenerFactory" sourceFile="DefaultListenerFactory.java" interface="false" size="5" bugs="0"/>
      <ClassStats class="org.testng.internal.DefaultMethodSelectorContext" sourceFile="DefaultMethodSelectorContext.java" interface="false" size="14" bugs="1" priority_2="1"/>
      <ClassStats class="org.testng.internal.DynamicGraph" sourceFile="DynamicGraph.java" interface="false" size="121" bugs="4" priority_2="4"/>
      <ClassStats class="org.testng.internal.DynamicGraph$1" sourceFile="DynamicGraph.java" interface="false" size="4" bugs="0"/>
      <ClassStats class="org.testng.internal.DynamicGraph$Edges" sourceFile="DynamicGraph.java" interface="false" size="110" bugs="0"/>
      <ClassStats class="org.testng.internal.DynamicGraphHelper" sourceFile="DynamicGraphHelper.java" interface="false" size="104" bugs="3" priority_3="2" priority_2="1"/>
      <ClassStats class="org.testng.internal.EclipseInterface" sourceFile="EclipseInterface.java" interface="false" size="18" bugs="0"/>
      <ClassStats class="org.testng.internal.ExceptionUtils" sourceFile="ExceptionUtils.java" interface="false" size="24" bugs="0"/>
      <ClassStats class="org.testng.internal.ExitCode" sourceFile="ExitCode.java" interface="false" size="50" bugs="0"/>
      <ClassStats class="org.testng.internal.ExitCodeListener" sourceFile="ExitCodeListener.java" interface="false" size="47" bugs="0"/>
      <ClassStats class="org.testng.internal.ExpectedExceptionsHolder" sourceFile="ExpectedExceptionsHolder.java" interface="false" size="49" bugs="2" priority_3="2"/>
      <ClassStats class="org.testng.internal.FactoryMethod" sourceFile="FactoryMethod.java" interface="false" size="126" bugs="2" priority_3="1" priority_2="1"/>
      <ClassStats class="org.testng.internal.Graph" sourceFile="Graph.java" interface="false" size="132" bugs="1" priority_2="1"/>
      <ClassStats class="org.testng.internal.Graph$Node" sourceFile="Graph.java" interface="false" size="48" bugs="2" priority_2="1" priority_1="1"/>
      <ClassStats class="org.testng.internal.GroupConfigMethodArguments" sourceFile="GroupConfigMethodArguments.java" interface="false" size="18" bugs="2" priority_2="2"/>
      <ClassStats class="org.testng.internal.GroupConfigMethodArguments$1" sourceFile="GroupConfigMethodArguments.java" interface="false" size="1" bugs="0"/>
      <ClassStats class="org.testng.internal.GroupConfigMethodArguments$Builder" sourceFile="GroupConfigMethodArguments.java" interface="false" size="21" bugs="3" priority_2="3"/>
      <ClassStats class="org.testng.internal.GroupsHelper" sourceFile="GroupsHelper.java" interface="false" size="31" bugs="0"/>
      <ClassStats class="org.testng.internal.GuiceBackedInjectorFactory" sourceFile="GuiceBackedInjectorFactory.java" interface="false" size="5" bugs="0"/>
      <ClassStats class="org.testng.internal.IConfigInvoker" sourceFile="IConfigInvoker.java" interface="true" size="5" bugs="0"/>
      <ClassStats class="org.testng.internal.IConfiguration" sourceFile="IConfiguration.java" interface="true" size="22" bugs="0"/>
      <ClassStats class="org.testng.internal.IInvoker" sourceFile="IInvoker.java" interface="true" size="3" bugs="0"/>
      <ClassStats class="org.testng.internal.IMethodRunner" sourceFile="IMethodRunner.java" interface="true" size="3" bugs="0"/>
      <ClassStats class="org.testng.internal.IParameterInfo" sourceFile="IParameterInfo.java" interface="true" size="7" bugs="0"/>
      <ClassStats class="org.testng.internal.IResultListener" sourceFile="IResultListener.java" interface="true" size="1" bugs="0"/>
      <ClassStats class="org.testng.internal.IResultListener2" sourceFile="IResultListener2.java" interface="true" size="1" bugs="0"/>
      <ClassStats class="org.testng.internal.ITestInvoker" sourceFile="ITestInvoker.java" interface="true" size="10" bugs="0"/>
      <ClassStats class="org.testng.internal.ITestInvoker$FailureContext" sourceFile="ITestInvoker.java" interface="false" size="9" bugs="0"/>
      <ClassStats class="org.testng.internal.ITestResultNotifier" sourceFile="ITestResultNotifier.java" interface="true" size="12" bugs="0"/>
      <ClassStats class="org.testng.internal.InstanceBasedParallelParallelWorker" sourceFile="InstanceBasedParallelParallelWorker.java" interface="false" size="23" bugs="0"/>
      <ClassStats class="org.testng.internal.InstanceCreator" sourceFile="InstanceCreator.java" interface="false" size="95" bugs="2" priority_2="2"/>
      <ClassStats class="org.testng.internal.InstanceInfo" sourceFile="InstanceInfo.java" interface="false" size="12" bugs="0"/>
      <ClassStats class="org.testng.internal.InvokeMethodRunnable" sourceFile="InvokeMethodRunnable.java" interface="false" size="47" bugs="3" priority_2="3"/>
      <ClassStats class="org.testng.internal.InvokeMethodRunnable$TestNGRuntimeException" sourceFile="InvokeMethodRunnable.java" interface="false" size="5" bugs="0"/>
      <ClassStats class="org.testng.internal.InvokedMethod" sourceFile="InvokedMethod.java" interface="false" size="28" bugs="4" priority_2="4"/>
      <ClassStats class="org.testng.internal.Invoker" sourceFile="Invoker.java" interface="false" size="22" bugs="1" priority_2="1"/>
      <ClassStats class="org.testng.internal.MethodArguments" sourceFile="MethodArguments.java" interface="false" size="8" bugs="1" priority_2="1"/>
      <ClassStats class="org.testng.internal.MethodGroupsHelper" sourceFile="MethodGroupsHelper.java" interface="false" size="134" bugs="0"/>
      <ClassStats class="org.testng.internal.MethodHelper" sourceFile="MethodHelper.java" interface="false" size="246" bugs="4" priority_3="3" priority_2="1"/>
      <ClassStats class="org.testng.internal.MethodHelper$1" sourceFile="MethodHelper.java" interface="false" size="1" bugs="0"/>
      <ClassStats class="org.testng.internal.MethodHelper$MatchResults" sourceFile="MethodHelper.java" interface="false" size="11" bugs="0"/>
      <ClassStats class="org.testng.internal.MethodInheritance" sourceFile="MethodInheritance.java" interface="false" size="82" bugs="1" priority_3="1"/>
      <ClassStats class="org.testng.internal.MethodInstance" sourceFile="MethodInstance.java" interface="false" size="18" bugs="2" priority_2="2"/>
      <ClassStats class="org.testng.internal.MethodInstance$1" sourceFile="MethodInstance.java" interface="false" size="34" bugs="0"/>
      <ClassStats class="org.testng.internal.MethodInvocationHelper" sourceFile="MethodInvocationHelper.java" interface="false" size="184" bugs="2" priority_3="2"/>
      <ClassStats class="org.testng.internal.MethodInvocationHelper$1" sourceFile="MethodInvocationHelper.java" interface="false" size="18" bugs="0"/>
      <ClassStats class="org.testng.internal.MethodInvocationHelper$2" sourceFile="MethodInvocationHelper.java" interface="false" size="18" bugs="0"/>
      <ClassStats class="org.testng.internal.MethodRunner" sourceFile="MethodRunner.java" interface="false" size="81" bugs="0"/>
      <ClassStats class="org.testng.internal.MethodSelectorDescriptor" sourceFile="MethodSelectorDescriptor.java" interface="false" size="19" bugs="3" priority_2="3"/>
      <ClassStats class="org.testng.internal.NoOpTestClass" sourceFile="NoOpTestClass.java" interface="false" size="101" bugs="17" priority_2="17"/>
      <ClassStats class="org.testng.internal.ObjectFactoryImpl" sourceFile="ObjectFactoryImpl.java" interface="false" size="15" bugs="0"/>
      <ClassStats class="org.testng.internal.OverrideProcessor" sourceFile="OverrideProcessor.java" interface="false" size="20" bugs="2" priority_2="2"/>
      <ClassStats class="org.testng.internal.PackageUtils" sourceFile="PackageUtils.java" interface="false" size="153" bugs="4" priority_3="2" priority_2="2"/>
      <ClassStats class="org.testng.internal.ParameterHandler" sourceFile="ParameterHandler.java" interface="false" size="26" bugs="0"/>
      <ClassStats class="org.testng.internal.ParameterHandler$ParameterBag" sourceFile="ParameterHandler.java" interface="false" size="18" bugs="0"/>
      <ClassStats class="org.testng.internal.ParameterHolder" sourceFile="ParameterHolder.java" interface="false" size="10" bugs="1" priority_2="1"/>
      <ClassStats class="org.testng.internal.ParameterHolder$ParameterOrigin" sourceFile="ParameterHolder.java" interface="false" size="13" bugs="0"/>
      <ClassStats class="org.testng.internal.ParameterInfo" sourceFile="ParameterInfo.java" interface="false" size="12" bugs="2" priority_2="2"/>
      <ClassStats class="org.testng.internal.Parameters" sourceFile="Parameters.java" interface="false" size="352" bugs="2" priority_3="2"/>
      <ClassStats class="org.testng.internal.Parameters$1" sourceFile="Parameters.java" interface="false" size="29" bugs="0"/>
      <ClassStats class="org.testng.internal.Parameters$FilterOutInJectedTypesResult" sourceFile="Parameters.java" interface="false" size="14" bugs="0"/>
      <ClassStats class="org.testng.internal.Parameters$MethodParameters" sourceFile="Parameters.java" interface="false" size="31" bugs="4" priority_2="4"/>
      <ClassStats class="org.testng.internal.PoolService" sourceFile="PoolService.java" interface="false" size="23" bugs="0"/>
      <ClassStats class="org.testng.internal.PoolService$1" sourceFile="PoolService.java" interface="false" size="9" bugs="0"/>
      <ClassStats class="org.testng.internal.PropertyUtils" sourceFile="PropertyUtils.java" interface="false" size="52" bugs="0"/>
      <ClassStats class="org.testng.internal.RegexpExpectedExceptionsHolder" sourceFile="RegexpExpectedExceptionsHolder.java" interface="false" size="25" bugs="1" priority_2="1"/>
      <ClassStats class="org.testng.internal.ReporterConfig" sourceFile="ReporterConfig.java" interface="false" size="52" bugs="2" priority_2="2"/>
      <ClassStats class="org.testng.internal.ReporterConfig$Property" sourceFile="ReporterConfig.java" interface="false" size="14" bugs="0"/>
      <ClassStats class="org.testng.internal.ResultMap" sourceFile="ResultMap.java" interface="false" size="33" bugs="0"/>
      <ClassStats class="org.testng.internal.RunInfo" sourceFile="RunInfo.java" interface="false" size="34" bugs="0"/>
      <ClassStats class="org.testng.internal.RuntimeBehavior" sourceFile="RuntimeBehavior.java" interface="false" size="47" bugs="0"/>
      <ClassStats class="org.testng.internal.ScriptMethodSelector" sourceFile="ScriptMethodSelector.java" interface="false" size="35" bugs="0"/>
      <ClassStats class="org.testng.internal.ScriptSelectorFactory" sourceFile="ScriptSelectorFactory.java" interface="false" size="20" bugs="1" priority_3="1"/>
      <ClassStats class="org.testng.internal.SingleTestMethodWorker" sourceFile="TestMethodWorker.java" interface="false" size="8" bugs="0"/>
      <ClassStats class="org.testng.internal.SuiteRunnerMap" sourceFile="SuiteRunnerMap.java" interface="false" size="15" bugs="0"/>
      <ClassStats class="org.testng.internal.Systematiser" sourceFile="Systematiser.java" interface="false" size="14" bugs="0"/>
      <ClassStats class="org.testng.internal.Systematiser$1" sourceFile="Systematiser.java" interface="false" size="10" bugs="0"/>
      <ClassStats class="org.testng.internal.Systematiser$2" sourceFile="Systematiser.java" interface="false" size="8" bugs="0"/>
      <ClassStats class="org.testng.internal.Systematiser$3" sourceFile="Systematiser.java" interface="false" size="8" bugs="0"/>
      <ClassStats class="org.testng.internal.Systematiser$4" sourceFile="Systematiser.java" interface="false" size="4" bugs="0"/>
      <ClassStats class="org.testng.internal.Systematiser$Order" sourceFile="Systematiser.java" interface="false" size="26" bugs="0"/>
      <ClassStats class="org.testng.internal.Tarjan" sourceFile="Tarjan.java" interface="false" size="35" bugs="1" priority_2="1"/>
      <ClassStats class="org.testng.internal.TestInvoker" sourceFile="TestInvoker.java" interface="false" size="410" bugs="0"/>
      <ClassStats class="org.testng.internal.TestInvoker$1" sourceFile="TestInvoker.java" interface="false" size="1" bugs="0"/>
      <ClassStats class="org.testng.internal.TestInvoker$MethodInvocationAgent" sourceFile="TestInvoker.java" interface="false" size="56" bugs="0"/>
      <ClassStats class="org.testng.internal.TestInvoker$StatusHolder" sourceFile="TestInvoker.java" interface="false" size="7" bugs="0"/>
      <ClassStats class="org.testng.internal.TestListenerHelper" sourceFile="TestListenerHelper.java" interface="false" size="87" bugs="2" priority_3="1" priority_2="1"/>
      <ClassStats class="org.testng.internal.TestListenerHelper$ListenerHolder" sourceFile="TestListenerHelper.java" interface="false" size="13" bugs="1" priority_2="1"/>
      <ClassStats class="org.testng.internal.TestListenerHelper$ListenerInvocationException" sourceFile="TestListenerHelper.java" interface="false" size="4" bugs="0"/>
      <ClassStats class="org.testng.internal.TestMethodArguments" sourceFile="TestMethodArguments.java" interface="false" size="26" bugs="3" priority_2="3"/>
      <ClassStats class="org.testng.internal.TestMethodArguments$1" sourceFile="TestMethodArguments.java" interface="false" size="1" bugs="0"/>
      <ClassStats class="org.testng.internal.TestMethodArguments$Builder" sourceFile="TestMethodArguments.java" interface="false" size="51" bugs="6" priority_2="6"/>
      <ClassStats class="org.testng.internal.TestMethodComparator" sourceFile="TestMethodComparator.java" interface="false" size="14" bugs="1" priority_2="1"/>
      <ClassStats class="org.testng.internal.TestMethodWithDataProviderMethodWorker" sourceFile="TestMethodWithDataProviderMethodWorker.java" interface="false" size="83" bugs="9" priority_2="9"/>
      <ClassStats class="org.testng.internal.TestMethodWorker" sourceFile="TestMethodWorker.java" interface="false" size="153" bugs="8" priority_2="8"/>
      <ClassStats class="org.testng.internal.TestNGClassFinder" sourceFile="TestNGClassFinder.java" interface="false" size="172" bugs="4" priority_3="1" priority_2="3"/>
      <ClassStats class="org.testng.internal.TestNGMethod" sourceFile="TestNGMethod.java" interface="false" size="140" bugs="2" priority_2="2"/>
      <ClassStats class="org.testng.internal.TestNGMethodFinder" sourceFile="TestNGMethodFinder.java" interface="false" size="110" bugs="1" priority_2="1"/>
      <ClassStats class="org.testng.internal.TestNGMethodFinder$1" sourceFile="TestNGMethodFinder.java" interface="false" size="4" bugs="0"/>
      <ClassStats class="org.testng.internal.TestNGMethodFinder$MethodType" sourceFile="TestNGMethodFinder.java" interface="false" size="27" bugs="0"/>
      <ClassStats class="org.testng.internal.TestNgMethodUtils" sourceFile="TestNgMethodUtils.java" interface="false" size="70" bugs="0"/>
      <ClassStats class="org.testng.internal.TestResult" sourceFile="TestResult.java" interface="false" size="269" bugs="9" priority_3="1" priority_2="8"/>
      <ClassStats class="org.testng.internal.Utils" sourceFile="Utils.java" interface="false" size="307" bugs="9" priority_2="8" priority_1="1"/>
      <ClassStats class="org.testng.internal.Utils$StackTraceType" sourceFile="Utils.java" interface="false" size="11" bugs="0"/>
      <ClassStats class="org.testng.internal.Version" sourceFile="Version.java" interface="false" size="9" bugs="0"/>
      <ClassStats class="org.testng.internal.WrappedTestNGMethod" sourceFile="WrappedTestNGMethod.java" interface="false" size="174" bugs="3" priority_2="2" priority_1="1"/>
      <ClassStats class="org.testng.internal.XmlMethodSelector" sourceFile="XmlMethodSelector.java" interface="false" size="197" bugs="7" priority_3="1" priority_2="6"/>
      <ClassStats class="org.testng.internal.Yaml" sourceFile="Yaml.java" interface="false" size="191" bugs="1" priority_2="1"/>
      <ClassStats class="org.testng.internal.Yaml$1" sourceFile="Yaml.java" interface="false" size="1" bugs="0"/>
      <ClassStats class="org.testng.internal.Yaml$TestNGConstructor" sourceFile="Yaml.java" interface="false" size="8" bugs="0"/>
      <ClassStats class="org.testng.internal.Yaml$TestNGConstructor$ConstructParallelMode" sourceFile="Yaml.java" interface="false" size="13" bugs="0"/>
      <ClassStats class="org.testng.internal.YamlParser" sourceFile="YamlParser.java" interface="false" size="10" bugs="0"/>
    </PackageStats>
    <PackageStats package="org.testng.internal.annotations" total_bugs="35" total_types="34" total_size="1141" priority_3="1" priority_2="34">
      <ClassStats class="org.testng.internal.annotations.AnnotationHelper" sourceFile="AnnotationHelper.java" interface="false" size="189" bugs="1" priority_2="1"/>
      <ClassStats class="org.testng.internal.annotations.BaseAnnotation" sourceFile="BaseAnnotation.java" interface="false" size="21" bugs="4" priority_2="4"/>
      <ClassStats class="org.testng.internal.annotations.BaseBeforeAfter" sourceFile="BaseBeforeAfter.java" interface="false" size="37" bugs="4" priority_2="4"/>
      <ClassStats class="org.testng.internal.annotations.ConfigurationAnnotation" sourceFile="ConfigurationAnnotation.java" interface="false" size="128" bugs="5" priority_2="5"/>
      <ClassStats class="org.testng.internal.annotations.DataProviderAnnotation" sourceFile="DataProviderAnnotation.java" interface="false" size="21" bugs="2" priority_2="2"/>
      <ClassStats class="org.testng.internal.annotations.DefaultAnnotationTransformer" sourceFile="DefaultAnnotationTransformer.java" interface="false" size="9" bugs="1" priority_3="1"/>
      <ClassStats class="org.testng.internal.annotations.DisabledRetryAnalyzer" sourceFile="DisabledRetryAnalyzer.java" interface="false" size="5" bugs="0"/>
      <ClassStats class="org.testng.internal.annotations.FactoryAnnotation" sourceFile="FactoryAnnotation.java" interface="false" size="29" bugs="2" priority_2="2"/>
      <ClassStats class="org.testng.internal.annotations.IAfterClass" sourceFile="IAfterClass.java" interface="true" size="1" bugs="0"/>
      <ClassStats class="org.testng.internal.annotations.IAfterGroups" sourceFile="IAfterGroups.java" interface="true" size="1" bugs="0"/>
      <ClassStats class="org.testng.internal.annotations.IAfterMethod" sourceFile="IAfterMethod.java" interface="true" size="1" bugs="0"/>
      <ClassStats class="org.testng.internal.annotations.IAfterSuite" sourceFile="IAfterSuite.java" interface="true" size="1" bugs="0"/>
      <ClassStats class="org.testng.internal.annotations.IAfterTest" sourceFile="IAfterTest.java" interface="true" size="1" bugs="0"/>
      <ClassStats class="org.testng.internal.annotations.IAnnotationFinder" sourceFile="IAnnotationFinder.java" interface="true" size="10" bugs="0"/>
      <ClassStats class="org.testng.internal.annotations.IAnnotationTransformer" sourceFile="IAnnotationTransformer.java" interface="true" size="3" bugs="1" priority_2="1"/>
      <ClassStats class="org.testng.internal.annotations.IBaseBeforeAfter" sourceFile="IBaseBeforeAfter.java" interface="true" size="8" bugs="0"/>
      <ClassStats class="org.testng.internal.annotations.IBaseBeforeAfterMethod" sourceFile="IBaseBeforeAfterMethod.java" interface="true" size="2" bugs="0"/>
      <ClassStats class="org.testng.internal.annotations.IBeforeClass" sourceFile="IBeforeClass.java" interface="true" size="1" bugs="0"/>
      <ClassStats class="org.testng.internal.annotations.IBeforeGroups" sourceFile="IBeforeGroups.java" interface="true" size="1" bugs="0"/>
      <ClassStats class="org.testng.internal.annotations.IBeforeMethod" sourceFile="IBeforeMethod.java" interface="true" size="1" bugs="0"/>
      <ClassStats class="org.testng.internal.annotations.IBeforeSuite" sourceFile="IBeforeSuite.java" interface="true" size="1" bugs="0"/>
      <ClassStats class="org.testng.internal.annotations.IBeforeTest" sourceFile="IBeforeTest.java" interface="true" size="1" bugs="0"/>
      <ClassStats class="org.testng.internal.annotations.IDataProvidable" sourceFile="IDataProvidable.java" interface="true" size="5" bugs="0"/>
      <ClassStats class="org.testng.internal.annotations.IListeners" sourceFile="IListeners.java" interface="true" size="1" bugs="0"/>
      <ClassStats class="org.testng.internal.annotations.ITest" sourceFile="ITest.java" interface="true" size="1" bugs="0"/>
      <ClassStats class="org.testng.internal.annotations.IgnoreListener" sourceFile="IgnoreListener.java" interface="false" size="49" bugs="0"/>
      <ClassStats class="org.testng.internal.annotations.JDK15AnnotationFinder" sourceFile="JDK15AnnotationFinder.java" interface="false" size="126" bugs="1" priority_2="1"/>
      <ClassStats class="org.testng.internal.annotations.JDK15TagFactory" sourceFile="JDK15TagFactory.java" interface="false" size="289" bugs="0"/>
      <ClassStats class="org.testng.internal.annotations.JDK15TagFactory$Default" sourceFile="JDK15TagFactory.java" interface="true" size="2" bugs="0"/>
      <ClassStats class="org.testng.internal.annotations.ListenersAnnotation" sourceFile="ListenersAnnotation.java" interface="false" size="9" bugs="2" priority_2="2"/>
      <ClassStats class="org.testng.internal.annotations.ObjectFactoryAnnotation" sourceFile="ObjectFactoryAnnotation.java" interface="false" size="3" bugs="0"/>
      <ClassStats class="org.testng.internal.annotations.ParametersAnnotation" sourceFile="ParametersAnnotation.java" interface="false" size="10" bugs="2" priority_2="2"/>
      <ClassStats class="org.testng.internal.annotations.TestAnnotation" sourceFile="TestAnnotation.java" interface="false" size="123" bugs="4" priority_2="4"/>
      <ClassStats class="org.testng.internal.annotations.TestOrConfiguration" sourceFile="TestOrConfiguration.java" interface="false" size="51" bugs="6" priority_2="6"/>
    </PackageStats>
    <PackageStats package="org.testng.internal.ant" total_bugs="0" total_types="2" total_size="31">
      <ClassStats class="org.testng.internal.ant.AntReporterConfig" sourceFile="AntReporterConfig.java" interface="false" size="18" bugs="0"/>
      <ClassStats class="org.testng.internal.ant.AntReporterConfig$Property" sourceFile="AntReporterConfig.java" interface="false" size="13" bugs="0"/>
    </PackageStats>
    <PackageStats package="org.testng.internal.collections" total_bugs="3" total_types="5" total_size="101" priority_2="3">
      <ClassStats class="org.testng.internal.collections.ArrayIterator" sourceFile="ArrayIterator.java" interface="false" size="18" bugs="1" priority_2="1"/>
      <ClassStats class="org.testng.internal.collections.Ints" sourceFile="Ints.java" interface="false" size="5" bugs="0"/>
      <ClassStats class="org.testng.internal.collections.OneToTwoDimArrayIterator" sourceFile="OneToTwoDimArrayIterator.java" interface="false" size="18" bugs="1" priority_2="1"/>
      <ClassStats class="org.testng.internal.collections.OneToTwoDimIterator" sourceFile="OneToTwoDimIterator.java" interface="false" size="14" bugs="1" priority_2="1"/>
      <ClassStats class="org.testng.internal.collections.Pair" sourceFile="Pair.java" interface="false" size="46" bugs="0"/>
    </PackageStats>
    <PackageStats package="org.testng.internal.invokers" total_bugs="2" total_types="2" total_size="29" priority_2="2">
      <ClassStats class="org.testng.internal.invokers.InvokedMethodListenerInvoker" sourceFile="InvokedMethodListenerInvoker.java" interface="false" size="18" bugs="2" priority_2="2"/>
      <ClassStats class="org.testng.internal.invokers.InvokedMethodListenerMethod" sourceFile="InvokedMethodListenerMethod.java" interface="false" size="11" bugs="0"/>
    </PackageStats>
    <PackageStats package="org.testng.internal.junit" total_bugs="1" total_types="5" total_size="137" priority_2="1">
      <ClassStats class="org.testng.internal.junit.ArrayAsserts" sourceFile="ArrayAsserts.java" interface="false" size="60" bugs="0"/>
      <ClassStats class="org.testng.internal.junit.ArrayComparisonFailure" sourceFile="ArrayComparisonFailure.java" interface="false" size="28" bugs="1" priority_2="1"/>
      <ClassStats class="org.testng.internal.junit.ComparisonCriteria" sourceFile="ComparisonCriteria.java" interface="false" size="32" bugs="0"/>
      <ClassStats class="org.testng.internal.junit.ExactComparisonCriteria" sourceFile="ExactComparisonCriteria.java" interface="false" size="6" bugs="0"/>
      <ClassStats class="org.testng.internal.junit.InexactComparisonCriteria" sourceFile="InexactComparisonCriteria.java" interface="false" size="11" bugs="0"/>
    </PackageStats>
    <PackageStats package="org.testng.internal.reflect" total_bugs="12" total_types="15" total_size="543" priority_2="12">
      <ClassStats class="org.testng.internal.reflect.AbstractMethodMatcher" sourceFile="AbstractMethodMatcher.java" interface="false" size="19" bugs="0"/>
      <ClassStats class="org.testng.internal.reflect.AbstractNodeMethodMatcher" sourceFile="AbstractNodeMethodMatcher.java" interface="false" size="36" bugs="0"/>
      <ClassStats class="org.testng.internal.reflect.ArrayEndingMethodMatcher" sourceFile="ArrayEndingMethodMatcher.java" interface="false" size="21" bugs="0"/>
      <ClassStats class="org.testng.internal.reflect.DataProviderMethodMatcher" sourceFile="DataProviderMethodMatcher.java" interface="false" size="28" bugs="1" priority_2="1"/>
      <ClassStats class="org.testng.internal.reflect.DirectMethodMatcher" sourceFile="DirectMethodMatcher.java" interface="false" size="13" bugs="0"/>
      <ClassStats class="org.testng.internal.reflect.InjectableParameter" sourceFile="InjectableParameter.java" interface="false" size="15" bugs="0"/>
      <ClassStats class="org.testng.internal.reflect.InjectableParameter$Assistant" sourceFile="InjectableParameter.java" interface="false" size="9" bugs="0"/>
      <ClassStats class="org.testng.internal.reflect.MethodMatcher" sourceFile="MethodMatcher.java" interface="true" size="3" bugs="0"/>
      <ClassStats class="org.testng.internal.reflect.MethodMatcherContext" sourceFile="MethodMatcherContext.java" interface="false" size="24" bugs="9" priority_2="9"/>
      <ClassStats class="org.testng.internal.reflect.MethodMatcherException" sourceFile="MethodMatcherException.java" interface="false" size="50" bugs="0"/>
      <ClassStats class="org.testng.internal.reflect.Parameter" sourceFile="Parameter.java" interface="false" size="32" bugs="2" priority_2="2"/>
      <ClassStats class="org.testng.internal.reflect.ReflectionHelper" sourceFile="ReflectionHelper.java" interface="false" size="62" bugs="0"/>
      <ClassStats class="org.testng.internal.reflect.ReflectionRecipes" sourceFile="ReflectionRecipes.java" interface="false" size="214" bugs="0"/>
      <ClassStats class="org.testng.internal.reflect.ReflectionRecipes$1" sourceFile="ReflectionRecipes.java" interface="false" size="4" bugs="0"/>
      <ClassStats class="org.testng.internal.reflect.ReflectionRecipes$ListBackedImmutableQueue" sourceFile="ReflectionRecipes.java" interface="false" size="13" bugs="0"/>
    </PackageStats>
    <PackageStats package="org.testng.internal.thread" total_bugs="0" total_types="5" total_size="65">
      <ClassStats class="org.testng.internal.thread.DefaultThreadPoolExecutorFactory" sourceFile="DefaultThreadPoolExecutorFactory.java" interface="false" size="7" bugs="0"/>
      <ClassStats class="org.testng.internal.thread.TestNGThreadFactory" sourceFile="TestNGThreadFactory.java" interface="false" size="10" bugs="0"/>
      <ClassStats class="org.testng.internal.thread.ThreadExecutionException" sourceFile="ThreadExecutionException.java" interface="false" size="5" bugs="0"/>
      <ClassStats class="org.testng.internal.thread.ThreadTimeoutException" sourceFile="ThreadTimeoutException.java" interface="false" size="11" bugs="0"/>
      <ClassStats class="org.testng.internal.thread.ThreadUtil" sourceFile="ThreadUtil.java" interface="false" size="32" bugs="0"/>
    </PackageStats>
    <PackageStats package="org.testng.internal.thread.graph" total_bugs="5" total_types="3" total_size="135" priority_3="1" priority_2="4">
      <ClassStats class="org.testng.internal.thread.graph.GraphThreadPoolExecutor" sourceFile="GraphThreadPoolExecutor.java" interface="false" size="96" bugs="3" priority_3="1" priority_2="2"/>
      <ClassStats class="org.testng.internal.thread.graph.GraphThreadPoolExecutor$PhoneyWorker" sourceFile="GraphThreadPoolExecutor.java" interface="false" size="21" bugs="1" priority_2="1"/>
      <ClassStats class="org.testng.internal.thread.graph.SuiteWorkerFactory" sourceFile="SuiteWorkerFactory.java" interface="false" size="18" bugs="1" priority_2="1"/>
    </PackageStats>
    <PackageStats package="org.testng.junit" total_bugs="16" total_types="20" total_size="630" priority_3="4" priority_2="12">
      <ClassStats class="org.testng.junit.IJUnitTestRunner" sourceFile="IJUnitTestRunner.java" interface="true" size="27" bugs="1" priority_3="1"/>
      <ClassStats class="org.testng.junit.INameFilter" sourceFile="JUnitMethodFinder.java" interface="true" size="2" bugs="0"/>
      <ClassStats class="org.testng.junit.JUnit3TestClass" sourceFile="JUnit3TestClass.java" interface="false" size="4" bugs="0"/>
      <ClassStats class="org.testng.junit.JUnit3TestMethod" sourceFile="JUnit3TestMethod.java" interface="false" size="13" bugs="0"/>
      <ClassStats class="org.testng.junit.JUnit3TestRecognizer" sourceFile="JUnit3TestRecognizer.java" interface="false" size="19" bugs="0"/>
      <ClassStats class="org.testng.junit.JUnit4ConfigurationMethod" sourceFile="JUnit4ConfigurationMethod.java" interface="false" size="12" bugs="1" priority_2="1"/>
      <ClassStats class="org.testng.junit.JUnit4SpockMethod" sourceFile="JUnit4SpockMethod.java" interface="false" size="24" bugs="1" priority_2="1"/>
      <ClassStats class="org.testng.junit.JUnit4TestClass" sourceFile="JUnit4TestClass.java" interface="false" size="9" bugs="0"/>
      <ClassStats class="org.testng.junit.JUnit4TestMethod" sourceFile="JUnit4TestMethod.java" interface="false" size="22" bugs="0"/>
      <ClassStats class="org.testng.junit.JUnit4TestRecognizer" sourceFile="JUnit4TestRecognizer.java" interface="false" size="14" bugs="0"/>
      <ClassStats class="org.testng.junit.JUnit4TestRunner" sourceFile="JUnit4TestRunner.java" interface="false" size="62" bugs="4" priority_2="4"/>
      <ClassStats class="org.testng.junit.JUnit4TestRunner$1" sourceFile="JUnit4TestRunner.java" interface="false" size="22" bugs="0"/>
      <ClassStats class="org.testng.junit.JUnit4TestRunner$RL" sourceFile="JUnit4TestRunner.java" interface="false" size="100" bugs="0"/>
      <ClassStats class="org.testng.junit.JUnitMethodFinder" sourceFile="JUnitMethodFinder.java" interface="false" size="50" bugs="1" priority_3="1"/>
      <ClassStats class="org.testng.junit.JUnitTestClass" sourceFile="JUnitTestClass.java" interface="false" size="63" bugs="2" priority_2="2"/>
      <ClassStats class="org.testng.junit.JUnitTestFinder" sourceFile="JUnitTestFinder.java" interface="false" size="31" bugs="0"/>
      <ClassStats class="org.testng.junit.JUnitTestMethod" sourceFile="JUnitTestMethod.java" interface="false" size="15" bugs="1" priority_3="1"/>
      <ClassStats class="org.testng.junit.JUnitTestRecognizer" sourceFile="JUnitTestRecognizer.java" interface="true" size="2" bugs="0"/>
      <ClassStats class="org.testng.junit.JUnitTestRunner" sourceFile="JUnitTestRunner.java" interface="false" size="124" bugs="5" priority_3="1" priority_2="4"/>
      <ClassStats class="org.testng.junit.JUnitTestRunner$TestRunInfo" sourceFile="JUnitTestRunner.java" interface="false" size="15" bugs="0"/>
    </PackageStats>
    <PackageStats package="org.testng.log" total_bugs="0" total_types="1" total_size="5">
      <ClassStats class="org.testng.log.TextFormatter" sourceFile="TextFormatter.java" interface="false" size="5" bugs="0"/>
    </PackageStats>
    <PackageStats package="org.testng.log4testng" total_bugs="22" total_types="1" total_size="364" priority_3="2" priority_1="20">
      <ClassStats class="org.testng.log4testng.Logger" sourceFile="Logger.java" interface="false" size="364" bugs="22" priority_3="2" priority_1="20"/>
    </PackageStats>
    <PackageStats package="org.testng.mustache" total_bugs="3" total_types="8" total_size="163" priority_2="2" priority_1="1">
      <ClassStats class="org.testng.mustache.BaseChunk" sourceFile="BaseChunk.java" interface="false" size="9" bugs="1" priority_2="1"/>
      <ClassStats class="org.testng.mustache.Model" sourceFile="Model.java" interface="false" size="41" bugs="2" priority_2="1" priority_1="1"/>
      <ClassStats class="org.testng.mustache.Model$1" sourceFile="Model.java" interface="false" size="1" bugs="0"/>
      <ClassStats class="org.testng.mustache.Model$SubModel" sourceFile="Model.java" interface="false" size="6" bugs="0"/>
      <ClassStats class="org.testng.mustache.Mustache" sourceFile="Mustache.java" interface="false" size="76" bugs="0"/>
      <ClassStats class="org.testng.mustache.StringChunk" sourceFile="StringChunk.java" interface="false" size="10" bugs="0"/>
      <ClassStats class="org.testng.mustache.Value" sourceFile="Value.java" interface="false" size="8" bugs="0"/>
      <ClassStats class="org.testng.mustache.VariableChunk" sourceFile="VariableChunk.java" interface="false" size="12" bugs="0"/>
    </PackageStats>
    <PackageStats package="org.testng.reporters" total_bugs="42" total_types="42" total_size="3636" priority_3="7" priority_2="30" priority_1="5">
      <ClassStats class="org.testng.reporters.Buffer" sourceFile="Buffer.java" interface="false" size="5" bugs="0"/>
      <ClassStats class="org.testng.reporters.DotTestListener" sourceFile="DotTestListener.java" interface="false" size="19" bugs="0"/>
      <ClassStats class="org.testng.reporters.EmailableReporter" sourceFile="EmailableReporter.java" interface="false" size="367" bugs="2" priority_3="1" priority_2="1"/>
      <ClassStats class="org.testng.reporters.EmailableReporter$1" sourceFile="EmailableReporter.java" interface="false" size="1" bugs="0"/>
      <ClassStats class="org.testng.reporters.EmailableReporter$TestSorter" sourceFile="EmailableReporter.java" interface="false" size="7" bugs="1" priority_2="1"/>
      <ClassStats class="org.testng.reporters.EmailableReporter2" sourceFile="EmailableReporter2.java" interface="false" size="416" bugs="3" priority_3="1" priority_2="2"/>
      <ClassStats class="org.testng.reporters.EmailableReporter2$ClassResult" sourceFile="EmailableReporter2.java" interface="false" size="12" bugs="2" priority_2="2"/>
      <ClassStats class="org.testng.reporters.EmailableReporter2$MethodResult" sourceFile="EmailableReporter2.java" interface="false" size="8" bugs="2" priority_2="2"/>
      <ClassStats class="org.testng.reporters.EmailableReporter2$SuiteResult" sourceFile="EmailableReporter2.java" interface="false" size="21" bugs="1" priority_2="1"/>
      <ClassStats class="org.testng.reporters.EmailableReporter2$TestResult" sourceFile="EmailableReporter2.java" interface="false" size="128" bugs="6" priority_2="6"/>
      <ClassStats class="org.testng.reporters.ExitCodeListener" sourceFile="ExitCodeListener.java" interface="false" size="39" bugs="2" priority_2="2"/>
      <ClassStats class="org.testng.reporters.FailedReporter" sourceFile="FailedReporter.java" interface="false" size="125" bugs="1" priority_2="1"/>
      <ClassStats class="org.testng.reporters.FileStringBuffer" sourceFile="FileStringBuffer.java" interface="false" size="89" bugs="3" priority_1="3"/>
      <ClassStats class="org.testng.reporters.Files" sourceFile="Files.java" interface="false" size="43" bugs="4" priority_2="2" priority_1="2"/>
      <ClassStats class="org.testng.reporters.HtmlHelper" sourceFile="HtmlHelper.java" interface="false" size="14" bugs="0"/>
      <ClassStats class="org.testng.reporters.IBuffer" sourceFile="IBuffer.java" interface="true" size="3" bugs="0"/>
      <ClassStats class="org.testng.reporters.ICustomizeXmlReport" sourceFile="ICustomizeXmlReport.java" interface="true" size="2" bugs="0"/>
      <ClassStats class="org.testng.reporters.IReporterConfig" sourceFile="IReporterConfig.java" interface="true" size="9" bugs="0"/>
      <ClassStats class="org.testng.reporters.JUnitReportReporter" sourceFile="JUnitReportReporter.java" interface="false" size="177" bugs="3" priority_3="2" priority_2="1"/>
      <ClassStats class="org.testng.reporters.JUnitReportReporter$1" sourceFile="JUnitReportReporter.java" interface="false" size="1" bugs="0"/>
      <ClassStats class="org.testng.reporters.JUnitReportReporter$TestTag" sourceFile="JUnitReportReporter.java" interface="false" size="10" bugs="0"/>
      <ClassStats class="org.testng.reporters.JUnitXMLReporter" sourceFile="JUnitXMLReporter.java" interface="false" size="184" bugs="0"/>
      <ClassStats class="org.testng.reporters.PojoReporterConfig" sourceFile="PojoReporterConfig.java" interface="false" size="9" bugs="0"/>
      <ClassStats class="org.testng.reporters.RuntimeBehavior" sourceFile="RuntimeBehavior.java" interface="false" size="19" bugs="0"/>
      <ClassStats class="org.testng.reporters.SuiteHTMLReporter" sourceFile="SuiteHTMLReporter.java" interface="false" size="547" bugs="1" priority_2="1"/>
      <ClassStats class="org.testng.reporters.Tag" sourceFile="XMLStringBuffer.java" interface="false" size="12" bugs="1" priority_3="1"/>
      <ClassStats class="org.testng.reporters.TestHTMLReporter" sourceFile="TestHTMLReporter.java" interface="false" size="201" bugs="2" priority_3="1" priority_2="1"/>
      <ClassStats class="org.testng.reporters.TestHTMLReporter$1" sourceFile="TestHTMLReporter.java" interface="false" size="1" bugs="0"/>
      <ClassStats class="org.testng.reporters.TestHTMLReporter$ConfigurationComparator" sourceFile="TestHTMLReporter.java" interface="false" size="31" bugs="1" priority_2="1"/>
      <ClassStats class="org.testng.reporters.TestHTMLReporter$NameComparator" sourceFile="TestHTMLReporter.java" interface="false" size="9" bugs="1" priority_2="1"/>
      <ClassStats class="org.testng.reporters.TextReporter" sourceFile="TextReporter.java" interface="false" size="132" bugs="0"/>
      <ClassStats class="org.testng.reporters.VerboseReporter" sourceFile="VerboseReporter.java" interface="false" size="160" bugs="0"/>
      <ClassStats class="org.testng.reporters.VerboseReporter$1" sourceFile="VerboseReporter.java" interface="false" size="4" bugs="0"/>
      <ClassStats class="org.testng.reporters.VerboseReporter$Status" sourceFile="VerboseReporter.java" interface="false" size="21" bugs="0"/>
      <ClassStats class="org.testng.reporters.XMLConstants" sourceFile="XMLConstants.java" interface="true" size="24" bugs="0"/>
      <ClassStats class="org.testng.reporters.XMLReporter" sourceFile="XMLReporter.java" interface="false" size="153" bugs="2" priority_2="2"/>
      <ClassStats class="org.testng.reporters.XMLReporterConfig" sourceFile="XMLReporterConfig.java" interface="false" size="124" bugs="0"/>
      <ClassStats class="org.testng.reporters.XMLReporterConfig$StackTraceLevels" sourceFile="XMLReporterConfig.java" interface="false" size="30" bugs="0"/>
      <ClassStats class="org.testng.reporters.XMLStringBuffer" sourceFile="XMLStringBuffer.java" interface="false" size="161" bugs="1" priority_3="1"/>
      <ClassStats class="org.testng.reporters.XMLSuiteResultWriter" sourceFile="XMLSuiteResultWriter.java" interface="false" size="233" bugs="3" priority_2="3"/>
      <ClassStats class="org.testng.reporters.XMLSuiteResultWriter$1" sourceFile="XMLSuiteResultWriter.java" interface="false" size="4" bugs="0"/>
      <ClassStats class="org.testng.reporters.XMLUtils" sourceFile="XMLUtils.java" interface="false" size="81" bugs="0"/>
    </PackageStats>
    <PackageStats package="org.testng.reporters.jq" total_bugs="9" total_types="22" total_size="783" priority_3="5" priority_2="4">
      <ClassStats class="org.testng.reporters.jq.BannerPanel" sourceFile="BannerPanel.java" interface="false" size="15" bugs="0"/>
      <ClassStats class="org.testng.reporters.jq.BaseMultiSuitePanel" sourceFile="BaseMultiSuitePanel.java" interface="false" size="22" bugs="0"/>
      <ClassStats class="org.testng.reporters.jq.BasePanel" sourceFile="BasePanel.java" interface="false" size="22" bugs="0"/>
      <ClassStats class="org.testng.reporters.jq.ChronologicalPanel" sourceFile="ChronologicalPanel.java" interface="false" size="54" bugs="1" priority_3="1"/>
      <ClassStats class="org.testng.reporters.jq.ChronologicalPanel$1" sourceFile="ChronologicalPanel.java" interface="false" size="8" bugs="0"/>
      <ClassStats class="org.testng.reporters.jq.GroupPanel" sourceFile="GroupPanel.java" interface="false" size="28" bugs="0"/>
      <ClassStats class="org.testng.reporters.jq.INavigatorPanel" sourceFile="INavigatorPanel.java" interface="true" size="5" bugs="0"/>
      <ClassStats class="org.testng.reporters.jq.IPanel" sourceFile="IPanel.java" interface="true" size="2" bugs="0"/>
      <ClassStats class="org.testng.reporters.jq.IgnoredMethodsPanel" sourceFile="IgnoredMethodsPanel.java" interface="false" size="28" bugs="1" priority_3="1"/>
      <ClassStats class="org.testng.reporters.jq.Main" sourceFile="Main.java" interface="false" size="46" bugs="1" priority_3="1"/>
      <ClassStats class="org.testng.reporters.jq.Model" sourceFile="Model.java" interface="false" size="142" bugs="4" priority_3="1" priority_2="3"/>
      <ClassStats class="org.testng.reporters.jq.NavigatorPanel" sourceFile="NavigatorPanel.java" interface="false" size="146" bugs="1" priority_2="1"/>
      <ClassStats class="org.testng.reporters.jq.NavigatorPanel$BaseResultProvider" sourceFile="NavigatorPanel.java" interface="false" size="10" bugs="0"/>
      <ClassStats class="org.testng.reporters.jq.NavigatorPanel$IResultProvider" sourceFile="NavigatorPanel.java" interface="true" size="3" bugs="0"/>
      <ClassStats class="org.testng.reporters.jq.NavigatorPanel$ResultsByStatus" sourceFile="NavigatorPanel.java" interface="false" size="16" bugs="0"/>
      <ClassStats class="org.testng.reporters.jq.ReporterPanel" sourceFile="ReporterPanel.java" interface="false" size="25" bugs="0"/>
      <ClassStats class="org.testng.reporters.jq.ResultsByClass" sourceFile="ResultsByClass.java" interface="false" size="17" bugs="1" priority_3="1"/>
      <ClassStats class="org.testng.reporters.jq.ResultsByClass$1" sourceFile="ResultsByClass.java" interface="false" size="6" bugs="0"/>
      <ClassStats class="org.testng.reporters.jq.SuitePanel" sourceFile="SuitePanel.java" interface="false" size="66" bugs="0"/>
      <ClassStats class="org.testng.reporters.jq.TestNgXmlPanel" sourceFile="TestNgXmlPanel.java" interface="false" size="18" bugs="0"/>
      <ClassStats class="org.testng.reporters.jq.TestPanel" sourceFile="TestPanel.java" interface="false" size="24" bugs="0"/>
      <ClassStats class="org.testng.reporters.jq.TimesPanel" sourceFile="TimesPanel.java" interface="false" size="80" bugs="0"/>
    </PackageStats>
    <PackageStats package="org.testng.reporters.util" total_bugs="0" total_types="1" total_size="22">
      <ClassStats class="org.testng.reporters.util.StackTraceTools" sourceFile="StackTraceTools.java" interface="false" size="22" bugs="0"/>
    </PackageStats>
    <PackageStats package="org.testng.thread" total_bugs="0" total_types="4" total_size="19">
      <ClassStats class="org.testng.thread.IExecutorFactory" sourceFile="IExecutorFactory.java" interface="true" size="3" bugs="0"/>
      <ClassStats class="org.testng.thread.ITestNGThreadPoolExecutor" sourceFile="ITestNGThreadPoolExecutor.java" interface="true" size="2" bugs="0"/>
      <ClassStats class="org.testng.thread.IThreadWorkerFactory" sourceFile="IThreadWorkerFactory.java" interface="true" size="2" bugs="0"/>
      <ClassStats class="org.testng.thread.IWorker" sourceFile="IWorker.java" interface="true" size="12" bugs="0"/>
    </PackageStats>
    <PackageStats package="org.testng.util" total_bugs="0" total_types="3" total_size="64">
      <ClassStats class="org.testng.util.RetryAnalyzerCount" sourceFile="RetryAnalyzerCount.java" interface="false" size="15" bugs="0"/>
      <ClassStats class="org.testng.util.Strings" sourceFile="Strings.java" interface="false" size="41" bugs="0"/>
      <ClassStats class="org.testng.util.TimeUtils" sourceFile="TimeUtils.java" interface="false" size="8" bugs="0"/>
    </PackageStats>
    <PackageStats package="org.testng.xml" total_bugs="72" total_types="37" total_size="2814" priority_3="5" priority_2="67">
      <ClassStats class="org.testng.xml.CommentDisabledXmlWeaver" sourceFile="CommentDisabledXmlWeaver.java" interface="false" size="4" bugs="0"/>
      <ClassStats class="org.testng.xml.DefaultXmlWeaver" sourceFile="DefaultXmlWeaver.java" interface="false" size="187" bugs="0"/>
      <ClassStats class="org.testng.xml.IFileParser" sourceFile="IFileParser.java" interface="true" size="2" bugs="0"/>
      <ClassStats class="org.testng.xml.IPostProcessor" sourceFile="IPostProcessor.java" interface="true" size="2" bugs="0"/>
      <ClassStats class="org.testng.xml.ISuiteParser" sourceFile="ISuiteParser.java" interface="true" size="2" bugs="0"/>
      <ClassStats class="org.testng.xml.IWeaveXml" sourceFile="IWeaveXml.java" interface="true" size="3" bugs="0"/>
      <ClassStats class="org.testng.xml.LaunchSuite" sourceFile="LaunchSuite.java" interface="false" size="15" bugs="0"/>
      <ClassStats class="org.testng.xml.LaunchSuite$1" sourceFile="LaunchSuite.java" interface="false" size="1" bugs="0"/>
      <ClassStats class="org.testng.xml.LaunchSuite$ClassListSuite" sourceFile="LaunchSuite.java" interface="false" size="45" bugs="0"/>
      <ClassStats class="org.testng.xml.LaunchSuite$ClassesAndMethodsSuite" sourceFile="LaunchSuite.java" interface="false" size="42" bugs="0"/>
      <ClassStats class="org.testng.xml.LaunchSuite$CustomizedSuite" sourceFile="LaunchSuite.java" interface="false" size="48" bugs="0"/>
      <ClassStats class="org.testng.xml.LaunchSuite$ExistingSuite" sourceFile="LaunchSuite.java" interface="false" size="10" bugs="0"/>
      <ClassStats class="org.testng.xml.LaunchSuite$MethodsSuite" sourceFile="LaunchSuite.java" interface="false" size="32" bugs="0"/>
      <ClassStats class="org.testng.xml.Parser" sourceFile="Parser.java" interface="false" size="145" bugs="1" priority_2="1"/>
      <ClassStats class="org.testng.xml.SuiteGenerator" sourceFile="SuiteGenerator.java" interface="false" size="16" bugs="0"/>
      <ClassStats class="org.testng.xml.SuiteXmlParser" sourceFile="SuiteXmlParser.java" interface="false" size="12" bugs="0"/>
      <ClassStats class="org.testng.xml.TestNGContentHandler" sourceFile="TestNGContentHandler.java" interface="false" size="548" bugs="1" priority_2="1"/>
      <ClassStats class="org.testng.xml.TestNGContentHandler$1" sourceFile="TestNGContentHandler.java" interface="false" size="4" bugs="0"/>
      <ClassStats class="org.testng.xml.TestNGContentHandler$Include" sourceFile="TestNGContentHandler.java" interface="false" size="11" bugs="0"/>
      <ClassStats class="org.testng.xml.TestNGContentHandler$Location" sourceFile="TestNGContentHandler.java" interface="false" size="17" bugs="0"/>
      <ClassStats class="org.testng.xml.XMLParser" sourceFile="XMLParser.java" interface="false" size="31" bugs="1" priority_3="1"/>
      <ClassStats class="org.testng.xml.XmlClass" sourceFile="XmlClass.java" interface="false" size="160" bugs="7" priority_2="7"/>
      <ClassStats class="org.testng.xml.XmlDefine" sourceFile="XmlDefine.java" interface="false" size="40" bugs="1" priority_2="1"/>
      <ClassStats class="org.testng.xml.XmlDependencies" sourceFile="XmlDependencies.java" interface="false" size="21" bugs="1" priority_2="1"/>
      <ClassStats class="org.testng.xml.XmlGroups" sourceFile="XmlGroups.java" interface="false" size="43" bugs="3" priority_2="3"/>
      <ClassStats class="org.testng.xml.XmlInclude" sourceFile="XmlInclude.java" interface="false" size="90" bugs="4" priority_2="4"/>
      <ClassStats class="org.testng.xml.XmlMethodSelector" sourceFile="XmlMethodSelector.java" interface="false" size="92" bugs="2" priority_2="2"/>
      <ClassStats class="org.testng.xml.XmlMethodSelectors" sourceFile="XmlMethodSelectors.java" interface="false" size="19" bugs="1" priority_2="1"/>
      <ClassStats class="org.testng.xml.XmlPackage" sourceFile="XmlPackage.java" interface="false" size="88" bugs="5" priority_2="5"/>
      <ClassStats class="org.testng.xml.XmlRun" sourceFile="XmlRun.java" interface="false" size="31" bugs="2" priority_2="2"/>
      <ClassStats class="org.testng.xml.XmlScript" sourceFile="XmlScript.java" interface="false" size="15" bugs="0"/>
      <ClassStats class="org.testng.xml.XmlSuite" sourceFile="XmlSuite.java" interface="false" size="475" bugs="25" priority_3="1" priority_2="24"/>
      <ClassStats class="org.testng.xml.XmlSuite$FailurePolicy" sourceFile="XmlSuite.java" interface="false" size="23" bugs="1" priority_3="1"/>
      <ClassStats class="org.testng.xml.XmlSuite$ParallelMode" sourceFile="XmlSuite.java" interface="false" size="48" bugs="1" priority_3="1"/>
      <ClassStats class="org.testng.xml.XmlTest" sourceFile="XmlTest.java" interface="false" size="421" bugs="15" priority_2="15"/>
      <ClassStats class="org.testng.xml.XmlUtils" sourceFile="XmlUtils.java" interface="false" size="25" bugs="0"/>
      <ClassStats class="org.testng.xml.XmlWeaver" sourceFile="XmlWeaver.java" interface="false" size="46" bugs="1" priority_3="1"/>
    </PackageStats>
    <PackageStats package="org.testng.xml.internal" total_bugs="3" total_types="2" total_size="100" priority_2="3">
      <ClassStats class="org.testng.xml.internal.TestNamesMatcher" sourceFile="TestNamesMatcher.java" interface="false" size="50" bugs="3" priority_2="3"/>
      <ClassStats class="org.testng.xml.internal.XmlSuiteUtils" sourceFile="XmlSuiteUtils.java" interface="false" size="50" bugs="0"/>
    </PackageStats>
    <FindBugsProfile>
      <ClassProfile name="edu.umd.cs.findbugs.ba.npe.NullDerefAndRedundantComparisonFinder" totalMilliseconds="442" invocations="3818" avgMicrosecondsPerInvocation="115" maxMicrosecondsPerInvocation="5876" standardDeviationMicrosecondsPerInvocation="262"/>
      <ClassProfile name="edu.umd.cs.findbugs.classfile.engine.bcel.IsNullValueDataflowFactory" totalMilliseconds="442" invocations="3859" avgMicrosecondsPerInvocation="114" maxMicrosecondsPerInvocation="7496" standardDeviationMicrosecondsPerInvocation="263"/>
      <ClassProfile name="edu.umd.cs.findbugs.classfile.engine.bcel.UnconditionalValueDerefDataflowFactory" totalMilliseconds="439" invocations="3837" avgMicrosecondsPerInvocation="114" maxMicrosecondsPerInvocation="13291" standardDeviationMicrosecondsPerInvocation="477"/>
      <ClassProfile name="edu.umd.cs.findbugs.classfile.engine.ClassInfoAnalysisEngine" totalMilliseconds="413" invocations="2084" avgMicrosecondsPerInvocation="198" maxMicrosecondsPerInvocation="20555" standardDeviationMicrosecondsPerInvocation="617"/>
      <ClassProfile name="edu.umd.cs.findbugs.classfile.engine.bcel.ValueNumberDataflowFactory" totalMilliseconds="387" invocations="4001" avgMicrosecondsPerInvocation="96" maxMicrosecondsPerInvocation="7812" standardDeviationMicrosecondsPerInvocation="297"/>
      <ClassProfile name="edu.umd.cs.findbugs.classfile.engine.bcel.TypeDataflowFactory" totalMilliseconds="371" invocations="3958" avgMicrosecondsPerInvocation="93" maxMicrosecondsPerInvocation="6633" standardDeviationMicrosecondsPerInvocation="239"/>
      <ClassProfile name="edu.umd.cs.findbugs.OpcodeStack$JumpInfoFactory" totalMilliseconds="258" invocations="5086" avgMicrosecondsPerInvocation="50" maxMicrosecondsPerInvocation="4523" standardDeviationMicrosecondsPerInvocation="129"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.FindRefComparison$SpecialTypeAnalysis" totalMilliseconds="245" invocations="2885" avgMicrosecondsPerInvocation="85" maxMicrosecondsPerInvocation="2200" standardDeviationMicrosecondsPerInvocation="167"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.FindNoSideEffectMethods" totalMilliseconds="242" invocations="821" avgMicrosecondsPerInvocation="295" maxMicrosecondsPerInvocation="13079" standardDeviationMicrosecondsPerInvocation="729"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.FieldItemSummary" totalMilliseconds="239" invocations="821" avgMicrosecondsPerInvocation="291" maxMicrosecondsPerInvocation="7207" standardDeviationMicrosecondsPerInvocation="645"/>
      <ClassProfile name="edu.umd.cs.findbugs.classfile.engine.bcel.CFGFactory" totalMilliseconds="231" invocations="3859" avgMicrosecondsPerInvocation="60" maxMicrosecondsPerInvocation="5874" standardDeviationMicrosecondsPerInvocation="155"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.ConstructorThrow" totalMilliseconds="118" invocations="552" avgMicrosecondsPerInvocation="214" maxMicrosecondsPerInvocation="4192" standardDeviationMicrosecondsPerInvocation="439"/>
      <ClassProfile name="edu.umd.cs.findbugs.classfile.engine.bcel.ConstantDataflowFactory" totalMilliseconds="113" invocations="3859" avgMicrosecondsPerInvocation="29" maxMicrosecondsPerInvocation="9938" standardDeviationMicrosecondsPerInvocation="174"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.NoteDirectlyRelevantTypeQualifiers" totalMilliseconds="96" invocations="821" avgMicrosecondsPerInvocation="117" maxMicrosecondsPerInvocation="3084" standardDeviationMicrosecondsPerInvocation="260"/>
      <ClassProfile name="edu.umd.cs.findbugs.classfile.engine.bcel.MethodGenFactory" totalMilliseconds="94" invocations="4393" avgMicrosecondsPerInvocation="21" maxMicrosecondsPerInvocation="14009" standardDeviationMicrosecondsPerInvocation="213"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.FindOpenStream" totalMilliseconds="92" invocations="552" avgMicrosecondsPerInvocation="168" maxMicrosecondsPerInvocation="18595" standardDeviationMicrosecondsPerInvocation="966"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.LoadOfKnownNullValue" totalMilliseconds="78" invocations="552" avgMicrosecondsPerInvocation="142" maxMicrosecondsPerInvocation="3293" standardDeviationMicrosecondsPerInvocation="318"/>
      <ClassProfile name="edu.umd.cs.findbugs.ba.npe.TypeQualifierNullnessAnnotationDatabase" totalMilliseconds="75" invocations="156220" avgMicrosecondsPerInvocation="0" maxMicrosecondsPerInvocation="766" standardDeviationMicrosecondsPerInvocation="3"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.UnreadFields" totalMilliseconds="73" invocations="552" avgMicrosecondsPerInvocation="133" maxMicrosecondsPerInvocation="3110" standardDeviationMicrosecondsPerInvocation="254"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.CalledMethods" totalMilliseconds="72" invocations="821" avgMicrosecondsPerInvocation="88" maxMicrosecondsPerInvocation="2976" standardDeviationMicrosecondsPerInvocation="205"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.FindReturnRef" totalMilliseconds="69" invocations="552" avgMicrosecondsPerInvocation="125" maxMicrosecondsPerInvocation="5698" standardDeviationMicrosecondsPerInvocation="350"/>
      <ClassProfile name="edu.umd.cs.findbugs.classfile.engine.ClassDataAnalysisEngine" totalMilliseconds="63" invocations="2093" avgMicrosecondsPerInvocation="30" maxMicrosecondsPerInvocation="1705" standardDeviationMicrosecondsPerInvocation="74"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.FindNullDeref$CheckCallSitesAndReturnInstructions" totalMilliseconds="62" invocations="3818" avgMicrosecondsPerInvocation="16" maxMicrosecondsPerInvocation="9548" standardDeviationMicrosecondsPerInvocation="156"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.DumbMethods" totalMilliseconds="61" invocations="552" avgMicrosecondsPerInvocation="112" maxMicrosecondsPerInvocation="1926" standardDeviationMicrosecondsPerInvocation="212"/>
      <ClassProfile name="edu.umd.cs.findbugs.classfile.engine.bcel.JavaClassAnalysisEngine" totalMilliseconds="59" invocations="983" avgMicrosecondsPerInvocation="60" maxMicrosecondsPerInvocation="10653" standardDeviationMicrosecondsPerInvocation="352"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.FindInconsistentSync2" totalMilliseconds="57" invocations="552" avgMicrosecondsPerInvocation="103" maxMicrosecondsPerInvocation="1977" standardDeviationMicrosecondsPerInvocation="202"/>
      <ClassProfile name="edu.umd.cs.findbugs.classfile.engine.bcel.LiveLocalStoreDataflowFactory" totalMilliseconds="56" invocations="3676" avgMicrosecondsPerInvocation="15" maxMicrosecondsPerInvocation="1078" standardDeviationMicrosecondsPerInvocation="41"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.EqualsOperandShouldHaveClassCompatibleWithThis" totalMilliseconds="56" invocations="821" avgMicrosecondsPerInvocation="68" maxMicrosecondsPerInvocation="18643" standardDeviationMicrosecondsPerInvocation="765"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.FunctionsThatMightBeMistakenForProcedures" totalMilliseconds="54" invocations="821" avgMicrosecondsPerInvocation="66" maxMicrosecondsPerInvocation="11049" standardDeviationMicrosecondsPerInvocation="403"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.BuildStringPassthruGraph" totalMilliseconds="54" invocations="821" avgMicrosecondsPerInvocation="66" maxMicrosecondsPerInvocation="2764" standardDeviationMicrosecondsPerInvocation="188"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.StreamResourceTracker" totalMilliseconds="53" invocations="312" avgMicrosecondsPerInvocation="172" maxMicrosecondsPerInvocation="962" standardDeviationMicrosecondsPerInvocation="189"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.MethodReturnCheck" totalMilliseconds="52" invocations="552" avgMicrosecondsPerInvocation="94" maxMicrosecondsPerInvocation="1423" standardDeviationMicrosecondsPerInvocation="185"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.BuildObligationPolicyDatabase" totalMilliseconds="51" invocations="821" avgMicrosecondsPerInvocation="62" maxMicrosecondsPerInvocation="920" standardDeviationMicrosecondsPerInvocation="99"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.CheckRelaxingNullnessAnnotation" totalMilliseconds="50" invocations="552" avgMicrosecondsPerInvocation="91" maxMicrosecondsPerInvocation="13448" standardDeviationMicrosecondsPerInvocation="579"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.FindPublicAttributes" totalMilliseconds="49" invocations="552" avgMicrosecondsPerInvocation="90" maxMicrosecondsPerInvocation="9566" standardDeviationMicrosecondsPerInvocation="430"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.ReflectiveClasses" totalMilliseconds="49" invocations="821" avgMicrosecondsPerInvocation="59" maxMicrosecondsPerInvocation="2305" standardDeviationMicrosecondsPerInvocation="154"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.FindRefComparison" totalMilliseconds="48" invocations="552" avgMicrosecondsPerInvocation="88" maxMicrosecondsPerInvocation="1886" standardDeviationMicrosecondsPerInvocation="174"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.FindUselessObjects" totalMilliseconds="46" invocations="552" avgMicrosecondsPerInvocation="83" maxMicrosecondsPerInvocation="2191" standardDeviationMicrosecondsPerInvocation="190"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.FindBadCast2" totalMilliseconds="45" invocations="552" avgMicrosecondsPerInvocation="83" maxMicrosecondsPerInvocation="2962" standardDeviationMicrosecondsPerInvocation="240"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.OverridingEqualsNotSymmetrical" totalMilliseconds="45" invocations="821" avgMicrosecondsPerInvocation="54" maxMicrosecondsPerInvocation="4489" standardDeviationMicrosecondsPerInvocation="187"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.FindSelfComparison" totalMilliseconds="44" invocations="552" avgMicrosecondsPerInvocation="80" maxMicrosecondsPerInvocation="7347" standardDeviationMicrosecondsPerInvocation="342"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.FindHEmismatch" totalMilliseconds="43" invocations="552" avgMicrosecondsPerInvocation="79" maxMicrosecondsPerInvocation="1265" standardDeviationMicrosecondsPerInvocation="137"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.DefaultEncodingDetector" totalMilliseconds="43" invocations="552" avgMicrosecondsPerInvocation="79" maxMicrosecondsPerInvocation="2570" standardDeviationMicrosecondsPerInvocation="261"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.FindDeadLocalStores" totalMilliseconds="42" invocations="552" avgMicrosecondsPerInvocation="77" maxMicrosecondsPerInvocation="1413" standardDeviationMicrosecondsPerInvocation="158"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.FindPuzzlers" totalMilliseconds="42" invocations="552" avgMicrosecondsPerInvocation="76" maxMicrosecondsPerInvocation="1322" standardDeviationMicrosecondsPerInvocation="155"/>
      <ClassProfile name="edu.umd.cs.findbugs.classfile.engine.bcel.ValueRangeAnalysisFactory" totalMilliseconds="41" invocations="4383" avgMicrosecondsPerInvocation="9" maxMicrosecondsPerInvocation="1849" standardDeviationMicrosecondsPerInvocation="42"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.RuntimeExceptionCapture" totalMilliseconds="40" invocations="552" avgMicrosecondsPerInvocation="74" maxMicrosecondsPerInvocation="1313" standardDeviationMicrosecondsPerInvocation="152"/>
    </FindBugsProfile>
  </FindBugsSummary>
  <ClassFeatures></ClassFeatures>
  <History></History>
</BugCollection>
