<?xml version="1.0" encoding="UTF-8"?>

<BugCollection version="4.8.1" sequence="0" timestamp="1702013195179" analysisTimestamp="1702014764189" release="">
  <Project projectName="">
    <Jar>vul_jar\\commons-beanutils-1.9.3.jar</Jar>
  </Project>
  <BugInstance type="CT_CONSTRUCTOR_THROW" priority="2" rank="16" abbrev="CT" category="BAD_PRACTICE" instanceHash="2512d4fe23250ba7a32043ff4d201f5f" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Be wary of letting constructors throw exceptions.</ShortMessage>
    <LongMessage>Exception thrown in class org.apache.commons.beanutils.BaseDynaBeanMapDecorator at new org.apache.commons.beanutils.BaseDynaBeanMapDecorator(DynaBean, boolean) will leave the constructor. The object under construction remains partially initialized and may be vulnerable to Finalizer attacks.</LongMessage>
    <Class classname="org.apache.commons.beanutils.BaseDynaBeanMapDecorator" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.BaseDynaBeanMapDecorator" start="68" end="343" sourcefile="BaseDynaBeanMapDecorator.java" sourcepath="org/apache/commons/beanutils/BaseDynaBeanMapDecorator.java">
        <Message>At BaseDynaBeanMapDecorator.java:[lines 68-343]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.BaseDynaBeanMapDecorator</Message>
    </Class>
    <Method classname="org.apache.commons.beanutils.BaseDynaBeanMapDecorator" name="&lt;init&gt;" signature="(Lorg/apache/commons/beanutils/DynaBean;Z)V" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.BaseDynaBeanMapDecorator" start="79" end="85" startBytecode="0" endBytecode="150" sourcefile="BaseDynaBeanMapDecorator.java" sourcepath="org/apache/commons/beanutils/BaseDynaBeanMapDecorator.java"/>
      <Message>In method new org.apache.commons.beanutils.BaseDynaBeanMapDecorator(DynaBean, boolean)</Message>
    </Method>
    <SourceLine classname="org.apache.commons.beanutils.BaseDynaBeanMapDecorator" primary="true" start="81" end="81" startBytecode="17" endBytecode="17" sourcefile="BaseDynaBeanMapDecorator.java" sourcepath="org/apache/commons/beanutils/BaseDynaBeanMapDecorator.java">
      <Message>At BaseDynaBeanMapDecorator.java:[line 81]</Message>
    </SourceLine>
    <SourceLine classname="org.apache.commons.beanutils.BaseDynaBeanMapDecorator" start="81" end="81" startBytecode="17" endBytecode="17" sourcefile="BaseDynaBeanMapDecorator.java" sourcepath="org/apache/commons/beanutils/BaseDynaBeanMapDecorator.java">
      <Message>At BaseDynaBeanMapDecorator.java:[line 81]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="4ef7c31ce0d6967486276e18a120c0d6" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.apache.commons.beanutils.BaseDynaBeanMapDecorator.getDynaBean() may expose internal representation by returning BaseDynaBeanMapDecorator.dynaBean</LongMessage>
    <Class classname="org.apache.commons.beanutils.BaseDynaBeanMapDecorator" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.BaseDynaBeanMapDecorator" start="68" end="343" sourcefile="BaseDynaBeanMapDecorator.java" sourcepath="org/apache/commons/beanutils/BaseDynaBeanMapDecorator.java">
        <Message>At BaseDynaBeanMapDecorator.java:[lines 68-343]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.BaseDynaBeanMapDecorator</Message>
    </Class>
    <Method classname="org.apache.commons.beanutils.BaseDynaBeanMapDecorator" name="getDynaBean" signature="()Lorg/apache/commons/beanutils/DynaBean;" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.BaseDynaBeanMapDecorator" start="312" end="312" startBytecode="0" endBytecode="64" sourcefile="BaseDynaBeanMapDecorator.java" sourcepath="org/apache/commons/beanutils/BaseDynaBeanMapDecorator.java"/>
      <Message>In method org.apache.commons.beanutils.BaseDynaBeanMapDecorator.getDynaBean()</Message>
    </Method>
    <Field classname="org.apache.commons.beanutils.BaseDynaBeanMapDecorator" name="dynaBean" signature="Lorg/apache/commons/beanutils/DynaBean;" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.BaseDynaBeanMapDecorator" sourcefile="BaseDynaBeanMapDecorator.java" sourcepath="org/apache/commons/beanutils/BaseDynaBeanMapDecorator.java">
        <Message>In BaseDynaBeanMapDecorator.java</Message>
      </SourceLine>
      <Message>Field org.apache.commons.beanutils.BaseDynaBeanMapDecorator.dynaBean</Message>
    </Field>
    <SourceLine classname="org.apache.commons.beanutils.BaseDynaBeanMapDecorator" primary="true" start="312" end="312" startBytecode="4" endBytecode="4" sourcefile="BaseDynaBeanMapDecorator.java" sourcepath="org/apache/commons/beanutils/BaseDynaBeanMapDecorator.java">
      <Message>At BaseDynaBeanMapDecorator.java:[line 312]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="edc63e2e55b67646b95a2ce23a464b4f" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>new org.apache.commons.beanutils.BaseDynaBeanMapDecorator(DynaBean, boolean) may expose internal representation by storing an externally mutable object into BaseDynaBeanMapDecorator.dynaBean</LongMessage>
    <Class classname="org.apache.commons.beanutils.BaseDynaBeanMapDecorator" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.BaseDynaBeanMapDecorator" start="68" end="343" sourcefile="BaseDynaBeanMapDecorator.java" sourcepath="org/apache/commons/beanutils/BaseDynaBeanMapDecorator.java">
        <Message>At BaseDynaBeanMapDecorator.java:[lines 68-343]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.BaseDynaBeanMapDecorator</Message>
    </Class>
    <Method classname="org.apache.commons.beanutils.BaseDynaBeanMapDecorator" name="&lt;init&gt;" signature="(Lorg/apache/commons/beanutils/DynaBean;Z)V" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.BaseDynaBeanMapDecorator" start="79" end="85" startBytecode="0" endBytecode="150" sourcefile="BaseDynaBeanMapDecorator.java" sourcepath="org/apache/commons/beanutils/BaseDynaBeanMapDecorator.java"/>
      <Message>In method new org.apache.commons.beanutils.BaseDynaBeanMapDecorator(DynaBean, boolean)</Message>
    </Method>
    <Field classname="org.apache.commons.beanutils.BaseDynaBeanMapDecorator" name="dynaBean" signature="Lorg/apache/commons/beanutils/DynaBean;" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.BaseDynaBeanMapDecorator" sourcefile="BaseDynaBeanMapDecorator.java" sourcepath="org/apache/commons/beanutils/BaseDynaBeanMapDecorator.java">
        <Message>In BaseDynaBeanMapDecorator.java</Message>
      </SourceLine>
      <Message>Field org.apache.commons.beanutils.BaseDynaBeanMapDecorator.dynaBean</Message>
    </Field>
    <LocalVariable name="dynaBean" register="1" pc="20" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named dynaBean</Message>
    </LocalVariable>
    <SourceLine classname="org.apache.commons.beanutils.BaseDynaBeanMapDecorator" primary="true" start="83" end="83" startBytecode="20" endBytecode="20" sourcefile="BaseDynaBeanMapDecorator.java" sourcepath="org/apache/commons/beanutils/BaseDynaBeanMapDecorator.java">
      <Message>At BaseDynaBeanMapDecorator.java:[line 83]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DM_FP_NUMBER_CTOR" priority="3" rank="20" abbrev="Bx" category="PERFORMANCE" instanceHash="ee46dd466d3c0153d64ecb3e751e6b51" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Method invokes inefficient floating-point Number constructor; use static valueOf instead</ShortMessage>
    <LongMessage>org.apache.commons.beanutils.BasicDynaBean.get(String) invokes inefficient new Double(double) constructor; use Double.valueOf(double) instead</LongMessage>
    <Class classname="org.apache.commons.beanutils.BasicDynaBean" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.BasicDynaBean" start="57" end="438" sourcefile="BasicDynaBean.java" sourcepath="org/apache/commons/beanutils/BasicDynaBean.java">
        <Message>At BasicDynaBean.java:[lines 57-438]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.BasicDynaBean</Message>
    </Class>
    <Method classname="org.apache.commons.beanutils.BasicDynaBean" name="get" signature="(Ljava/lang/String;)Ljava/lang/Object;" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.BasicDynaBean" start="144" end="173" startBytecode="0" endBytecode="363" sourcefile="BasicDynaBean.java" sourcepath="org/apache/commons/beanutils/BasicDynaBean.java"/>
      <Message>In method org.apache.commons.beanutils.BasicDynaBean.get(String)</Message>
    </Method>
    <Method classname="java.lang.Double" name="&lt;init&gt;" signature="(D)V" isStatic="false" role="METHOD_CALLED" classAnnotationNames="jdk.internal.ValueBased">
      <SourceLine classname="java.lang.Double" start="711" end="713" startBytecode="0" endBytecode="69" sourcefile="Double.java" sourcepath="java/lang/Double.java"/>
      <Message>Called method new Double(double)</Message>
    </Method>
    <Method classname="java.lang.Double" name="valueOf" signature="(D)Ljava/lang/Double;" isStatic="true" role="SHOULD_CALL" classAnnotationNames="jdk.internal.ValueBased">
      <SourceLine classname="java.lang.Double" start="632" end="632" startBytecode="0" endBytecode="50" sourcefile="Double.java" sourcepath="java/lang/Double.java"/>
      <Message>Should call Double.valueOf(double) instead</Message>
    </Method>
    <SourceLine classname="org.apache.commons.beanutils.BasicDynaBean" primary="true" start="163" end="163" startBytecode="88" endBytecode="88" sourcefile="BasicDynaBean.java" sourcepath="org/apache/commons/beanutils/BasicDynaBean.java">
      <Message>At BasicDynaBean.java:[line 163]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DM_FP_NUMBER_CTOR" priority="3" rank="20" abbrev="Bx" category="PERFORMANCE" instanceHash="80fbcc854a0a6f3e48c1a119b59ffc58" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Method invokes inefficient floating-point Number constructor; use static valueOf instead</ShortMessage>
    <LongMessage>org.apache.commons.beanutils.BasicDynaBean.get(String) invokes inefficient new Float(float) constructor; use Float.valueOf(float) instead</LongMessage>
    <Class classname="org.apache.commons.beanutils.BasicDynaBean" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.BasicDynaBean" start="57" end="438" sourcefile="BasicDynaBean.java" sourcepath="org/apache/commons/beanutils/BasicDynaBean.java">
        <Message>At BasicDynaBean.java:[lines 57-438]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.BasicDynaBean</Message>
    </Class>
    <Method classname="org.apache.commons.beanutils.BasicDynaBean" name="get" signature="(Ljava/lang/String;)Ljava/lang/Object;" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.BasicDynaBean" start="144" end="173" startBytecode="0" endBytecode="363" sourcefile="BasicDynaBean.java" sourcepath="org/apache/commons/beanutils/BasicDynaBean.java"/>
      <Message>In method org.apache.commons.beanutils.BasicDynaBean.get(String)</Message>
    </Method>
    <Method classname="java.lang.Float" name="&lt;init&gt;" signature="(F)V" isStatic="false" role="METHOD_CALLED" classAnnotationNames="jdk.internal.ValueBased">
      <SourceLine classname="java.lang.Float" start="537" end="539" startBytecode="0" endBytecode="69" sourcefile="Float.java" sourcepath="java/lang/Float.java"/>
      <Message>Called method new Float(float)</Message>
    </Method>
    <Method classname="java.lang.Float" name="valueOf" signature="(F)Ljava/lang/Float;" isStatic="true" role="SHOULD_CALL" classAnnotationNames="jdk.internal.ValueBased">
      <SourceLine classname="java.lang.Float" start="458" end="458" startBytecode="0" endBytecode="50" sourcefile="Float.java" sourcepath="java/lang/Float.java"/>
      <Message>Should call Float.valueOf(float) instead</Message>
    </Method>
    <SourceLine classname="org.apache.commons.beanutils.BasicDynaBean" primary="true" start="165" end="165" startBytecode="104" endBytecode="104" sourcefile="BasicDynaBean.java" sourcepath="org/apache/commons/beanutils/BasicDynaBean.java">
      <Message>At BasicDynaBean.java:[line 165]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DM_NUMBER_CTOR" priority="2" rank="18" abbrev="Bx" category="PERFORMANCE" instanceHash="47f4b4aed401767cc3990960f3875282" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Method invokes inefficient Number constructor; use static valueOf instead</ShortMessage>
    <LongMessage>org.apache.commons.beanutils.BasicDynaBean.get(String) invokes inefficient new Byte(byte) constructor; use Byte.valueOf(byte) instead</LongMessage>
    <Class classname="org.apache.commons.beanutils.BasicDynaBean" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.BasicDynaBean" start="57" end="438" sourcefile="BasicDynaBean.java" sourcepath="org/apache/commons/beanutils/BasicDynaBean.java">
        <Message>At BasicDynaBean.java:[lines 57-438]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.BasicDynaBean</Message>
    </Class>
    <Method classname="org.apache.commons.beanutils.BasicDynaBean" name="get" signature="(Ljava/lang/String;)Ljava/lang/Object;" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.BasicDynaBean" start="144" end="173" startBytecode="0" endBytecode="363" sourcefile="BasicDynaBean.java" sourcepath="org/apache/commons/beanutils/BasicDynaBean.java"/>
      <Message>In method org.apache.commons.beanutils.BasicDynaBean.get(String)</Message>
    </Method>
    <Method classname="java.lang.Byte" name="&lt;init&gt;" signature="(B)V" isStatic="false" role="METHOD_CALLED" classAnnotationNames="jdk.internal.ValueBased">
      <SourceLine classname="java.lang.Byte" start="348" end="350" startBytecode="0" endBytecode="69" sourcefile="Byte.java" sourcepath="java/lang/Byte.java"/>
      <Message>Called method new Byte(byte)</Message>
    </Method>
    <Method classname="java.lang.Byte" name="valueOf" signature="(B)Ljava/lang/Byte;" isStatic="true" role="SHOULD_CALL" classAnnotationNames="jdk.internal.ValueBased">
      <SourceLine classname="java.lang.Byte" start="146" end="147" startBytecode="0" endBytecode="69" sourcefile="Byte.java" sourcepath="java/lang/Byte.java"/>
      <Message>Should call Byte.valueOf(byte) instead</Message>
    </Method>
    <SourceLine classname="org.apache.commons.beanutils.BasicDynaBean" primary="true" start="159" end="159" startBytecode="56" endBytecode="56" sourcefile="BasicDynaBean.java" sourcepath="org/apache/commons/beanutils/BasicDynaBean.java">
      <Message>At BasicDynaBean.java:[line 159]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DM_NUMBER_CTOR" priority="2" rank="18" abbrev="Bx" category="PERFORMANCE" instanceHash="2fbeafbefd69da6b0123cbae33fc45c6" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Method invokes inefficient Number constructor; use static valueOf instead</ShortMessage>
    <LongMessage>org.apache.commons.beanutils.BasicDynaBean.get(String) invokes inefficient new Character(char) constructor; use Character.valueOf(char) instead</LongMessage>
    <Class classname="org.apache.commons.beanutils.BasicDynaBean" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.BasicDynaBean" start="57" end="438" sourcefile="BasicDynaBean.java" sourcepath="org/apache/commons/beanutils/BasicDynaBean.java">
        <Message>At BasicDynaBean.java:[lines 57-438]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.BasicDynaBean</Message>
    </Class>
    <Method classname="org.apache.commons.beanutils.BasicDynaBean" name="get" signature="(Ljava/lang/String;)Ljava/lang/Object;" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.BasicDynaBean" start="144" end="173" startBytecode="0" endBytecode="363" sourcefile="BasicDynaBean.java" sourcepath="org/apache/commons/beanutils/BasicDynaBean.java"/>
      <Message>In method org.apache.commons.beanutils.BasicDynaBean.get(String)</Message>
    </Method>
    <Method classname="java.lang.Character" name="&lt;init&gt;" signature="(C)V" isStatic="false" role="METHOD_CALLED" classAnnotationNames="jdk.internal.ValueBased">
      <SourceLine classname="java.lang.Character" start="8548" end="8550" startBytecode="0" endBytecode="69" sourcefile="Character.java" sourcepath="java/lang/Character.java"/>
      <Message>Called method new Character(char)</Message>
    </Method>
    <Method classname="java.lang.Character" name="valueOf" signature="(C)Ljava/lang/Character;" isStatic="true" role="SHOULD_CALL" classAnnotationNames="jdk.internal.ValueBased">
      <SourceLine classname="java.lang.Character" start="8593" end="8596" startBytecode="0" endBytecode="79" sourcefile="Character.java" sourcepath="java/lang/Character.java"/>
      <Message>Should call Character.valueOf(char) instead</Message>
    </Method>
    <SourceLine classname="org.apache.commons.beanutils.BasicDynaBean" primary="true" start="161" end="161" startBytecode="72" endBytecode="72" sourcefile="BasicDynaBean.java" sourcepath="org/apache/commons/beanutils/BasicDynaBean.java">
      <Message>At BasicDynaBean.java:[line 161]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DM_NUMBER_CTOR" priority="2" rank="18" abbrev="Bx" category="PERFORMANCE" instanceHash="96f816f6f8c2bb1f1d59ebec32dd68ec" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Method invokes inefficient Number constructor; use static valueOf instead</ShortMessage>
    <LongMessage>org.apache.commons.beanutils.BasicDynaBean.get(String) invokes inefficient new Integer(int) constructor; use Integer.valueOf(int) instead</LongMessage>
    <Class classname="org.apache.commons.beanutils.BasicDynaBean" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.BasicDynaBean" start="57" end="438" sourcefile="BasicDynaBean.java" sourcepath="org/apache/commons/beanutils/BasicDynaBean.java">
        <Message>At BasicDynaBean.java:[lines 57-438]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.BasicDynaBean</Message>
    </Class>
    <Method classname="org.apache.commons.beanutils.BasicDynaBean" name="get" signature="(Ljava/lang/String;)Ljava/lang/Object;" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.BasicDynaBean" start="144" end="173" startBytecode="0" endBytecode="363" sourcefile="BasicDynaBean.java" sourcepath="org/apache/commons/beanutils/BasicDynaBean.java"/>
      <Message>In method org.apache.commons.beanutils.BasicDynaBean.get(String)</Message>
    </Method>
    <Method classname="java.lang.Integer" name="&lt;init&gt;" signature="(I)V" isStatic="false" role="METHOD_CALLED" classAnnotationNames="jdk.internal.ValueBased">
      <SourceLine classname="java.lang.Integer" start="1104" end="1106" startBytecode="0" endBytecode="69" sourcefile="Integer.java" sourcepath="java/lang/Integer.java"/>
      <Message>Called method new Integer(int)</Message>
    </Method>
    <Method classname="java.lang.Integer" name="valueOf" signature="(I)Ljava/lang/Integer;" isStatic="true" role="SHOULD_CALL" classAnnotationNames="jdk.internal.ValueBased">
      <SourceLine classname="java.lang.Integer" start="1079" end="1081" startBytecode="0" endBytecode="90" sourcefile="Integer.java" sourcepath="java/lang/Integer.java"/>
      <Message>Should call Integer.valueOf(int) instead</Message>
    </Method>
    <SourceLine classname="org.apache.commons.beanutils.BasicDynaBean" primary="true" start="167" end="167" startBytecode="120" endBytecode="120" sourcefile="BasicDynaBean.java" sourcepath="org/apache/commons/beanutils/BasicDynaBean.java">
      <Message>At BasicDynaBean.java:[line 167]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DM_NUMBER_CTOR" priority="2" rank="18" abbrev="Bx" category="PERFORMANCE" instanceHash="6568a3e9dccf41ab1328cbb3144764b" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Method invokes inefficient Number constructor; use static valueOf instead</ShortMessage>
    <LongMessage>org.apache.commons.beanutils.BasicDynaBean.get(String) invokes inefficient new Long(long) constructor; use Long.valueOf(long) instead</LongMessage>
    <Class classname="org.apache.commons.beanutils.BasicDynaBean" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.BasicDynaBean" start="57" end="438" sourcefile="BasicDynaBean.java" sourcepath="org/apache/commons/beanutils/BasicDynaBean.java">
        <Message>At BasicDynaBean.java:[lines 57-438]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.BasicDynaBean</Message>
    </Class>
    <Method classname="org.apache.commons.beanutils.BasicDynaBean" name="get" signature="(Ljava/lang/String;)Ljava/lang/Object;" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.BasicDynaBean" start="144" end="173" startBytecode="0" endBytecode="363" sourcefile="BasicDynaBean.java" sourcepath="org/apache/commons/beanutils/BasicDynaBean.java"/>
      <Message>In method org.apache.commons.beanutils.BasicDynaBean.get(String)</Message>
    </Method>
    <Method classname="java.lang.Long" name="&lt;init&gt;" signature="(J)V" isStatic="false" role="METHOD_CALLED" classAnnotationNames="jdk.internal.ValueBased">
      <SourceLine classname="java.lang.Long" start="1324" end="1326" startBytecode="0" endBytecode="69" sourcefile="Long.java" sourcepath="java/lang/Long.java"/>
      <Message>Called method new Long(long)</Message>
    </Method>
    <Method classname="java.lang.Long" name="valueOf" signature="(J)Ljava/lang/Long;" isStatic="true" role="SHOULD_CALL" classAnnotationNames="jdk.internal.ValueBased">
      <SourceLine classname="java.lang.Long" start="1207" end="1211" startBytecode="0" endBytecode="115" sourcefile="Long.java" sourcepath="java/lang/Long.java"/>
      <Message>Should call Long.valueOf(long) instead</Message>
    </Method>
    <SourceLine classname="org.apache.commons.beanutils.BasicDynaBean" primary="true" start="169" end="169" startBytecode="136" endBytecode="136" sourcefile="BasicDynaBean.java" sourcepath="org/apache/commons/beanutils/BasicDynaBean.java">
      <Message>At BasicDynaBean.java:[line 169]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DM_NUMBER_CTOR" priority="2" rank="18" abbrev="Bx" category="PERFORMANCE" instanceHash="3dd7bbc5d279aa719db92626e5c3b323" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Method invokes inefficient Number constructor; use static valueOf instead</ShortMessage>
    <LongMessage>org.apache.commons.beanutils.BasicDynaBean.get(String) invokes inefficient new Short(short) constructor; use Short.valueOf(short) instead</LongMessage>
    <Class classname="org.apache.commons.beanutils.BasicDynaBean" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.BasicDynaBean" start="57" end="438" sourcefile="BasicDynaBean.java" sourcepath="org/apache/commons/beanutils/BasicDynaBean.java">
        <Message>At BasicDynaBean.java:[lines 57-438]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.BasicDynaBean</Message>
    </Class>
    <Method classname="org.apache.commons.beanutils.BasicDynaBean" name="get" signature="(Ljava/lang/String;)Ljava/lang/Object;" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.BasicDynaBean" start="144" end="173" startBytecode="0" endBytecode="363" sourcefile="BasicDynaBean.java" sourcepath="org/apache/commons/beanutils/BasicDynaBean.java"/>
      <Message>In method org.apache.commons.beanutils.BasicDynaBean.get(String)</Message>
    </Method>
    <Method classname="java.lang.Short" name="&lt;init&gt;" signature="(S)V" isStatic="false" role="METHOD_CALLED" classAnnotationNames="jdk.internal.ValueBased">
      <SourceLine classname="java.lang.Short" start="353" end="355" startBytecode="0" endBytecode="69" sourcefile="Short.java" sourcepath="java/lang/Short.java"/>
      <Message>Called method new Short(short)</Message>
    </Method>
    <Method classname="java.lang.Short" name="valueOf" signature="(S)Ljava/lang/Short;" isStatic="true" role="SHOULD_CALL" classAnnotationNames="jdk.internal.ValueBased">
      <SourceLine classname="java.lang.Short" start="275" end="280" startBytecode="0" endBytecode="127" sourcefile="Short.java" sourcepath="java/lang/Short.java"/>
      <Message>Should call Short.valueOf(short) instead</Message>
    </Method>
    <SourceLine classname="org.apache.commons.beanutils.BasicDynaBean" primary="true" start="171" end="171" startBytecode="152" endBytecode="152" sourcefile="BasicDynaBean.java" sourcepath="org/apache/commons/beanutils/BasicDynaBean.java">
      <Message>At BasicDynaBean.java:[line 171]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="e78e467b40682c422d946434c90128b1" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.apache.commons.beanutils.BasicDynaBean.getMap() may expose internal representation by returning BasicDynaBean.mapDecorator</LongMessage>
    <Class classname="org.apache.commons.beanutils.BasicDynaBean" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.BasicDynaBean" start="57" end="438" sourcefile="BasicDynaBean.java" sourcepath="org/apache/commons/beanutils/BasicDynaBean.java">
        <Message>At BasicDynaBean.java:[lines 57-438]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.BasicDynaBean</Message>
    </Class>
    <Method classname="org.apache.commons.beanutils.BasicDynaBean" name="getMap" signature="()Ljava/util/Map;" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.BasicDynaBean" start="94" end="97" startBytecode="0" endBytecode="82" sourcefile="BasicDynaBean.java" sourcepath="org/apache/commons/beanutils/BasicDynaBean.java"/>
      <Message>In method org.apache.commons.beanutils.BasicDynaBean.getMap()</Message>
    </Method>
    <Field classname="org.apache.commons.beanutils.BasicDynaBean" name="mapDecorator" signature="Ljava/util/Map;" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.BasicDynaBean" sourcefile="BasicDynaBean.java" sourcepath="org/apache/commons/beanutils/BasicDynaBean.java">
        <Message>In BasicDynaBean.java</Message>
      </SourceLine>
      <Message>Field org.apache.commons.beanutils.BasicDynaBean.mapDecorator</Message>
    </Field>
    <SourceLine classname="org.apache.commons.beanutils.BasicDynaBean" primary="true" start="97" end="97" startBytecode="23" endBytecode="23" sourcefile="BasicDynaBean.java" sourcepath="org/apache/commons/beanutils/BasicDynaBean.java">
      <Message>At BasicDynaBean.java:[line 97]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="SE_BAD_FIELD" priority="3" rank="19" abbrev="Se" category="BAD_PRACTICE" instanceHash="48b58cd51b0520001ca0f3668a5f43a0" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Non-transient non-serializable instance field in serializable class</ShortMessage>
    <LongMessage>Class org.apache.commons.beanutils.BasicDynaBean defines non-transient non-serializable instance field dynaClass</LongMessage>
    <Class classname="org.apache.commons.beanutils.BasicDynaBean" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.BasicDynaBean" start="57" end="438" sourcefile="BasicDynaBean.java" sourcepath="org/apache/commons/beanutils/BasicDynaBean.java">
        <Message>At BasicDynaBean.java:[lines 57-438]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.BasicDynaBean</Message>
    </Class>
    <Field classname="org.apache.commons.beanutils.BasicDynaBean" name="dynaClass" signature="Lorg/apache/commons/beanutils/DynaClass;" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.BasicDynaBean" sourcefile="BasicDynaBean.java" sourcepath="org/apache/commons/beanutils/BasicDynaBean.java">
        <Message>In BasicDynaBean.java</Message>
      </SourceLine>
      <Message>Field org.apache.commons.beanutils.BasicDynaBean.dynaClass</Message>
    </Field>
    <Type descriptor="Lorg/apache/commons/beanutils/DynaClass;" role="TYPE_FOUND">
      <SourceLine classname="org.apache.commons.beanutils.DynaClass" sourcefile="DynaClass.java" sourcepath="org/apache/commons/beanutils/DynaClass.java">
        <Message>In DynaClass.java</Message>
      </SourceLine>
      <Message>Actual type org.apache.commons.beanutils.DynaClass</Message>
    </Type>
    <SourceLine classname="org.apache.commons.beanutils.BasicDynaBean" sourcefile="BasicDynaBean.java" sourcepath="org/apache/commons/beanutils/BasicDynaBean.java" synthetic="true">
      <Message>In BasicDynaBean.java</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="SE_NO_SERIALVERSIONID" priority="2" rank="16" abbrev="SnVI" category="BAD_PRACTICE" instanceHash="784a06f9043d7559b858e0c99902e441" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Class is Serializable, but doesn&apos;t define serialVersionUID</ShortMessage>
    <LongMessage>org.apache.commons.beanutils.BasicDynaBean is Serializable; consider declaring a serialVersionUID</LongMessage>
    <Class classname="org.apache.commons.beanutils.BasicDynaBean" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.BasicDynaBean" start="57" end="438" sourcefile="BasicDynaBean.java" sourcepath="org/apache/commons/beanutils/BasicDynaBean.java">
        <Message>At BasicDynaBean.java:[lines 57-438]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.BasicDynaBean</Message>
    </Class>
    <SourceLine classname="org.apache.commons.beanutils.BasicDynaBean" start="57" end="438" sourcefile="BasicDynaBean.java" sourcepath="org/apache/commons/beanutils/BasicDynaBean.java" synthetic="true">
      <Message>At BasicDynaBean.java:[lines 57-438]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="SE_TRANSIENT_FIELD_NOT_RESTORED" priority="3" rank="19" abbrev="Se" category="BAD_PRACTICE" instanceHash="ea9483827f85a010b015bd8856886c89" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Transient field that isn&apos;t set by deserialization.</ShortMessage>
    <LongMessage>The field org.apache.commons.beanutils.BasicDynaBean.mapDecorator is transient but isn&apos;t set by deserialization</LongMessage>
    <Class classname="org.apache.commons.beanutils.BasicDynaBean" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.BasicDynaBean" start="57" end="438" sourcefile="BasicDynaBean.java" sourcepath="org/apache/commons/beanutils/BasicDynaBean.java">
        <Message>At BasicDynaBean.java:[lines 57-438]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.BasicDynaBean</Message>
    </Class>
    <Field classname="org.apache.commons.beanutils.BasicDynaBean" name="mapDecorator" signature="Ljava/util/Map;" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.BasicDynaBean" sourcefile="BasicDynaBean.java" sourcepath="org/apache/commons/beanutils/BasicDynaBean.java">
        <Message>In BasicDynaBean.java</Message>
      </SourceLine>
      <Message>Field org.apache.commons.beanutils.BasicDynaBean.mapDecorator</Message>
    </Field>
    <SourceLine classname="org.apache.commons.beanutils.BasicDynaBean" sourcefile="BasicDynaBean.java" sourcepath="org/apache/commons/beanutils/BasicDynaBean.java" synthetic="true">
      <Message>In BasicDynaBean.java</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="d2870759265262e9dcc7d70986416149" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.apache.commons.beanutils.BasicDynaClass.getDynaProperties() may expose internal representation by returning BasicDynaClass.properties</LongMessage>
    <Class classname="org.apache.commons.beanutils.BasicDynaClass" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.BasicDynaClass" start="50" end="300" sourcefile="BasicDynaClass.java" sourcepath="org/apache/commons/beanutils/BasicDynaClass.java">
        <Message>At BasicDynaClass.java:[lines 50-300]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.BasicDynaClass</Message>
    </Class>
    <Method classname="org.apache.commons.beanutils.BasicDynaClass" name="getDynaProperties" signature="()[Lorg/apache/commons/beanutils/DynaProperty;" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.BasicDynaClass" start="196" end="196" startBytecode="0" endBytecode="46" sourcefile="BasicDynaClass.java" sourcepath="org/apache/commons/beanutils/BasicDynaClass.java"/>
      <Message>In method org.apache.commons.beanutils.BasicDynaClass.getDynaProperties()</Message>
    </Method>
    <Field classname="org.apache.commons.beanutils.BasicDynaClass" name="properties" signature="[Lorg/apache/commons/beanutils/DynaProperty;" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.BasicDynaClass" sourcefile="BasicDynaClass.java" sourcepath="org/apache/commons/beanutils/BasicDynaClass.java">
        <Message>In BasicDynaClass.java</Message>
      </SourceLine>
      <Message>Field org.apache.commons.beanutils.BasicDynaClass.properties</Message>
    </Field>
    <SourceLine classname="org.apache.commons.beanutils.BasicDynaClass" primary="true" start="196" end="196" startBytecode="4" endBytecode="4" sourcefile="BasicDynaClass.java" sourcepath="org/apache/commons/beanutils/BasicDynaClass.java">
      <Message>At BasicDynaClass.java:[line 196]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="MS_FINAL_PKGPROTECT" priority="2" rank="18" abbrev="MS" category="MALICIOUS_CODE" instanceHash="fff43204ec589162c523caba0dff2fdf" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="218">
    <ShortMessage>Field should be both final and package protected</ShortMessage>
    <LongMessage>org.apache.commons.beanutils.BasicDynaClass.constructorTypes should be both final and package protected</LongMessage>
    <Class classname="org.apache.commons.beanutils.BasicDynaClass" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.BasicDynaClass" start="50" end="300" sourcefile="BasicDynaClass.java" sourcepath="org/apache/commons/beanutils/BasicDynaClass.java">
        <Message>At BasicDynaClass.java:[lines 50-300]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.BasicDynaClass</Message>
    </Class>
    <Field classname="org.apache.commons.beanutils.BasicDynaClass" name="constructorTypes" signature="[Ljava/lang/Class;" isStatic="true" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.BasicDynaClass" sourcefile="BasicDynaClass.java" sourcepath="org/apache/commons/beanutils/BasicDynaClass.java">
        <Message>In BasicDynaClass.java</Message>
      </SourceLine>
      <Message>Field org.apache.commons.beanutils.BasicDynaClass.constructorTypes</Message>
    </Field>
    <SourceLine classname="org.apache.commons.beanutils.BasicDynaClass" primary="true" start="107" end="107" startBytecode="9" endBytecode="9" sourcefile="BasicDynaClass.java" sourcepath="org/apache/commons/beanutils/BasicDynaClass.java">
      <Message>At BasicDynaClass.java:[line 107]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="SE_NO_SERIALVERSIONID" priority="2" rank="16" abbrev="SnVI" category="BAD_PRACTICE" instanceHash="965cdb22948524f2c8e4376534a182ac" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Class is Serializable, but doesn&apos;t define serialVersionUID</ShortMessage>
    <LongMessage>org.apache.commons.beanutils.BasicDynaClass is Serializable; consider declaring a serialVersionUID</LongMessage>
    <Class classname="org.apache.commons.beanutils.BasicDynaClass" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.BasicDynaClass" start="50" end="300" sourcefile="BasicDynaClass.java" sourcepath="org/apache/commons/beanutils/BasicDynaClass.java">
        <Message>At BasicDynaClass.java:[lines 50-300]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.BasicDynaClass</Message>
    </Class>
    <SourceLine classname="org.apache.commons.beanutils.BasicDynaClass" start="50" end="300" sourcefile="BasicDynaClass.java" sourcepath="org/apache/commons/beanutils/BasicDynaClass.java" synthetic="true">
      <Message>At BasicDynaClass.java:[lines 50-300]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="SE_BAD_FIELD" priority="3" rank="19" abbrev="Se" category="BAD_PRACTICE" instanceHash="f91d30cfc8da098f16860045ca3d369d" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Non-transient non-serializable instance field in serializable class</ShortMessage>
    <LongMessage>Class org.apache.commons.beanutils.BeanComparator defines non-transient non-serializable instance field comparator</LongMessage>
    <Class classname="org.apache.commons.beanutils.BeanComparator" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.BeanComparator" start="65" end="238" sourcefile="BeanComparator.java" sourcepath="org/apache/commons/beanutils/BeanComparator.java">
        <Message>At BeanComparator.java:[lines 65-238]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.BeanComparator</Message>
    </Class>
    <Field classname="org.apache.commons.beanutils.BeanComparator" name="comparator" signature="Ljava/util/Comparator;" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.BeanComparator" sourcefile="BeanComparator.java" sourcepath="org/apache/commons/beanutils/BeanComparator.java">
        <Message>In BeanComparator.java</Message>
      </SourceLine>
      <Message>Field org.apache.commons.beanutils.BeanComparator.comparator</Message>
    </Field>
    <Type descriptor="Ljava/util/Comparator;" role="TYPE_FOUND" typeParameters="&lt;?&gt;">
      <SourceLine classname="java.util.Comparator" start="115" end="536" sourcefile="Comparator.java" sourcepath="java/util/Comparator.java">
        <Message>At Comparator.java:[lines 115-536]</Message>
      </SourceLine>
      <Message>Actual type java.util.Comparator&lt;?&gt;</Message>
    </Type>
    <SourceLine classname="org.apache.commons.beanutils.BeanComparator" sourcefile="BeanComparator.java" sourcepath="org/apache/commons/beanutils/BeanComparator.java" synthetic="true">
      <Message>In BeanComparator.java</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="SE_NO_SERIALVERSIONID" priority="3" rank="19" abbrev="SnVI" category="BAD_PRACTICE" instanceHash="e37c5ddd029e6f0d891da853d4dda7c" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Class is Serializable, but doesn&apos;t define serialVersionUID</ShortMessage>
    <LongMessage>org.apache.commons.beanutils.BeanComparator is Serializable; consider declaring a serialVersionUID</LongMessage>
    <Class classname="org.apache.commons.beanutils.BeanComparator" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.BeanComparator" start="65" end="238" sourcefile="BeanComparator.java" sourcepath="org/apache/commons/beanutils/BeanComparator.java">
        <Message>At BeanComparator.java:[lines 65-238]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.BeanComparator</Message>
    </Class>
    <SourceLine classname="org.apache.commons.beanutils.BeanComparator" start="65" end="238" sourcefile="BeanComparator.java" sourcepath="org/apache/commons/beanutils/BeanComparator.java" synthetic="true">
      <Message>At BeanComparator.java:[lines 65-238]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DCN_NULLPOINTER_EXCEPTION" priority="2" rank="17" abbrev="DCN" category="STYLE" instanceHash="2bf19c183eaabc1315b84af03774d4e0" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>NullPointerException caught</ShortMessage>
    <LongMessage>Do not catch NullPointerException like in org.apache.commons.beanutils.BeanMap.get(Object)</LongMessage>
    <Class classname="org.apache.commons.beanutils.BeanMap" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.BeanMap" start="48" end="919" sourcefile="BeanMap.java" sourcepath="org/apache/commons/beanutils/BeanMap.java">
        <Message>At BeanMap.java:[lines 48-919]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.BeanMap</Message>
    </Class>
    <Method classname="org.apache.commons.beanutils.BeanMap" name="get" signature="(Ljava/lang/Object;)Ljava/lang/Object;" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.BeanMap" start="411" end="431" startBytecode="0" endBytecode="299" sourcefile="BeanMap.java" sourcepath="org/apache/commons/beanutils/BeanMap.java"/>
      <Message>In method org.apache.commons.beanutils.BeanMap.get(Object)</Message>
    </Method>
    <SourceLine classname="org.apache.commons.beanutils.BeanMap" primary="true" start="426" end="426" startBytecode="56" endBytecode="56" sourcefile="BeanMap.java" sourcepath="org/apache/commons/beanutils/BeanMap.java">
      <Message>At BeanMap.java:[line 426]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="MS_SHOULD_BE_FINAL" priority="3" rank="20" abbrev="MS" category="MALICIOUS_CODE" instanceHash="940f81a250e772de4c33fade0f5f1478" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="218">
    <ShortMessage>Field isn&apos;t final but should be</ShortMessage>
    <LongMessage>org.apache.commons.beanutils.BeanMap.defaultTransformers isn&apos;t final but should be</LongMessage>
    <Class classname="org.apache.commons.beanutils.BeanMap" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.BeanMap" start="48" end="919" sourcefile="BeanMap.java" sourcepath="org/apache/commons/beanutils/BeanMap.java">
        <Message>At BeanMap.java:[lines 48-919]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.BeanMap</Message>
    </Class>
    <Field classname="org.apache.commons.beanutils.BeanMap" name="defaultTransformers" signature="Ljava/util/HashMap;" isStatic="true" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.BeanMap" sourcefile="BeanMap.java" sourcepath="org/apache/commons/beanutils/BeanMap.java">
        <Message>In BeanMap.java</Message>
      </SourceLine>
      <Message>Field org.apache.commons.beanutils.BeanMap.defaultTransformers</Message>
    </Field>
    <SourceLine classname="org.apache.commons.beanutils.BeanMap" primary="true" start="78" end="78" startBytecode="23" endBytecode="23" sourcefile="BeanMap.java" sourcepath="org/apache/commons/beanutils/BeanMap.java">
      <Message>At BeanMap.java:[line 78]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE" priority="3" rank="20" abbrev="RCN" category="STYLE" instanceHash="b3c8ad7d3722a2bdd3c1b4ed0c89b1a2" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="476">
    <ShortMessage>Redundant nullcheck of value known to be non-null</ShortMessage>
    <LongMessage>Redundant nullcheck of types, which is known to be non-null in org.apache.commons.beanutils.BeanMap.createWriteMethodArguments(Method, Object)</LongMessage>
    <Class classname="org.apache.commons.beanutils.BeanMap" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.BeanMap" start="48" end="919" sourcefile="BeanMap.java" sourcepath="org/apache/commons/beanutils/BeanMap.java">
        <Message>At BeanMap.java:[lines 48-919]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.BeanMap</Message>
    </Class>
    <Method classname="org.apache.commons.beanutils.BeanMap" name="createWriteMethodArguments" signature="(Ljava/lang/reflect/Method;Ljava/lang/Object;)[Ljava/lang/Object;" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.BeanMap" start="807" end="832" startBytecode="0" endBytecode="420" sourcefile="BeanMap.java" sourcepath="org/apache/commons/beanutils/BeanMap.java"/>
      <Message>In method org.apache.commons.beanutils.BeanMap.createWriteMethodArguments(Method, Object)</Message>
    </Method>
    <LocalVariable name="types" register="3" pc="9" role="LOCAL_VARIABLE_VALUE_OF">
      <Message>Value loaded from types</Message>
    </LocalVariable>
    <Method classname="java.lang.reflect.Method" name="getParameterTypes" signature="()[Ljava/lang/Class;" isStatic="false" role="METHOD_RETURN_VALUE_OF">
      <SourceLine classname="java.lang.reflect.Method" start="314" end="314" startBytecode="0" endBytecode="52" sourcefile="Method.java" sourcepath="java/lang/reflect/Method.java"/>
      <Message>Return value of reflect.Method.getParameterTypes() of type Class[]</Message>
    </Method>
    <SourceLine classname="org.apache.commons.beanutils.BeanMap" primary="true" start="809" end="809" startBytecode="10" endBytecode="10" sourcefile="BeanMap.java" sourcepath="org/apache/commons/beanutils/BeanMap.java" role="SOURCE_REDUNDANT_NULL_CHECK">
      <Message>Redundant null check at BeanMap.java:[line 809]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="REC_CATCH_EXCEPTION" priority="3" rank="20" abbrev="REC" category="STYLE" instanceHash="ebd563f847d591696b26bce6797c0b20" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="396">
    <ShortMessage>Exception is caught when Exception is not thrown</ShortMessage>
    <LongMessage>Exception is caught when Exception is not thrown in org.apache.commons.beanutils.BeanMap.clone()</LongMessage>
    <Class classname="org.apache.commons.beanutils.BeanMap" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.BeanMap" start="48" end="919" sourcefile="BeanMap.java" sourcepath="org/apache/commons/beanutils/BeanMap.java">
        <Message>At BeanMap.java:[lines 48-919]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.BeanMap</Message>
    </Class>
    <Method classname="org.apache.commons.beanutils.BeanMap" name="clone" signature="()Ljava/lang/Object;" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.BeanMap" start="262" end="312" startBytecode="0" endBytecode="620" sourcefile="BeanMap.java" sourcepath="org/apache/commons/beanutils/BeanMap.java"/>
      <Message>In method org.apache.commons.beanutils.BeanMap.clone()</Message>
    </Method>
    <SourceLine classname="org.apache.commons.beanutils.BeanMap" primary="true" start="304" end="304" startBytecode="200" endBytecode="200" sourcefile="BeanMap.java" sourcepath="org/apache/commons/beanutils/BeanMap.java">
      <Message>At BeanMap.java:[line 304]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="URF_UNREAD_PUBLIC_OR_PROTECTED_FIELD" priority="3" rank="20" abbrev="UrF" category="STYLE" instanceHash="6771444529721decefef6b875c3a008e" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Unread public/protected field</ShortMessage>
    <LongMessage>Unread public/protected field: org.apache.commons.beanutils.BeanMap.defaultTransformers</LongMessage>
    <Class classname="org.apache.commons.beanutils.BeanMap" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.BeanMap" start="48" end="919" sourcefile="BeanMap.java" sourcepath="org/apache/commons/beanutils/BeanMap.java">
        <Message>At BeanMap.java:[lines 48-919]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.BeanMap</Message>
    </Class>
    <Field classname="org.apache.commons.beanutils.BeanMap" name="defaultTransformers" signature="Ljava/util/HashMap;" isStatic="true" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.BeanMap" sourcefile="BeanMap.java" sourcepath="org/apache/commons/beanutils/BeanMap.java">
        <Message>In BeanMap.java</Message>
      </SourceLine>
      <Message>Field org.apache.commons.beanutils.BeanMap.defaultTransformers</Message>
    </Field>
    <SourceLine classname="org.apache.commons.beanutils.BeanMap" primary="true" start="78" end="78" startBytecode="23" endBytecode="23" sourcefile="BeanMap.java" sourcepath="org/apache/commons/beanutils/BeanMap.java">
      <Message>At BeanMap.java:[line 78]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DM_NUMBER_CTOR" priority="2" rank="18" abbrev="Bx" category="PERFORMANCE" instanceHash="c9c19ddd6a4112b21db9c0ee46f0013c" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Method invokes inefficient Number constructor; use static valueOf instead</ShortMessage>
    <LongMessage>org.apache.commons.beanutils.BeanMap$3.transform(Object) invokes inefficient new Character(char) constructor; use Character.valueOf(char) instead</LongMessage>
    <Class classname="org.apache.commons.beanutils.BeanMap$3" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.BeanMap$3" start="142" end="144" sourcefile="BeanMap.java" sourcepath="org/apache/commons/beanutils/BeanMap.java">
        <Message>At BeanMap.java:[lines 142-144]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.BeanMap$3</Message>
    </Class>
    <Method classname="org.apache.commons.beanutils.BeanMap$3" name="transform" signature="(Ljava/lang/Object;)Ljava/lang/Object;" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.BeanMap$3" start="144" end="144" startBytecode="0" endBytecode="67" sourcefile="BeanMap.java" sourcepath="org/apache/commons/beanutils/BeanMap.java"/>
      <Message>In method org.apache.commons.beanutils.BeanMap$3.transform(Object)</Message>
    </Method>
    <Method classname="java.lang.Character" name="&lt;init&gt;" signature="(C)V" isStatic="false" role="METHOD_CALLED" classAnnotationNames="jdk.internal.ValueBased">
      <SourceLine classname="java.lang.Character" start="8548" end="8550" startBytecode="0" endBytecode="69" sourcefile="Character.java" sourcepath="java/lang/Character.java"/>
      <Message>Called method new Character(char)</Message>
    </Method>
    <Method classname="java.lang.Character" name="valueOf" signature="(C)Ljava/lang/Character;" isStatic="true" role="SHOULD_CALL" classAnnotationNames="jdk.internal.ValueBased">
      <SourceLine classname="java.lang.Character" start="8593" end="8596" startBytecode="0" endBytecode="79" sourcefile="Character.java" sourcepath="java/lang/Character.java"/>
      <Message>Should call Character.valueOf(char) instead</Message>
    </Method>
    <SourceLine classname="org.apache.commons.beanutils.BeanMap$3" primary="true" start="144" end="144" startBytecode="12" endBytecode="12" sourcefile="BeanMap.java" sourcepath="org/apache/commons/beanutils/BeanMap.java">
      <Message>At BeanMap.java:[line 144]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="CT_CONSTRUCTOR_THROW" priority="2" rank="16" abbrev="CT" category="BAD_PRACTICE" instanceHash="3117e8fb5b6a644d20524c0f7bb2912d" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Be wary of letting constructors throw exceptions.</ShortMessage>
    <LongMessage>Exception thrown in class org.apache.commons.beanutils.BeanPropertyValueChangeClosure at new org.apache.commons.beanutils.BeanPropertyValueChangeClosure(String, Object, boolean) will leave the constructor. The object under construction remains partially initialized and may be vulnerable to Finalizer attacks.</LongMessage>
    <Class classname="org.apache.commons.beanutils.BeanPropertyValueChangeClosure" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.BeanPropertyValueChangeClosure" start="85" end="237" sourcefile="BeanPropertyValueChangeClosure.java" sourcepath="org/apache/commons/beanutils/BeanPropertyValueChangeClosure.java">
        <Message>At BeanPropertyValueChangeClosure.java:[lines 85-237]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.BeanPropertyValueChangeClosure</Message>
    </Class>
    <Method classname="org.apache.commons.beanutils.BeanPropertyValueChangeClosure" name="&lt;init&gt;" signature="(Ljava/lang/String;Ljava/lang/Object;Z)V" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.BeanPropertyValueChangeClosure" start="138" end="147" startBytecode="0" endBytecode="180" sourcefile="BeanPropertyValueChangeClosure.java" sourcepath="org/apache/commons/beanutils/BeanPropertyValueChangeClosure.java"/>
      <Message>In method new org.apache.commons.beanutils.BeanPropertyValueChangeClosure(String, Object, boolean)</Message>
    </Method>
    <SourceLine classname="org.apache.commons.beanutils.BeanPropertyValueChangeClosure" primary="true" start="145" end="145" startBytecode="53" endBytecode="53" sourcefile="BeanPropertyValueChangeClosure.java" sourcepath="org/apache/commons/beanutils/BeanPropertyValueChangeClosure.java">
      <Message>At BeanPropertyValueChangeClosure.java:[line 145]</Message>
    </SourceLine>
    <SourceLine classname="org.apache.commons.beanutils.BeanPropertyValueChangeClosure" start="145" end="145" startBytecode="53" endBytecode="53" sourcefile="BeanPropertyValueChangeClosure.java" sourcepath="org/apache/commons/beanutils/BeanPropertyValueChangeClosure.java">
      <Message>At BeanPropertyValueChangeClosure.java:[line 145]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="CT_CONSTRUCTOR_THROW" priority="2" rank="16" abbrev="CT" category="BAD_PRACTICE" instanceHash="79076607d78974e41ed6149c718b0462" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Be wary of letting constructors throw exceptions.</ShortMessage>
    <LongMessage>Exception thrown in class org.apache.commons.beanutils.BeanPropertyValueEqualsPredicate at new org.apache.commons.beanutils.BeanPropertyValueEqualsPredicate(String, Object, boolean) will leave the constructor. The object under construction remains partially initialized and may be vulnerable to Finalizer attacks.</LongMessage>
    <Class classname="org.apache.commons.beanutils.BeanPropertyValueEqualsPredicate" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.BeanPropertyValueEqualsPredicate" start="114" end="288" sourcefile="BeanPropertyValueEqualsPredicate.java" sourcepath="org/apache/commons/beanutils/BeanPropertyValueEqualsPredicate.java">
        <Message>At BeanPropertyValueEqualsPredicate.java:[lines 114-288]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.BeanPropertyValueEqualsPredicate</Message>
    </Class>
    <Method classname="org.apache.commons.beanutils.BeanPropertyValueEqualsPredicate" name="&lt;init&gt;" signature="(Ljava/lang/String;Ljava/lang/Object;Z)V" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.BeanPropertyValueEqualsPredicate" start="166" end="175" startBytecode="0" endBytecode="180" sourcefile="BeanPropertyValueEqualsPredicate.java" sourcepath="org/apache/commons/beanutils/BeanPropertyValueEqualsPredicate.java"/>
      <Message>In method new org.apache.commons.beanutils.BeanPropertyValueEqualsPredicate(String, Object, boolean)</Message>
    </Method>
    <SourceLine classname="org.apache.commons.beanutils.BeanPropertyValueEqualsPredicate" primary="true" start="173" end="173" startBytecode="53" endBytecode="53" sourcefile="BeanPropertyValueEqualsPredicate.java" sourcepath="org/apache/commons/beanutils/BeanPropertyValueEqualsPredicate.java">
      <Message>At BeanPropertyValueEqualsPredicate.java:[line 173]</Message>
    </SourceLine>
    <SourceLine classname="org.apache.commons.beanutils.BeanPropertyValueEqualsPredicate" start="173" end="173" startBytecode="53" endBytecode="53" sourcefile="BeanPropertyValueEqualsPredicate.java" sourcepath="org/apache/commons/beanutils/BeanPropertyValueEqualsPredicate.java">
      <Message>At BeanPropertyValueEqualsPredicate.java:[line 173]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="CT_CONSTRUCTOR_THROW" priority="2" rank="16" abbrev="CT" category="BAD_PRACTICE" instanceHash="fde7cd09502365653ab136ecf8c1441d" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Be wary of letting constructors throw exceptions.</ShortMessage>
    <LongMessage>Exception thrown in class org.apache.commons.beanutils.BeanToPropertyValueTransformer at new org.apache.commons.beanutils.BeanToPropertyValueTransformer(String, boolean) will leave the constructor. The object under construction remains partially initialized and may be vulnerable to Finalizer attacks.</LongMessage>
    <Class classname="org.apache.commons.beanutils.BeanToPropertyValueTransformer" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.BeanToPropertyValueTransformer" start="75" end="216" sourcefile="BeanToPropertyValueTransformer.java" sourcepath="org/apache/commons/beanutils/BeanToPropertyValueTransformer.java">
        <Message>At BeanToPropertyValueTransformer.java:[lines 75-216]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.BeanToPropertyValueTransformer</Message>
    </Class>
    <Method classname="org.apache.commons.beanutils.BeanToPropertyValueTransformer" name="&lt;init&gt;" signature="(Ljava/lang/String;Z)V" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.BeanToPropertyValueTransformer" start="121" end="130" startBytecode="0" endBytecode="158" sourcefile="BeanToPropertyValueTransformer.java" sourcepath="org/apache/commons/beanutils/BeanToPropertyValueTransformer.java"/>
      <Message>In method new org.apache.commons.beanutils.BeanToPropertyValueTransformer(String, boolean)</Message>
    </Method>
    <SourceLine classname="org.apache.commons.beanutils.BeanToPropertyValueTransformer" primary="true" start="127" end="127" startBytecode="48" endBytecode="48" sourcefile="BeanToPropertyValueTransformer.java" sourcepath="org/apache/commons/beanutils/BeanToPropertyValueTransformer.java">
      <Message>At BeanToPropertyValueTransformer.java:[line 127]</Message>
    </SourceLine>
    <SourceLine classname="org.apache.commons.beanutils.BeanToPropertyValueTransformer" start="127" end="127" startBytecode="48" endBytecode="48" sourcefile="BeanToPropertyValueTransformer.java" sourcepath="org/apache/commons/beanutils/BeanToPropertyValueTransformer.java">
      <Message>At BeanToPropertyValueTransformer.java:[line 127]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="49ef771340d7a522986ba134613451c5" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.apache.commons.beanutils.BeanUtilsBean.getConvertUtils() may expose internal representation by returning BeanUtilsBean.convertUtilsBean</LongMessage>
    <Class classname="org.apache.commons.beanutils.BeanUtilsBean" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.BeanUtilsBean" start="60" end="1139" sourcefile="BeanUtilsBean.java" sourcepath="org/apache/commons/beanutils/BeanUtilsBean.java">
        <Message>At BeanUtilsBean.java:[lines 60-1139]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.BeanUtilsBean</Message>
    </Class>
    <Method classname="org.apache.commons.beanutils.BeanUtilsBean" name="getConvertUtils" signature="()Lorg/apache/commons/beanutils/ConvertUtilsBean;" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.BeanUtilsBean" start="1032" end="1032" startBytecode="0" endBytecode="46" sourcefile="BeanUtilsBean.java" sourcepath="org/apache/commons/beanutils/BeanUtilsBean.java"/>
      <Message>In method org.apache.commons.beanutils.BeanUtilsBean.getConvertUtils()</Message>
    </Method>
    <Field classname="org.apache.commons.beanutils.BeanUtilsBean" name="convertUtilsBean" signature="Lorg/apache/commons/beanutils/ConvertUtilsBean;" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.BeanUtilsBean" sourcefile="BeanUtilsBean.java" sourcepath="org/apache/commons/beanutils/BeanUtilsBean.java">
        <Message>In BeanUtilsBean.java</Message>
      </SourceLine>
      <Message>Field org.apache.commons.beanutils.BeanUtilsBean.convertUtilsBean</Message>
    </Field>
    <SourceLine classname="org.apache.commons.beanutils.BeanUtilsBean" primary="true" start="1032" end="1032" startBytecode="4" endBytecode="4" sourcefile="BeanUtilsBean.java" sourcepath="org/apache/commons/beanutils/BeanUtilsBean.java">
      <Message>At BeanUtilsBean.java:[line 1032]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="b52fcf8b3676ed72da658b7366706a10" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.apache.commons.beanutils.BeanUtilsBean.getPropertyUtils() may expose internal representation by returning BeanUtilsBean.propertyUtilsBean</LongMessage>
    <Class classname="org.apache.commons.beanutils.BeanUtilsBean" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.BeanUtilsBean" start="60" end="1139" sourcefile="BeanUtilsBean.java" sourcepath="org/apache/commons/beanutils/BeanUtilsBean.java">
        <Message>At BeanUtilsBean.java:[lines 60-1139]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.BeanUtilsBean</Message>
    </Class>
    <Method classname="org.apache.commons.beanutils.BeanUtilsBean" name="getPropertyUtils" signature="()Lorg/apache/commons/beanutils/PropertyUtilsBean;" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.BeanUtilsBean" start="1041" end="1041" startBytecode="0" endBytecode="46" sourcefile="BeanUtilsBean.java" sourcepath="org/apache/commons/beanutils/BeanUtilsBean.java"/>
      <Message>In method org.apache.commons.beanutils.BeanUtilsBean.getPropertyUtils()</Message>
    </Method>
    <Field classname="org.apache.commons.beanutils.BeanUtilsBean" name="propertyUtilsBean" signature="Lorg/apache/commons/beanutils/PropertyUtilsBean;" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.BeanUtilsBean" sourcefile="BeanUtilsBean.java" sourcepath="org/apache/commons/beanutils/BeanUtilsBean.java">
        <Message>In BeanUtilsBean.java</Message>
      </SourceLine>
      <Message>Field org.apache.commons.beanutils.BeanUtilsBean.propertyUtilsBean</Message>
    </Field>
    <SourceLine classname="org.apache.commons.beanutils.BeanUtilsBean" primary="true" start="1041" end="1041" startBytecode="4" endBytecode="4" sourcefile="BeanUtilsBean.java" sourcepath="org/apache/commons/beanutils/BeanUtilsBean.java">
      <Message>At BeanUtilsBean.java:[line 1041]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="42b498479ab845078c07650bf62f7fa" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>new org.apache.commons.beanutils.BeanUtilsBean(ConvertUtilsBean, PropertyUtilsBean) may expose internal representation by storing an externally mutable object into BeanUtilsBean.convertUtilsBean</LongMessage>
    <Class classname="org.apache.commons.beanutils.BeanUtilsBean" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.BeanUtilsBean" start="60" end="1139" sourcefile="BeanUtilsBean.java" sourcepath="org/apache/commons/beanutils/BeanUtilsBean.java">
        <Message>At BeanUtilsBean.java:[lines 60-1139]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.BeanUtilsBean</Message>
    </Class>
    <Method classname="org.apache.commons.beanutils.BeanUtilsBean" name="&lt;init&gt;" signature="(Lorg/apache/commons/beanutils/ConvertUtilsBean;Lorg/apache/commons/beanutils/PropertyUtilsBean;)V" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.BeanUtilsBean" start="139" end="143" startBytecode="0" endBytecode="101" sourcefile="BeanUtilsBean.java" sourcepath="org/apache/commons/beanutils/BeanUtilsBean.java"/>
      <Message>In method new org.apache.commons.beanutils.BeanUtilsBean(ConvertUtilsBean, PropertyUtilsBean)</Message>
    </Method>
    <Field classname="org.apache.commons.beanutils.BeanUtilsBean" name="convertUtilsBean" signature="Lorg/apache/commons/beanutils/ConvertUtilsBean;" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.BeanUtilsBean" sourcefile="BeanUtilsBean.java" sourcepath="org/apache/commons/beanutils/BeanUtilsBean.java">
        <Message>In BeanUtilsBean.java</Message>
      </SourceLine>
      <Message>Field org.apache.commons.beanutils.BeanUtilsBean.convertUtilsBean</Message>
    </Field>
    <LocalVariable name="convertUtilsBean" register="1" pc="15" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named convertUtilsBean</Message>
    </LocalVariable>
    <SourceLine classname="org.apache.commons.beanutils.BeanUtilsBean" primary="true" start="141" end="141" startBytecode="15" endBytecode="15" sourcefile="BeanUtilsBean.java" sourcepath="org/apache/commons/beanutils/BeanUtilsBean.java">
      <Message>At BeanUtilsBean.java:[line 141]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="cf125e3bd88dde28c19dde27247011c7" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>new org.apache.commons.beanutils.BeanUtilsBean(ConvertUtilsBean, PropertyUtilsBean) may expose internal representation by storing an externally mutable object into BeanUtilsBean.propertyUtilsBean</LongMessage>
    <Class classname="org.apache.commons.beanutils.BeanUtilsBean" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.BeanUtilsBean" start="60" end="1139" sourcefile="BeanUtilsBean.java" sourcepath="org/apache/commons/beanutils/BeanUtilsBean.java">
        <Message>At BeanUtilsBean.java:[lines 60-1139]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.BeanUtilsBean</Message>
    </Class>
    <Method classname="org.apache.commons.beanutils.BeanUtilsBean" name="&lt;init&gt;" signature="(Lorg/apache/commons/beanutils/ConvertUtilsBean;Lorg/apache/commons/beanutils/PropertyUtilsBean;)V" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.BeanUtilsBean" start="139" end="143" startBytecode="0" endBytecode="101" sourcefile="BeanUtilsBean.java" sourcepath="org/apache/commons/beanutils/BeanUtilsBean.java"/>
      <Message>In method new org.apache.commons.beanutils.BeanUtilsBean(ConvertUtilsBean, PropertyUtilsBean)</Message>
    </Method>
    <Field classname="org.apache.commons.beanutils.BeanUtilsBean" name="propertyUtilsBean" signature="Lorg/apache/commons/beanutils/PropertyUtilsBean;" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.BeanUtilsBean" sourcefile="BeanUtilsBean.java" sourcepath="org/apache/commons/beanutils/BeanUtilsBean.java">
        <Message>In BeanUtilsBean.java</Message>
      </SourceLine>
      <Message>Field org.apache.commons.beanutils.BeanUtilsBean.propertyUtilsBean</Message>
    </Field>
    <LocalVariable name="propertyUtilsBean" register="2" pc="20" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named propertyUtilsBean</Message>
    </LocalVariable>
    <SourceLine classname="org.apache.commons.beanutils.BeanUtilsBean" primary="true" start="142" end="142" startBytecode="20" endBytecode="20" sourcefile="BeanUtilsBean.java" sourcepath="org/apache/commons/beanutils/BeanUtilsBean.java">
      <Message>At BeanUtilsBean.java:[line 142]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="PZLA_PREFER_ZERO_LENGTH_ARRAYS" priority="3" rank="20" abbrev="PZLA" category="STYLE" instanceHash="a3dae40d39e92d61752446269d9841b0" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Consider returning a zero length array rather than null</ShortMessage>
    <LongMessage>Should org.apache.commons.beanutils.BeanUtilsBean.getArrayProperty(Object, String) return a zero length array rather than null?</LongMessage>
    <Class classname="org.apache.commons.beanutils.BeanUtilsBean" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.BeanUtilsBean" start="60" end="1139" sourcefile="BeanUtilsBean.java" sourcepath="org/apache/commons/beanutils/BeanUtilsBean.java">
        <Message>At BeanUtilsBean.java:[lines 60-1139]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.BeanUtilsBean</Message>
    </Class>
    <Method classname="org.apache.commons.beanutils.BeanUtilsBean" name="getArrayProperty" signature="(Ljava/lang/Object;Ljava/lang/String;)[Ljava/lang/String;" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.BeanUtilsBean" start="540" end="570" startBytecode="0" endBytecode="523" sourcefile="BeanUtilsBean.java" sourcepath="org/apache/commons/beanutils/BeanUtilsBean.java"/>
      <Message>In method org.apache.commons.beanutils.BeanUtilsBean.getArrayProperty(Object, String)</Message>
    </Method>
    <SourceLine classname="org.apache.commons.beanutils.BeanUtilsBean" primary="true" start="542" end="542" startBytecode="15" endBytecode="15" sourcefile="BeanUtilsBean.java" sourcepath="org/apache/commons/beanutils/BeanUtilsBean.java">
      <Message>At BeanUtilsBean.java:[line 542]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="RV_RETURN_VALUE_IGNORED_NO_SIDE_EFFECT" priority="2" rank="17" abbrev="RV" category="STYLE" instanceHash="d1c033f7e965960c53a766f72b1808d" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="440">
    <ShortMessage>Return value of method without side effect is ignored</ShortMessage>
    <LongMessage>Return value of java.util.Map.isEmpty() ignored, but method has no side effect</LongMessage>
    <Class classname="org.apache.commons.beanutils.ContextClassLoaderLocal" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.ContextClassLoaderLocal" start="105" end="216" sourcefile="ContextClassLoaderLocal.java" sourcepath="org/apache/commons/beanutils/ContextClassLoaderLocal.java">
        <Message>At ContextClassLoaderLocal.java:[lines 105-216]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.ContextClassLoaderLocal</Message>
    </Class>
    <Method classname="org.apache.commons.beanutils.ContextClassLoaderLocal" name="get" signature="()Ljava/lang/Object;" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.ContextClassLoaderLocal" start="145" end="168" startBytecode="0" endBytecode="272" sourcefile="ContextClassLoaderLocal.java" sourcepath="org/apache/commons/beanutils/ContextClassLoaderLocal.java"/>
      <Message>In method org.apache.commons.beanutils.ContextClassLoaderLocal.get()</Message>
    </Method>
    <Method classname="java.util.Map" name="isEmpty" signature="()Z" isStatic="false" role="METHOD_CALLED">
      <SourceLine classname="java.util.Map" sourcefile="Map.java" sourcepath="java/util/Map.java"/>
      <Message>Called method java.util.Map.isEmpty()</Message>
    </Method>
    <SourceLine classname="org.apache.commons.beanutils.ContextClassLoaderLocal" primary="true" start="145" end="145" startBytecode="4" endBytecode="4" sourcefile="ContextClassLoaderLocal.java" sourcepath="org/apache/commons/beanutils/ContextClassLoaderLocal.java">
      <Message>At ContextClassLoaderLocal.java:[line 145]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="RV_RETURN_VALUE_IGNORED_NO_SIDE_EFFECT" priority="2" rank="17" abbrev="RV" category="STYLE" instanceHash="cae948aff3d488ceab1d1b5d3219f3cf" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="440">
    <ShortMessage>Return value of method without side effect is ignored</ShortMessage>
    <LongMessage>Return value of java.util.Map.isEmpty() ignored, but method has no side effect</LongMessage>
    <Class classname="org.apache.commons.beanutils.ContextClassLoaderLocal" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.ContextClassLoaderLocal" start="105" end="216" sourcefile="ContextClassLoaderLocal.java" sourcepath="org/apache/commons/beanutils/ContextClassLoaderLocal.java">
        <Message>At ContextClassLoaderLocal.java:[lines 105-216]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.ContextClassLoaderLocal</Message>
    </Class>
    <Method classname="org.apache.commons.beanutils.ContextClassLoaderLocal" name="set" signature="(Ljava/lang/Object;)V" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.ContextClassLoaderLocal" start="182" end="196" startBytecode="0" endBytecode="192" sourcefile="ContextClassLoaderLocal.java" sourcepath="org/apache/commons/beanutils/ContextClassLoaderLocal.java"/>
      <Message>In method org.apache.commons.beanutils.ContextClassLoaderLocal.set(Object)</Message>
    </Method>
    <Method classname="java.util.Map" name="isEmpty" signature="()Z" isStatic="false" role="METHOD_CALLED">
      <SourceLine classname="java.util.Map" sourcefile="Map.java" sourcepath="java/util/Map.java"/>
      <Message>Called method java.util.Map.isEmpty()</Message>
    </Method>
    <SourceLine classname="org.apache.commons.beanutils.ContextClassLoaderLocal" primary="true" start="182" end="182" startBytecode="4" endBytecode="4" sourcefile="ContextClassLoaderLocal.java" sourcepath="org/apache/commons/beanutils/ContextClassLoaderLocal.java">
      <Message>At ContextClassLoaderLocal.java:[line 182]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="10cce9f9e71efbc176d6f7ca9129782a" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.apache.commons.beanutils.ConversionException.getCause() may expose internal representation by returning ConversionException.cause</LongMessage>
    <Class classname="org.apache.commons.beanutils.ConversionException" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.ConversionException" start="43" end="90" sourcefile="ConversionException.java" sourcepath="org/apache/commons/beanutils/ConversionException.java">
        <Message>At ConversionException.java:[lines 43-90]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.ConversionException</Message>
    </Class>
    <Method classname="org.apache.commons.beanutils.ConversionException" name="getCause" signature="()Ljava/lang/Throwable;" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.ConversionException" start="90" end="90" startBytecode="0" endBytecode="46" sourcefile="ConversionException.java" sourcepath="org/apache/commons/beanutils/ConversionException.java"/>
      <Message>In method org.apache.commons.beanutils.ConversionException.getCause()</Message>
    </Method>
    <Field classname="org.apache.commons.beanutils.ConversionException" name="cause" signature="Ljava/lang/Throwable;" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.ConversionException" sourcefile="ConversionException.java" sourcepath="org/apache/commons/beanutils/ConversionException.java">
        <Message>In ConversionException.java</Message>
      </SourceLine>
      <Message>Field org.apache.commons.beanutils.ConversionException.cause</Message>
    </Field>
    <SourceLine classname="org.apache.commons.beanutils.ConversionException" primary="true" start="90" end="90" startBytecode="4" endBytecode="4" sourcefile="ConversionException.java" sourcepath="org/apache/commons/beanutils/ConversionException.java">
      <Message>At ConversionException.java:[line 90]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="a7d340afc58929f439ac3fed2163efec" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>new org.apache.commons.beanutils.ConversionException(String, Throwable) may expose internal representation by storing an externally mutable object into ConversionException.cause</LongMessage>
    <Class classname="org.apache.commons.beanutils.ConversionException" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.ConversionException" start="43" end="90" sourcefile="ConversionException.java" sourcepath="org/apache/commons/beanutils/ConversionException.java">
        <Message>At ConversionException.java:[lines 43-90]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.ConversionException</Message>
    </Class>
    <Method classname="org.apache.commons.beanutils.ConversionException" name="&lt;init&gt;" signature="(Ljava/lang/String;Ljava/lang/Throwable;)V" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.ConversionException" start="56" end="59" startBytecode="0" endBytecode="89" sourcefile="ConversionException.java" sourcepath="org/apache/commons/beanutils/ConversionException.java"/>
      <Message>In method new org.apache.commons.beanutils.ConversionException(String, Throwable)</Message>
    </Method>
    <Field classname="org.apache.commons.beanutils.ConversionException" name="cause" signature="Ljava/lang/Throwable;" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.ConversionException" sourcefile="ConversionException.java" sourcepath="org/apache/commons/beanutils/ConversionException.java">
        <Message>In ConversionException.java</Message>
      </SourceLine>
      <Message>Field org.apache.commons.beanutils.ConversionException.cause</Message>
    </Field>
    <LocalVariable name="cause" register="2" pc="12" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named cause</Message>
    </LocalVariable>
    <SourceLine classname="org.apache.commons.beanutils.ConversionException" primary="true" start="57" end="57" startBytecode="12" endBytecode="12" sourcefile="ConversionException.java" sourcepath="org/apache/commons/beanutils/ConversionException.java">
      <Message>At ConversionException.java:[line 57]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="cdd5d65c96602e9a7494b2c8b9049f7" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>new org.apache.commons.beanutils.ConversionException(Throwable) may expose internal representation by storing an externally mutable object into ConversionException.cause</LongMessage>
    <Class classname="org.apache.commons.beanutils.ConversionException" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.ConversionException" start="43" end="90" sourcefile="ConversionException.java" sourcepath="org/apache/commons/beanutils/ConversionException.java">
        <Message>At ConversionException.java:[lines 43-90]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.ConversionException</Message>
    </Class>
    <Method classname="org.apache.commons.beanutils.ConversionException" name="&lt;init&gt;" signature="(Ljava/lang/Throwable;)V" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.ConversionException" start="69" end="72" startBytecode="0" endBytecode="82" sourcefile="ConversionException.java" sourcepath="org/apache/commons/beanutils/ConversionException.java"/>
      <Message>In method new org.apache.commons.beanutils.ConversionException(Throwable)</Message>
    </Method>
    <Field classname="org.apache.commons.beanutils.ConversionException" name="cause" signature="Ljava/lang/Throwable;" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.ConversionException" sourcefile="ConversionException.java" sourcepath="org/apache/commons/beanutils/ConversionException.java">
        <Message>In ConversionException.java</Message>
      </SourceLine>
      <Message>Field org.apache.commons.beanutils.ConversionException.cause</Message>
    </Field>
    <LocalVariable name="cause" register="1" pc="15" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named cause</Message>
    </LocalVariable>
    <SourceLine classname="org.apache.commons.beanutils.ConversionException" primary="true" start="70" end="70" startBytecode="15" endBytecode="15" sourcefile="ConversionException.java" sourcepath="org/apache/commons/beanutils/ConversionException.java">
      <Message>At ConversionException.java:[line 70]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DM_FP_NUMBER_CTOR" priority="3" rank="20" abbrev="Bx" category="PERFORMANCE" instanceHash="bb2471da901a087de9cf6700d74b8a23" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Method invokes inefficient floating-point Number constructor; use static valueOf instead</ShortMessage>
    <LongMessage>new org.apache.commons.beanutils.ConvertUtilsBean() invokes inefficient new Double(double) constructor; use Double.valueOf(double) instead</LongMessage>
    <Class classname="org.apache.commons.beanutils.ConvertUtilsBean" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.ConvertUtilsBean" start="129" end="897" sourcefile="ConvertUtilsBean.java" sourcepath="org/apache/commons/beanutils/ConvertUtilsBean.java">
        <Message>At ConvertUtilsBean.java:[lines 129-897]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.ConvertUtilsBean</Message>
    </Class>
    <Method classname="org.apache.commons.beanutils.ConvertUtilsBean" name="&lt;init&gt;" signature="()V" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.ConvertUtilsBean" start="159" end="163" startBytecode="0" endBytecode="218" sourcefile="ConvertUtilsBean.java" sourcepath="org/apache/commons/beanutils/ConvertUtilsBean.java"/>
      <Message>In method new org.apache.commons.beanutils.ConvertUtilsBean()</Message>
    </Method>
    <Method classname="java.lang.Double" name="&lt;init&gt;" signature="(D)V" isStatic="false" role="METHOD_CALLED" classAnnotationNames="jdk.internal.ValueBased">
      <SourceLine classname="java.lang.Double" start="711" end="713" startBytecode="0" endBytecode="69" sourcefile="Double.java" sourcepath="java/lang/Double.java"/>
      <Message>Called method new Double(double)</Message>
    </Method>
    <Method classname="java.lang.Double" name="valueOf" signature="(D)Ljava/lang/Double;" isStatic="true" role="SHOULD_CALL" classAnnotationNames="jdk.internal.ValueBased">
      <SourceLine classname="java.lang.Double" start="632" end="632" startBytecode="0" endBytecode="50" sourcefile="Double.java" sourcepath="java/lang/Double.java"/>
      <Message>Should call Double.valueOf(double) instead</Message>
    </Method>
    <SourceLine classname="org.apache.commons.beanutils.ConvertUtilsBean" primary="true" start="273" end="273" startBytecode="62" endBytecode="62" sourcefile="ConvertUtilsBean.java" sourcepath="org/apache/commons/beanutils/ConvertUtilsBean.java">
      <Message>At ConvertUtilsBean.java:[line 273]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DM_FP_NUMBER_CTOR" priority="3" rank="20" abbrev="Bx" category="PERFORMANCE" instanceHash="1e4fe4d257d0dec4d8dc75876f4a578c" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Method invokes inefficient floating-point Number constructor; use static valueOf instead</ShortMessage>
    <LongMessage>new org.apache.commons.beanutils.ConvertUtilsBean() invokes inefficient new Float(float) constructor; use Float.valueOf(float) instead</LongMessage>
    <Class classname="org.apache.commons.beanutils.ConvertUtilsBean" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.ConvertUtilsBean" start="129" end="897" sourcefile="ConvertUtilsBean.java" sourcepath="org/apache/commons/beanutils/ConvertUtilsBean.java">
        <Message>At ConvertUtilsBean.java:[lines 129-897]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.ConvertUtilsBean</Message>
    </Class>
    <Method classname="org.apache.commons.beanutils.ConvertUtilsBean" name="&lt;init&gt;" signature="()V" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.ConvertUtilsBean" start="159" end="163" startBytecode="0" endBytecode="218" sourcefile="ConvertUtilsBean.java" sourcepath="org/apache/commons/beanutils/ConvertUtilsBean.java"/>
      <Message>In method new org.apache.commons.beanutils.ConvertUtilsBean()</Message>
    </Method>
    <Method classname="java.lang.Float" name="&lt;init&gt;" signature="(F)V" isStatic="false" role="METHOD_CALLED" classAnnotationNames="jdk.internal.ValueBased">
      <SourceLine classname="java.lang.Float" start="537" end="539" startBytecode="0" endBytecode="69" sourcefile="Float.java" sourcepath="java/lang/Float.java"/>
      <Message>Called method new Float(float)</Message>
    </Method>
    <Method classname="java.lang.Float" name="valueOf" signature="(F)Ljava/lang/Float;" isStatic="true" role="SHOULD_CALL" classAnnotationNames="jdk.internal.ValueBased">
      <SourceLine classname="java.lang.Float" start="458" end="458" startBytecode="0" endBytecode="50" sourcefile="Float.java" sourcepath="java/lang/Float.java"/>
      <Message>Should call Float.valueOf(float) instead</Message>
    </Method>
    <SourceLine classname="org.apache.commons.beanutils.ConvertUtilsBean" primary="true" start="306" end="306" startBytecode="74" endBytecode="74" sourcefile="ConvertUtilsBean.java" sourcepath="org/apache/commons/beanutils/ConvertUtilsBean.java">
      <Message>At ConvertUtilsBean.java:[line 306]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DM_FP_NUMBER_CTOR" priority="3" rank="20" abbrev="Bx" category="PERFORMANCE" instanceHash="3dae7c101c9b1254664d9f697868c237" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Method invokes inefficient floating-point Number constructor; use static valueOf instead</ShortMessage>
    <LongMessage>org.apache.commons.beanutils.ConvertUtilsBean.setDefaultDouble(double) invokes inefficient new Double(double) constructor; use Double.valueOf(double) instead</LongMessage>
    <Class classname="org.apache.commons.beanutils.ConvertUtilsBean" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.ConvertUtilsBean" start="129" end="897" sourcefile="ConvertUtilsBean.java" sourcepath="org/apache/commons/beanutils/ConvertUtilsBean.java">
        <Message>At ConvertUtilsBean.java:[lines 129-897]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.ConvertUtilsBean</Message>
    </Class>
    <Method classname="org.apache.commons.beanutils.ConvertUtilsBean" name="setDefaultDouble" signature="(D)V" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.ConvertUtilsBean" start="295" end="298" startBytecode="0" endBytecode="111" sourcefile="ConvertUtilsBean.java" sourcepath="org/apache/commons/beanutils/ConvertUtilsBean.java"/>
      <Message>In method org.apache.commons.beanutils.ConvertUtilsBean.setDefaultDouble(double)</Message>
    </Method>
    <Method classname="java.lang.Double" name="&lt;init&gt;" signature="(D)V" isStatic="false" role="METHOD_CALLED" classAnnotationNames="jdk.internal.ValueBased">
      <SourceLine classname="java.lang.Double" start="711" end="713" startBytecode="0" endBytecode="69" sourcefile="Double.java" sourcepath="java/lang/Double.java"/>
      <Message>Called method new Double(double)</Message>
    </Method>
    <Method classname="java.lang.Double" name="valueOf" signature="(D)Ljava/lang/Double;" isStatic="true" role="SHOULD_CALL" classAnnotationNames="jdk.internal.ValueBased">
      <SourceLine classname="java.lang.Double" start="632" end="632" startBytecode="0" endBytecode="50" sourcefile="Double.java" sourcepath="java/lang/Double.java"/>
      <Message>Should call Double.valueOf(double) instead</Message>
    </Method>
    <SourceLine classname="org.apache.commons.beanutils.ConvertUtilsBean" primary="true" start="295" end="295" startBytecode="6" endBytecode="6" sourcefile="ConvertUtilsBean.java" sourcepath="org/apache/commons/beanutils/ConvertUtilsBean.java">
      <Message>At ConvertUtilsBean.java:[line 295]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DM_FP_NUMBER_CTOR" priority="3" rank="20" abbrev="Bx" category="PERFORMANCE" instanceHash="70a353d618249dc66e6568ef36bd8ad0" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Method invokes inefficient floating-point Number constructor; use static valueOf instead</ShortMessage>
    <LongMessage>org.apache.commons.beanutils.ConvertUtilsBean.setDefaultFloat(float) invokes inefficient new Float(float) constructor; use Float.valueOf(float) instead</LongMessage>
    <Class classname="org.apache.commons.beanutils.ConvertUtilsBean" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.ConvertUtilsBean" start="129" end="897" sourcefile="ConvertUtilsBean.java" sourcepath="org/apache/commons/beanutils/ConvertUtilsBean.java">
        <Message>At ConvertUtilsBean.java:[lines 129-897]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.ConvertUtilsBean</Message>
    </Class>
    <Method classname="org.apache.commons.beanutils.ConvertUtilsBean" name="setDefaultFloat" signature="(F)V" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.ConvertUtilsBean" start="328" end="331" startBytecode="0" endBytecode="111" sourcefile="ConvertUtilsBean.java" sourcepath="org/apache/commons/beanutils/ConvertUtilsBean.java"/>
      <Message>In method org.apache.commons.beanutils.ConvertUtilsBean.setDefaultFloat(float)</Message>
    </Method>
    <Method classname="java.lang.Float" name="&lt;init&gt;" signature="(F)V" isStatic="false" role="METHOD_CALLED" classAnnotationNames="jdk.internal.ValueBased">
      <SourceLine classname="java.lang.Float" start="537" end="539" startBytecode="0" endBytecode="69" sourcefile="Float.java" sourcepath="java/lang/Float.java"/>
      <Message>Called method new Float(float)</Message>
    </Method>
    <Method classname="java.lang.Float" name="valueOf" signature="(F)Ljava/lang/Float;" isStatic="true" role="SHOULD_CALL" classAnnotationNames="jdk.internal.ValueBased">
      <SourceLine classname="java.lang.Float" start="458" end="458" startBytecode="0" endBytecode="50" sourcefile="Float.java" sourcepath="java/lang/Float.java"/>
      <Message>Should call Float.valueOf(float) instead</Message>
    </Method>
    <SourceLine classname="org.apache.commons.beanutils.ConvertUtilsBean" primary="true" start="328" end="328" startBytecode="6" endBytecode="6" sourcefile="ConvertUtilsBean.java" sourcepath="org/apache/commons/beanutils/ConvertUtilsBean.java">
      <Message>At ConvertUtilsBean.java:[line 328]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DM_NUMBER_CTOR" priority="2" rank="18" abbrev="Bx" category="PERFORMANCE" instanceHash="4978770f8e2cc3c25b163427c48237ad" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Method invokes inefficient Number constructor; use static valueOf instead</ShortMessage>
    <LongMessage>org.apache.commons.beanutils.ConvertUtilsBean.&lt;static initializer for ConvertUtilsBean&gt;() invokes inefficient new Character(char) constructor; use Character.valueOf(char) instead</LongMessage>
    <Class classname="org.apache.commons.beanutils.ConvertUtilsBean" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.ConvertUtilsBean" start="129" end="897" sourcefile="ConvertUtilsBean.java" sourcepath="org/apache/commons/beanutils/ConvertUtilsBean.java">
        <Message>At ConvertUtilsBean.java:[lines 129-897]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.ConvertUtilsBean</Message>
    </Class>
    <Method classname="org.apache.commons.beanutils.ConvertUtilsBean" name="&lt;clinit&gt;" signature="()V" isStatic="true" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.ConvertUtilsBean" start="129" end="406" startBytecode="0" endBytecode="66" sourcefile="ConvertUtilsBean.java" sourcepath="org/apache/commons/beanutils/ConvertUtilsBean.java"/>
      <Message>In method org.apache.commons.beanutils.ConvertUtilsBean.&lt;static initializer for ConvertUtilsBean&gt;()</Message>
    </Method>
    <Method classname="java.lang.Character" name="&lt;init&gt;" signature="(C)V" isStatic="false" role="METHOD_CALLED" classAnnotationNames="jdk.internal.ValueBased">
      <SourceLine classname="java.lang.Character" start="8548" end="8550" startBytecode="0" endBytecode="69" sourcefile="Character.java" sourcepath="java/lang/Character.java"/>
      <Message>Called method new Character(char)</Message>
    </Method>
    <Method classname="java.lang.Character" name="valueOf" signature="(C)Ljava/lang/Character;" isStatic="true" role="SHOULD_CALL" classAnnotationNames="jdk.internal.ValueBased">
      <SourceLine classname="java.lang.Character" start="8593" end="8596" startBytecode="0" endBytecode="79" sourcefile="Character.java" sourcepath="java/lang/Character.java"/>
      <Message>Should call Character.valueOf(char) instead</Message>
    </Method>
    <SourceLine classname="org.apache.commons.beanutils.ConvertUtilsBean" primary="true" start="130" end="130" startBytecode="17" endBytecode="17" sourcefile="ConvertUtilsBean.java" sourcepath="org/apache/commons/beanutils/ConvertUtilsBean.java">
      <Message>At ConvertUtilsBean.java:[line 130]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DM_NUMBER_CTOR" priority="2" rank="18" abbrev="Bx" category="PERFORMANCE" instanceHash="fff83a473efc826ce1186dfa028169f7" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Method invokes inefficient Number constructor; use static valueOf instead</ShortMessage>
    <LongMessage>org.apache.commons.beanutils.ConvertUtilsBean.&lt;static initializer for ConvertUtilsBean&gt;() invokes inefficient new Integer(int) constructor; use Integer.valueOf(int) instead</LongMessage>
    <Class classname="org.apache.commons.beanutils.ConvertUtilsBean" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.ConvertUtilsBean" start="129" end="897" sourcefile="ConvertUtilsBean.java" sourcepath="org/apache/commons/beanutils/ConvertUtilsBean.java">
        <Message>At ConvertUtilsBean.java:[lines 129-897]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.ConvertUtilsBean</Message>
    </Class>
    <Method classname="org.apache.commons.beanutils.ConvertUtilsBean" name="&lt;clinit&gt;" signature="()V" isStatic="true" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.ConvertUtilsBean" start="129" end="406" startBytecode="0" endBytecode="66" sourcefile="ConvertUtilsBean.java" sourcepath="org/apache/commons/beanutils/ConvertUtilsBean.java"/>
      <Message>In method org.apache.commons.beanutils.ConvertUtilsBean.&lt;static initializer for ConvertUtilsBean&gt;()</Message>
    </Method>
    <Method classname="java.lang.Integer" name="&lt;init&gt;" signature="(I)V" isStatic="false" role="METHOD_CALLED" classAnnotationNames="jdk.internal.ValueBased">
      <SourceLine classname="java.lang.Integer" start="1104" end="1106" startBytecode="0" endBytecode="69" sourcefile="Integer.java" sourcepath="java/lang/Integer.java"/>
      <Message>Called method new Integer(int)</Message>
    </Method>
    <Method classname="java.lang.Integer" name="valueOf" signature="(I)Ljava/lang/Integer;" isStatic="true" role="SHOULD_CALL" classAnnotationNames="jdk.internal.ValueBased">
      <SourceLine classname="java.lang.Integer" start="1079" end="1081" startBytecode="0" endBytecode="90" sourcefile="Integer.java" sourcepath="java/lang/Integer.java"/>
      <Message>Should call Integer.valueOf(int) instead</Message>
    </Method>
    <SourceLine classname="org.apache.commons.beanutils.ConvertUtilsBean" primary="true" start="129" end="129" startBytecode="5" endBytecode="5" sourcefile="ConvertUtilsBean.java" sourcepath="org/apache/commons/beanutils/ConvertUtilsBean.java">
      <Message>At ConvertUtilsBean.java:[line 129]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DM_NUMBER_CTOR" priority="2" rank="18" abbrev="Bx" category="PERFORMANCE" instanceHash="747161dc628286a1f279c74055129e8b" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Method invokes inefficient Number constructor; use static valueOf instead</ShortMessage>
    <LongMessage>org.apache.commons.beanutils.ConvertUtilsBean.&lt;static initializer for ConvertUtilsBean&gt;() invokes inefficient new Short(short) constructor; use Short.valueOf(short) instead</LongMessage>
    <Class classname="org.apache.commons.beanutils.ConvertUtilsBean" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.ConvertUtilsBean" start="129" end="897" sourcefile="ConvertUtilsBean.java" sourcepath="org/apache/commons/beanutils/ConvertUtilsBean.java">
        <Message>At ConvertUtilsBean.java:[lines 129-897]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.ConvertUtilsBean</Message>
    </Class>
    <Method classname="org.apache.commons.beanutils.ConvertUtilsBean" name="&lt;clinit&gt;" signature="()V" isStatic="true" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.ConvertUtilsBean" start="129" end="406" startBytecode="0" endBytecode="66" sourcefile="ConvertUtilsBean.java" sourcepath="org/apache/commons/beanutils/ConvertUtilsBean.java"/>
      <Message>In method org.apache.commons.beanutils.ConvertUtilsBean.&lt;static initializer for ConvertUtilsBean&gt;()</Message>
    </Method>
    <Method classname="java.lang.Short" name="&lt;init&gt;" signature="(S)V" isStatic="false" role="METHOD_CALLED" classAnnotationNames="jdk.internal.ValueBased">
      <SourceLine classname="java.lang.Short" start="353" end="355" startBytecode="0" endBytecode="69" sourcefile="Short.java" sourcepath="java/lang/Short.java"/>
      <Message>Called method new Short(short)</Message>
    </Method>
    <Method classname="java.lang.Short" name="valueOf" signature="(S)Ljava/lang/Short;" isStatic="true" role="SHOULD_CALL" classAnnotationNames="jdk.internal.ValueBased">
      <SourceLine classname="java.lang.Short" start="275" end="280" startBytecode="0" endBytecode="127" sourcefile="Short.java" sourcepath="java/lang/Short.java"/>
      <Message>Should call Short.valueOf(short) instead</Message>
    </Method>
    <SourceLine classname="org.apache.commons.beanutils.ConvertUtilsBean" primary="true" start="406" end="406" startBytecode="28" endBytecode="28" sourcefile="ConvertUtilsBean.java" sourcepath="org/apache/commons/beanutils/ConvertUtilsBean.java">
      <Message>At ConvertUtilsBean.java:[line 406]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DM_NUMBER_CTOR" priority="2" rank="18" abbrev="Bx" category="PERFORMANCE" instanceHash="1b08a551bd8432bb4bdcea74085217f0" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Method invokes inefficient Number constructor; use static valueOf instead</ShortMessage>
    <LongMessage>new org.apache.commons.beanutils.ConvertUtilsBean() invokes inefficient new Byte(byte) constructor; use Byte.valueOf(byte) instead</LongMessage>
    <Class classname="org.apache.commons.beanutils.ConvertUtilsBean" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.ConvertUtilsBean" start="129" end="897" sourcefile="ConvertUtilsBean.java" sourcepath="org/apache/commons/beanutils/ConvertUtilsBean.java">
        <Message>At ConvertUtilsBean.java:[lines 129-897]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.ConvertUtilsBean</Message>
    </Class>
    <Method classname="org.apache.commons.beanutils.ConvertUtilsBean" name="&lt;init&gt;" signature="()V" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.ConvertUtilsBean" start="159" end="163" startBytecode="0" endBytecode="218" sourcefile="ConvertUtilsBean.java" sourcepath="org/apache/commons/beanutils/ConvertUtilsBean.java"/>
      <Message>In method new org.apache.commons.beanutils.ConvertUtilsBean()</Message>
    </Method>
    <Method classname="java.lang.Byte" name="&lt;init&gt;" signature="(B)V" isStatic="false" role="METHOD_CALLED" classAnnotationNames="jdk.internal.ValueBased">
      <SourceLine classname="java.lang.Byte" start="348" end="350" startBytecode="0" endBytecode="69" sourcefile="Byte.java" sourcepath="java/lang/Byte.java"/>
      <Message>Called method new Byte(byte)</Message>
    </Method>
    <Method classname="java.lang.Byte" name="valueOf" signature="(B)Ljava/lang/Byte;" isStatic="true" role="SHOULD_CALL" classAnnotationNames="jdk.internal.ValueBased">
      <SourceLine classname="java.lang.Byte" start="146" end="147" startBytecode="0" endBytecode="69" sourcefile="Byte.java" sourcepath="java/lang/Byte.java"/>
      <Message>Should call Byte.valueOf(byte) instead</Message>
    </Method>
    <SourceLine classname="org.apache.commons.beanutils.ConvertUtilsBean" primary="true" start="205" end="205" startBytecode="37" endBytecode="37" sourcefile="ConvertUtilsBean.java" sourcepath="org/apache/commons/beanutils/ConvertUtilsBean.java">
      <Message>At ConvertUtilsBean.java:[line 205]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DM_NUMBER_CTOR" priority="2" rank="18" abbrev="Bx" category="PERFORMANCE" instanceHash="462984682e6de34db7f5bd0d49005529" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Method invokes inefficient Number constructor; use static valueOf instead</ShortMessage>
    <LongMessage>new org.apache.commons.beanutils.ConvertUtilsBean() invokes inefficient new Character(char) constructor; use Character.valueOf(char) instead</LongMessage>
    <Class classname="org.apache.commons.beanutils.ConvertUtilsBean" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.ConvertUtilsBean" start="129" end="897" sourcefile="ConvertUtilsBean.java" sourcepath="org/apache/commons/beanutils/ConvertUtilsBean.java">
        <Message>At ConvertUtilsBean.java:[lines 129-897]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.ConvertUtilsBean</Message>
    </Class>
    <Method classname="org.apache.commons.beanutils.ConvertUtilsBean" name="&lt;init&gt;" signature="()V" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.ConvertUtilsBean" start="159" end="163" startBytecode="0" endBytecode="218" sourcefile="ConvertUtilsBean.java" sourcepath="org/apache/commons/beanutils/ConvertUtilsBean.java"/>
      <Message>In method new org.apache.commons.beanutils.ConvertUtilsBean()</Message>
    </Method>
    <Method classname="java.lang.Character" name="&lt;init&gt;" signature="(C)V" isStatic="false" role="METHOD_CALLED" classAnnotationNames="jdk.internal.ValueBased">
      <SourceLine classname="java.lang.Character" start="8548" end="8550" startBytecode="0" endBytecode="69" sourcefile="Character.java" sourcepath="java/lang/Character.java"/>
      <Message>Called method new Character(char)</Message>
    </Method>
    <Method classname="java.lang.Character" name="valueOf" signature="(C)Ljava/lang/Character;" isStatic="true" role="SHOULD_CALL" classAnnotationNames="jdk.internal.ValueBased">
      <SourceLine classname="java.lang.Character" start="8593" end="8596" startBytecode="0" endBytecode="79" sourcefile="Character.java" sourcepath="java/lang/Character.java"/>
      <Message>Should call Character.valueOf(char) instead</Message>
    </Method>
    <SourceLine classname="org.apache.commons.beanutils.ConvertUtilsBean" primary="true" start="238" end="238" startBytecode="50" endBytecode="50" sourcefile="ConvertUtilsBean.java" sourcepath="org/apache/commons/beanutils/ConvertUtilsBean.java">
      <Message>At ConvertUtilsBean.java:[line 238]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DM_NUMBER_CTOR" priority="2" rank="18" abbrev="Bx" category="PERFORMANCE" instanceHash="3e86e1491c75a0acdcf58b36a1d7b35e" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Method invokes inefficient Number constructor; use static valueOf instead</ShortMessage>
    <LongMessage>new org.apache.commons.beanutils.ConvertUtilsBean() invokes inefficient new Integer(int) constructor; use Integer.valueOf(int) instead</LongMessage>
    <Class classname="org.apache.commons.beanutils.ConvertUtilsBean" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.ConvertUtilsBean" start="129" end="897" sourcefile="ConvertUtilsBean.java" sourcepath="org/apache/commons/beanutils/ConvertUtilsBean.java">
        <Message>At ConvertUtilsBean.java:[lines 129-897]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.ConvertUtilsBean</Message>
    </Class>
    <Method classname="org.apache.commons.beanutils.ConvertUtilsBean" name="&lt;init&gt;" signature="()V" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.ConvertUtilsBean" start="159" end="163" startBytecode="0" endBytecode="218" sourcefile="ConvertUtilsBean.java" sourcepath="org/apache/commons/beanutils/ConvertUtilsBean.java"/>
      <Message>In method new org.apache.commons.beanutils.ConvertUtilsBean()</Message>
    </Method>
    <Method classname="java.lang.Integer" name="&lt;init&gt;" signature="(I)V" isStatic="false" role="METHOD_CALLED" classAnnotationNames="jdk.internal.ValueBased">
      <SourceLine classname="java.lang.Integer" start="1104" end="1106" startBytecode="0" endBytecode="69" sourcefile="Integer.java" sourcepath="java/lang/Integer.java"/>
      <Message>Called method new Integer(int)</Message>
    </Method>
    <Method classname="java.lang.Integer" name="valueOf" signature="(I)Ljava/lang/Integer;" isStatic="true" role="SHOULD_CALL" classAnnotationNames="jdk.internal.ValueBased">
      <SourceLine classname="java.lang.Integer" start="1079" end="1081" startBytecode="0" endBytecode="90" sourcefile="Integer.java" sourcepath="java/lang/Integer.java"/>
      <Message>Should call Integer.valueOf(int) instead</Message>
    </Method>
    <SourceLine classname="org.apache.commons.beanutils.ConvertUtilsBean" primary="true" start="339" end="339" startBytecode="86" endBytecode="86" sourcefile="ConvertUtilsBean.java" sourcepath="org/apache/commons/beanutils/ConvertUtilsBean.java">
      <Message>At ConvertUtilsBean.java:[line 339]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DM_NUMBER_CTOR" priority="2" rank="18" abbrev="Bx" category="PERFORMANCE" instanceHash="9589e91e2c02f4ef7128c07ad5305ae1" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Method invokes inefficient Number constructor; use static valueOf instead</ShortMessage>
    <LongMessage>new org.apache.commons.beanutils.ConvertUtilsBean() invokes inefficient new Long(long) constructor; use Long.valueOf(long) instead</LongMessage>
    <Class classname="org.apache.commons.beanutils.ConvertUtilsBean" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.ConvertUtilsBean" start="129" end="897" sourcefile="ConvertUtilsBean.java" sourcepath="org/apache/commons/beanutils/ConvertUtilsBean.java">
        <Message>At ConvertUtilsBean.java:[lines 129-897]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.ConvertUtilsBean</Message>
    </Class>
    <Method classname="org.apache.commons.beanutils.ConvertUtilsBean" name="&lt;init&gt;" signature="()V" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.ConvertUtilsBean" start="159" end="163" startBytecode="0" endBytecode="218" sourcefile="ConvertUtilsBean.java" sourcepath="org/apache/commons/beanutils/ConvertUtilsBean.java"/>
      <Message>In method new org.apache.commons.beanutils.ConvertUtilsBean()</Message>
    </Method>
    <Method classname="java.lang.Long" name="&lt;init&gt;" signature="(J)V" isStatic="false" role="METHOD_CALLED" classAnnotationNames="jdk.internal.ValueBased">
      <SourceLine classname="java.lang.Long" start="1324" end="1326" startBytecode="0" endBytecode="69" sourcefile="Long.java" sourcepath="java/lang/Long.java"/>
      <Message>Called method new Long(long)</Message>
    </Method>
    <Method classname="java.lang.Long" name="valueOf" signature="(J)Ljava/lang/Long;" isStatic="true" role="SHOULD_CALL" classAnnotationNames="jdk.internal.ValueBased">
      <SourceLine classname="java.lang.Long" start="1207" end="1211" startBytecode="0" endBytecode="115" sourcefile="Long.java" sourcepath="java/lang/Long.java"/>
      <Message>Should call Long.valueOf(long) instead</Message>
    </Method>
    <SourceLine classname="org.apache.commons.beanutils.ConvertUtilsBean" primary="true" start="372" end="372" startBytecode="98" endBytecode="98" sourcefile="ConvertUtilsBean.java" sourcepath="org/apache/commons/beanutils/ConvertUtilsBean.java">
      <Message>At ConvertUtilsBean.java:[line 372]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DM_NUMBER_CTOR" priority="2" rank="18" abbrev="Bx" category="PERFORMANCE" instanceHash="137a4d16e05561461f21a986a79cc758" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Method invokes inefficient Number constructor; use static valueOf instead</ShortMessage>
    <LongMessage>org.apache.commons.beanutils.ConvertUtilsBean.setDefaultByte(byte) invokes inefficient new Byte(byte) constructor; use Byte.valueOf(byte) instead</LongMessage>
    <Class classname="org.apache.commons.beanutils.ConvertUtilsBean" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.ConvertUtilsBean" start="129" end="897" sourcefile="ConvertUtilsBean.java" sourcepath="org/apache/commons/beanutils/ConvertUtilsBean.java">
        <Message>At ConvertUtilsBean.java:[lines 129-897]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.ConvertUtilsBean</Message>
    </Class>
    <Method classname="org.apache.commons.beanutils.ConvertUtilsBean" name="setDefaultByte" signature="(B)V" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.ConvertUtilsBean" start="227" end="230" startBytecode="0" endBytecode="111" sourcefile="ConvertUtilsBean.java" sourcepath="org/apache/commons/beanutils/ConvertUtilsBean.java"/>
      <Message>In method org.apache.commons.beanutils.ConvertUtilsBean.setDefaultByte(byte)</Message>
    </Method>
    <Method classname="java.lang.Byte" name="&lt;init&gt;" signature="(B)V" isStatic="false" role="METHOD_CALLED" classAnnotationNames="jdk.internal.ValueBased">
      <SourceLine classname="java.lang.Byte" start="348" end="350" startBytecode="0" endBytecode="69" sourcefile="Byte.java" sourcepath="java/lang/Byte.java"/>
      <Message>Called method new Byte(byte)</Message>
    </Method>
    <Method classname="java.lang.Byte" name="valueOf" signature="(B)Ljava/lang/Byte;" isStatic="true" role="SHOULD_CALL" classAnnotationNames="jdk.internal.ValueBased">
      <SourceLine classname="java.lang.Byte" start="146" end="147" startBytecode="0" endBytecode="69" sourcefile="Byte.java" sourcepath="java/lang/Byte.java"/>
      <Message>Should call Byte.valueOf(byte) instead</Message>
    </Method>
    <SourceLine classname="org.apache.commons.beanutils.ConvertUtilsBean" primary="true" start="227" end="227" startBytecode="6" endBytecode="6" sourcefile="ConvertUtilsBean.java" sourcepath="org/apache/commons/beanutils/ConvertUtilsBean.java">
      <Message>At ConvertUtilsBean.java:[line 227]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DM_NUMBER_CTOR" priority="2" rank="18" abbrev="Bx" category="PERFORMANCE" instanceHash="9a7b253fab49de27c183c16525bf24b4" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Method invokes inefficient Number constructor; use static valueOf instead</ShortMessage>
    <LongMessage>org.apache.commons.beanutils.ConvertUtilsBean.setDefaultCharacter(char) invokes inefficient new Character(char) constructor; use Character.valueOf(char) instead</LongMessage>
    <Class classname="org.apache.commons.beanutils.ConvertUtilsBean" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.ConvertUtilsBean" start="129" end="897" sourcefile="ConvertUtilsBean.java" sourcepath="org/apache/commons/beanutils/ConvertUtilsBean.java">
        <Message>At ConvertUtilsBean.java:[lines 129-897]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.ConvertUtilsBean</Message>
    </Class>
    <Method classname="org.apache.commons.beanutils.ConvertUtilsBean" name="setDefaultCharacter" signature="(C)V" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.ConvertUtilsBean" start="260" end="265" startBytecode="0" endBytecode="111" sourcefile="ConvertUtilsBean.java" sourcepath="org/apache/commons/beanutils/ConvertUtilsBean.java"/>
      <Message>In method org.apache.commons.beanutils.ConvertUtilsBean.setDefaultCharacter(char)</Message>
    </Method>
    <Method classname="java.lang.Character" name="&lt;init&gt;" signature="(C)V" isStatic="false" role="METHOD_CALLED" classAnnotationNames="jdk.internal.ValueBased">
      <SourceLine classname="java.lang.Character" start="8548" end="8550" startBytecode="0" endBytecode="69" sourcefile="Character.java" sourcepath="java/lang/Character.java"/>
      <Message>Called method new Character(char)</Message>
    </Method>
    <Method classname="java.lang.Character" name="valueOf" signature="(C)Ljava/lang/Character;" isStatic="true" role="SHOULD_CALL" classAnnotationNames="jdk.internal.ValueBased">
      <SourceLine classname="java.lang.Character" start="8593" end="8596" startBytecode="0" endBytecode="79" sourcefile="Character.java" sourcepath="java/lang/Character.java"/>
      <Message>Should call Character.valueOf(char) instead</Message>
    </Method>
    <SourceLine classname="org.apache.commons.beanutils.ConvertUtilsBean" primary="true" start="260" end="260" startBytecode="6" endBytecode="6" sourcefile="ConvertUtilsBean.java" sourcepath="org/apache/commons/beanutils/ConvertUtilsBean.java">
      <Message>At ConvertUtilsBean.java:[line 260]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DM_NUMBER_CTOR" priority="2" rank="18" abbrev="Bx" category="PERFORMANCE" instanceHash="cc22dbaf0f038508128152560eb0e2f5" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Method invokes inefficient Number constructor; use static valueOf instead</ShortMessage>
    <LongMessage>org.apache.commons.beanutils.ConvertUtilsBean.setDefaultInteger(int) invokes inefficient new Integer(int) constructor; use Integer.valueOf(int) instead</LongMessage>
    <Class classname="org.apache.commons.beanutils.ConvertUtilsBean" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.ConvertUtilsBean" start="129" end="897" sourcefile="ConvertUtilsBean.java" sourcepath="org/apache/commons/beanutils/ConvertUtilsBean.java">
        <Message>At ConvertUtilsBean.java:[lines 129-897]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.ConvertUtilsBean</Message>
    </Class>
    <Method classname="org.apache.commons.beanutils.ConvertUtilsBean" name="setDefaultInteger" signature="(I)V" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.ConvertUtilsBean" start="361" end="364" startBytecode="0" endBytecode="111" sourcefile="ConvertUtilsBean.java" sourcepath="org/apache/commons/beanutils/ConvertUtilsBean.java"/>
      <Message>In method org.apache.commons.beanutils.ConvertUtilsBean.setDefaultInteger(int)</Message>
    </Method>
    <Method classname="java.lang.Integer" name="&lt;init&gt;" signature="(I)V" isStatic="false" role="METHOD_CALLED" classAnnotationNames="jdk.internal.ValueBased">
      <SourceLine classname="java.lang.Integer" start="1104" end="1106" startBytecode="0" endBytecode="69" sourcefile="Integer.java" sourcepath="java/lang/Integer.java"/>
      <Message>Called method new Integer(int)</Message>
    </Method>
    <Method classname="java.lang.Integer" name="valueOf" signature="(I)Ljava/lang/Integer;" isStatic="true" role="SHOULD_CALL" classAnnotationNames="jdk.internal.ValueBased">
      <SourceLine classname="java.lang.Integer" start="1079" end="1081" startBytecode="0" endBytecode="90" sourcefile="Integer.java" sourcepath="java/lang/Integer.java"/>
      <Message>Should call Integer.valueOf(int) instead</Message>
    </Method>
    <SourceLine classname="org.apache.commons.beanutils.ConvertUtilsBean" primary="true" start="361" end="361" startBytecode="6" endBytecode="6" sourcefile="ConvertUtilsBean.java" sourcepath="org/apache/commons/beanutils/ConvertUtilsBean.java">
      <Message>At ConvertUtilsBean.java:[line 361]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DM_NUMBER_CTOR" priority="2" rank="18" abbrev="Bx" category="PERFORMANCE" instanceHash="89bba857693469c827ca9d66f682b156" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Method invokes inefficient Number constructor; use static valueOf instead</ShortMessage>
    <LongMessage>org.apache.commons.beanutils.ConvertUtilsBean.setDefaultLong(long) invokes inefficient new Long(long) constructor; use Long.valueOf(long) instead</LongMessage>
    <Class classname="org.apache.commons.beanutils.ConvertUtilsBean" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.ConvertUtilsBean" start="129" end="897" sourcefile="ConvertUtilsBean.java" sourcepath="org/apache/commons/beanutils/ConvertUtilsBean.java">
        <Message>At ConvertUtilsBean.java:[lines 129-897]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.ConvertUtilsBean</Message>
    </Class>
    <Method classname="org.apache.commons.beanutils.ConvertUtilsBean" name="setDefaultLong" signature="(J)V" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.ConvertUtilsBean" start="394" end="397" startBytecode="0" endBytecode="111" sourcefile="ConvertUtilsBean.java" sourcepath="org/apache/commons/beanutils/ConvertUtilsBean.java"/>
      <Message>In method org.apache.commons.beanutils.ConvertUtilsBean.setDefaultLong(long)</Message>
    </Method>
    <Method classname="java.lang.Long" name="&lt;init&gt;" signature="(J)V" isStatic="false" role="METHOD_CALLED" classAnnotationNames="jdk.internal.ValueBased">
      <SourceLine classname="java.lang.Long" start="1324" end="1326" startBytecode="0" endBytecode="69" sourcefile="Long.java" sourcepath="java/lang/Long.java"/>
      <Message>Called method new Long(long)</Message>
    </Method>
    <Method classname="java.lang.Long" name="valueOf" signature="(J)Ljava/lang/Long;" isStatic="true" role="SHOULD_CALL" classAnnotationNames="jdk.internal.ValueBased">
      <SourceLine classname="java.lang.Long" start="1207" end="1211" startBytecode="0" endBytecode="115" sourcefile="Long.java" sourcepath="java/lang/Long.java"/>
      <Message>Should call Long.valueOf(long) instead</Message>
    </Method>
    <SourceLine classname="org.apache.commons.beanutils.ConvertUtilsBean" primary="true" start="394" end="394" startBytecode="6" endBytecode="6" sourcefile="ConvertUtilsBean.java" sourcepath="org/apache/commons/beanutils/ConvertUtilsBean.java">
      <Message>At ConvertUtilsBean.java:[line 394]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DM_NUMBER_CTOR" priority="2" rank="18" abbrev="Bx" category="PERFORMANCE" instanceHash="a5f2c81ee78141036110dc59eeb3cf54" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Method invokes inefficient Number constructor; use static valueOf instead</ShortMessage>
    <LongMessage>org.apache.commons.beanutils.ConvertUtilsBean.setDefaultShort(short) invokes inefficient new Short(short) constructor; use Short.valueOf(short) instead</LongMessage>
    <Class classname="org.apache.commons.beanutils.ConvertUtilsBean" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.ConvertUtilsBean" start="129" end="897" sourcefile="ConvertUtilsBean.java" sourcepath="org/apache/commons/beanutils/ConvertUtilsBean.java">
        <Message>At ConvertUtilsBean.java:[lines 129-897]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.ConvertUtilsBean</Message>
    </Class>
    <Method classname="org.apache.commons.beanutils.ConvertUtilsBean" name="setDefaultShort" signature="(S)V" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.ConvertUtilsBean" start="427" end="430" startBytecode="0" endBytecode="108" sourcefile="ConvertUtilsBean.java" sourcepath="org/apache/commons/beanutils/ConvertUtilsBean.java"/>
      <Message>In method org.apache.commons.beanutils.ConvertUtilsBean.setDefaultShort(short)</Message>
    </Method>
    <Method classname="java.lang.Short" name="&lt;init&gt;" signature="(S)V" isStatic="false" role="METHOD_CALLED" classAnnotationNames="jdk.internal.ValueBased">
      <SourceLine classname="java.lang.Short" start="353" end="355" startBytecode="0" endBytecode="69" sourcefile="Short.java" sourcepath="java/lang/Short.java"/>
      <Message>Called method new Short(short)</Message>
    </Method>
    <Method classname="java.lang.Short" name="valueOf" signature="(S)Ljava/lang/Short;" isStatic="true" role="SHOULD_CALL" classAnnotationNames="jdk.internal.ValueBased">
      <SourceLine classname="java.lang.Short" start="275" end="280" startBytecode="0" endBytecode="127" sourcefile="Short.java" sourcepath="java/lang/Short.java"/>
      <Message>Should call Short.valueOf(short) instead</Message>
    </Method>
    <SourceLine classname="org.apache.commons.beanutils.ConvertUtilsBean" primary="true" start="427" end="427" startBytecode="5" endBytecode="5" sourcefile="ConvertUtilsBean.java" sourcepath="org/apache/commons/beanutils/ConvertUtilsBean.java">
      <Message>At ConvertUtilsBean.java:[line 427]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="MC_OVERRIDABLE_METHOD_CALL_IN_CONSTRUCTOR" priority="3" rank="20" abbrev="MC" category="MALICIOUS_CODE" instanceHash="fd5bbb1a6dc669441d7dc23d2eeb1e2f" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>An overridable method is called from a constructor</ShortMessage>
    <LongMessage>Overridable method deregister is called from constructor new org.apache.commons.beanutils.ConvertUtilsBean().</LongMessage>
    <Class classname="org.apache.commons.beanutils.ConvertUtilsBean" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.ConvertUtilsBean" start="129" end="897" sourcefile="ConvertUtilsBean.java" sourcepath="org/apache/commons/beanutils/ConvertUtilsBean.java">
        <Message>At ConvertUtilsBean.java:[lines 129-897]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.ConvertUtilsBean</Message>
    </Class>
    <Method classname="org.apache.commons.beanutils.ConvertUtilsBean" name="&lt;init&gt;" signature="()V" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.ConvertUtilsBean" start="159" end="163" startBytecode="0" endBytecode="218" sourcefile="ConvertUtilsBean.java" sourcepath="org/apache/commons/beanutils/ConvertUtilsBean.java"/>
      <Message>In method new org.apache.commons.beanutils.ConvertUtilsBean()</Message>
    </Method>
    <String value="deregister">
      <Message>Value deregister</Message>
    </String>
    <SourceLine classname="org.apache.commons.beanutils.ConvertUtilsBean" primary="true" start="161" end="161" startBytecode="113" endBytecode="113" sourcefile="ConvertUtilsBean.java" sourcepath="org/apache/commons/beanutils/ConvertUtilsBean.java">
      <Message>At ConvertUtilsBean.java:[line 161]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="ST_WRITE_TO_STATIC_FROM_INSTANCE_METHOD" priority="1" rank="15" abbrev="ST" category="STYLE" instanceHash="63e9dcb781f5d9442ff2fa8991f27783" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Write to static field from instance method</ShortMessage>
    <LongMessage>Write to static field org.apache.commons.beanutils.ConvertUtilsBean.defaultShort from instance method org.apache.commons.beanutils.ConvertUtilsBean.setDefaultShort(short)</LongMessage>
    <Class classname="org.apache.commons.beanutils.ConvertUtilsBean" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.ConvertUtilsBean" start="129" end="897" sourcefile="ConvertUtilsBean.java" sourcepath="org/apache/commons/beanutils/ConvertUtilsBean.java">
        <Message>At ConvertUtilsBean.java:[lines 129-897]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.ConvertUtilsBean</Message>
    </Class>
    <Method classname="org.apache.commons.beanutils.ConvertUtilsBean" name="setDefaultShort" signature="(S)V" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.ConvertUtilsBean" start="427" end="430" startBytecode="0" endBytecode="108" sourcefile="ConvertUtilsBean.java" sourcepath="org/apache/commons/beanutils/ConvertUtilsBean.java"/>
      <Message>In method org.apache.commons.beanutils.ConvertUtilsBean.setDefaultShort(short)</Message>
    </Method>
    <Field classname="org.apache.commons.beanutils.ConvertUtilsBean" name="defaultShort" signature="Ljava/lang/Short;" isStatic="true" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.ConvertUtilsBean" sourcefile="ConvertUtilsBean.java" sourcepath="org/apache/commons/beanutils/ConvertUtilsBean.java">
        <Message>In ConvertUtilsBean.java</Message>
      </SourceLine>
      <Message>Field org.apache.commons.beanutils.ConvertUtilsBean.defaultShort</Message>
    </Field>
    <SourceLine classname="org.apache.commons.beanutils.ConvertUtilsBean" primary="true" start="427" end="427" startBytecode="8" endBytecode="8" sourcefile="ConvertUtilsBean.java" sourcepath="org/apache/commons/beanutils/ConvertUtilsBean.java">
      <Message>At ConvertUtilsBean.java:[line 427]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="SE_NO_SERIALVERSIONID" priority="3" rank="19" abbrev="SnVI" category="BAD_PRACTICE" instanceHash="adea6eeb4b739a529e20954761505ae4" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Class is Serializable, but doesn&apos;t define serialVersionUID</ShortMessage>
    <LongMessage>org.apache.commons.beanutils.ConvertingWrapDynaBean is Serializable; consider declaring a serialVersionUID</LongMessage>
    <Class classname="org.apache.commons.beanutils.ConvertingWrapDynaBean" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.ConvertingWrapDynaBean" start="47" end="81" sourcefile="ConvertingWrapDynaBean.java" sourcepath="org/apache/commons/beanutils/ConvertingWrapDynaBean.java">
        <Message>At ConvertingWrapDynaBean.java:[lines 47-81]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.ConvertingWrapDynaBean</Message>
    </Class>
    <SourceLine classname="org.apache.commons.beanutils.ConvertingWrapDynaBean" start="47" end="81" sourcefile="ConvertingWrapDynaBean.java" sourcepath="org/apache/commons/beanutils/ConvertingWrapDynaBean.java" synthetic="true">
      <Message>At ConvertingWrapDynaBean.java:[lines 47-81]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DM_CONVERT_CASE" priority="3" rank="20" abbrev="Dm" category="I18N" instanceHash="96983513e365ccd510b5e309a0c46aee" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Consider using Locale parameterized version of invoked method</ShortMessage>
    <LongMessage>Use of non-localized String.toUpperCase() or String.toLowerCase() in org.apache.commons.beanutils.DefaultBeanIntrospector.handleIndexedPropertyDescriptors(Class, PropertyDescriptor[])</LongMessage>
    <Class classname="org.apache.commons.beanutils.DefaultBeanIntrospector" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.DefaultBeanIntrospector" start="51" end="180" sourcefile="DefaultBeanIntrospector.java" sourcepath="org/apache/commons/beanutils/DefaultBeanIntrospector.java">
        <Message>At DefaultBeanIntrospector.java:[lines 51-180]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.DefaultBeanIntrospector</Message>
    </Class>
    <Method classname="org.apache.commons.beanutils.DefaultBeanIntrospector" name="handleIndexedPropertyDescriptors" signature="(Ljava/lang/Class;[Ljava/beans/PropertyDescriptor;)V" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.DefaultBeanIntrospector" start="124" end="180" startBytecode="0" endBytecode="860" sourcefile="DefaultBeanIntrospector.java" sourcepath="org/apache/commons/beanutils/DefaultBeanIntrospector.java"/>
      <Message>In method org.apache.commons.beanutils.DefaultBeanIntrospector.handleIndexedPropertyDescriptors(Class, PropertyDescriptor[])</Message>
    </Method>
    <SourceLine classname="org.apache.commons.beanutils.DefaultBeanIntrospector" primary="true" start="128" end="128" startBytecode="54" endBytecode="54" sourcefile="DefaultBeanIntrospector.java" sourcepath="org/apache/commons/beanutils/DefaultBeanIntrospector.java">
      <Message>At DefaultBeanIntrospector.java:[line 128]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="SE_NO_SERIALVERSIONID" priority="2" rank="16" abbrev="SnVI" category="BAD_PRACTICE" instanceHash="1a434d94dbfa81f09ead158afc673e79" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Class is Serializable, but doesn&apos;t define serialVersionUID</ShortMessage>
    <LongMessage>org.apache.commons.beanutils.DynaProperty is Serializable; consider declaring a serialVersionUID</LongMessage>
    <Class classname="org.apache.commons.beanutils.DynaProperty" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.DynaProperty" start="76" end="368" sourcefile="DynaProperty.java" sourcepath="org/apache/commons/beanutils/DynaProperty.java">
        <Message>At DynaProperty.java:[lines 76-368]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.DynaProperty</Message>
    </Class>
    <SourceLine classname="org.apache.commons.beanutils.DynaProperty" start="76" end="368" sourcefile="DynaProperty.java" sourcepath="org/apache/commons/beanutils/DynaProperty.java" synthetic="true">
      <Message>At DynaProperty.java:[lines 76-368]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="CT_CONSTRUCTOR_THROW" priority="2" rank="16" abbrev="CT" category="BAD_PRACTICE" instanceHash="e996938654b5d68ba37e94d623622131" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Be wary of letting constructors throw exceptions.</ShortMessage>
    <LongMessage>Exception thrown in class org.apache.commons.beanutils.FluentPropertyBeanIntrospector at new org.apache.commons.beanutils.FluentPropertyBeanIntrospector(String) will leave the constructor. The object under construction remains partially initialized and may be vulnerable to Finalizer attacks.</LongMessage>
    <Class classname="org.apache.commons.beanutils.FluentPropertyBeanIntrospector" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.FluentPropertyBeanIntrospector" start="84" end="178" sourcefile="FluentPropertyBeanIntrospector.java" sourcepath="org/apache/commons/beanutils/FluentPropertyBeanIntrospector.java">
        <Message>At FluentPropertyBeanIntrospector.java:[lines 84-178]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.FluentPropertyBeanIntrospector</Message>
    </Class>
    <Method classname="org.apache.commons.beanutils.FluentPropertyBeanIntrospector" name="&lt;init&gt;" signature="(Ljava/lang/String;)V" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.FluentPropertyBeanIntrospector" start="98" end="104" startBytecode="0" endBytecode="127" sourcefile="FluentPropertyBeanIntrospector.java" sourcepath="org/apache/commons/beanutils/FluentPropertyBeanIntrospector.java"/>
      <Message>In method new org.apache.commons.beanutils.FluentPropertyBeanIntrospector(String)</Message>
    </Method>
    <SourceLine classname="org.apache.commons.beanutils.FluentPropertyBeanIntrospector" primary="true" start="100" end="100" startBytecode="28" endBytecode="28" sourcefile="FluentPropertyBeanIntrospector.java" sourcepath="org/apache/commons/beanutils/FluentPropertyBeanIntrospector.java">
      <Message>At FluentPropertyBeanIntrospector.java:[line 100]</Message>
    </SourceLine>
    <SourceLine classname="org.apache.commons.beanutils.FluentPropertyBeanIntrospector" start="100" end="100" startBytecode="28" endBytecode="28" sourcefile="FluentPropertyBeanIntrospector.java" sourcepath="org/apache/commons/beanutils/FluentPropertyBeanIntrospector.java">
      <Message>At FluentPropertyBeanIntrospector.java:[line 100]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DM_CONVERT_CASE" priority="3" rank="20" abbrev="Dm" category="I18N" instanceHash="12aaa84794614daa46ad14893b38d0a2" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Consider using Locale parameterized version of invoked method</ShortMessage>
    <LongMessage>Use of non-localized String.toUpperCase() or String.toLowerCase() in org.apache.commons.beanutils.JDBCDynaClass.createDynaProperty(ResultSetMetaData, int)</LongMessage>
    <Class classname="org.apache.commons.beanutils.JDBCDynaClass" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.JDBCDynaClass" start="37" end="304" sourcefile="JDBCDynaClass.java" sourcepath="org/apache/commons/beanutils/JDBCDynaClass.java">
        <Message>At JDBCDynaClass.java:[lines 37-304]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.JDBCDynaClass</Message>
    </Class>
    <Method classname="org.apache.commons.beanutils.JDBCDynaClass" name="createDynaProperty" signature="(Ljava/sql/ResultSetMetaData;I)Lorg/apache/commons/beanutils/DynaProperty;" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.JDBCDynaClass" start="183" end="221" startBytecode="0" endBytecode="535" sourcefile="JDBCDynaClass.java" sourcepath="org/apache/commons/beanutils/JDBCDynaClass.java"/>
      <Message>In method org.apache.commons.beanutils.JDBCDynaClass.createDynaProperty(ResultSetMetaData, int)</Message>
    </Method>
    <SourceLine classname="org.apache.commons.beanutils.JDBCDynaClass" primary="true" start="190" end="190" startBytecode="47" endBytecode="47" sourcefile="JDBCDynaClass.java" sourcepath="org/apache/commons/beanutils/JDBCDynaClass.java">
      <Message>At JDBCDynaClass.java:[line 190]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE" priority="3" rank="20" abbrev="RCN" category="STYLE" instanceHash="f4995c9fed909c87be3c42eef59045a5" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="476">
    <ShortMessage>Redundant nullcheck of value known to be non-null</ShortMessage>
    <LongMessage>Redundant nullcheck of dynaProperty, which is known to be non-null in org.apache.commons.beanutils.JDBCDynaClass.introspect(ResultSet)</LongMessage>
    <Class classname="org.apache.commons.beanutils.JDBCDynaClass" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.JDBCDynaClass" start="37" end="304" sourcefile="JDBCDynaClass.java" sourcepath="org/apache/commons/beanutils/JDBCDynaClass.java">
        <Message>At JDBCDynaClass.java:[lines 37-304]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.JDBCDynaClass</Message>
    </Class>
    <Method classname="org.apache.commons.beanutils.JDBCDynaClass" name="introspect" signature="(Ljava/sql/ResultSet;)V" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.JDBCDynaClass" start="239" end="256" startBytecode="0" endBytecode="355" sourcefile="JDBCDynaClass.java" sourcepath="org/apache/commons/beanutils/JDBCDynaClass.java"/>
      <Message>In method org.apache.commons.beanutils.JDBCDynaClass.introspect(ResultSet)</Message>
    </Method>
    <LocalVariable name="dynaProperty" register="6" pc="42" role="LOCAL_VARIABLE_VALUE_OF">
      <Message>Value loaded from dynaProperty</Message>
    </LocalVariable>
    <Method classname="org.apache.commons.beanutils.JDBCDynaClass" name="createDynaProperty" signature="(Ljava/sql/ResultSetMetaData;I)Lorg/apache/commons/beanutils/DynaProperty;" isStatic="false" role="METHOD_RETURN_VALUE_OF">
      <SourceLine classname="org.apache.commons.beanutils.JDBCDynaClass" start="183" end="221" startBytecode="0" endBytecode="535" sourcefile="JDBCDynaClass.java" sourcepath="org/apache/commons/beanutils/JDBCDynaClass.java"/>
      <Message>Return value of org.apache.commons.beanutils.JDBCDynaClass.createDynaProperty(ResultSetMetaData, int) of type org.apache.commons.beanutils.DynaProperty</Message>
    </Method>
    <SourceLine classname="org.apache.commons.beanutils.JDBCDynaClass" primary="true" start="244" end="244" startBytecode="44" endBytecode="44" sourcefile="JDBCDynaClass.java" sourcepath="org/apache/commons/beanutils/JDBCDynaClass.java" role="SOURCE_REDUNDANT_NULL_CHECK">
      <Message>Redundant null check at JDBCDynaClass.java:[line 244]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DM_FP_NUMBER_CTOR" priority="3" rank="20" abbrev="Bx" category="PERFORMANCE" instanceHash="78824d770ef0b788e080cee7c4c7a7cf" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Method invokes inefficient floating-point Number constructor; use static valueOf instead</ShortMessage>
    <LongMessage>org.apache.commons.beanutils.LazyDynaBean.&lt;static initializer for LazyDynaBean&gt;() invokes inefficient new Double(double) constructor; use Double.valueOf(double) instead</LongMessage>
    <Class classname="org.apache.commons.beanutils.LazyDynaBean" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.LazyDynaBean" start="120" end="941" sourcefile="LazyDynaBean.java" sourcepath="org/apache/commons/beanutils/LazyDynaBean.java">
        <Message>At LazyDynaBean.java:[lines 120-941]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.LazyDynaBean</Message>
    </Class>
    <Method classname="org.apache.commons.beanutils.LazyDynaBean" name="&lt;clinit&gt;" signature="()V" isStatic="true" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.LazyDynaBean" start="123" end="139" startBytecode="0" endBytecode="158" sourcefile="LazyDynaBean.java" sourcepath="org/apache/commons/beanutils/LazyDynaBean.java"/>
      <Message>In method org.apache.commons.beanutils.LazyDynaBean.&lt;static initializer for LazyDynaBean&gt;()</Message>
    </Method>
    <Method classname="java.lang.Double" name="&lt;init&gt;" signature="(D)V" isStatic="false" role="METHOD_CALLED" classAnnotationNames="jdk.internal.ValueBased">
      <SourceLine classname="java.lang.Double" start="711" end="713" startBytecode="0" endBytecode="69" sourcefile="Double.java" sourcepath="java/lang/Double.java"/>
      <Message>Called method new Double(double)</Message>
    </Method>
    <Method classname="java.lang.Double" name="valueOf" signature="(D)Ljava/lang/Double;" isStatic="true" role="SHOULD_CALL" classAnnotationNames="jdk.internal.ValueBased">
      <SourceLine classname="java.lang.Double" start="632" end="632" startBytecode="0" endBytecode="50" sourcefile="Double.java" sourcepath="java/lang/Double.java"/>
      <Message>Should call Double.valueOf(double) instead</Message>
    </Method>
    <SourceLine classname="org.apache.commons.beanutils.LazyDynaBean" primary="true" start="139" end="139" startBytecode="96" endBytecode="96" sourcefile="LazyDynaBean.java" sourcepath="org/apache/commons/beanutils/LazyDynaBean.java">
      <Message>At LazyDynaBean.java:[line 139]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DM_FP_NUMBER_CTOR" priority="3" rank="20" abbrev="Bx" category="PERFORMANCE" instanceHash="1ea0a3c6b8d9ccf302eeaafadfa00fa1" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Method invokes inefficient floating-point Number constructor; use static valueOf instead</ShortMessage>
    <LongMessage>org.apache.commons.beanutils.LazyDynaBean.&lt;static initializer for LazyDynaBean&gt;() invokes inefficient new Float(float) constructor; use Float.valueOf(float) instead</LongMessage>
    <Class classname="org.apache.commons.beanutils.LazyDynaBean" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.LazyDynaBean" start="120" end="941" sourcefile="LazyDynaBean.java" sourcepath="org/apache/commons/beanutils/LazyDynaBean.java">
        <Message>At LazyDynaBean.java:[lines 120-941]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.LazyDynaBean</Message>
    </Class>
    <Method classname="org.apache.commons.beanutils.LazyDynaBean" name="&lt;clinit&gt;" signature="()V" isStatic="true" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.LazyDynaBean" start="123" end="139" startBytecode="0" endBytecode="158" sourcefile="LazyDynaBean.java" sourcepath="org/apache/commons/beanutils/LazyDynaBean.java"/>
      <Message>In method org.apache.commons.beanutils.LazyDynaBean.&lt;static initializer for LazyDynaBean&gt;()</Message>
    </Method>
    <Method classname="java.lang.Float" name="&lt;init&gt;" signature="(F)V" isStatic="false" role="METHOD_CALLED" classAnnotationNames="jdk.internal.ValueBased">
      <SourceLine classname="java.lang.Float" start="537" end="539" startBytecode="0" endBytecode="69" sourcefile="Float.java" sourcepath="java/lang/Float.java"/>
      <Message>Called method new Float(float)</Message>
    </Method>
    <Method classname="java.lang.Float" name="valueOf" signature="(F)Ljava/lang/Float;" isStatic="true" role="SHOULD_CALL" classAnnotationNames="jdk.internal.ValueBased">
      <SourceLine classname="java.lang.Float" start="458" end="458" startBytecode="0" endBytecode="50" sourcefile="Float.java" sourcepath="java/lang/Float.java"/>
      <Message>Should call Float.valueOf(float) instead</Message>
    </Method>
    <SourceLine classname="org.apache.commons.beanutils.LazyDynaBean" primary="true" start="137" end="137" startBytecode="85" endBytecode="85" sourcefile="LazyDynaBean.java" sourcepath="org/apache/commons/beanutils/LazyDynaBean.java">
      <Message>At LazyDynaBean.java:[line 137]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DM_NUMBER_CTOR" priority="2" rank="18" abbrev="Bx" category="PERFORMANCE" instanceHash="ae78ccac1765379186339e69f84b60c3" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Method invokes inefficient Number constructor; use static valueOf instead</ShortMessage>
    <LongMessage>org.apache.commons.beanutils.LazyDynaBean.&lt;static initializer for LazyDynaBean&gt;() invokes inefficient new Byte(byte) constructor; use Byte.valueOf(byte) instead</LongMessage>
    <Class classname="org.apache.commons.beanutils.LazyDynaBean" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.LazyDynaBean" start="120" end="941" sourcefile="LazyDynaBean.java" sourcepath="org/apache/commons/beanutils/LazyDynaBean.java">
        <Message>At LazyDynaBean.java:[lines 120-941]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.LazyDynaBean</Message>
    </Class>
    <Method classname="org.apache.commons.beanutils.LazyDynaBean" name="&lt;clinit&gt;" signature="()V" isStatic="true" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.LazyDynaBean" start="123" end="139" startBytecode="0" endBytecode="158" sourcefile="LazyDynaBean.java" sourcepath="org/apache/commons/beanutils/LazyDynaBean.java"/>
      <Message>In method org.apache.commons.beanutils.LazyDynaBean.&lt;static initializer for LazyDynaBean&gt;()</Message>
    </Method>
    <Method classname="java.lang.Byte" name="&lt;init&gt;" signature="(B)V" isStatic="false" role="METHOD_CALLED" classAnnotationNames="jdk.internal.ValueBased">
      <SourceLine classname="java.lang.Byte" start="348" end="350" startBytecode="0" endBytecode="69" sourcefile="Byte.java" sourcepath="java/lang/Byte.java"/>
      <Message>Called method new Byte(byte)</Message>
    </Method>
    <Method classname="java.lang.Byte" name="valueOf" signature="(B)Ljava/lang/Byte;" isStatic="true" role="SHOULD_CALL" classAnnotationNames="jdk.internal.ValueBased">
      <SourceLine classname="java.lang.Byte" start="146" end="147" startBytecode="0" endBytecode="69" sourcefile="Byte.java" sourcepath="java/lang/Byte.java"/>
      <Message>Should call Byte.valueOf(byte) instead</Message>
    </Method>
    <SourceLine classname="org.apache.commons.beanutils.LazyDynaBean" primary="true" start="129" end="129" startBytecode="41" endBytecode="41" sourcefile="LazyDynaBean.java" sourcepath="org/apache/commons/beanutils/LazyDynaBean.java">
      <Message>At LazyDynaBean.java:[line 129]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DM_NUMBER_CTOR" priority="2" rank="18" abbrev="Bx" category="PERFORMANCE" instanceHash="6594ee4c221554c99bee3548d01cb504" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Method invokes inefficient Number constructor; use static valueOf instead</ShortMessage>
    <LongMessage>org.apache.commons.beanutils.LazyDynaBean.&lt;static initializer for LazyDynaBean&gt;() invokes inefficient new Character(char) constructor; use Character.valueOf(char) instead</LongMessage>
    <Class classname="org.apache.commons.beanutils.LazyDynaBean" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.LazyDynaBean" start="120" end="941" sourcefile="LazyDynaBean.java" sourcepath="org/apache/commons/beanutils/LazyDynaBean.java">
        <Message>At LazyDynaBean.java:[lines 120-941]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.LazyDynaBean</Message>
    </Class>
    <Method classname="org.apache.commons.beanutils.LazyDynaBean" name="&lt;clinit&gt;" signature="()V" isStatic="true" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.LazyDynaBean" start="123" end="139" startBytecode="0" endBytecode="158" sourcefile="LazyDynaBean.java" sourcepath="org/apache/commons/beanutils/LazyDynaBean.java"/>
      <Message>In method org.apache.commons.beanutils.LazyDynaBean.&lt;static initializer for LazyDynaBean&gt;()</Message>
    </Method>
    <Method classname="java.lang.Character" name="&lt;init&gt;" signature="(C)V" isStatic="false" role="METHOD_CALLED" classAnnotationNames="jdk.internal.ValueBased">
      <SourceLine classname="java.lang.Character" start="8548" end="8550" startBytecode="0" endBytecode="69" sourcefile="Character.java" sourcepath="java/lang/Character.java"/>
      <Message>Called method new Character(char)</Message>
    </Method>
    <Method classname="java.lang.Character" name="valueOf" signature="(C)Ljava/lang/Character;" isStatic="true" role="SHOULD_CALL" classAnnotationNames="jdk.internal.ValueBased">
      <SourceLine classname="java.lang.Character" start="8593" end="8596" startBytecode="0" endBytecode="79" sourcefile="Character.java" sourcepath="java/lang/Character.java"/>
      <Message>Should call Character.valueOf(char) instead</Message>
    </Method>
    <SourceLine classname="org.apache.commons.beanutils.LazyDynaBean" primary="true" start="127" end="127" startBytecode="30" endBytecode="30" sourcefile="LazyDynaBean.java" sourcepath="org/apache/commons/beanutils/LazyDynaBean.java">
      <Message>At LazyDynaBean.java:[line 127]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DM_NUMBER_CTOR" priority="2" rank="18" abbrev="Bx" category="PERFORMANCE" instanceHash="e3ef69d2c40319dd547da1b2976c7388" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Method invokes inefficient Number constructor; use static valueOf instead</ShortMessage>
    <LongMessage>org.apache.commons.beanutils.LazyDynaBean.&lt;static initializer for LazyDynaBean&gt;() invokes inefficient new Integer(int) constructor; use Integer.valueOf(int) instead</LongMessage>
    <Class classname="org.apache.commons.beanutils.LazyDynaBean" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.LazyDynaBean" start="120" end="941" sourcefile="LazyDynaBean.java" sourcepath="org/apache/commons/beanutils/LazyDynaBean.java">
        <Message>At LazyDynaBean.java:[lines 120-941]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.LazyDynaBean</Message>
    </Class>
    <Method classname="org.apache.commons.beanutils.LazyDynaBean" name="&lt;clinit&gt;" signature="()V" isStatic="true" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.LazyDynaBean" start="123" end="139" startBytecode="0" endBytecode="158" sourcefile="LazyDynaBean.java" sourcepath="org/apache/commons/beanutils/LazyDynaBean.java"/>
      <Message>In method org.apache.commons.beanutils.LazyDynaBean.&lt;static initializer for LazyDynaBean&gt;()</Message>
    </Method>
    <Method classname="java.lang.Integer" name="&lt;init&gt;" signature="(I)V" isStatic="false" role="METHOD_CALLED" classAnnotationNames="jdk.internal.ValueBased">
      <SourceLine classname="java.lang.Integer" start="1104" end="1106" startBytecode="0" endBytecode="69" sourcefile="Integer.java" sourcepath="java/lang/Integer.java"/>
      <Message>Called method new Integer(int)</Message>
    </Method>
    <Method classname="java.lang.Integer" name="valueOf" signature="(I)Ljava/lang/Integer;" isStatic="true" role="SHOULD_CALL" classAnnotationNames="jdk.internal.ValueBased">
      <SourceLine classname="java.lang.Integer" start="1079" end="1081" startBytecode="0" endBytecode="90" sourcefile="Integer.java" sourcepath="java/lang/Integer.java"/>
      <Message>Should call Integer.valueOf(int) instead</Message>
    </Method>
    <SourceLine classname="org.apache.commons.beanutils.LazyDynaBean" primary="true" start="133" end="133" startBytecode="63" endBytecode="63" sourcefile="LazyDynaBean.java" sourcepath="org/apache/commons/beanutils/LazyDynaBean.java">
      <Message>At LazyDynaBean.java:[line 133]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DM_NUMBER_CTOR" priority="2" rank="18" abbrev="Bx" category="PERFORMANCE" instanceHash="2294fdef32717c4ae9f0f591b3f957af" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Method invokes inefficient Number constructor; use static valueOf instead</ShortMessage>
    <LongMessage>org.apache.commons.beanutils.LazyDynaBean.&lt;static initializer for LazyDynaBean&gt;() invokes inefficient new Long(long) constructor; use Long.valueOf(long) instead</LongMessage>
    <Class classname="org.apache.commons.beanutils.LazyDynaBean" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.LazyDynaBean" start="120" end="941" sourcefile="LazyDynaBean.java" sourcepath="org/apache/commons/beanutils/LazyDynaBean.java">
        <Message>At LazyDynaBean.java:[lines 120-941]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.LazyDynaBean</Message>
    </Class>
    <Method classname="org.apache.commons.beanutils.LazyDynaBean" name="&lt;clinit&gt;" signature="()V" isStatic="true" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.LazyDynaBean" start="123" end="139" startBytecode="0" endBytecode="158" sourcefile="LazyDynaBean.java" sourcepath="org/apache/commons/beanutils/LazyDynaBean.java"/>
      <Message>In method org.apache.commons.beanutils.LazyDynaBean.&lt;static initializer for LazyDynaBean&gt;()</Message>
    </Method>
    <Method classname="java.lang.Long" name="&lt;init&gt;" signature="(J)V" isStatic="false" role="METHOD_CALLED" classAnnotationNames="jdk.internal.ValueBased">
      <SourceLine classname="java.lang.Long" start="1324" end="1326" startBytecode="0" endBytecode="69" sourcefile="Long.java" sourcepath="java/lang/Long.java"/>
      <Message>Called method new Long(long)</Message>
    </Method>
    <Method classname="java.lang.Long" name="valueOf" signature="(J)Ljava/lang/Long;" isStatic="true" role="SHOULD_CALL" classAnnotationNames="jdk.internal.ValueBased">
      <SourceLine classname="java.lang.Long" start="1207" end="1211" startBytecode="0" endBytecode="115" sourcefile="Long.java" sourcepath="java/lang/Long.java"/>
      <Message>Should call Long.valueOf(long) instead</Message>
    </Method>
    <SourceLine classname="org.apache.commons.beanutils.LazyDynaBean" primary="true" start="135" end="135" startBytecode="74" endBytecode="74" sourcefile="LazyDynaBean.java" sourcepath="org/apache/commons/beanutils/LazyDynaBean.java">
      <Message>At LazyDynaBean.java:[line 135]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DM_NUMBER_CTOR" priority="2" rank="18" abbrev="Bx" category="PERFORMANCE" instanceHash="8b2d51befb4cc3ca7e1b3ae147bf6bc7" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Method invokes inefficient Number constructor; use static valueOf instead</ShortMessage>
    <LongMessage>org.apache.commons.beanutils.LazyDynaBean.&lt;static initializer for LazyDynaBean&gt;() invokes inefficient new Short(short) constructor; use Short.valueOf(short) instead</LongMessage>
    <Class classname="org.apache.commons.beanutils.LazyDynaBean" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.LazyDynaBean" start="120" end="941" sourcefile="LazyDynaBean.java" sourcepath="org/apache/commons/beanutils/LazyDynaBean.java">
        <Message>At LazyDynaBean.java:[lines 120-941]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.LazyDynaBean</Message>
    </Class>
    <Method classname="org.apache.commons.beanutils.LazyDynaBean" name="&lt;clinit&gt;" signature="()V" isStatic="true" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.LazyDynaBean" start="123" end="139" startBytecode="0" endBytecode="158" sourcefile="LazyDynaBean.java" sourcepath="org/apache/commons/beanutils/LazyDynaBean.java"/>
      <Message>In method org.apache.commons.beanutils.LazyDynaBean.&lt;static initializer for LazyDynaBean&gt;()</Message>
    </Method>
    <Method classname="java.lang.Short" name="&lt;init&gt;" signature="(S)V" isStatic="false" role="METHOD_CALLED" classAnnotationNames="jdk.internal.ValueBased">
      <SourceLine classname="java.lang.Short" start="353" end="355" startBytecode="0" endBytecode="69" sourcefile="Short.java" sourcepath="java/lang/Short.java"/>
      <Message>Called method new Short(short)</Message>
    </Method>
    <Method classname="java.lang.Short" name="valueOf" signature="(S)Ljava/lang/Short;" isStatic="true" role="SHOULD_CALL" classAnnotationNames="jdk.internal.ValueBased">
      <SourceLine classname="java.lang.Short" start="275" end="280" startBytecode="0" endBytecode="127" sourcefile="Short.java" sourcepath="java/lang/Short.java"/>
      <Message>Should call Short.valueOf(short) instead</Message>
    </Method>
    <SourceLine classname="org.apache.commons.beanutils.LazyDynaBean" primary="true" start="131" end="131" startBytecode="52" endBytecode="52" sourcefile="LazyDynaBean.java" sourcepath="org/apache/commons/beanutils/LazyDynaBean.java">
      <Message>At LazyDynaBean.java:[line 131]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="d67cf59d826bbfb5bf36abbc3b6222a" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.apache.commons.beanutils.LazyDynaBean.getDynaClass() may expose internal representation by returning LazyDynaBean.dynaClass</LongMessage>
    <Class classname="org.apache.commons.beanutils.LazyDynaBean" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.LazyDynaBean" start="120" end="941" sourcefile="LazyDynaBean.java" sourcepath="org/apache/commons/beanutils/LazyDynaBean.java">
        <Message>At LazyDynaBean.java:[lines 120-941]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.LazyDynaBean</Message>
    </Class>
    <Method classname="org.apache.commons.beanutils.LazyDynaBean" name="getDynaClass" signature="()Lorg/apache/commons/beanutils/DynaClass;" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.LazyDynaBean" start="415" end="415" startBytecode="0" endBytecode="46" sourcefile="LazyDynaBean.java" sourcepath="org/apache/commons/beanutils/LazyDynaBean.java"/>
      <Message>In method org.apache.commons.beanutils.LazyDynaBean.getDynaClass()</Message>
    </Method>
    <Field classname="org.apache.commons.beanutils.LazyDynaBean" name="dynaClass" signature="Lorg/apache/commons/beanutils/MutableDynaClass;" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.LazyDynaBean" sourcefile="LazyDynaBean.java" sourcepath="org/apache/commons/beanutils/LazyDynaBean.java">
        <Message>In LazyDynaBean.java</Message>
      </SourceLine>
      <Message>Field org.apache.commons.beanutils.LazyDynaBean.dynaClass</Message>
    </Field>
    <SourceLine classname="org.apache.commons.beanutils.LazyDynaBean" primary="true" start="415" end="415" startBytecode="4" endBytecode="4" sourcefile="LazyDynaBean.java" sourcepath="org/apache/commons/beanutils/LazyDynaBean.java">
      <Message>At LazyDynaBean.java:[line 415]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="8bd5a08a61beac429b499e3d4c420bc4" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.apache.commons.beanutils.LazyDynaBean.getMap() may expose internal representation by returning LazyDynaBean.mapDecorator</LongMessage>
    <Class classname="org.apache.commons.beanutils.LazyDynaBean" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.LazyDynaBean" start="120" end="941" sourcefile="LazyDynaBean.java" sourcepath="org/apache/commons/beanutils/LazyDynaBean.java">
        <Message>At LazyDynaBean.java:[lines 120-941]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.LazyDynaBean</Message>
    </Class>
    <Method classname="org.apache.commons.beanutils.LazyDynaBean" name="getMap" signature="()Ljava/util/Map;" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.LazyDynaBean" start="208" end="211" startBytecode="0" endBytecode="82" sourcefile="LazyDynaBean.java" sourcepath="org/apache/commons/beanutils/LazyDynaBean.java"/>
      <Message>In method org.apache.commons.beanutils.LazyDynaBean.getMap()</Message>
    </Method>
    <Field classname="org.apache.commons.beanutils.LazyDynaBean" name="mapDecorator" signature="Ljava/util/Map;" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.LazyDynaBean" sourcefile="LazyDynaBean.java" sourcepath="org/apache/commons/beanutils/LazyDynaBean.java">
        <Message>In LazyDynaBean.java</Message>
      </SourceLine>
      <Message>Field org.apache.commons.beanutils.LazyDynaBean.mapDecorator</Message>
    </Field>
    <SourceLine classname="org.apache.commons.beanutils.LazyDynaBean" primary="true" start="211" end="211" startBytecode="23" endBytecode="23" sourcefile="LazyDynaBean.java" sourcepath="org/apache/commons/beanutils/LazyDynaBean.java">
      <Message>At LazyDynaBean.java:[line 211]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="49bef42fbda509d455b09e653594b338" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>new org.apache.commons.beanutils.LazyDynaBean(DynaClass) may expose internal representation by storing an externally mutable object into LazyDynaBean.dynaClass</LongMessage>
    <Class classname="org.apache.commons.beanutils.LazyDynaBean" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.LazyDynaBean" start="120" end="941" sourcefile="LazyDynaBean.java" sourcepath="org/apache/commons/beanutils/LazyDynaBean.java">
        <Message>At LazyDynaBean.java:[lines 120-941]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.LazyDynaBean</Message>
    </Class>
    <Method classname="org.apache.commons.beanutils.LazyDynaBean" name="&lt;init&gt;" signature="(Lorg/apache/commons/beanutils/DynaClass;)V" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.LazyDynaBean" start="182" end="192" startBytecode="0" endBytecode="160" sourcefile="LazyDynaBean.java" sourcepath="org/apache/commons/beanutils/LazyDynaBean.java"/>
      <Message>In method new org.apache.commons.beanutils.LazyDynaBean(DynaClass)</Message>
    </Method>
    <Field classname="org.apache.commons.beanutils.LazyDynaBean" name="dynaClass" signature="Lorg/apache/commons/beanutils/MutableDynaClass;" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.LazyDynaBean" sourcefile="LazyDynaBean.java" sourcepath="org/apache/commons/beanutils/LazyDynaBean.java">
        <Message>In LazyDynaBean.java</Message>
      </SourceLine>
      <Message>Field org.apache.commons.beanutils.LazyDynaBean.dynaClass</Message>
    </Field>
    <LocalVariable name="dynaClass" register="1" pc="33" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named dynaClass</Message>
    </LocalVariable>
    <SourceLine classname="org.apache.commons.beanutils.LazyDynaBean" primary="true" start="187" end="187" startBytecode="33" endBytecode="33" sourcefile="LazyDynaBean.java" sourcepath="org/apache/commons/beanutils/LazyDynaBean.java">
      <Message>At LazyDynaBean.java:[line 187]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="MC_OVERRIDABLE_METHOD_CALL_IN_CONSTRUCTOR" priority="3" rank="20" abbrev="MC" category="MALICIOUS_CODE" instanceHash="912f70694d4373a3acfb7ac464364470" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>An overridable method is called from a constructor</ShortMessage>
    <LongMessage>Overridable method newMap is called from constructor new org.apache.commons.beanutils.LazyDynaBean(DynaClass).</LongMessage>
    <Class classname="org.apache.commons.beanutils.LazyDynaBean" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.LazyDynaBean" start="120" end="941" sourcefile="LazyDynaBean.java" sourcepath="org/apache/commons/beanutils/LazyDynaBean.java">
        <Message>At LazyDynaBean.java:[lines 120-941]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.LazyDynaBean</Message>
    </Class>
    <Method classname="org.apache.commons.beanutils.LazyDynaBean" name="&lt;init&gt;" signature="(Lorg/apache/commons/beanutils/DynaClass;)V" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.LazyDynaBean" start="182" end="192" startBytecode="0" endBytecode="160" sourcefile="LazyDynaBean.java" sourcepath="org/apache/commons/beanutils/LazyDynaBean.java"/>
      <Message>In method new org.apache.commons.beanutils.LazyDynaBean(DynaClass)</Message>
    </Method>
    <String value="newMap">
      <Message>Value newMap</Message>
    </String>
    <SourceLine classname="org.apache.commons.beanutils.LazyDynaBean" primary="true" start="184" end="184" startBytecode="15" endBytecode="15" sourcefile="LazyDynaBean.java" sourcepath="org/apache/commons/beanutils/LazyDynaBean.java">
      <Message>At LazyDynaBean.java:[line 184]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="SE_NO_SERIALVERSIONID" priority="2" rank="16" abbrev="SnVI" category="BAD_PRACTICE" instanceHash="431deaa362f1c8bcaceff98ac802b10c" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Class is Serializable, but doesn&apos;t define serialVersionUID</ShortMessage>
    <LongMessage>org.apache.commons.beanutils.LazyDynaBean is Serializable; consider declaring a serialVersionUID</LongMessage>
    <Class classname="org.apache.commons.beanutils.LazyDynaBean" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.LazyDynaBean" start="120" end="941" sourcefile="LazyDynaBean.java" sourcepath="org/apache/commons/beanutils/LazyDynaBean.java">
        <Message>At LazyDynaBean.java:[lines 120-941]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.LazyDynaBean</Message>
    </Class>
    <SourceLine classname="org.apache.commons.beanutils.LazyDynaBean" start="120" end="941" sourcefile="LazyDynaBean.java" sourcepath="org/apache/commons/beanutils/LazyDynaBean.java" synthetic="true">
      <Message>At LazyDynaBean.java:[lines 120-941]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="SE_TRANSIENT_FIELD_NOT_RESTORED" priority="2" rank="16" abbrev="Se" category="BAD_PRACTICE" instanceHash="c263c6f80f7c70ea7c3cfc4399db96f5" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Transient field that isn&apos;t set by deserialization.</ShortMessage>
    <LongMessage>The field org.apache.commons.beanutils.LazyDynaBean.logger is transient but isn&apos;t set by deserialization</LongMessage>
    <Class classname="org.apache.commons.beanutils.LazyDynaBean" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.LazyDynaBean" start="120" end="941" sourcefile="LazyDynaBean.java" sourcepath="org/apache/commons/beanutils/LazyDynaBean.java">
        <Message>At LazyDynaBean.java:[lines 120-941]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.LazyDynaBean</Message>
    </Class>
    <Field classname="org.apache.commons.beanutils.LazyDynaBean" name="logger" signature="Lorg/apache/commons/logging/Log;" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.LazyDynaBean" sourcefile="LazyDynaBean.java" sourcepath="org/apache/commons/beanutils/LazyDynaBean.java">
        <Message>In LazyDynaBean.java</Message>
      </SourceLine>
      <Message>Field org.apache.commons.beanutils.LazyDynaBean.logger</Message>
    </Field>
    <SourceLine classname="org.apache.commons.beanutils.LazyDynaBean" sourcefile="LazyDynaBean.java" sourcepath="org/apache/commons/beanutils/LazyDynaBean.java" synthetic="true">
      <Message>In LazyDynaBean.java</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="SE_TRANSIENT_FIELD_NOT_RESTORED" priority="3" rank="19" abbrev="Se" category="BAD_PRACTICE" instanceHash="c3aa955931d365dd668a8c9bf900b1a4" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Transient field that isn&apos;t set by deserialization.</ShortMessage>
    <LongMessage>The field org.apache.commons.beanutils.LazyDynaBean.mapDecorator is transient but isn&apos;t set by deserialization</LongMessage>
    <Class classname="org.apache.commons.beanutils.LazyDynaBean" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.LazyDynaBean" start="120" end="941" sourcefile="LazyDynaBean.java" sourcepath="org/apache/commons/beanutils/LazyDynaBean.java">
        <Message>At LazyDynaBean.java:[lines 120-941]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.LazyDynaBean</Message>
    </Class>
    <Field classname="org.apache.commons.beanutils.LazyDynaBean" name="mapDecorator" signature="Ljava/util/Map;" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.LazyDynaBean" sourcefile="LazyDynaBean.java" sourcepath="org/apache/commons/beanutils/LazyDynaBean.java">
        <Message>In LazyDynaBean.java</Message>
      </SourceLine>
      <Message>Field org.apache.commons.beanutils.LazyDynaBean.mapDecorator</Message>
    </Field>
    <SourceLine classname="org.apache.commons.beanutils.LazyDynaBean" sourcefile="LazyDynaBean.java" sourcepath="org/apache/commons/beanutils/LazyDynaBean.java" synthetic="true">
      <Message>In LazyDynaBean.java</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="SE_NO_SERIALVERSIONID" priority="3" rank="19" abbrev="SnVI" category="BAD_PRACTICE" instanceHash="7c23b55f0c5d0436ef820a521d228e97" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Class is Serializable, but doesn&apos;t define serialVersionUID</ShortMessage>
    <LongMessage>org.apache.commons.beanutils.LazyDynaClass is Serializable; consider declaring a serialVersionUID</LongMessage>
    <Class classname="org.apache.commons.beanutils.LazyDynaClass" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.LazyDynaClass" start="58" end="354" sourcefile="LazyDynaClass.java" sourcepath="org/apache/commons/beanutils/LazyDynaClass.java">
        <Message>At LazyDynaClass.java:[lines 58-354]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.LazyDynaClass</Message>
    </Class>
    <SourceLine classname="org.apache.commons.beanutils.LazyDynaClass" start="58" end="354" sourcefile="LazyDynaClass.java" sourcepath="org/apache/commons/beanutils/LazyDynaClass.java" synthetic="true">
      <Message>At LazyDynaClass.java:[lines 58-354]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="BC_UNCONFIRMED_CAST" priority="3" rank="20" abbrev="BC" category="STYLE" instanceHash="46adf2475e24a137a2e13d0cb34b4d65" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Unchecked/unconfirmed cast</ShortMessage>
    <LongMessage>Unchecked/unconfirmed cast from org.apache.commons.beanutils.DynaClass to org.apache.commons.beanutils.WrapDynaClass in org.apache.commons.beanutils.LazyDynaList.setElementDynaClass(DynaClass)</LongMessage>
    <Class classname="org.apache.commons.beanutils.LazyDynaList" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.LazyDynaList" start="195" end="715" sourcefile="LazyDynaList.java" sourcepath="org/apache/commons/beanutils/LazyDynaList.java">
        <Message>At LazyDynaList.java:[lines 195-715]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.LazyDynaList</Message>
    </Class>
    <Method classname="org.apache.commons.beanutils.LazyDynaList" name="setElementDynaClass" signature="(Lorg/apache/commons/beanutils/DynaClass;)V" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.LazyDynaList" start="565" end="593" startBytecode="0" endBytecode="80" sourcefile="LazyDynaList.java" sourcepath="org/apache/commons/beanutils/LazyDynaList.java"/>
      <Message>In method org.apache.commons.beanutils.LazyDynaList.setElementDynaClass(DynaClass)</Message>
    </Method>
    <Type descriptor="Lorg/apache/commons/beanutils/DynaClass;" role="TYPE_FOUND">
      <SourceLine classname="org.apache.commons.beanutils.DynaClass" sourcefile="DynaClass.java" sourcepath="org/apache/commons/beanutils/DynaClass.java">
        <Message>In DynaClass.java</Message>
      </SourceLine>
      <Message>Actual type org.apache.commons.beanutils.DynaClass</Message>
    </Type>
    <Type descriptor="Lorg/apache/commons/beanutils/WrapDynaClass;" role="TYPE_EXPECTED">
      <SourceLine classname="org.apache.commons.beanutils.WrapDynaClass" start="51" end="493" sourcefile="WrapDynaClass.java" sourcepath="org/apache/commons/beanutils/WrapDynaClass.java">
        <Message>At WrapDynaClass.java:[lines 51-493]</Message>
      </SourceLine>
      <Message>Expected org.apache.commons.beanutils.WrapDynaClass</Message>
    </Type>
    <LocalVariable name="elementDynaClass" register="1" pc="73" role="LOCAL_VARIABLE_VALUE_OF">
      <Message>Value loaded from elementDynaClass</Message>
    </LocalVariable>
    <SourceLine classname="org.apache.commons.beanutils.LazyDynaList" primary="true" start="579" end="579" startBytecode="74" endBytecode="74" sourcefile="LazyDynaList.java" sourcepath="org/apache/commons/beanutils/LazyDynaList.java">
      <Message>At LazyDynaList.java:[line 579]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EQ_DOESNT_OVERRIDE_EQUALS" priority="2" rank="17" abbrev="Eq" category="STYLE" instanceHash="f9765213c7f608aeb6012f393b52a53a" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Class doesn&apos;t override equals in superclass</ShortMessage>
    <LongMessage>org.apache.commons.beanutils.LazyDynaList doesn&apos;t override java.util.ArrayList.equals(Object)</LongMessage>
    <Class classname="org.apache.commons.beanutils.LazyDynaList" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.LazyDynaList" start="195" end="715" sourcefile="LazyDynaList.java" sourcepath="org/apache/commons/beanutils/LazyDynaList.java">
        <Message>At LazyDynaList.java:[lines 195-715]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.LazyDynaList</Message>
    </Class>
    <SourceLine classname="org.apache.commons.beanutils.LazyDynaList" primary="true" start="1" end="1" startBytecode="0" endBytecode="0" sourcefile="LazyDynaList.java" sourcepath="org/apache/commons/beanutils/LazyDynaList.java">
      <Message>At LazyDynaList.java:[line 1]</Message>
    </SourceLine>
    <Method classname="java.util.ArrayList" name="equals" signature="(Ljava/lang/Object;)Z" isStatic="false" primary="true" role="METHOD_DID_YOU_MEAN_TO_OVERRIDE">
      <SourceLine classname="java.util.ArrayList" start="517" end="533" startBytecode="0" endBytecode="203" sourcefile="ArrayList.java" sourcepath="java/util/ArrayList.java"/>
      <Message>Did you intend to override java.util.ArrayList.equals(Object)</Message>
    </Method>
  </BugInstance>
  <BugInstance type="REFLC_REFLECTION_MAY_INCREASE_ACCESSIBILITY_OF_CLASS" priority="2" rank="18" abbrev="REFLC" category="MALICIOUS_CODE" instanceHash="50821b4c308e40bce84034bb93744632" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Public method uses reflection to create a class it gets in its parameter which could increase the accessibility of any class</ShortMessage>
    <LongMessage>Public method org.apache.commons.beanutils.LazyDynaList.setElementType(Class) uses reflection to create a class it gets in its parameter which could increase the accessibility of any class</LongMessage>
    <Class classname="org.apache.commons.beanutils.LazyDynaList" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.LazyDynaList" start="195" end="715" sourcefile="LazyDynaList.java" sourcepath="org/apache/commons/beanutils/LazyDynaList.java">
        <Message>At LazyDynaList.java:[lines 195-715]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.LazyDynaList</Message>
    </Class>
    <Method classname="org.apache.commons.beanutils.LazyDynaList" name="setElementType" signature="(Ljava/lang/Class;)V" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.LazyDynaList" start="512" end="554" startBytecode="0" endBytecode="537" sourcefile="LazyDynaList.java" sourcepath="org/apache/commons/beanutils/LazyDynaList.java"/>
      <Message>In method org.apache.commons.beanutils.LazyDynaList.setElementType(Class)</Message>
    </Method>
    <SourceLine classname="org.apache.commons.beanutils.LazyDynaList" primary="true" start="526" end="526" startBytecode="67" endBytecode="67" sourcefile="LazyDynaList.java" sourcepath="org/apache/commons/beanutils/LazyDynaList.java">
      <Message>At LazyDynaList.java:[line 526]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="SE_BAD_FIELD" priority="3" rank="19" abbrev="Se" category="BAD_PRACTICE" instanceHash="f0629b020198d6d49d67b49f5c542dca" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Non-transient non-serializable instance field in serializable class</ShortMessage>
    <LongMessage>Class org.apache.commons.beanutils.LazyDynaList defines non-transient non-serializable instance field elementDynaClass</LongMessage>
    <Class classname="org.apache.commons.beanutils.LazyDynaList" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.LazyDynaList" start="195" end="715" sourcefile="LazyDynaList.java" sourcepath="org/apache/commons/beanutils/LazyDynaList.java">
        <Message>At LazyDynaList.java:[lines 195-715]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.LazyDynaList</Message>
    </Class>
    <Field classname="org.apache.commons.beanutils.LazyDynaList" name="elementDynaClass" signature="Lorg/apache/commons/beanutils/DynaClass;" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.LazyDynaList" sourcefile="LazyDynaList.java" sourcepath="org/apache/commons/beanutils/LazyDynaList.java">
        <Message>In LazyDynaList.java</Message>
      </SourceLine>
      <Message>Field org.apache.commons.beanutils.LazyDynaList.elementDynaClass</Message>
    </Field>
    <Type descriptor="Lorg/apache/commons/beanutils/DynaClass;" role="TYPE_FOUND">
      <SourceLine classname="org.apache.commons.beanutils.DynaClass" sourcefile="DynaClass.java" sourcepath="org/apache/commons/beanutils/DynaClass.java">
        <Message>In DynaClass.java</Message>
      </SourceLine>
      <Message>Actual type org.apache.commons.beanutils.DynaClass</Message>
    </Type>
    <SourceLine classname="org.apache.commons.beanutils.LazyDynaList" sourcefile="LazyDynaList.java" sourcepath="org/apache/commons/beanutils/LazyDynaList.java" synthetic="true">
      <Message>In LazyDynaList.java</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="SE_NO_SERIALVERSIONID" priority="2" rank="16" abbrev="SnVI" category="BAD_PRACTICE" instanceHash="90e0e225616dd36f3c3f59c8da225e74" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Class is Serializable, but doesn&apos;t define serialVersionUID</ShortMessage>
    <LongMessage>org.apache.commons.beanutils.LazyDynaList is Serializable; consider declaring a serialVersionUID</LongMessage>
    <Class classname="org.apache.commons.beanutils.LazyDynaList" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.LazyDynaList" start="195" end="715" sourcefile="LazyDynaList.java" sourcepath="org/apache/commons/beanutils/LazyDynaList.java">
        <Message>At LazyDynaList.java:[lines 195-715]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.LazyDynaList</Message>
    </Class>
    <SourceLine classname="org.apache.commons.beanutils.LazyDynaList" start="195" end="715" sourcefile="LazyDynaList.java" sourcepath="org/apache/commons/beanutils/LazyDynaList.java" synthetic="true">
      <Message>At LazyDynaList.java:[lines 195-715]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="10e2a0ee5287f7b12e639cbe263206e1" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.apache.commons.beanutils.LazyDynaMap.getMap() may expose internal representation by returning LazyDynaBean.values</LongMessage>
    <Class classname="org.apache.commons.beanutils.LazyDynaMap" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.LazyDynaMap" start="67" end="482" sourcefile="LazyDynaMap.java" sourcepath="org/apache/commons/beanutils/LazyDynaMap.java">
        <Message>At LazyDynaMap.java:[lines 67-482]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.LazyDynaMap</Message>
    </Class>
    <Method classname="org.apache.commons.beanutils.LazyDynaMap" name="getMap" signature="()Ljava/util/Map;" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.LazyDynaMap" start="160" end="160" startBytecode="0" endBytecode="46" sourcefile="LazyDynaMap.java" sourcepath="org/apache/commons/beanutils/LazyDynaMap.java"/>
      <Message>In method org.apache.commons.beanutils.LazyDynaMap.getMap()</Message>
    </Method>
    <Field classname="org.apache.commons.beanutils.LazyDynaBean" name="values" signature="Ljava/util/Map;" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.LazyDynaBean" sourcefile="LazyDynaBean.java" sourcepath="org/apache/commons/beanutils/LazyDynaBean.java">
        <Message>In LazyDynaBean.java</Message>
      </SourceLine>
      <Message>Field org.apache.commons.beanutils.LazyDynaBean.values</Message>
    </Field>
    <SourceLine classname="org.apache.commons.beanutils.LazyDynaMap" primary="true" start="160" end="160" startBytecode="4" endBytecode="4" sourcefile="LazyDynaMap.java" sourcepath="org/apache/commons/beanutils/LazyDynaMap.java">
      <Message>At LazyDynaMap.java:[line 160]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="b82378d77afa5bc678a92b4f05c57ef" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>new org.apache.commons.beanutils.LazyDynaMap(String, Map) may expose internal representation by storing an externally mutable object into LazyDynaMap.dynaClass</LongMessage>
    <Class classname="org.apache.commons.beanutils.LazyDynaMap" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.LazyDynaMap" start="67" end="482" sourcefile="LazyDynaMap.java" sourcepath="org/apache/commons/beanutils/LazyDynaMap.java">
        <Message>At LazyDynaMap.java:[lines 67-482]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.LazyDynaMap</Message>
    </Class>
    <Method classname="org.apache.commons.beanutils.LazyDynaMap" name="&lt;init&gt;" signature="(Ljava/lang/String;Ljava/util/Map;)V" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.LazyDynaMap" start="103" end="107" startBytecode="0" endBytecode="219" sourcefile="LazyDynaMap.java" sourcepath="org/apache/commons/beanutils/LazyDynaMap.java"/>
      <Message>In method new org.apache.commons.beanutils.LazyDynaMap(String, Map)</Message>
    </Method>
    <Field classname="org.apache.commons.beanutils.LazyDynaMap" name="dynaClass" signature="Lorg/apache/commons/beanutils/MutableDynaClass;" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.LazyDynaMap" sourcefile="LazyDynaMap.java" sourcepath="org/apache/commons/beanutils/LazyDynaMap.java">
        <Message>In LazyDynaMap.java</Message>
      </SourceLine>
      <Message>Field org.apache.commons.beanutils.LazyDynaMap.dynaClass</Message>
    </Field>
    <LocalVariable name="this" register="0" pc="41" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named this</Message>
    </LocalVariable>
    <SourceLine classname="org.apache.commons.beanutils.LazyDynaMap" primary="true" start="106" end="106" startBytecode="41" endBytecode="41" sourcefile="LazyDynaMap.java" sourcepath="org/apache/commons/beanutils/LazyDynaMap.java">
      <Message>At LazyDynaMap.java:[line 106]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="a3676891469e57b4ce7002f65666adae" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>org.apache.commons.beanutils.LazyDynaMap.setMap(Map) may expose internal representation by storing an externally mutable object into LazyDynaMap.values</LongMessage>
    <Class classname="org.apache.commons.beanutils.LazyDynaMap" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.LazyDynaMap" start="67" end="482" sourcefile="LazyDynaMap.java" sourcepath="org/apache/commons/beanutils/LazyDynaMap.java">
        <Message>At LazyDynaMap.java:[lines 67-482]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.LazyDynaMap</Message>
    </Class>
    <Method classname="org.apache.commons.beanutils.LazyDynaMap" name="setMap" signature="(Ljava/util/Map;)V" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.LazyDynaMap" start="150" end="151" startBytecode="0" endBytecode="79" sourcefile="LazyDynaMap.java" sourcepath="org/apache/commons/beanutils/LazyDynaMap.java"/>
      <Message>In method org.apache.commons.beanutils.LazyDynaMap.setMap(Map)</Message>
    </Method>
    <Field classname="org.apache.commons.beanutils.LazyDynaMap" name="values" signature="Ljava/util/Map;" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.LazyDynaMap" sourcefile="LazyDynaMap.java" sourcepath="org/apache/commons/beanutils/LazyDynaMap.java">
        <Message>In LazyDynaMap.java</Message>
      </SourceLine>
      <Message>Field org.apache.commons.beanutils.LazyDynaMap.values</Message>
    </Field>
    <LocalVariable name="values" register="1" pc="2" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named values</Message>
    </LocalVariable>
    <SourceLine classname="org.apache.commons.beanutils.LazyDynaMap" primary="true" start="150" end="150" startBytecode="2" endBytecode="2" sourcefile="LazyDynaMap.java" sourcepath="org/apache/commons/beanutils/LazyDynaMap.java">
      <Message>At LazyDynaMap.java:[line 150]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="MC_OVERRIDABLE_METHOD_CALL_IN_CONSTRUCTOR" priority="3" rank="20" abbrev="MC" category="MALICIOUS_CODE" instanceHash="a171cdf8baf1d78f079c08c3c5707cff" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>An overridable method is called from a constructor</ShortMessage>
    <LongMessage>Overridable method newMap is called from constructor new org.apache.commons.beanutils.LazyDynaMap(String, Map).</LongMessage>
    <Class classname="org.apache.commons.beanutils.LazyDynaMap" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.LazyDynaMap" start="67" end="482" sourcefile="LazyDynaMap.java" sourcepath="org/apache/commons/beanutils/LazyDynaMap.java">
        <Message>At LazyDynaMap.java:[lines 67-482]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.LazyDynaMap</Message>
    </Class>
    <Method classname="org.apache.commons.beanutils.LazyDynaMap" name="&lt;init&gt;" signature="(Ljava/lang/String;Ljava/util/Map;)V" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.LazyDynaMap" start="103" end="107" startBytecode="0" endBytecode="219" sourcefile="LazyDynaMap.java" sourcepath="org/apache/commons/beanutils/LazyDynaMap.java"/>
      <Message>In method new org.apache.commons.beanutils.LazyDynaMap(String, Map)</Message>
    </Method>
    <String value="newMap">
      <Message>Value newMap</Message>
    </String>
    <SourceLine classname="org.apache.commons.beanutils.LazyDynaMap" primary="true" start="105" end="105" startBytecode="29" endBytecode="29" sourcefile="LazyDynaMap.java" sourcepath="org/apache/commons/beanutils/LazyDynaMap.java">
      <Message>At LazyDynaMap.java:[line 105]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE" priority="3" rank="20" abbrev="RCN" category="STYLE" instanceHash="4368aaf32a9af4229dfd808df654ef2" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="476">
    <ShortMessage>Redundant nullcheck of value known to be non-null</ShortMessage>
    <LongMessage>Redundant nullcheck of properties, which is known to be non-null in org.apache.commons.beanutils.LazyDynaMap.newInstance()</LongMessage>
    <Class classname="org.apache.commons.beanutils.LazyDynaMap" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.LazyDynaMap" start="67" end="482" sourcefile="LazyDynaMap.java" sourcepath="org/apache/commons/beanutils/LazyDynaMap.java">
        <Message>At LazyDynaMap.java:[lines 67-482]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.LazyDynaMap</Message>
    </Class>
    <Method classname="org.apache.commons.beanutils.LazyDynaMap" name="newInstance" signature="()Lorg/apache/commons/beanutils/DynaBean;" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.LazyDynaMap" start="273" end="292" startBytecode="0" endBytecode="321" sourcefile="LazyDynaMap.java" sourcepath="org/apache/commons/beanutils/LazyDynaMap.java"/>
      <Message>In method org.apache.commons.beanutils.LazyDynaMap.newInstance()</Message>
    </Method>
    <LocalVariable name="properties" register="3" pc="41" role="LOCAL_VARIABLE_VALUE_OF">
      <Message>Value loaded from properties</Message>
    </LocalVariable>
    <Method classname="org.apache.commons.beanutils.LazyDynaMap" name="getDynaProperties" signature="()[Lorg/apache/commons/beanutils/DynaProperty;" isStatic="false" role="METHOD_RETURN_VALUE_OF">
      <SourceLine classname="org.apache.commons.beanutils.LazyDynaMap" start="252" end="261" startBytecode="0" endBytecode="363" sourcefile="LazyDynaMap.java" sourcepath="org/apache/commons/beanutils/LazyDynaMap.java"/>
      <Message>Return value of org.apache.commons.beanutils.LazyDynaMap.getDynaProperties() of type org.apache.commons.beanutils.DynaProperty[]</Message>
    </Method>
    <SourceLine classname="org.apache.commons.beanutils.LazyDynaMap" primary="true" start="287" end="287" startBytecode="42" endBytecode="42" sourcefile="LazyDynaMap.java" sourcepath="org/apache/commons/beanutils/LazyDynaMap.java" role="SOURCE_REDUNDANT_NULL_CHECK">
      <Message>Redundant null check at LazyDynaMap.java:[line 287]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="REC_CATCH_EXCEPTION" priority="3" rank="20" abbrev="REC" category="STYLE" instanceHash="17b6419ccee1bad735c6e2ca30e91af0" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="396">
    <ShortMessage>Exception is caught when Exception is not thrown</ShortMessage>
    <LongMessage>Exception is caught when Exception is not thrown in org.apache.commons.beanutils.LazyDynaMap.newInstance()</LongMessage>
    <Class classname="org.apache.commons.beanutils.LazyDynaMap" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.LazyDynaMap" start="67" end="482" sourcefile="LazyDynaMap.java" sourcepath="org/apache/commons/beanutils/LazyDynaMap.java">
        <Message>At LazyDynaMap.java:[lines 67-482]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.LazyDynaMap</Message>
    </Class>
    <Method classname="org.apache.commons.beanutils.LazyDynaMap" name="newInstance" signature="()Lorg/apache/commons/beanutils/DynaBean;" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.LazyDynaMap" start="273" end="292" startBytecode="0" endBytecode="321" sourcefile="LazyDynaMap.java" sourcepath="org/apache/commons/beanutils/LazyDynaMap.java"/>
      <Message>In method org.apache.commons.beanutils.LazyDynaMap.newInstance()</Message>
    </Method>
    <SourceLine classname="org.apache.commons.beanutils.LazyDynaMap" primary="true" start="280" end="280" startBytecode="21" endBytecode="21" sourcefile="LazyDynaMap.java" sourcepath="org/apache/commons/beanutils/LazyDynaMap.java">
      <Message>At LazyDynaMap.java:[line 280]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="SE_NO_SERIALVERSIONID" priority="3" rank="19" abbrev="SnVI" category="BAD_PRACTICE" instanceHash="31c603ae98fe637257b2325510c4fb7e" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Class is Serializable, but doesn&apos;t define serialVersionUID</ShortMessage>
    <LongMessage>org.apache.commons.beanutils.LazyDynaMap is Serializable; consider declaring a serialVersionUID</LongMessage>
    <Class classname="org.apache.commons.beanutils.LazyDynaMap" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.LazyDynaMap" start="67" end="482" sourcefile="LazyDynaMap.java" sourcepath="org/apache/commons/beanutils/LazyDynaMap.java">
        <Message>At LazyDynaMap.java:[lines 67-482]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.LazyDynaMap</Message>
    </Class>
    <SourceLine classname="org.apache.commons.beanutils.LazyDynaMap" start="67" end="482" sourcefile="LazyDynaMap.java" sourcepath="org/apache/commons/beanutils/LazyDynaMap.java" synthetic="true">
      <Message>At LazyDynaMap.java:[lines 67-482]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="CT_CONSTRUCTOR_THROW" priority="2" rank="16" abbrev="CT" category="BAD_PRACTICE" instanceHash="34a4440d5ba284a0bce086b9b8fe80e0" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Be wary of letting constructors throw exceptions.</ShortMessage>
    <LongMessage>Exception thrown in class org.apache.commons.beanutils.MappedPropertyDescriptor at new org.apache.commons.beanutils.MappedPropertyDescriptor(String, Class) will leave the constructor. The object under construction remains partially initialized and may be vulnerable to Finalizer attacks.</LongMessage>
    <Class classname="org.apache.commons.beanutils.MappedPropertyDescriptor" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.MappedPropertyDescriptor" start="45" end="412" sourcefile="MappedPropertyDescriptor.java" sourcepath="org/apache/commons/beanutils/MappedPropertyDescriptor.java">
        <Message>At MappedPropertyDescriptor.java:[lines 45-412]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.MappedPropertyDescriptor</Message>
    </Class>
    <Method classname="org.apache.commons.beanutils.MappedPropertyDescriptor" name="&lt;init&gt;" signature="(Ljava/lang/String;Ljava/lang/Class;)V" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.MappedPropertyDescriptor" start="89" end="132" startBytecode="0" endBytecode="611" sourcefile="MappedPropertyDescriptor.java" sourcepath="org/apache/commons/beanutils/MappedPropertyDescriptor.java"/>
      <Message>In method new org.apache.commons.beanutils.MappedPropertyDescriptor(String, Class)</Message>
    </Method>
    <SourceLine classname="org.apache.commons.beanutils.MappedPropertyDescriptor" primary="true" start="89" end="89" startBytecode="4" endBytecode="4" sourcefile="MappedPropertyDescriptor.java" sourcepath="org/apache/commons/beanutils/MappedPropertyDescriptor.java">
      <Message>At MappedPropertyDescriptor.java:[line 89]</Message>
    </SourceLine>
    <SourceLine classname="org.apache.commons.beanutils.MappedPropertyDescriptor" start="89" end="89" startBytecode="4" endBytecode="4" sourcefile="MappedPropertyDescriptor.java" sourcepath="org/apache/commons/beanutils/MappedPropertyDescriptor.java">
      <Message>At MappedPropertyDescriptor.java:[line 89]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="CT_CONSTRUCTOR_THROW" priority="2" rank="16" abbrev="CT" category="BAD_PRACTICE" instanceHash="31e23677db74dfaadd676553dcb4c88c" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Be wary of letting constructors throw exceptions.</ShortMessage>
    <LongMessage>Exception thrown in class org.apache.commons.beanutils.MappedPropertyDescriptor at new org.apache.commons.beanutils.MappedPropertyDescriptor(String, Class, String, String) will leave the constructor. The object under construction remains partially initialized and may be vulnerable to Finalizer attacks.</LongMessage>
    <Class classname="org.apache.commons.beanutils.MappedPropertyDescriptor" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.MappedPropertyDescriptor" start="45" end="412" sourcefile="MappedPropertyDescriptor.java" sourcepath="org/apache/commons/beanutils/MappedPropertyDescriptor.java">
        <Message>At MappedPropertyDescriptor.java:[lines 45-412]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.MappedPropertyDescriptor</Message>
    </Class>
    <Method classname="org.apache.commons.beanutils.MappedPropertyDescriptor" name="&lt;init&gt;" signature="(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;)V" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.MappedPropertyDescriptor" start="156" end="182" startBytecode="0" endBytecode="395" sourcefile="MappedPropertyDescriptor.java" sourcepath="org/apache/commons/beanutils/MappedPropertyDescriptor.java"/>
      <Message>In method new org.apache.commons.beanutils.MappedPropertyDescriptor(String, Class, String, String)</Message>
    </Method>
    <SourceLine classname="org.apache.commons.beanutils.MappedPropertyDescriptor" primary="true" start="182" end="182" startBytecode="298" endBytecode="298" sourcefile="MappedPropertyDescriptor.java" sourcepath="org/apache/commons/beanutils/MappedPropertyDescriptor.java">
      <Message>At MappedPropertyDescriptor.java:[line 182]</Message>
    </SourceLine>
    <SourceLine classname="org.apache.commons.beanutils.MappedPropertyDescriptor" start="182" end="182" startBytecode="298" endBytecode="298" sourcefile="MappedPropertyDescriptor.java" sourcepath="org/apache/commons/beanutils/MappedPropertyDescriptor.java">
      <Message>At MappedPropertyDescriptor.java:[line 182]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="CT_CONSTRUCTOR_THROW" priority="2" rank="16" abbrev="CT" category="BAD_PRACTICE" instanceHash="2ce41cffc478f939c5749fbca7a41021" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Be wary of letting constructors throw exceptions.</ShortMessage>
    <LongMessage>Exception thrown in class org.apache.commons.beanutils.MappedPropertyDescriptor at new org.apache.commons.beanutils.MappedPropertyDescriptor(String, Method, Method) will leave the constructor. The object under construction remains partially initialized and may be vulnerable to Finalizer attacks.</LongMessage>
    <Class classname="org.apache.commons.beanutils.MappedPropertyDescriptor" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.MappedPropertyDescriptor" start="45" end="412" sourcefile="MappedPropertyDescriptor.java" sourcepath="org/apache/commons/beanutils/MappedPropertyDescriptor.java">
        <Message>At MappedPropertyDescriptor.java:[lines 45-412]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.MappedPropertyDescriptor</Message>
    </Class>
    <Method classname="org.apache.commons.beanutils.MappedPropertyDescriptor" name="&lt;init&gt;" signature="(Ljava/lang/String;Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;)V" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.MappedPropertyDescriptor" start="202" end="213" startBytecode="0" endBytecode="206" sourcefile="MappedPropertyDescriptor.java" sourcepath="org/apache/commons/beanutils/MappedPropertyDescriptor.java"/>
      <Message>In method new org.apache.commons.beanutils.MappedPropertyDescriptor(String, Method, Method)</Message>
    </Method>
    <SourceLine classname="org.apache.commons.beanutils.MappedPropertyDescriptor" primary="true" start="213" end="213" startBytecode="142" endBytecode="142" sourcefile="MappedPropertyDescriptor.java" sourcepath="org/apache/commons/beanutils/MappedPropertyDescriptor.java">
      <Message>At MappedPropertyDescriptor.java:[line 213]</Message>
    </SourceLine>
    <SourceLine classname="org.apache.commons.beanutils.MappedPropertyDescriptor" start="213" end="213" startBytecode="142" endBytecode="142" sourcefile="MappedPropertyDescriptor.java" sourcepath="org/apache/commons/beanutils/MappedPropertyDescriptor.java">
      <Message>At MappedPropertyDescriptor.java:[line 213]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EQ_DOESNT_OVERRIDE_EQUALS" priority="2" rank="17" abbrev="Eq" category="STYLE" instanceHash="d89bb3560ca570fe543a4b996018515f" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Class doesn&apos;t override equals in superclass</ShortMessage>
    <LongMessage>org.apache.commons.beanutils.MappedPropertyDescriptor doesn&apos;t override java.beans.PropertyDescriptor.equals(Object)</LongMessage>
    <Class classname="org.apache.commons.beanutils.MappedPropertyDescriptor" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.MappedPropertyDescriptor" start="45" end="412" sourcefile="MappedPropertyDescriptor.java" sourcepath="org/apache/commons/beanutils/MappedPropertyDescriptor.java">
        <Message>At MappedPropertyDescriptor.java:[lines 45-412]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.MappedPropertyDescriptor</Message>
    </Class>
    <SourceLine classname="org.apache.commons.beanutils.MappedPropertyDescriptor" primary="true" start="1" end="1" startBytecode="0" endBytecode="0" sourcefile="MappedPropertyDescriptor.java" sourcepath="org/apache/commons/beanutils/MappedPropertyDescriptor.java">
      <Message>At MappedPropertyDescriptor.java:[line 1]</Message>
    </SourceLine>
    <Method classname="java.beans.PropertyDescriptor" name="equals" signature="(Ljava/lang/Object;)Z" isStatic="false" primary="true" role="METHOD_DID_YOU_MEAN_TO_OVERRIDE">
      <SourceLine classname="java.beans.PropertyDescriptor" start="503" end="527" startBytecode="0" endBytecode="295" sourcefile="PropertyDescriptor.java" sourcepath="java/beans/PropertyDescriptor.java"/>
      <Message>Did you intend to override java.beans.PropertyDescriptor.equals(Object)</Message>
    </Method>
  </BugInstance>
  <BugInstance type="CT_CONSTRUCTOR_THROW" priority="2" rank="16" abbrev="CT" category="BAD_PRACTICE" instanceHash="a7f9174bd7ec7d6bbc4ffaff8f397044" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Be wary of letting constructors throw exceptions.</ShortMessage>
    <LongMessage>Exception thrown in class org.apache.commons.beanutils.MethodUtils$MethodDescriptor at new org.apache.commons.beanutils.MethodUtils$MethodDescriptor(Class, String, Class[], boolean) will leave the constructor. The object under construction remains partially initialized and may be vulnerable to Finalizer attacks.</LongMessage>
    <Class classname="org.apache.commons.beanutils.MethodUtils$MethodDescriptor" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.MethodUtils$MethodDescriptor" start="1322" end="1368" sourcefile="MethodUtils.java" sourcepath="org/apache/commons/beanutils/MethodUtils.java">
        <Message>At MethodUtils.java:[lines 1322-1368]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.MethodUtils$MethodDescriptor</Message>
    </Class>
    <Method classname="org.apache.commons.beanutils.MethodUtils$MethodDescriptor" name="&lt;init&gt;" signature="(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;Z)V" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.MethodUtils$MethodDescriptor" start="1322" end="1339" startBytecode="0" endBytecode="257" sourcefile="MethodUtils.java" sourcepath="org/apache/commons/beanutils/MethodUtils.java"/>
      <Message>In method new org.apache.commons.beanutils.MethodUtils$MethodDescriptor(Class, String, Class[], boolean)</Message>
    </Method>
    <SourceLine classname="org.apache.commons.beanutils.MethodUtils$MethodDescriptor" primary="true" start="1324" end="1324" startBytecode="17" endBytecode="17" sourcefile="MethodUtils.java" sourcepath="org/apache/commons/beanutils/MethodUtils.java">
      <Message>At MethodUtils.java:[line 1324]</Message>
    </SourceLine>
    <SourceLine classname="org.apache.commons.beanutils.MethodUtils$MethodDescriptor" start="1324" end="1324" startBytecode="17" endBytecode="17" sourcefile="MethodUtils.java" sourcepath="org/apache/commons/beanutils/MethodUtils.java">
      <Message>At MethodUtils.java:[line 1324]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="BC_UNCONFIRMED_CAST_OF_RETURN_VALUE" priority="3" rank="20" abbrev="BC" category="STYLE" instanceHash="2a70892b101654d8018248f23f3123f" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Unchecked/unconfirmed cast of return value from method</ShortMessage>
    <LongMessage>Unchecked/unconfirmed cast from Throwable to IndexOutOfBoundsException of return value in org.apache.commons.beanutils.PropertyUtilsBean.getIndexedProperty(Object, String, int)</LongMessage>
    <Class classname="org.apache.commons.beanutils.PropertyUtilsBean" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.PropertyUtilsBean" start="98" end="2283" sourcefile="PropertyUtilsBean.java" sourcepath="org/apache/commons/beanutils/PropertyUtilsBean.java">
        <Message>At PropertyUtilsBean.java:[lines 98-2283]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.PropertyUtilsBean</Message>
    </Class>
    <Method classname="org.apache.commons.beanutils.PropertyUtilsBean" name="getIndexedProperty" signature="(Ljava/lang/Object;Ljava/lang/String;I)Ljava/lang/Object;" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.PropertyUtilsBean" start="478" end="557" startBytecode="0" endBytecode="241" sourcefile="PropertyUtilsBean.java" sourcepath="org/apache/commons/beanutils/PropertyUtilsBean.java"/>
      <Message>In method org.apache.commons.beanutils.PropertyUtilsBean.getIndexedProperty(Object, String, int)</Message>
    </Method>
    <Type descriptor="Ljava/lang/Throwable;" role="TYPE_FOUND">
      <SourceLine classname="java.lang.Throwable" start="114" end="1107" sourcefile="Throwable.java" sourcepath="java/lang/Throwable.java">
        <Message>At Throwable.java:[lines 114-1107]</Message>
      </SourceLine>
      <Message>Actual type Throwable</Message>
    </Type>
    <Type descriptor="Ljava/lang/IndexOutOfBoundsException;" role="TYPE_EXPECTED">
      <SourceLine classname="java.lang.IndexOutOfBoundsException" start="45" end="84" sourcefile="IndexOutOfBoundsException.java" sourcepath="java/lang/IndexOutOfBoundsException.java">
        <Message>At IndexOutOfBoundsException.java:[lines 45-84]</Message>
      </SourceLine>
      <Message>Expected IndexOutOfBoundsException</Message>
    </Type>
    <SourceLine classname="org.apache.commons.beanutils.PropertyUtilsBean" primary="true" start="526" end="526" startBytecode="320" endBytecode="320" sourcefile="PropertyUtilsBean.java" sourcepath="org/apache/commons/beanutils/PropertyUtilsBean.java">
      <Message>At PropertyUtilsBean.java:[line 526]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="BC_UNCONFIRMED_CAST_OF_RETURN_VALUE" priority="3" rank="20" abbrev="BC" category="STYLE" instanceHash="23664364efa142cd223cafae8ce04d6d" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Unchecked/unconfirmed cast of return value from method</ShortMessage>
    <LongMessage>Unchecked/unconfirmed cast from Throwable to IndexOutOfBoundsException of return value in org.apache.commons.beanutils.PropertyUtilsBean.setIndexedProperty(Object, String, int, Object)</LongMessage>
    <Class classname="org.apache.commons.beanutils.PropertyUtilsBean" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.PropertyUtilsBean" start="98" end="2283" sourcefile="PropertyUtilsBean.java" sourcepath="org/apache/commons/beanutils/PropertyUtilsBean.java">
        <Message>At PropertyUtilsBean.java:[lines 98-2283]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.PropertyUtilsBean</Message>
    </Class>
    <Method classname="org.apache.commons.beanutils.PropertyUtilsBean" name="setIndexedProperty" signature="(Ljava/lang/Object;Ljava/lang/String;ILjava/lang/Object;)V" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.PropertyUtilsBean" start="1592" end="1686" startBytecode="0" endBytecode="269" sourcefile="PropertyUtilsBean.java" sourcepath="org/apache/commons/beanutils/PropertyUtilsBean.java"/>
      <Message>In method org.apache.commons.beanutils.PropertyUtilsBean.setIndexedProperty(Object, String, int, Object)</Message>
    </Method>
    <Type descriptor="Ljava/lang/Throwable;" role="TYPE_FOUND">
      <SourceLine classname="java.lang.Throwable" start="114" end="1107" sourcefile="Throwable.java" sourcepath="java/lang/Throwable.java">
        <Message>At Throwable.java:[lines 114-1107]</Message>
      </SourceLine>
      <Message>Actual type Throwable</Message>
    </Type>
    <Type descriptor="Ljava/lang/IndexOutOfBoundsException;" role="TYPE_EXPECTED">
      <SourceLine classname="java.lang.IndexOutOfBoundsException" start="45" end="84" sourcefile="IndexOutOfBoundsException.java" sourcepath="java/lang/IndexOutOfBoundsException.java">
        <Message>At IndexOutOfBoundsException.java:[lines 45-84]</Message>
      </SourceLine>
      <Message>Expected IndexOutOfBoundsException</Message>
    </Type>
    <SourceLine classname="org.apache.commons.beanutils.PropertyUtilsBean" primary="true" start="1654" end="1654" startBytecode="435" endBytecode="435" sourcefile="PropertyUtilsBean.java" sourcepath="org/apache/commons/beanutils/PropertyUtilsBean.java">
      <Message>At PropertyUtilsBean.java:[line 1654]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DCN_NULLPOINTER_EXCEPTION" priority="2" rank="17" abbrev="DCN" category="STYLE" instanceHash="be348ce2b058dfae23e2fa3df299ac68" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>NullPointerException caught</ShortMessage>
    <LongMessage>Do not catch NullPointerException like in org.apache.commons.beanutils.PropertyUtilsBean.invokeMethod(Method, Object, Object[])</LongMessage>
    <Class classname="org.apache.commons.beanutils.PropertyUtilsBean" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.PropertyUtilsBean" start="98" end="2283" sourcefile="PropertyUtilsBean.java" sourcepath="org/apache/commons/beanutils/PropertyUtilsBean.java">
        <Message>At PropertyUtilsBean.java:[lines 98-2283]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.PropertyUtilsBean</Message>
    </Class>
    <Method classname="org.apache.commons.beanutils.PropertyUtilsBean" name="invokeMethod" signature="(Ljava/lang/reflect/Method;Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.PropertyUtilsBean" start="2120" end="2204" startBytecode="0" endBytecode="1239" sourcefile="PropertyUtilsBean.java" sourcepath="org/apache/commons/beanutils/PropertyUtilsBean.java"/>
      <Message>In method org.apache.commons.beanutils.PropertyUtilsBean.invokeMethod(Method, Object, Object[])</Message>
    </Method>
    <SourceLine classname="org.apache.commons.beanutils.PropertyUtilsBean" primary="true" start="2129" end="2129" startBytecode="21" endBytecode="21" sourcefile="PropertyUtilsBean.java" sourcepath="org/apache/commons/beanutils/PropertyUtilsBean.java">
      <Message>At PropertyUtilsBean.java:[line 2129]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DM_NUMBER_CTOR" priority="2" rank="18" abbrev="Bx" category="PERFORMANCE" instanceHash="638d13bcc511da1ad6321e391a5253c1" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Method invokes inefficient Number constructor; use static valueOf instead</ShortMessage>
    <LongMessage>org.apache.commons.beanutils.PropertyUtilsBean.getIndexedProperty(Object, String, int) invokes inefficient new Integer(int) constructor; use Integer.valueOf(int) instead</LongMessage>
    <Class classname="org.apache.commons.beanutils.PropertyUtilsBean" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.PropertyUtilsBean" start="98" end="2283" sourcefile="PropertyUtilsBean.java" sourcepath="org/apache/commons/beanutils/PropertyUtilsBean.java">
        <Message>At PropertyUtilsBean.java:[lines 98-2283]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.PropertyUtilsBean</Message>
    </Class>
    <Method classname="org.apache.commons.beanutils.PropertyUtilsBean" name="getIndexedProperty" signature="(Ljava/lang/Object;Ljava/lang/String;I)Ljava/lang/Object;" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.PropertyUtilsBean" start="478" end="557" startBytecode="0" endBytecode="985" sourcefile="PropertyUtilsBean.java" sourcepath="org/apache/commons/beanutils/PropertyUtilsBean.java"/>
      <Message>In method org.apache.commons.beanutils.PropertyUtilsBean.getIndexedProperty(Object, String, int)</Message>
    </Method>
    <Method classname="java.lang.Integer" name="&lt;init&gt;" signature="(I)V" isStatic="false" role="METHOD_CALLED" classAnnotationNames="jdk.internal.ValueBased">
      <SourceLine classname="java.lang.Integer" start="1104" end="1106" startBytecode="0" endBytecode="69" sourcefile="Integer.java" sourcepath="java/lang/Integer.java"/>
      <Message>Called method new Integer(int)</Message>
    </Method>
    <Method classname="java.lang.Integer" name="valueOf" signature="(I)Ljava/lang/Integer;" isStatic="true" role="SHOULD_CALL" classAnnotationNames="jdk.internal.ValueBased">
      <SourceLine classname="java.lang.Integer" start="1079" end="1081" startBytecode="0" endBytecode="90" sourcefile="Integer.java" sourcepath="java/lang/Integer.java"/>
      <Message>Should call Integer.valueOf(int) instead</Message>
    </Method>
    <SourceLine classname="org.apache.commons.beanutils.PropertyUtilsBean" primary="true" start="519" end="519" startBytecode="288" endBytecode="288" sourcefile="PropertyUtilsBean.java" sourcepath="org/apache/commons/beanutils/PropertyUtilsBean.java">
      <Message>At PropertyUtilsBean.java:[line 519]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DM_NUMBER_CTOR" priority="2" rank="18" abbrev="Bx" category="PERFORMANCE" instanceHash="ed9dda16c9af14273737818cb381466c" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Method invokes inefficient Number constructor; use static valueOf instead</ShortMessage>
    <LongMessage>org.apache.commons.beanutils.PropertyUtilsBean.setIndexedProperty(Object, String, int, Object) invokes inefficient new Integer(int) constructor; use Integer.valueOf(int) instead</LongMessage>
    <Class classname="org.apache.commons.beanutils.PropertyUtilsBean" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.PropertyUtilsBean" start="98" end="2283" sourcefile="PropertyUtilsBean.java" sourcepath="org/apache/commons/beanutils/PropertyUtilsBean.java">
        <Message>At PropertyUtilsBean.java:[lines 98-2283]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.PropertyUtilsBean</Message>
    </Class>
    <Method classname="org.apache.commons.beanutils.PropertyUtilsBean" name="setIndexedProperty" signature="(Ljava/lang/Object;Ljava/lang/String;ILjava/lang/Object;)V" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.PropertyUtilsBean" start="1592" end="1686" startBytecode="0" endBytecode="1136" sourcefile="PropertyUtilsBean.java" sourcepath="org/apache/commons/beanutils/PropertyUtilsBean.java"/>
      <Message>In method org.apache.commons.beanutils.PropertyUtilsBean.setIndexedProperty(Object, String, int, Object)</Message>
    </Method>
    <Method classname="java.lang.Integer" name="&lt;init&gt;" signature="(I)V" isStatic="false" role="METHOD_CALLED" classAnnotationNames="jdk.internal.ValueBased">
      <SourceLine classname="java.lang.Integer" start="1104" end="1106" startBytecode="0" endBytecode="69" sourcefile="Integer.java" sourcepath="java/lang/Integer.java"/>
      <Message>Called method new Integer(int)</Message>
    </Method>
    <Method classname="java.lang.Integer" name="valueOf" signature="(I)Ljava/lang/Integer;" isStatic="true" role="SHOULD_CALL" classAnnotationNames="jdk.internal.ValueBased">
      <SourceLine classname="java.lang.Integer" start="1079" end="1081" startBytecode="0" endBytecode="90" sourcefile="Integer.java" sourcepath="java/lang/Integer.java"/>
      <Message>Should call Integer.valueOf(int) instead</Message>
    </Method>
    <SourceLine classname="org.apache.commons.beanutils.PropertyUtilsBean" primary="true" start="1637" end="1637" startBytecode="299" endBytecode="299" sourcefile="PropertyUtilsBean.java" sourcepath="org/apache/commons/beanutils/PropertyUtilsBean.java">
      <Message>At PropertyUtilsBean.java:[line 1637]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="4655ecc34b157ad9b760139445347e81" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.apache.commons.beanutils.PropertyUtilsBean.getResolver() may expose internal representation by returning PropertyUtilsBean.resolver</LongMessage>
    <Class classname="org.apache.commons.beanutils.PropertyUtilsBean" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.PropertyUtilsBean" start="98" end="2283" sourcefile="PropertyUtilsBean.java" sourcepath="org/apache/commons/beanutils/PropertyUtilsBean.java">
        <Message>At PropertyUtilsBean.java:[lines 98-2283]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.PropertyUtilsBean</Message>
    </Class>
    <Method classname="org.apache.commons.beanutils.PropertyUtilsBean" name="getResolver" signature="()Lorg/apache/commons/beanutils/expression/Resolver;" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.PropertyUtilsBean" start="158" end="158" startBytecode="0" endBytecode="46" sourcefile="PropertyUtilsBean.java" sourcepath="org/apache/commons/beanutils/PropertyUtilsBean.java"/>
      <Message>In method org.apache.commons.beanutils.PropertyUtilsBean.getResolver()</Message>
    </Method>
    <Field classname="org.apache.commons.beanutils.PropertyUtilsBean" name="resolver" signature="Lorg/apache/commons/beanutils/expression/Resolver;" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.PropertyUtilsBean" sourcefile="PropertyUtilsBean.java" sourcepath="org/apache/commons/beanutils/PropertyUtilsBean.java">
        <Message>In PropertyUtilsBean.java</Message>
      </SourceLine>
      <Message>Field org.apache.commons.beanutils.PropertyUtilsBean.resolver</Message>
    </Field>
    <SourceLine classname="org.apache.commons.beanutils.PropertyUtilsBean" primary="true" start="158" end="158" startBytecode="4" endBytecode="4" sourcefile="PropertyUtilsBean.java" sourcepath="org/apache/commons/beanutils/PropertyUtilsBean.java">
      <Message>At PropertyUtilsBean.java:[line 158]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="88f7fc5581935405c1d0f4ff2ed0b320" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>org.apache.commons.beanutils.PropertyUtilsBean.setResolver(Resolver) may expose internal representation by storing an externally mutable object into PropertyUtilsBean.resolver</LongMessage>
    <Class classname="org.apache.commons.beanutils.PropertyUtilsBean" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.PropertyUtilsBean" start="98" end="2283" sourcefile="PropertyUtilsBean.java" sourcepath="org/apache/commons/beanutils/PropertyUtilsBean.java">
        <Message>At PropertyUtilsBean.java:[lines 98-2283]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.PropertyUtilsBean</Message>
    </Class>
    <Method classname="org.apache.commons.beanutils.PropertyUtilsBean" name="setResolver" signature="(Lorg/apache/commons/beanutils/expression/Resolver;)V" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.PropertyUtilsBean" start="175" end="180" startBytecode="0" endBytecode="97" sourcefile="PropertyUtilsBean.java" sourcepath="org/apache/commons/beanutils/PropertyUtilsBean.java"/>
      <Message>In method org.apache.commons.beanutils.PropertyUtilsBean.setResolver(Resolver)</Message>
    </Method>
    <Field classname="org.apache.commons.beanutils.PropertyUtilsBean" name="resolver" signature="Lorg/apache/commons/beanutils/expression/Resolver;" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.PropertyUtilsBean" sourcefile="PropertyUtilsBean.java" sourcepath="org/apache/commons/beanutils/PropertyUtilsBean.java">
        <Message>In PropertyUtilsBean.java</Message>
      </SourceLine>
      <Message>Field org.apache.commons.beanutils.PropertyUtilsBean.resolver</Message>
    </Field>
    <LocalVariable name="resolver" register="1" pc="20" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named resolver</Message>
    </LocalVariable>
    <SourceLine classname="org.apache.commons.beanutils.PropertyUtilsBean" primary="true" start="178" end="178" startBytecode="20" endBytecode="20" sourcefile="PropertyUtilsBean.java" sourcepath="org/apache/commons/beanutils/PropertyUtilsBean.java">
      <Message>At PropertyUtilsBean.java:[line 178]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE" priority="3" rank="20" abbrev="RCN" category="STYLE" instanceHash="dd1817f6fc72a34a928f561baef70518" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="476">
    <ShortMessage>Redundant nullcheck of value known to be non-null</ShortMessage>
    <LongMessage>Redundant nullcheck of parTypes, which is known to be non-null in org.apache.commons.beanutils.PropertyUtilsBean.invokeMethod(Method, Object, Object[])</LongMessage>
    <Class classname="org.apache.commons.beanutils.PropertyUtilsBean" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.PropertyUtilsBean" start="98" end="2283" sourcefile="PropertyUtilsBean.java" sourcepath="org/apache/commons/beanutils/PropertyUtilsBean.java">
        <Message>At PropertyUtilsBean.java:[lines 98-2283]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.PropertyUtilsBean</Message>
    </Class>
    <Method classname="org.apache.commons.beanutils.PropertyUtilsBean" name="invokeMethod" signature="(Ljava/lang/reflect/Method;Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.PropertyUtilsBean" start="2120" end="2204" startBytecode="0" endBytecode="1239" sourcefile="PropertyUtilsBean.java" sourcepath="org/apache/commons/beanutils/PropertyUtilsBean.java"/>
      <Message>In method org.apache.commons.beanutils.PropertyUtilsBean.invokeMethod(Method, Object, Object[])</Message>
    </Method>
    <LocalVariable name="parTypes" register="7" pc="146" role="LOCAL_VARIABLE_VALUE_OF">
      <Message>Value loaded from parTypes</Message>
    </LocalVariable>
    <Method classname="java.lang.reflect.Method" name="getParameterTypes" signature="()[Ljava/lang/Class;" isStatic="false" role="METHOD_RETURN_VALUE_OF">
      <SourceLine classname="java.lang.reflect.Method" start="314" end="314" startBytecode="0" endBytecode="52" sourcefile="Method.java" sourcepath="java/lang/reflect/Method.java"/>
      <Message>Return value of reflect.Method.getParameterTypes() of type Class[]</Message>
    </Method>
    <SourceLine classname="org.apache.commons.beanutils.PropertyUtilsBean" primary="true" start="2147" end="2147" startBytecode="148" endBytecode="148" sourcefile="PropertyUtilsBean.java" sourcepath="org/apache/commons/beanutils/PropertyUtilsBean.java" role="SOURCE_REDUNDANT_NULL_CHECK">
      <Message>Redundant null check at PropertyUtilsBean.java:[line 2147]</Message>
    </SourceLine>
    <SourceLine classname="org.apache.commons.beanutils.PropertyUtilsBean" start="2184" end="2184" startBytecode="472" endBytecode="472" sourcefile="PropertyUtilsBean.java" sourcepath="org/apache/commons/beanutils/PropertyUtilsBean.java" role="SOURCE_LINE_ANOTHER_INSTANCE">
      <Message>Another occurrence at PropertyUtilsBean.java:[line 2184]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="SBSC_USE_STRINGBUFFER_CONCATENATION" priority="2" rank="18" abbrev="SBSC" category="PERFORMANCE" instanceHash="36ddee26eb942af6e8c5bbcc7af210d8" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Method concatenates strings using + in a loop</ShortMessage>
    <LongMessage>org.apache.commons.beanutils.PropertyUtilsBean.invokeMethod(Method, Object, Object[]) concatenates strings using + in a loop</LongMessage>
    <Class classname="org.apache.commons.beanutils.PropertyUtilsBean" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.PropertyUtilsBean" start="98" end="2283" sourcefile="PropertyUtilsBean.java" sourcepath="org/apache/commons/beanutils/PropertyUtilsBean.java">
        <Message>At PropertyUtilsBean.java:[lines 98-2283]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.PropertyUtilsBean</Message>
    </Class>
    <Method classname="org.apache.commons.beanutils.PropertyUtilsBean" name="invokeMethod" signature="(Ljava/lang/reflect/Method;Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.PropertyUtilsBean" start="2120" end="2204" startBytecode="0" endBytecode="1239" sourcefile="PropertyUtilsBean.java" sourcepath="org/apache/commons/beanutils/PropertyUtilsBean.java"/>
      <Message>In method org.apache.commons.beanutils.PropertyUtilsBean.invokeMethod(Method, Object, Object[])</Message>
    </Method>
    <SourceLine classname="org.apache.commons.beanutils.PropertyUtilsBean" primary="true" start="2141" end="2141" startBytecode="100" endBytecode="100" sourcefile="PropertyUtilsBean.java" sourcepath="org/apache/commons/beanutils/PropertyUtilsBean.java">
      <Message>At PropertyUtilsBean.java:[line 2141]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="CT_CONSTRUCTOR_THROW" priority="2" rank="16" abbrev="CT" category="BAD_PRACTICE" instanceHash="2f766bf3b384d4acd39eac5eea447c42" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Be wary of letting constructors throw exceptions.</ShortMessage>
    <LongMessage>Exception thrown in class org.apache.commons.beanutils.ResultSetDynaClass at new org.apache.commons.beanutils.ResultSetDynaClass(ResultSet) will leave the constructor. The object under construction remains partially initialized and may be vulnerable to Finalizer attacks.</LongMessage>
    <Class classname="org.apache.commons.beanutils.ResultSetDynaClass" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.ResultSetDynaClass" start="83" end="245" sourcefile="ResultSetDynaClass.java" sourcepath="org/apache/commons/beanutils/ResultSetDynaClass.java">
        <Message>At ResultSetDynaClass.java:[lines 83-245]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.ResultSetDynaClass</Message>
    </Class>
    <Method classname="org.apache.commons.beanutils.ResultSetDynaClass" name="&lt;init&gt;" signature="(Ljava/sql/ResultSet;)V" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.ResultSetDynaClass" start="103" end="105" startBytecode="0" endBytecode="62" sourcefile="ResultSetDynaClass.java" sourcepath="org/apache/commons/beanutils/ResultSetDynaClass.java"/>
      <Message>In method new org.apache.commons.beanutils.ResultSetDynaClass(ResultSet)</Message>
    </Method>
    <SourceLine classname="org.apache.commons.beanutils.ResultSetDynaClass" primary="true" start="105" end="105" startBytecode="9" endBytecode="9" sourcefile="ResultSetDynaClass.java" sourcepath="org/apache/commons/beanutils/ResultSetDynaClass.java">
      <Message>At ResultSetDynaClass.java:[line 105]</Message>
    </SourceLine>
    <SourceLine classname="org.apache.commons.beanutils.ResultSetDynaClass" start="105" end="105" startBytecode="9" endBytecode="9" sourcefile="ResultSetDynaClass.java" sourcepath="org/apache/commons/beanutils/ResultSetDynaClass.java">
      <Message>At ResultSetDynaClass.java:[line 105]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="CT_CONSTRUCTOR_THROW" priority="2" rank="16" abbrev="CT" category="BAD_PRACTICE" instanceHash="62d7f43a76fee577323618afad2bf011" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Be wary of letting constructors throw exceptions.</ShortMessage>
    <LongMessage>Exception thrown in class org.apache.commons.beanutils.ResultSetDynaClass at new org.apache.commons.beanutils.ResultSetDynaClass(ResultSet, boolean) will leave the constructor. The object under construction remains partially initialized and may be vulnerable to Finalizer attacks.</LongMessage>
    <Class classname="org.apache.commons.beanutils.ResultSetDynaClass" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.ResultSetDynaClass" start="83" end="245" sourcefile="ResultSetDynaClass.java" sourcepath="org/apache/commons/beanutils/ResultSetDynaClass.java">
        <Message>At ResultSetDynaClass.java:[lines 83-245]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.ResultSetDynaClass</Message>
    </Class>
    <Method classname="org.apache.commons.beanutils.ResultSetDynaClass" name="&lt;init&gt;" signature="(Ljava/sql/ResultSet;Z)V" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.ResultSetDynaClass" start="132" end="134" startBytecode="0" endBytecode="73" sourcefile="ResultSetDynaClass.java" sourcepath="org/apache/commons/beanutils/ResultSetDynaClass.java"/>
      <Message>In method new org.apache.commons.beanutils.ResultSetDynaClass(ResultSet, boolean)</Message>
    </Method>
    <SourceLine classname="org.apache.commons.beanutils.ResultSetDynaClass" primary="true" start="132" end="132" startBytecode="6" endBytecode="6" sourcefile="ResultSetDynaClass.java" sourcepath="org/apache/commons/beanutils/ResultSetDynaClass.java">
      <Message>At ResultSetDynaClass.java:[line 132]</Message>
    </SourceLine>
    <SourceLine classname="org.apache.commons.beanutils.ResultSetDynaClass" start="132" end="132" startBytecode="6" endBytecode="6" sourcefile="ResultSetDynaClass.java" sourcepath="org/apache/commons/beanutils/ResultSetDynaClass.java">
      <Message>At ResultSetDynaClass.java:[line 132]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="CT_CONSTRUCTOR_THROW" priority="2" rank="16" abbrev="CT" category="BAD_PRACTICE" instanceHash="20f3f5275357284b640df1df334b3f4f" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Be wary of letting constructors throw exceptions.</ShortMessage>
    <LongMessage>Exception thrown in class org.apache.commons.beanutils.ResultSetDynaClass at new org.apache.commons.beanutils.ResultSetDynaClass(ResultSet, boolean, boolean) will leave the constructor. The object under construction remains partially initialized and may be vulnerable to Finalizer attacks.</LongMessage>
    <Class classname="org.apache.commons.beanutils.ResultSetDynaClass" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.ResultSetDynaClass" start="83" end="245" sourcefile="ResultSetDynaClass.java" sourcepath="org/apache/commons/beanutils/ResultSetDynaClass.java">
        <Message>At ResultSetDynaClass.java:[lines 83-245]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.ResultSetDynaClass</Message>
    </Class>
    <Method classname="org.apache.commons.beanutils.ResultSetDynaClass" name="&lt;init&gt;" signature="(Ljava/sql/ResultSet;ZZ)V" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.ResultSetDynaClass" start="161" end="171" startBytecode="0" endBytecode="168" sourcefile="ResultSetDynaClass.java" sourcepath="org/apache/commons/beanutils/ResultSetDynaClass.java"/>
      <Message>In method new org.apache.commons.beanutils.ResultSetDynaClass(ResultSet, boolean, boolean)</Message>
    </Method>
    <SourceLine classname="org.apache.commons.beanutils.ResultSetDynaClass" primary="true" start="180" end="180" startBytecode="7" endBytecode="7" sourcefile="ResultSetDynaClass.java" sourcepath="org/apache/commons/beanutils/ResultSetDynaClass.java">
      <Message>At ResultSetDynaClass.java:[line 180]</Message>
    </SourceLine>
    <SourceLine classname="org.apache.commons.beanutils.ResultSetDynaClass" start="180" end="180" startBytecode="7" endBytecode="7" sourcefile="ResultSetDynaClass.java" sourcepath="org/apache/commons/beanutils/ResultSetDynaClass.java">
      <Message>At ResultSetDynaClass.java:[line 180]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="3e89646b7705560fccb5bedf9d4ac7c7" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>new org.apache.commons.beanutils.ResultSetDynaClass(ResultSet, boolean, boolean) may expose internal representation by storing an externally mutable object into ResultSetDynaClass.resultSet</LongMessage>
    <Class classname="org.apache.commons.beanutils.ResultSetDynaClass" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.ResultSetDynaClass" start="83" end="245" sourcefile="ResultSetDynaClass.java" sourcepath="org/apache/commons/beanutils/ResultSetDynaClass.java">
        <Message>At ResultSetDynaClass.java:[lines 83-245]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.ResultSetDynaClass</Message>
    </Class>
    <Method classname="org.apache.commons.beanutils.ResultSetDynaClass" name="&lt;init&gt;" signature="(Ljava/sql/ResultSet;ZZ)V" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.ResultSetDynaClass" start="161" end="171" startBytecode="0" endBytecode="168" sourcefile="ResultSetDynaClass.java" sourcepath="org/apache/commons/beanutils/ResultSetDynaClass.java"/>
      <Message>In method new org.apache.commons.beanutils.ResultSetDynaClass(ResultSet, boolean, boolean)</Message>
    </Method>
    <Field classname="org.apache.commons.beanutils.ResultSetDynaClass" name="resultSet" signature="Ljava/sql/ResultSet;" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.ResultSetDynaClass" sourcefile="ResultSetDynaClass.java" sourcepath="org/apache/commons/beanutils/ResultSetDynaClass.java">
        <Message>In ResultSetDynaClass.java</Message>
      </SourceLine>
      <Message>Field org.apache.commons.beanutils.ResultSetDynaClass.resultSet</Message>
    </Field>
    <LocalVariable name="resultSet" register="1" pc="23" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named resultSet</Message>
    </LocalVariable>
    <SourceLine classname="org.apache.commons.beanutils.ResultSetDynaClass" primary="true" start="166" end="166" startBytecode="23" endBytecode="23" sourcefile="ResultSetDynaClass.java" sourcepath="org/apache/commons/beanutils/ResultSetDynaClass.java">
      <Message>At ResultSetDynaClass.java:[line 166]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="RI_REDUNDANT_INTERFACES" priority="3" rank="20" abbrev="RI" category="STYLE" instanceHash="bb81e2f5fe93739ba2fda00d10c77e5e" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Class implements same interface as superclass</ShortMessage>
    <LongMessage>Class org.apache.commons.beanutils.ResultSetDynaClass implements same interface as superclass</LongMessage>
    <Class classname="org.apache.commons.beanutils.ResultSetDynaClass" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.ResultSetDynaClass" start="83" end="245" sourcefile="ResultSetDynaClass.java" sourcepath="org/apache/commons/beanutils/ResultSetDynaClass.java">
        <Message>At ResultSetDynaClass.java:[lines 83-245]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.ResultSetDynaClass</Message>
    </Class>
    <Class classname="org.apache.commons.beanutils.DynaClass" role="INTERFACE_TYPE">
      <SourceLine classname="org.apache.commons.beanutils.DynaClass" sourcefile="DynaClass.java" sourcepath="org/apache/commons/beanutils/DynaClass.java">
        <Message>In DynaClass.java</Message>
      </SourceLine>
      <Message>Interface org.apache.commons.beanutils.DynaClass</Message>
    </Class>
    <SourceLine classname="org.apache.commons.beanutils.ResultSetDynaClass" start="83" end="245" sourcefile="ResultSetDynaClass.java" sourcepath="org/apache/commons/beanutils/ResultSetDynaClass.java" synthetic="true">
      <Message>At ResultSetDynaClass.java:[lines 83-245]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="SE_BAD_FIELD" priority="3" rank="19" abbrev="Se" category="BAD_PRACTICE" instanceHash="b6b2a7d12fdc18dd462396116304a20" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Non-transient non-serializable instance field in serializable class</ShortMessage>
    <LongMessage>Class org.apache.commons.beanutils.ResultSetDynaClass defines non-transient non-serializable instance field resultSet</LongMessage>
    <Class classname="org.apache.commons.beanutils.ResultSetDynaClass" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.ResultSetDynaClass" start="83" end="245" sourcefile="ResultSetDynaClass.java" sourcepath="org/apache/commons/beanutils/ResultSetDynaClass.java">
        <Message>At ResultSetDynaClass.java:[lines 83-245]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.ResultSetDynaClass</Message>
    </Class>
    <Field classname="org.apache.commons.beanutils.ResultSetDynaClass" name="resultSet" signature="Ljava/sql/ResultSet;" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.ResultSetDynaClass" sourcefile="ResultSetDynaClass.java" sourcepath="org/apache/commons/beanutils/ResultSetDynaClass.java">
        <Message>In ResultSetDynaClass.java</Message>
      </SourceLine>
      <Message>Field org.apache.commons.beanutils.ResultSetDynaClass.resultSet</Message>
    </Field>
    <Type descriptor="Ljava/sql/ResultSet;" role="TYPE_FOUND">
      <SourceLine classname="java.sql.ResultSet" start="4186" end="4287" sourcefile="ResultSet.java" sourcepath="java/sql/ResultSet.java">
        <Message>At ResultSet.java:[lines 4186-4287]</Message>
      </SourceLine>
      <Message>Actual type java.sql.ResultSet</Message>
    </Type>
    <SourceLine classname="org.apache.commons.beanutils.ResultSetDynaClass" sourcefile="ResultSetDynaClass.java" sourcepath="org/apache/commons/beanutils/ResultSetDynaClass.java" synthetic="true">
      <Message>In ResultSetDynaClass.java</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="SE_NO_SERIALVERSIONID" priority="3" rank="19" abbrev="SnVI" category="BAD_PRACTICE" instanceHash="42552df753ef4a3f79a075d3e22584f7" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Class is Serializable, but doesn&apos;t define serialVersionUID</ShortMessage>
    <LongMessage>org.apache.commons.beanutils.ResultSetDynaClass is Serializable; consider declaring a serialVersionUID</LongMessage>
    <Class classname="org.apache.commons.beanutils.ResultSetDynaClass" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.ResultSetDynaClass" start="83" end="245" sourcefile="ResultSetDynaClass.java" sourcepath="org/apache/commons/beanutils/ResultSetDynaClass.java">
        <Message>At ResultSetDynaClass.java:[lines 83-245]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.ResultSetDynaClass</Message>
    </Class>
    <SourceLine classname="org.apache.commons.beanutils.ResultSetDynaClass" start="83" end="245" sourcefile="ResultSetDynaClass.java" sourcepath="org/apache/commons/beanutils/ResultSetDynaClass.java" synthetic="true">
      <Message>At ResultSetDynaClass.java:[lines 83-245]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="aa6ae2275c04571da4680e20fb161805" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.apache.commons.beanutils.ResultSetIterator.getDynaClass() may expose internal representation by returning ResultSetIterator.dynaClass</LongMessage>
    <Class classname="org.apache.commons.beanutils.ResultSetIterator" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.ResultSetIterator" start="36" end="352" sourcefile="ResultSetIterator.java" sourcepath="org/apache/commons/beanutils/ResultSetIterator.java">
        <Message>At ResultSetIterator.java:[lines 36-352]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.ResultSetIterator</Message>
    </Class>
    <Method classname="org.apache.commons.beanutils.ResultSetIterator" name="getDynaClass" signature="()Lorg/apache/commons/beanutils/DynaClass;" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.ResultSetIterator" start="180" end="180" startBytecode="0" endBytecode="46" sourcefile="ResultSetIterator.java" sourcepath="org/apache/commons/beanutils/ResultSetIterator.java"/>
      <Message>In method org.apache.commons.beanutils.ResultSetIterator.getDynaClass()</Message>
    </Method>
    <Field classname="org.apache.commons.beanutils.ResultSetIterator" name="dynaClass" signature="Lorg/apache/commons/beanutils/ResultSetDynaClass;" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.ResultSetIterator" sourcefile="ResultSetIterator.java" sourcepath="org/apache/commons/beanutils/ResultSetIterator.java">
        <Message>In ResultSetIterator.java</Message>
      </SourceLine>
      <Message>Field org.apache.commons.beanutils.ResultSetIterator.dynaClass</Message>
    </Field>
    <SourceLine classname="org.apache.commons.beanutils.ResultSetIterator" primary="true" start="180" end="180" startBytecode="4" endBytecode="4" sourcefile="ResultSetIterator.java" sourcepath="org/apache/commons/beanutils/ResultSetIterator.java">
      <Message>At ResultSetIterator.java:[line 180]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="CT_CONSTRUCTOR_THROW" priority="2" rank="16" abbrev="CT" category="BAD_PRACTICE" instanceHash="6d47e8c0a6bd57315304455440d68ac6" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Be wary of letting constructors throw exceptions.</ShortMessage>
    <LongMessage>Exception thrown in class org.apache.commons.beanutils.RowSetDynaClass at new org.apache.commons.beanutils.RowSetDynaClass(ResultSet) will leave the constructor. The object under construction remains partially initialized and may be vulnerable to Finalizer attacks.</LongMessage>
    <Class classname="org.apache.commons.beanutils.RowSetDynaClass" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.RowSetDynaClass" start="68" end="309" sourcefile="RowSetDynaClass.java" sourcepath="org/apache/commons/beanutils/RowSetDynaClass.java">
        <Message>At RowSetDynaClass.java:[lines 68-309]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.RowSetDynaClass</Message>
    </Class>
    <Method classname="org.apache.commons.beanutils.RowSetDynaClass" name="&lt;init&gt;" signature="(Ljava/sql/ResultSet;)V" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.RowSetDynaClass" start="104" end="106" startBytecode="0" endBytecode="63" sourcefile="RowSetDynaClass.java" sourcepath="org/apache/commons/beanutils/RowSetDynaClass.java"/>
      <Message>In method new org.apache.commons.beanutils.RowSetDynaClass(ResultSet)</Message>
    </Method>
    <SourceLine classname="org.apache.commons.beanutils.RowSetDynaClass" primary="true" start="106" end="106" startBytecode="19" endBytecode="19" sourcefile="RowSetDynaClass.java" sourcepath="org/apache/commons/beanutils/RowSetDynaClass.java">
      <Message>At RowSetDynaClass.java:[line 106]</Message>
    </SourceLine>
    <SourceLine classname="org.apache.commons.beanutils.RowSetDynaClass" start="106" end="106" startBytecode="19" endBytecode="19" sourcefile="RowSetDynaClass.java" sourcepath="org/apache/commons/beanutils/RowSetDynaClass.java">
      <Message>At RowSetDynaClass.java:[line 106]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="CT_CONSTRUCTOR_THROW" priority="2" rank="16" abbrev="CT" category="BAD_PRACTICE" instanceHash="ffd60cd98a49a1edfeb554a574833f5a" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Be wary of letting constructors throw exceptions.</ShortMessage>
    <LongMessage>Exception thrown in class org.apache.commons.beanutils.RowSetDynaClass at new org.apache.commons.beanutils.RowSetDynaClass(ResultSet, int) will leave the constructor. The object under construction remains partially initialized and may be vulnerable to Finalizer attacks.</LongMessage>
    <Class classname="org.apache.commons.beanutils.RowSetDynaClass" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.RowSetDynaClass" start="68" end="309" sourcefile="RowSetDynaClass.java" sourcepath="org/apache/commons/beanutils/RowSetDynaClass.java">
        <Message>At RowSetDynaClass.java:[lines 68-309]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.RowSetDynaClass</Message>
    </Class>
    <Method classname="org.apache.commons.beanutils.RowSetDynaClass" name="&lt;init&gt;" signature="(Ljava/sql/ResultSet;I)V" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.RowSetDynaClass" start="126" end="128" startBytecode="0" endBytecode="73" sourcefile="RowSetDynaClass.java" sourcepath="org/apache/commons/beanutils/RowSetDynaClass.java"/>
      <Message>In method new org.apache.commons.beanutils.RowSetDynaClass(ResultSet, int)</Message>
    </Method>
    <SourceLine classname="org.apache.commons.beanutils.RowSetDynaClass" primary="true" start="128" end="128" startBytecode="7" endBytecode="7" sourcefile="RowSetDynaClass.java" sourcepath="org/apache/commons/beanutils/RowSetDynaClass.java">
      <Message>At RowSetDynaClass.java:[line 128]</Message>
    </SourceLine>
    <SourceLine classname="org.apache.commons.beanutils.RowSetDynaClass" start="128" end="128" startBytecode="7" endBytecode="7" sourcefile="RowSetDynaClass.java" sourcepath="org/apache/commons/beanutils/RowSetDynaClass.java">
      <Message>At RowSetDynaClass.java:[line 128]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="CT_CONSTRUCTOR_THROW" priority="2" rank="16" abbrev="CT" category="BAD_PRACTICE" instanceHash="f71581a9e356cd9be6ef482668903852" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Be wary of letting constructors throw exceptions.</ShortMessage>
    <LongMessage>Exception thrown in class org.apache.commons.beanutils.RowSetDynaClass at new org.apache.commons.beanutils.RowSetDynaClass(ResultSet, boolean) will leave the constructor. The object under construction remains partially initialized and may be vulnerable to Finalizer attacks.</LongMessage>
    <Class classname="org.apache.commons.beanutils.RowSetDynaClass" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.RowSetDynaClass" start="68" end="309" sourcefile="RowSetDynaClass.java" sourcepath="org/apache/commons/beanutils/RowSetDynaClass.java">
        <Message>At RowSetDynaClass.java:[lines 68-309]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.RowSetDynaClass</Message>
    </Class>
    <Method classname="org.apache.commons.beanutils.RowSetDynaClass" name="&lt;init&gt;" signature="(Ljava/sql/ResultSet;Z)V" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.RowSetDynaClass" start="151" end="153" startBytecode="0" endBytecode="73" sourcefile="RowSetDynaClass.java" sourcepath="org/apache/commons/beanutils/RowSetDynaClass.java"/>
      <Message>In method new org.apache.commons.beanutils.RowSetDynaClass(ResultSet, boolean)</Message>
    </Method>
    <SourceLine classname="org.apache.commons.beanutils.RowSetDynaClass" primary="true" start="153" end="153" startBytecode="7" endBytecode="7" sourcefile="RowSetDynaClass.java" sourcepath="org/apache/commons/beanutils/RowSetDynaClass.java">
      <Message>At RowSetDynaClass.java:[line 153]</Message>
    </SourceLine>
    <SourceLine classname="org.apache.commons.beanutils.RowSetDynaClass" start="153" end="153" startBytecode="7" endBytecode="7" sourcefile="RowSetDynaClass.java" sourcepath="org/apache/commons/beanutils/RowSetDynaClass.java">
      <Message>At RowSetDynaClass.java:[line 153]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="CT_CONSTRUCTOR_THROW" priority="2" rank="16" abbrev="CT" category="BAD_PRACTICE" instanceHash="9b0ab78c4a966aa66666b68696568e7c" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Be wary of letting constructors throw exceptions.</ShortMessage>
    <LongMessage>Exception thrown in class org.apache.commons.beanutils.RowSetDynaClass at new org.apache.commons.beanutils.RowSetDynaClass(ResultSet, boolean, int) will leave the constructor. The object under construction remains partially initialized and may be vulnerable to Finalizer attacks.</LongMessage>
    <Class classname="org.apache.commons.beanutils.RowSetDynaClass" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.RowSetDynaClass" start="68" end="309" sourcefile="RowSetDynaClass.java" sourcepath="org/apache/commons/beanutils/RowSetDynaClass.java">
        <Message>At RowSetDynaClass.java:[lines 68-309]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.RowSetDynaClass</Message>
    </Class>
    <Method classname="org.apache.commons.beanutils.RowSetDynaClass" name="&lt;init&gt;" signature="(Ljava/sql/ResultSet;ZI)V" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.RowSetDynaClass" start="180" end="182" startBytecode="0" endBytecode="84" sourcefile="RowSetDynaClass.java" sourcepath="org/apache/commons/beanutils/RowSetDynaClass.java"/>
      <Message>In method new org.apache.commons.beanutils.RowSetDynaClass(ResultSet, boolean, int)</Message>
    </Method>
    <SourceLine classname="org.apache.commons.beanutils.RowSetDynaClass" primary="true" start="180" end="180" startBytecode="7" endBytecode="7" sourcefile="RowSetDynaClass.java" sourcepath="org/apache/commons/beanutils/RowSetDynaClass.java">
      <Message>At RowSetDynaClass.java:[line 180]</Message>
    </SourceLine>
    <SourceLine classname="org.apache.commons.beanutils.RowSetDynaClass" start="180" end="180" startBytecode="7" endBytecode="7" sourcefile="RowSetDynaClass.java" sourcepath="org/apache/commons/beanutils/RowSetDynaClass.java">
      <Message>At RowSetDynaClass.java:[line 180]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="CT_CONSTRUCTOR_THROW" priority="2" rank="16" abbrev="CT" category="BAD_PRACTICE" instanceHash="a89df16061512e0b59f9bb83d4e3488d" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Be wary of letting constructors throw exceptions.</ShortMessage>
    <LongMessage>Exception thrown in class org.apache.commons.beanutils.RowSetDynaClass at new org.apache.commons.beanutils.RowSetDynaClass(ResultSet, boolean, int, boolean) will leave the constructor. The object under construction remains partially initialized and may be vulnerable to Finalizer attacks.</LongMessage>
    <Class classname="org.apache.commons.beanutils.RowSetDynaClass" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.RowSetDynaClass" start="68" end="309" sourcefile="RowSetDynaClass.java" sourcepath="org/apache/commons/beanutils/RowSetDynaClass.java">
        <Message>At RowSetDynaClass.java:[lines 68-309]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.RowSetDynaClass</Message>
    </Class>
    <Method classname="org.apache.commons.beanutils.RowSetDynaClass" name="&lt;init&gt;" signature="(Ljava/sql/ResultSet;ZIZ)V" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.RowSetDynaClass" start="238" end="249" startBytecode="0" endBytecode="204" sourcefile="RowSetDynaClass.java" sourcepath="org/apache/commons/beanutils/RowSetDynaClass.java"/>
      <Message>In method new org.apache.commons.beanutils.RowSetDynaClass(ResultSet, boolean, int, boolean)</Message>
    </Method>
    <SourceLine classname="org.apache.commons.beanutils.RowSetDynaClass" primary="true" start="78" end="78" startBytecode="8" endBytecode="8" sourcefile="RowSetDynaClass.java" sourcepath="org/apache/commons/beanutils/RowSetDynaClass.java">
      <Message>At RowSetDynaClass.java:[line 78]</Message>
    </SourceLine>
    <SourceLine classname="org.apache.commons.beanutils.RowSetDynaClass" start="78" end="78" startBytecode="8" endBytecode="8" sourcefile="RowSetDynaClass.java" sourcepath="org/apache/commons/beanutils/RowSetDynaClass.java">
      <Message>At RowSetDynaClass.java:[line 78]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="CT_CONSTRUCTOR_THROW" priority="2" rank="16" abbrev="CT" category="BAD_PRACTICE" instanceHash="cdb8dfd4f03eed00ec0c79f25d056ccb" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Be wary of letting constructors throw exceptions.</ShortMessage>
    <LongMessage>Exception thrown in class org.apache.commons.beanutils.RowSetDynaClass at new org.apache.commons.beanutils.RowSetDynaClass(ResultSet, boolean, boolean) will leave the constructor. The object under construction remains partially initialized and may be vulnerable to Finalizer attacks.</LongMessage>
    <Class classname="org.apache.commons.beanutils.RowSetDynaClass" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.RowSetDynaClass" start="68" end="309" sourcefile="RowSetDynaClass.java" sourcepath="org/apache/commons/beanutils/RowSetDynaClass.java">
        <Message>At RowSetDynaClass.java:[lines 68-309]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.RowSetDynaClass</Message>
    </Class>
    <Method classname="org.apache.commons.beanutils.RowSetDynaClass" name="&lt;init&gt;" signature="(Ljava/sql/ResultSet;ZZ)V" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.RowSetDynaClass" start="209" end="211" startBytecode="0" endBytecode="84" sourcefile="RowSetDynaClass.java" sourcepath="org/apache/commons/beanutils/RowSetDynaClass.java"/>
      <Message>In method new org.apache.commons.beanutils.RowSetDynaClass(ResultSet, boolean, boolean)</Message>
    </Method>
    <SourceLine classname="org.apache.commons.beanutils.RowSetDynaClass" primary="true" start="211" end="211" startBytecode="8" endBytecode="8" sourcefile="RowSetDynaClass.java" sourcepath="org/apache/commons/beanutils/RowSetDynaClass.java">
      <Message>At RowSetDynaClass.java:[line 211]</Message>
    </SourceLine>
    <SourceLine classname="org.apache.commons.beanutils.RowSetDynaClass" start="211" end="211" startBytecode="8" endBytecode="8" sourcefile="RowSetDynaClass.java" sourcepath="org/apache/commons/beanutils/RowSetDynaClass.java">
      <Message>At RowSetDynaClass.java:[line 211]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="4214a817300ef41d8b9a9b0e255a2d59" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.apache.commons.beanutils.RowSetDynaClass.getRows() may expose internal representation by returning RowSetDynaClass.rows</LongMessage>
    <Class classname="org.apache.commons.beanutils.RowSetDynaClass" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.RowSetDynaClass" start="68" end="309" sourcefile="RowSetDynaClass.java" sourcepath="org/apache/commons/beanutils/RowSetDynaClass.java">
        <Message>At RowSetDynaClass.java:[lines 68-309]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.RowSetDynaClass</Message>
    </Class>
    <Method classname="org.apache.commons.beanutils.RowSetDynaClass" name="getRows" signature="()Ljava/util/List;" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.RowSetDynaClass" start="266" end="266" startBytecode="0" endBytecode="46" sourcefile="RowSetDynaClass.java" sourcepath="org/apache/commons/beanutils/RowSetDynaClass.java"/>
      <Message>In method org.apache.commons.beanutils.RowSetDynaClass.getRows()</Message>
    </Method>
    <Field classname="org.apache.commons.beanutils.RowSetDynaClass" name="rows" signature="Ljava/util/List;" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.RowSetDynaClass" sourcefile="RowSetDynaClass.java" sourcepath="org/apache/commons/beanutils/RowSetDynaClass.java">
        <Message>In RowSetDynaClass.java</Message>
      </SourceLine>
      <Message>Field org.apache.commons.beanutils.RowSetDynaClass.rows</Message>
    </Field>
    <SourceLine classname="org.apache.commons.beanutils.RowSetDynaClass" primary="true" start="266" end="266" startBytecode="4" endBytecode="4" sourcefile="RowSetDynaClass.java" sourcepath="org/apache/commons/beanutils/RowSetDynaClass.java">
      <Message>At RowSetDynaClass.java:[line 266]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="RI_REDUNDANT_INTERFACES" priority="3" rank="20" abbrev="RI" category="STYLE" instanceHash="49d089c0b092704dfe8a4841b7f2db7e" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Class implements same interface as superclass</ShortMessage>
    <LongMessage>Class org.apache.commons.beanutils.RowSetDynaClass implements same interface as superclass</LongMessage>
    <Class classname="org.apache.commons.beanutils.RowSetDynaClass" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.RowSetDynaClass" start="68" end="309" sourcefile="RowSetDynaClass.java" sourcepath="org/apache/commons/beanutils/RowSetDynaClass.java">
        <Message>At RowSetDynaClass.java:[lines 68-309]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.RowSetDynaClass</Message>
    </Class>
    <Class classname="org.apache.commons.beanutils.DynaClass" role="INTERFACE_TYPE">
      <SourceLine classname="org.apache.commons.beanutils.DynaClass" sourcefile="DynaClass.java" sourcepath="org/apache/commons/beanutils/DynaClass.java">
        <Message>In DynaClass.java</Message>
      </SourceLine>
      <Message>Interface org.apache.commons.beanutils.DynaClass</Message>
    </Class>
    <SourceLine classname="org.apache.commons.beanutils.RowSetDynaClass" start="68" end="309" sourcefile="RowSetDynaClass.java" sourcepath="org/apache/commons/beanutils/RowSetDynaClass.java" synthetic="true">
      <Message>At RowSetDynaClass.java:[lines 68-309]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="SE_BAD_FIELD" priority="3" rank="19" abbrev="Se" category="BAD_PRACTICE" instanceHash="abcfe7d22f1f34bd20691bef123930f6" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Non-transient non-serializable instance field in serializable class</ShortMessage>
    <LongMessage>Class org.apache.commons.beanutils.RowSetDynaClass defines non-transient non-serializable instance field rows</LongMessage>
    <Class classname="org.apache.commons.beanutils.RowSetDynaClass" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.RowSetDynaClass" start="68" end="309" sourcefile="RowSetDynaClass.java" sourcepath="org/apache/commons/beanutils/RowSetDynaClass.java">
        <Message>At RowSetDynaClass.java:[lines 68-309]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.RowSetDynaClass</Message>
    </Class>
    <Field classname="org.apache.commons.beanutils.RowSetDynaClass" name="rows" signature="Ljava/util/List;" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.RowSetDynaClass" sourcefile="RowSetDynaClass.java" sourcepath="org/apache/commons/beanutils/RowSetDynaClass.java">
        <Message>In RowSetDynaClass.java</Message>
      </SourceLine>
      <Message>Field org.apache.commons.beanutils.RowSetDynaClass.rows</Message>
    </Field>
    <Type descriptor="Lorg/apache/commons/beanutils/DynaBean;" role="TYPE_FOUND">
      <SourceLine classname="org.apache.commons.beanutils.DynaBean" sourcefile="DynaBean.java" sourcepath="org/apache/commons/beanutils/DynaBean.java">
        <Message>In DynaBean.java</Message>
      </SourceLine>
      <Message>Actual type org.apache.commons.beanutils.DynaBean</Message>
    </Type>
    <SourceLine classname="org.apache.commons.beanutils.RowSetDynaClass" sourcefile="RowSetDynaClass.java" sourcepath="org/apache/commons/beanutils/RowSetDynaClass.java" synthetic="true">
      <Message>In RowSetDynaClass.java</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="SE_NO_SERIALVERSIONID" priority="3" rank="19" abbrev="SnVI" category="BAD_PRACTICE" instanceHash="56e48bd78536009283adb311a4a0e848" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Class is Serializable, but doesn&apos;t define serialVersionUID</ShortMessage>
    <LongMessage>org.apache.commons.beanutils.RowSetDynaClass is Serializable; consider declaring a serialVersionUID</LongMessage>
    <Class classname="org.apache.commons.beanutils.RowSetDynaClass" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.RowSetDynaClass" start="68" end="309" sourcefile="RowSetDynaClass.java" sourcepath="org/apache/commons/beanutils/RowSetDynaClass.java">
        <Message>At RowSetDynaClass.java:[lines 68-309]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.RowSetDynaClass</Message>
    </Class>
    <SourceLine classname="org.apache.commons.beanutils.RowSetDynaClass" start="68" end="309" sourcefile="RowSetDynaClass.java" sourcepath="org/apache/commons/beanutils/RowSetDynaClass.java" synthetic="true">
      <Message>At RowSetDynaClass.java:[lines 68-309]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="CT_CONSTRUCTOR_THROW" priority="2" rank="16" abbrev="CT" category="BAD_PRACTICE" instanceHash="9f204caa0983b2770aa6e32f92cb538a" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Be wary of letting constructors throw exceptions.</ShortMessage>
    <LongMessage>Exception thrown in class org.apache.commons.beanutils.SuppressPropertiesBeanIntrospector at new org.apache.commons.beanutils.SuppressPropertiesBeanIntrospector(Collection) will leave the constructor. The object under construction remains partially initialized and may be vulnerable to Finalizer attacks.</LongMessage>
    <Class classname="org.apache.commons.beanutils.SuppressPropertiesBeanIntrospector" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.SuppressPropertiesBeanIntrospector" start="48" end="90" sourcefile="SuppressPropertiesBeanIntrospector.java" sourcepath="org/apache/commons/beanutils/SuppressPropertiesBeanIntrospector.java">
        <Message>At SuppressPropertiesBeanIntrospector.java:[lines 48-90]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.SuppressPropertiesBeanIntrospector</Message>
    </Class>
    <Method classname="org.apache.commons.beanutils.SuppressPropertiesBeanIntrospector" name="&lt;init&gt;" signature="(Ljava/util/Collection;)V" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.SuppressPropertiesBeanIntrospector" start="63" end="70" startBytecode="0" endBytecode="140" sourcefile="SuppressPropertiesBeanIntrospector.java" sourcepath="org/apache/commons/beanutils/SuppressPropertiesBeanIntrospector.java"/>
      <Message>In method new org.apache.commons.beanutils.SuppressPropertiesBeanIntrospector(Collection)</Message>
    </Method>
    <SourceLine classname="org.apache.commons.beanutils.SuppressPropertiesBeanIntrospector" primary="true" start="65" end="65" startBytecode="17" endBytecode="17" sourcefile="SuppressPropertiesBeanIntrospector.java" sourcepath="org/apache/commons/beanutils/SuppressPropertiesBeanIntrospector.java">
      <Message>At SuppressPropertiesBeanIntrospector.java:[line 65]</Message>
    </SourceLine>
    <SourceLine classname="org.apache.commons.beanutils.SuppressPropertiesBeanIntrospector" start="65" end="65" startBytecode="17" endBytecode="17" sourcefile="SuppressPropertiesBeanIntrospector.java" sourcepath="org/apache/commons/beanutils/SuppressPropertiesBeanIntrospector.java">
      <Message>At SuppressPropertiesBeanIntrospector.java:[line 65]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="MC_OVERRIDABLE_METHOD_CALL_IN_CONSTRUCTOR" priority="3" rank="20" abbrev="MC" category="MALICIOUS_CODE" instanceHash="ce91fe62937aaeb9e9e0bf477f5be956" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>An overridable method is called from a constructor</ShortMessage>
    <LongMessage>Overridable method createMap is called from constructor new org.apache.commons.beanutils.WeakFastHashMap().</LongMessage>
    <Class classname="org.apache.commons.beanutils.WeakFastHashMap" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.WeakFastHashMap" start="64" end="487" sourcefile="WeakFastHashMap.java" sourcepath="org/apache/commons/beanutils/WeakFastHashMap.java">
        <Message>At WeakFastHashMap.java:[lines 64-487]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.WeakFastHashMap</Message>
    </Class>
    <Method classname="org.apache.commons.beanutils.WeakFastHashMap" name="&lt;init&gt;" signature="()V" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.WeakFastHashMap" start="83" end="85" startBytecode="0" endBytecode="98" sourcefile="WeakFastHashMap.java" sourcepath="org/apache/commons/beanutils/WeakFastHashMap.java"/>
      <Message>In method new org.apache.commons.beanutils.WeakFastHashMap()</Message>
    </Method>
    <String value="createMap">
      <Message>Value createMap</Message>
    </String>
    <SourceLine classname="org.apache.commons.beanutils.WeakFastHashMap" primary="true" start="84" end="84" startBytecode="16" endBytecode="16" sourcefile="WeakFastHashMap.java" sourcepath="org/apache/commons/beanutils/WeakFastHashMap.java">
      <Message>At WeakFastHashMap.java:[line 84]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="SE_NO_SERIALVERSIONID" priority="3" rank="19" abbrev="SnVI" category="BAD_PRACTICE" instanceHash="5b0e40059cfdd0a5191ecd8610cc6f79" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Class is Serializable, but doesn&apos;t define serialVersionUID</ShortMessage>
    <LongMessage>org.apache.commons.beanutils.WeakFastHashMap is Serializable; consider declaring a serialVersionUID</LongMessage>
    <Class classname="org.apache.commons.beanutils.WeakFastHashMap" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.WeakFastHashMap" start="64" end="487" sourcefile="WeakFastHashMap.java" sourcepath="org/apache/commons/beanutils/WeakFastHashMap.java">
        <Message>At WeakFastHashMap.java:[lines 64-487]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.WeakFastHashMap</Message>
    </Class>
    <SourceLine classname="org.apache.commons.beanutils.WeakFastHashMap" start="64" end="487" sourcefile="WeakFastHashMap.java" sourcepath="org/apache/commons/beanutils/WeakFastHashMap.java" synthetic="true">
      <Message>At WeakFastHashMap.java:[lines 64-487]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EQ_UNUSUAL" priority="2" rank="17" abbrev="Eq" category="STYLE" instanceHash="d5751b9e9fa95a36bf86d40f315ea5f7" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Unusual equals method</ShortMessage>
    <LongMessage>org.apache.commons.beanutils.WeakFastHashMap$CollectionView.equals(Object) is unusual</LongMessage>
    <Class classname="org.apache.commons.beanutils.WeakFastHashMap$CollectionView" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.WeakFastHashMap$CollectionView" start="500" end="660" sourcefile="WeakFastHashMap.java" sourcepath="org/apache/commons/beanutils/WeakFastHashMap.java">
        <Message>At WeakFastHashMap.java:[lines 500-660]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.WeakFastHashMap$CollectionView</Message>
    </Class>
    <Method classname="org.apache.commons.beanutils.WeakFastHashMap$CollectionView" name="equals" signature="(Ljava/lang/Object;)Z" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.WeakFastHashMap$CollectionView" start="628" end="636" startBytecode="0" endBytecode="208" sourcefile="WeakFastHashMap.java" sourcepath="org/apache/commons/beanutils/WeakFastHashMap.java"/>
      <Message>In method org.apache.commons.beanutils.WeakFastHashMap$CollectionView.equals(Object)</Message>
    </Method>
    <SourceLine classname="org.apache.commons.beanutils.WeakFastHashMap$CollectionView" start="628" end="636" startBytecode="0" endBytecode="208" sourcefile="WeakFastHashMap.java" sourcepath="org/apache/commons/beanutils/WeakFastHashMap.java" synthetic="true">
      <Message>At WeakFastHashMap.java:[lines 628-636]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="MC_OVERRIDABLE_METHOD_CALL_IN_CONSTRUCTOR" priority="3" rank="20" abbrev="MC" category="MALICIOUS_CODE" instanceHash="7774f45e2531a23119fcf87b78bc831f" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>An overridable method is called from a constructor</ShortMessage>
    <LongMessage>Overridable method getDynaClass is called from constructor new org.apache.commons.beanutils.WrapDynaBean(Object, WrapDynaClass).</LongMessage>
    <Class classname="org.apache.commons.beanutils.WrapDynaBean" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.WrapDynaBean" start="61" end="406" sourcefile="WrapDynaBean.java" sourcepath="org/apache/commons/beanutils/WrapDynaBean.java">
        <Message>At WrapDynaBean.java:[lines 61-406]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.WrapDynaBean</Message>
    </Class>
    <Method classname="org.apache.commons.beanutils.WrapDynaBean" name="&lt;init&gt;" signature="(Ljava/lang/Object;Lorg/apache/commons/beanutils/WrapDynaClass;)V" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.WrapDynaBean" start="76" end="81" startBytecode="0" endBytecode="169" sourcefile="WrapDynaBean.java" sourcepath="org/apache/commons/beanutils/WrapDynaBean.java"/>
      <Message>In method new org.apache.commons.beanutils.WrapDynaBean(Object, WrapDynaClass)</Message>
    </Method>
    <String value="getDynaClass">
      <Message>Value getDynaClass</Message>
    </String>
    <SourceLine classname="org.apache.commons.beanutils.WrapDynaBean" primary="true" start="79" end="79" startBytecode="29" endBytecode="29" sourcefile="WrapDynaBean.java" sourcepath="org/apache/commons/beanutils/WrapDynaBean.java">
      <Message>At WrapDynaBean.java:[line 79]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="SE_NO_SERIALVERSIONID" priority="2" rank="16" abbrev="SnVI" category="BAD_PRACTICE" instanceHash="1e1a57cde7d3c80d4fa9bc3019d5ecd" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Class is Serializable, but doesn&apos;t define serialVersionUID</ShortMessage>
    <LongMessage>org.apache.commons.beanutils.WrapDynaBean is Serializable; consider declaring a serialVersionUID</LongMessage>
    <Class classname="org.apache.commons.beanutils.WrapDynaBean" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.WrapDynaBean" start="61" end="406" sourcefile="WrapDynaBean.java" sourcepath="org/apache/commons/beanutils/WrapDynaBean.java">
        <Message>At WrapDynaBean.java:[lines 61-406]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.WrapDynaBean</Message>
    </Class>
    <SourceLine classname="org.apache.commons.beanutils.WrapDynaBean" start="61" end="406" sourcefile="WrapDynaBean.java" sourcepath="org/apache/commons/beanutils/WrapDynaBean.java" synthetic="true">
      <Message>At WrapDynaBean.java:[lines 61-406]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="4e97524ccb062fcb23b0dbd4b65f73e4" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.apache.commons.beanutils.WrapDynaClass.getDynaProperties() may expose internal representation by returning WrapDynaClass.properties</LongMessage>
    <Class classname="org.apache.commons.beanutils.WrapDynaClass" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.WrapDynaClass" start="51" end="493" sourcefile="WrapDynaClass.java" sourcepath="org/apache/commons/beanutils/WrapDynaClass.java">
        <Message>At WrapDynaClass.java:[lines 51-493]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.WrapDynaClass</Message>
    </Class>
    <Method classname="org.apache.commons.beanutils.WrapDynaClass" name="getDynaProperties" signature="()[Lorg/apache/commons/beanutils/DynaProperty;" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.WrapDynaClass" start="328" end="328" startBytecode="0" endBytecode="46" sourcefile="WrapDynaClass.java" sourcepath="org/apache/commons/beanutils/WrapDynaClass.java"/>
      <Message>In method org.apache.commons.beanutils.WrapDynaClass.getDynaProperties()</Message>
    </Method>
    <Field classname="org.apache.commons.beanutils.WrapDynaClass" name="properties" signature="[Lorg/apache/commons/beanutils/DynaProperty;" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.WrapDynaClass" sourcefile="WrapDynaClass.java" sourcepath="org/apache/commons/beanutils/WrapDynaClass.java">
        <Message>In WrapDynaClass.java</Message>
      </SourceLine>
      <Message>Field org.apache.commons.beanutils.WrapDynaClass.properties</Message>
    </Field>
    <SourceLine classname="org.apache.commons.beanutils.WrapDynaClass" primary="true" start="328" end="328" startBytecode="4" endBytecode="4" sourcefile="WrapDynaClass.java" sourcepath="org/apache/commons/beanutils/WrapDynaClass.java">
      <Message>At WrapDynaClass.java:[line 328]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="MC_OVERRIDABLE_METHOD_CALL_IN_CONSTRUCTOR" priority="3" rank="20" abbrev="MC" category="MALICIOUS_CODE" instanceHash="da189bb6af8122fb585b4b0bc64cebfc" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>An overridable method is called from a constructor</ShortMessage>
    <LongMessage>Overridable method introspect is called from constructor new org.apache.commons.beanutils.WrapDynaClass(Class, PropertyUtilsBean).</LongMessage>
    <Class classname="org.apache.commons.beanutils.WrapDynaClass" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.WrapDynaClass" start="51" end="493" sourcefile="WrapDynaClass.java" sourcepath="org/apache/commons/beanutils/WrapDynaClass.java">
        <Message>At WrapDynaClass.java:[lines 51-493]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.WrapDynaClass</Message>
    </Class>
    <Method classname="org.apache.commons.beanutils.WrapDynaClass" name="&lt;init&gt;" signature="(Ljava/lang/Class;Lorg/apache/commons/beanutils/PropertyUtilsBean;)V" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.WrapDynaClass" start="65" end="72" startBytecode="0" endBytecode="208" sourcefile="WrapDynaClass.java" sourcepath="org/apache/commons/beanutils/WrapDynaClass.java"/>
      <Message>In method new org.apache.commons.beanutils.WrapDynaClass(Class, PropertyUtilsBean)</Message>
    </Method>
    <String value="introspect">
      <Message>Value introspect</Message>
    </String>
    <SourceLine classname="org.apache.commons.beanutils.WrapDynaClass" primary="true" start="70" end="70" startBytecode="77" endBytecode="77" sourcefile="WrapDynaClass.java" sourcepath="org/apache/commons/beanutils/WrapDynaClass.java">
      <Message>At WrapDynaClass.java:[line 70]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="MS_SHOULD_BE_FINAL" priority="3" rank="20" abbrev="MS" category="MALICIOUS_CODE" instanceHash="4e2fbcdb355ff35307a2a5a604f7c75f" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="218">
    <ShortMessage>Field isn&apos;t final but should be</ShortMessage>
    <LongMessage>org.apache.commons.beanutils.WrapDynaClass.dynaClasses isn&apos;t final but should be</LongMessage>
    <Class classname="org.apache.commons.beanutils.WrapDynaClass" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.WrapDynaClass" start="51" end="493" sourcefile="WrapDynaClass.java" sourcepath="org/apache/commons/beanutils/WrapDynaClass.java">
        <Message>At WrapDynaClass.java:[lines 51-493]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.WrapDynaClass</Message>
    </Class>
    <Field classname="org.apache.commons.beanutils.WrapDynaClass" name="dynaClasses" signature="Ljava/util/HashMap;" isStatic="true" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.WrapDynaClass" sourcefile="WrapDynaClass.java" sourcepath="org/apache/commons/beanutils/WrapDynaClass.java">
        <Message>In WrapDynaClass.java</Message>
      </SourceLine>
      <Message>Field org.apache.commons.beanutils.WrapDynaClass.dynaClasses</Message>
    </Field>
    <SourceLine classname="org.apache.commons.beanutils.WrapDynaClass" primary="true" start="198" end="198" startBytecode="17" endBytecode="17" sourcefile="WrapDynaClass.java" sourcepath="org/apache/commons/beanutils/WrapDynaClass.java">
      <Message>At WrapDynaClass.java:[line 198]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="URF_UNREAD_PUBLIC_OR_PROTECTED_FIELD" priority="2" rank="18" abbrev="UrF" category="STYLE" instanceHash="e078c1a76c93ee1bcaa56f784891f5ef" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Unread public/protected field</ShortMessage>
    <LongMessage>Unread public/protected field: org.apache.commons.beanutils.WrapDynaClass.beanClass</LongMessage>
    <Class classname="org.apache.commons.beanutils.WrapDynaClass" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.WrapDynaClass" start="51" end="493" sourcefile="WrapDynaClass.java" sourcepath="org/apache/commons/beanutils/WrapDynaClass.java">
        <Message>At WrapDynaClass.java:[lines 51-493]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.WrapDynaClass</Message>
    </Class>
    <Field classname="org.apache.commons.beanutils.WrapDynaClass" name="beanClass" signature="Ljava/lang/Class;" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.WrapDynaClass" sourcefile="WrapDynaClass.java" sourcepath="org/apache/commons/beanutils/WrapDynaClass.java">
        <Message>In WrapDynaClass.java</Message>
      </SourceLine>
      <Message>Field org.apache.commons.beanutils.WrapDynaClass.beanClass</Message>
    </Field>
    <SourceLine classname="org.apache.commons.beanutils.WrapDynaClass" primary="true" start="96" end="96" startBytecode="16" endBytecode="16" sourcefile="WrapDynaClass.java" sourcepath="org/apache/commons/beanutils/WrapDynaClass.java">
      <Message>At WrapDynaClass.java:[line 96]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="URF_UNREAD_PUBLIC_OR_PROTECTED_FIELD" priority="2" rank="18" abbrev="UrF" category="STYLE" instanceHash="5d93846f132d6b1b43e3e5e7c09dd5ea" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Unread public/protected field</ShortMessage>
    <LongMessage>Unread public/protected field: org.apache.commons.beanutils.WrapDynaClass.descriptors</LongMessage>
    <Class classname="org.apache.commons.beanutils.WrapDynaClass" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.WrapDynaClass" start="51" end="493" sourcefile="WrapDynaClass.java" sourcepath="org/apache/commons/beanutils/WrapDynaClass.java">
        <Message>At WrapDynaClass.java:[lines 51-493]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.WrapDynaClass</Message>
    </Class>
    <Field classname="org.apache.commons.beanutils.WrapDynaClass" name="descriptors" signature="[Ljava/beans/PropertyDescriptor;" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.WrapDynaClass" sourcefile="WrapDynaClass.java" sourcepath="org/apache/commons/beanutils/WrapDynaClass.java">
        <Message>In WrapDynaClass.java</Message>
      </SourceLine>
      <Message>Field org.apache.commons.beanutils.WrapDynaClass.descriptors</Message>
    </Field>
    <SourceLine classname="org.apache.commons.beanutils.WrapDynaClass" primary="true" start="103" end="103" startBytecode="21" endBytecode="21" sourcefile="WrapDynaClass.java" sourcepath="org/apache/commons/beanutils/WrapDynaClass.java">
      <Message>At WrapDynaClass.java:[line 103]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="URF_UNREAD_PUBLIC_OR_PROTECTED_FIELD" priority="3" rank="20" abbrev="UrF" category="STYLE" instanceHash="7662c5f860c38d0b56e5b9a275266d6b" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Unread public/protected field</ShortMessage>
    <LongMessage>Unread public/protected field: org.apache.commons.beanutils.WrapDynaClass.dynaClasses</LongMessage>
    <Class classname="org.apache.commons.beanutils.WrapDynaClass" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.WrapDynaClass" start="51" end="493" sourcefile="WrapDynaClass.java" sourcepath="org/apache/commons/beanutils/WrapDynaClass.java">
        <Message>At WrapDynaClass.java:[lines 51-493]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.WrapDynaClass</Message>
    </Class>
    <Field classname="org.apache.commons.beanutils.WrapDynaClass" name="dynaClasses" signature="Ljava/util/HashMap;" isStatic="true" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.WrapDynaClass" sourcefile="WrapDynaClass.java" sourcepath="org/apache/commons/beanutils/WrapDynaClass.java">
        <Message>In WrapDynaClass.java</Message>
      </SourceLine>
      <Message>Field org.apache.commons.beanutils.WrapDynaClass.dynaClasses</Message>
    </Field>
    <SourceLine classname="org.apache.commons.beanutils.WrapDynaClass" primary="true" start="198" end="198" startBytecode="17" endBytecode="17" sourcefile="WrapDynaClass.java" sourcepath="org/apache/commons/beanutils/WrapDynaClass.java">
      <Message>At WrapDynaClass.java:[line 198]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="WMI_WRONG_MAP_ITERATOR" priority="2" rank="18" abbrev="WMI" category="PERFORMANCE" instanceHash="983cd7487c2e79d8f7b48da8a8a25f27" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Inefficient use of keySet iterator instead of entrySet iterator</ShortMessage>
    <LongMessage>org.apache.commons.beanutils.WrapDynaClass.introspect() makes inefficient use of keySet iterator instead of entrySet iterator</LongMessage>
    <Class classname="org.apache.commons.beanutils.WrapDynaClass" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.WrapDynaClass" start="51" end="493" sourcefile="WrapDynaClass.java" sourcepath="org/apache/commons/beanutils/WrapDynaClass.java">
        <Message>At WrapDynaClass.java:[lines 51-493]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.WrapDynaClass</Message>
    </Class>
    <Method classname="org.apache.commons.beanutils.WrapDynaClass" name="introspect" signature="()V" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.WrapDynaClass" start="455" end="493" startBytecode="0" endBytecode="560" sourcefile="WrapDynaClass.java" sourcepath="org/apache/commons/beanutils/WrapDynaClass.java"/>
      <Message>In method org.apache.commons.beanutils.WrapDynaClass.introspect()</Message>
    </Method>
    <SourceLine classname="org.apache.commons.beanutils.WrapDynaClass" primary="true" start="484" end="484" startBytecode="186" endBytecode="186" sourcefile="WrapDynaClass.java" sourcepath="org/apache/commons/beanutils/WrapDynaClass.java">
      <Message>At WrapDynaClass.java:[line 484]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="MS_SHOULD_BE_FINAL" priority="2" rank="18" abbrev="MS" category="MALICIOUS_CODE" instanceHash="aedf0d398a1a528753ca88f9587048e6" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="218">
    <ShortMessage>Field isn&apos;t final but should be</ShortMessage>
    <LongMessage>org.apache.commons.beanutils.converters.AbstractArrayConverter.strings isn&apos;t final but should be</LongMessage>
    <Class classname="org.apache.commons.beanutils.converters.AbstractArrayConverter" primary="true" classAnnotationNames="java.lang.Deprecated">
      <SourceLine classname="org.apache.commons.beanutils.converters.AbstractArrayConverter" start="62" end="207" sourcefile="AbstractArrayConverter.java" sourcepath="org/apache/commons/beanutils/converters/AbstractArrayConverter.java">
        <Message>At AbstractArrayConverter.java:[lines 62-207]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.converters.AbstractArrayConverter</Message>
    </Class>
    <Field classname="org.apache.commons.beanutils.converters.AbstractArrayConverter" name="strings" signature="[Ljava/lang/String;" isStatic="true" primary="true" classAnnotationNames="java.lang.Deprecated">
      <SourceLine classname="org.apache.commons.beanutils.converters.AbstractArrayConverter" sourcefile="AbstractArrayConverter.java" sourcepath="org/apache/commons/beanutils/converters/AbstractArrayConverter.java">
        <Message>In AbstractArrayConverter.java</Message>
      </SourceLine>
      <Message>Field org.apache.commons.beanutils.converters.AbstractArrayConverter.strings</Message>
    </Field>
    <SourceLine classname="org.apache.commons.beanutils.converters.AbstractArrayConverter" primary="true" start="104" end="104" startBytecode="14" endBytecode="14" sourcefile="AbstractArrayConverter.java" sourcepath="org/apache/commons/beanutils/converters/AbstractArrayConverter.java">
      <Message>At AbstractArrayConverter.java:[line 104]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="NP_LOAD_OF_KNOWN_NULL_VALUE" priority="2" rank="16" abbrev="NP" category="STYLE" instanceHash="52f3684fb199cb03b0a63f99d9367e02" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="476">
    <ShortMessage>Load of known null value</ShortMessage>
    <LongMessage>Load of known null value in org.apache.commons.beanutils.converters.AbstractConverter.convert(Class, Object)</LongMessage>
    <Class classname="org.apache.commons.beanutils.converters.AbstractConverter" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.converters.AbstractConverter" start="77" end="474" sourcefile="AbstractConverter.java" sourcepath="org/apache/commons/beanutils/converters/AbstractConverter.java">
        <Message>At AbstractConverter.java:[lines 77-474]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.converters.AbstractConverter</Message>
    </Class>
    <Method classname="org.apache.commons.beanutils.converters.AbstractConverter" name="convert" signature="(Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.converters.AbstractConverter" start="132" end="177" startBytecode="0" endBytecode="145" sourcefile="AbstractConverter.java" sourcepath="org/apache/commons/beanutils/converters/AbstractConverter.java"/>
      <Message>In method org.apache.commons.beanutils.converters.AbstractConverter.convert(Class, Object)</Message>
    </Method>
    <LocalVariable name="type" register="1" pc="4" role="LOCAL_VARIABLE_VALUE_OF">
      <Message>Value loaded from type</Message>
    </LocalVariable>
    <SourceLine classname="org.apache.commons.beanutils.converters.AbstractConverter" primary="true" start="133" end="133" startBytecode="5" endBytecode="5" sourcefile="AbstractConverter.java" sourcepath="org/apache/commons/beanutils/converters/AbstractConverter.java">
      <Message>At AbstractConverter.java:[line 133]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="SBSC_USE_STRINGBUFFER_CONCATENATION" priority="2" rank="18" abbrev="SBSC" category="PERFORMANCE" instanceHash="ff32a8aca00e9e3980aae279e4cb6b8" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Method concatenates strings using + in a loop</ShortMessage>
    <LongMessage>org.apache.commons.beanutils.converters.AbstractConverter.toString(Class) concatenates strings using + in a loop</LongMessage>
    <Class classname="org.apache.commons.beanutils.converters.AbstractConverter" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.converters.AbstractConverter" start="77" end="474" sourcefile="AbstractConverter.java" sourcepath="org/apache/commons/beanutils/converters/AbstractConverter.java">
        <Message>At AbstractConverter.java:[lines 77-474]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.converters.AbstractConverter</Message>
    </Class>
    <Method classname="org.apache.commons.beanutils.converters.AbstractConverter" name="toString" signature="(Ljava/lang/Class;)Ljava/lang/String;" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.converters.AbstractConverter" start="419" end="443" startBytecode="0" endBytecode="392" sourcefile="AbstractConverter.java" sourcepath="org/apache/commons/beanutils/converters/AbstractConverter.java"/>
      <Message>In method org.apache.commons.beanutils.converters.AbstractConverter.toString(Class)</Message>
    </Method>
    <SourceLine classname="org.apache.commons.beanutils.converters.AbstractConverter" primary="true" start="431" end="431" startBytecode="60" endBytecode="60" sourcefile="AbstractConverter.java" sourcepath="org/apache/commons/beanutils/converters/AbstractConverter.java">
      <Message>At AbstractConverter.java:[line 431]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="CT_CONSTRUCTOR_THROW" priority="2" rank="16" abbrev="CT" category="BAD_PRACTICE" instanceHash="204e2d194a92c9a524d11b198cf32973" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Be wary of letting constructors throw exceptions.</ShortMessage>
    <LongMessage>Exception thrown in class org.apache.commons.beanutils.converters.ArrayConverter at new org.apache.commons.beanutils.converters.ArrayConverter(Class, Converter) will leave the constructor. The object under construction remains partially initialized and may be vulnerable to Finalizer attacks.</LongMessage>
    <Class classname="org.apache.commons.beanutils.converters.ArrayConverter" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.converters.ArrayConverter" start="133" end="491" sourcefile="ArrayConverter.java" sourcepath="org/apache/commons/beanutils/converters/ArrayConverter.java">
        <Message>At ArrayConverter.java:[lines 133-491]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.converters.ArrayConverter</Message>
    </Class>
    <Method classname="org.apache.commons.beanutils.converters.ArrayConverter" name="&lt;init&gt;" signature="(Ljava/lang/Class;Lorg/apache/commons/beanutils/Converter;)V" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.converters.ArrayConverter" start="150" end="162" startBytecode="0" endBytecode="241" sourcefile="ArrayConverter.java" sourcepath="org/apache/commons/beanutils/converters/ArrayConverter.java"/>
      <Message>In method new org.apache.commons.beanutils.converters.ArrayConverter(Class, Converter)</Message>
    </Method>
    <SourceLine classname="org.apache.commons.beanutils.converters.ArrayConverter" primary="true" start="152" end="152" startBytecode="45" endBytecode="45" sourcefile="ArrayConverter.java" sourcepath="org/apache/commons/beanutils/converters/ArrayConverter.java">
      <Message>At ArrayConverter.java:[line 152]</Message>
    </SourceLine>
    <SourceLine classname="org.apache.commons.beanutils.converters.ArrayConverter" start="152" end="152" startBytecode="45" endBytecode="45" sourcefile="ArrayConverter.java" sourcepath="org/apache/commons/beanutils/converters/ArrayConverter.java">
      <Message>At ArrayConverter.java:[line 152]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="8a83b036742b92f02149c0c5a90dcb14" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>org.apache.commons.beanutils.converters.ArrayConverter.setAllowedChars(char[]) may expose internal representation by storing an externally mutable object into ArrayConverter.allowedChars</LongMessage>
    <Class classname="org.apache.commons.beanutils.converters.ArrayConverter" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.converters.ArrayConverter" start="133" end="491" sourcefile="ArrayConverter.java" sourcepath="org/apache/commons/beanutils/converters/ArrayConverter.java">
        <Message>At ArrayConverter.java:[lines 133-491]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.converters.ArrayConverter</Message>
    </Class>
    <Method classname="org.apache.commons.beanutils.converters.ArrayConverter" name="setAllowedChars" signature="([C)V" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.converters.ArrayConverter" start="202" end="203" startBytecode="0" endBytecode="61" sourcefile="ArrayConverter.java" sourcepath="org/apache/commons/beanutils/converters/ArrayConverter.java"/>
      <Message>In method org.apache.commons.beanutils.converters.ArrayConverter.setAllowedChars(char[])</Message>
    </Method>
    <Field classname="org.apache.commons.beanutils.converters.ArrayConverter" name="allowedChars" signature="[C" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.converters.ArrayConverter" sourcefile="ArrayConverter.java" sourcepath="org/apache/commons/beanutils/converters/ArrayConverter.java">
        <Message>In ArrayConverter.java</Message>
      </SourceLine>
      <Message>Field org.apache.commons.beanutils.converters.ArrayConverter.allowedChars</Message>
    </Field>
    <LocalVariable name="allowedChars" register="1" pc="2" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named allowedChars</Message>
    </LocalVariable>
    <SourceLine classname="org.apache.commons.beanutils.converters.ArrayConverter" primary="true" start="202" end="202" startBytecode="2" endBytecode="2" sourcefile="ArrayConverter.java" sourcepath="org/apache/commons/beanutils/converters/ArrayConverter.java">
      <Message>At ArrayConverter.java:[line 202]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="CI_CONFUSED_INHERITANCE" priority="3" rank="20" abbrev="CI" category="STYLE" instanceHash="f3ccca357890deb8c00ab3ae3ed8b85" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Class is final but declares protected field</ShortMessage>
    <LongMessage>Class org.apache.commons.beanutils.converters.BooleanArrayConverter is final but declares protected field org.apache.commons.beanutils.converters.BooleanArrayConverter.booleanConverter</LongMessage>
    <Class classname="org.apache.commons.beanutils.converters.BooleanArrayConverter" primary="true" classAnnotationNames="java.lang.Deprecated">
      <SourceLine classname="org.apache.commons.beanutils.converters.BooleanArrayConverter" start="58" end="239" sourcefile="BooleanArrayConverter.java" sourcepath="org/apache/commons/beanutils/converters/BooleanArrayConverter.java">
        <Message>At BooleanArrayConverter.java:[lines 58-239]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.converters.BooleanArrayConverter</Message>
    </Class>
    <Field classname="org.apache.commons.beanutils.converters.BooleanArrayConverter" name="booleanConverter" signature="Lorg/apache/commons/beanutils/converters/BooleanConverter;" isStatic="false" primary="true" classAnnotationNames="java.lang.Deprecated">
      <SourceLine classname="org.apache.commons.beanutils.converters.BooleanArrayConverter" sourcefile="BooleanArrayConverter.java" sourcepath="org/apache/commons/beanutils/converters/BooleanArrayConverter.java">
        <Message>In BooleanArrayConverter.java</Message>
      </SourceLine>
      <Message>Field org.apache.commons.beanutils.converters.BooleanArrayConverter.booleanConverter</Message>
    </Field>
    <SourceLine classname="org.apache.commons.beanutils.converters.BooleanArrayConverter" sourcefile="BooleanArrayConverter.java" sourcepath="org/apache/commons/beanutils/converters/BooleanArrayConverter.java" synthetic="true">
      <Message>In BooleanArrayConverter.java</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="d0a5d29df2f15a2e92432c878717ccd2" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>new org.apache.commons.beanutils.converters.BooleanArrayConverter(BooleanConverter, Object) may expose internal representation by storing an externally mutable object into BooleanArrayConverter.booleanConverter</LongMessage>
    <Class classname="org.apache.commons.beanutils.converters.BooleanArrayConverter" primary="true" classAnnotationNames="java.lang.Deprecated">
      <SourceLine classname="org.apache.commons.beanutils.converters.BooleanArrayConverter" start="58" end="239" sourcefile="BooleanArrayConverter.java" sourcepath="org/apache/commons/beanutils/converters/BooleanArrayConverter.java">
        <Message>At BooleanArrayConverter.java:[lines 58-239]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.converters.BooleanArrayConverter</Message>
    </Class>
    <Method classname="org.apache.commons.beanutils.converters.BooleanArrayConverter" name="&lt;init&gt;" signature="(Lorg/apache/commons/beanutils/converters/BooleanConverter;Ljava/lang/Object;)V" isStatic="false" primary="true" classAnnotationNames="java.lang.Deprecated">
      <SourceLine classname="org.apache.commons.beanutils.converters.BooleanArrayConverter" start="100" end="103" startBytecode="0" endBytecode="80" sourcefile="BooleanArrayConverter.java" sourcepath="org/apache/commons/beanutils/converters/BooleanArrayConverter.java"/>
      <Message>In method new org.apache.commons.beanutils.converters.BooleanArrayConverter(BooleanConverter, Object)</Message>
    </Method>
    <Field classname="org.apache.commons.beanutils.converters.BooleanArrayConverter" name="booleanConverter" signature="Lorg/apache/commons/beanutils/converters/BooleanConverter;" isStatic="false" primary="true" classAnnotationNames="java.lang.Deprecated">
      <SourceLine classname="org.apache.commons.beanutils.converters.BooleanArrayConverter" sourcefile="BooleanArrayConverter.java" sourcepath="org/apache/commons/beanutils/converters/BooleanArrayConverter.java">
        <Message>In BooleanArrayConverter.java</Message>
      </SourceLine>
      <Message>Field org.apache.commons.beanutils.converters.BooleanArrayConverter.booleanConverter</Message>
    </Field>
    <LocalVariable name="converter" register="1" pc="7" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named converter</Message>
    </LocalVariable>
    <SourceLine classname="org.apache.commons.beanutils.converters.BooleanArrayConverter" primary="true" start="101" end="101" startBytecode="7" endBytecode="7" sourcefile="BooleanArrayConverter.java" sourcepath="org/apache/commons/beanutils/converters/BooleanArrayConverter.java">
      <Message>At BooleanArrayConverter.java:[line 101]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DM_CONVERT_CASE" priority="3" rank="20" abbrev="Dm" category="I18N" instanceHash="8fd0fe8f8922a2ed8ac90592672e7bf0" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Consider using Locale parameterized version of invoked method</ShortMessage>
    <LongMessage>Use of non-localized String.toUpperCase() or String.toLowerCase() in org.apache.commons.beanutils.converters.BooleanConverter.convertToType(Class, Object)</LongMessage>
    <Class classname="org.apache.commons.beanutils.converters.BooleanConverter" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.converters.BooleanConverter" start="65" end="244" sourcefile="BooleanConverter.java" sourcepath="org/apache/commons/beanutils/converters/BooleanConverter.java">
        <Message>At BooleanConverter.java:[lines 65-244]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.converters.BooleanConverter</Message>
    </Class>
    <Method classname="org.apache.commons.beanutils.converters.BooleanConverter" name="convertToType" signature="(Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.converters.BooleanConverter" start="208" end="228" startBytecode="0" endBytecode="347" sourcefile="BooleanConverter.java" sourcepath="org/apache/commons/beanutils/converters/BooleanConverter.java"/>
      <Message>In method org.apache.commons.beanutils.converters.BooleanConverter.convertToType(Class, Object)</Message>
    </Method>
    <SourceLine classname="org.apache.commons.beanutils.converters.BooleanConverter" primary="true" start="213" end="213" startBytecode="23" endBytecode="23" sourcefile="BooleanConverter.java" sourcepath="org/apache/commons/beanutils/converters/BooleanConverter.java">
      <Message>At BooleanConverter.java:[line 213]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DM_CONVERT_CASE" priority="3" rank="20" abbrev="Dm" category="I18N" instanceHash="1e6c49ed8b2b75dc8ed5aab7c5fb5263" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Consider using Locale parameterized version of invoked method</ShortMessage>
    <LongMessage>Use of non-localized String.toUpperCase() or String.toLowerCase() in org.apache.commons.beanutils.converters.BooleanConverter.copyStrings(String[])</LongMessage>
    <Class classname="org.apache.commons.beanutils.converters.BooleanConverter" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.converters.BooleanConverter" start="65" end="244" sourcefile="BooleanConverter.java" sourcepath="org/apache/commons/beanutils/converters/BooleanConverter.java">
        <Message>At BooleanConverter.java:[lines 65-244]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.converters.BooleanConverter</Message>
    </Class>
    <Method classname="org.apache.commons.beanutils.converters.BooleanConverter" name="copyStrings" signature="([Ljava/lang/String;)[Ljava/lang/String;" isStatic="true" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.converters.BooleanConverter" start="240" end="244" startBytecode="0" endBytecode="126" sourcefile="BooleanConverter.java" sourcepath="org/apache/commons/beanutils/converters/BooleanConverter.java"/>
      <Message>In method org.apache.commons.beanutils.converters.BooleanConverter.copyStrings(String[])</Message>
    </Method>
    <SourceLine classname="org.apache.commons.beanutils.converters.BooleanConverter" primary="true" start="242" end="242" startBytecode="19" endBytecode="19" sourcefile="BooleanConverter.java" sourcepath="org/apache/commons/beanutils/converters/BooleanConverter.java">
      <Message>At BooleanConverter.java:[line 242]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DM_NUMBER_CTOR" priority="2" rank="18" abbrev="Bx" category="PERFORMANCE" instanceHash="e966f7938d9840090a49a4e7026f8649" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Method invokes inefficient Number constructor; use static valueOf instead</ShortMessage>
    <LongMessage>org.apache.commons.beanutils.converters.CharacterConverter.convertToType(Class, Object) invokes inefficient new Character(char) constructor; use Character.valueOf(char) instead</LongMessage>
    <Class classname="org.apache.commons.beanutils.converters.CharacterConverter" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.converters.CharacterConverter" start="37" end="92" sourcefile="CharacterConverter.java" sourcepath="org/apache/commons/beanutils/converters/CharacterConverter.java">
        <Message>At CharacterConverter.java:[lines 37-92]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.converters.CharacterConverter</Message>
    </Class>
    <Method classname="org.apache.commons.beanutils.converters.CharacterConverter" name="convertToType" signature="(Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.converters.CharacterConverter" start="88" end="92" startBytecode="0" endBytecode="143" sourcefile="CharacterConverter.java" sourcepath="org/apache/commons/beanutils/converters/CharacterConverter.java"/>
      <Message>In method org.apache.commons.beanutils.converters.CharacterConverter.convertToType(Class, Object)</Message>
    </Method>
    <Method classname="java.lang.Character" name="&lt;init&gt;" signature="(C)V" isStatic="false" role="METHOD_CALLED" classAnnotationNames="jdk.internal.ValueBased">
      <SourceLine classname="java.lang.Character" start="8548" end="8550" startBytecode="0" endBytecode="69" sourcefile="Character.java" sourcepath="java/lang/Character.java"/>
      <Message>Called method new Character(char)</Message>
    </Method>
    <Method classname="java.lang.Character" name="valueOf" signature="(C)Ljava/lang/Character;" isStatic="true" role="SHOULD_CALL" classAnnotationNames="jdk.internal.ValueBased">
      <SourceLine classname="java.lang.Character" start="8593" end="8596" startBytecode="0" endBytecode="79" sourcefile="Character.java" sourcepath="java/lang/Character.java"/>
      <Message>Should call Character.valueOf(char) instead</Message>
    </Method>
    <SourceLine classname="org.apache.commons.beanutils.converters.CharacterConverter" primary="true" start="89" end="89" startBytecode="32" endBytecode="32" sourcefile="CharacterConverter.java" sourcepath="org/apache/commons/beanutils/converters/CharacterConverter.java">
      <Message>At CharacterConverter.java:[line 89]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="1d3ee112a8032abd53f9185922fc04ca" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.apache.commons.beanutils.converters.DateTimeConverter.getPatterns() may expose internal representation by returning DateTimeConverter.patterns</LongMessage>
    <Class classname="org.apache.commons.beanutils.converters.DateTimeConverter" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.converters.DateTimeConverter" start="96" end="634" sourcefile="DateTimeConverter.java" sourcepath="org/apache/commons/beanutils/converters/DateTimeConverter.java">
        <Message>At DateTimeConverter.java:[lines 96-634]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.converters.DateTimeConverter</Message>
    </Class>
    <Method classname="org.apache.commons.beanutils.converters.DateTimeConverter" name="getPatterns" signature="()[Ljava/lang/String;" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.converters.DateTimeConverter" start="183" end="183" startBytecode="0" endBytecode="46" sourcefile="DateTimeConverter.java" sourcepath="org/apache/commons/beanutils/converters/DateTimeConverter.java"/>
      <Message>In method org.apache.commons.beanutils.converters.DateTimeConverter.getPatterns()</Message>
    </Method>
    <Field classname="org.apache.commons.beanutils.converters.DateTimeConverter" name="patterns" signature="[Ljava/lang/String;" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.converters.DateTimeConverter" sourcefile="DateTimeConverter.java" sourcepath="org/apache/commons/beanutils/converters/DateTimeConverter.java">
        <Message>In DateTimeConverter.java</Message>
      </SourceLine>
      <Message>Field org.apache.commons.beanutils.converters.DateTimeConverter.patterns</Message>
    </Field>
    <SourceLine classname="org.apache.commons.beanutils.converters.DateTimeConverter" primary="true" start="183" end="183" startBytecode="4" endBytecode="4" sourcefile="DateTimeConverter.java" sourcepath="org/apache/commons/beanutils/converters/DateTimeConverter.java">
      <Message>At DateTimeConverter.java:[line 183]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="915ec331724133cfc92fed9a1d9d369f" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.apache.commons.beanutils.converters.DateTimeConverter.getTimeZone() may expose internal representation by returning DateTimeConverter.timeZone</LongMessage>
    <Class classname="org.apache.commons.beanutils.converters.DateTimeConverter" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.converters.DateTimeConverter" start="96" end="634" sourcefile="DateTimeConverter.java" sourcepath="org/apache/commons/beanutils/converters/DateTimeConverter.java">
        <Message>At DateTimeConverter.java:[lines 96-634]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.converters.DateTimeConverter</Message>
    </Class>
    <Method classname="org.apache.commons.beanutils.converters.DateTimeConverter" name="getTimeZone" signature="()Ljava/util/TimeZone;" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.converters.DateTimeConverter" start="131" end="131" startBytecode="0" endBytecode="46" sourcefile="DateTimeConverter.java" sourcepath="org/apache/commons/beanutils/converters/DateTimeConverter.java"/>
      <Message>In method org.apache.commons.beanutils.converters.DateTimeConverter.getTimeZone()</Message>
    </Method>
    <Field classname="org.apache.commons.beanutils.converters.DateTimeConverter" name="timeZone" signature="Ljava/util/TimeZone;" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.converters.DateTimeConverter" sourcefile="DateTimeConverter.java" sourcepath="org/apache/commons/beanutils/converters/DateTimeConverter.java">
        <Message>In DateTimeConverter.java</Message>
      </SourceLine>
      <Message>Field org.apache.commons.beanutils.converters.DateTimeConverter.timeZone</Message>
    </Field>
    <SourceLine classname="org.apache.commons.beanutils.converters.DateTimeConverter" primary="true" start="131" end="131" startBytecode="4" endBytecode="4" sourcefile="DateTimeConverter.java" sourcepath="org/apache/commons/beanutils/converters/DateTimeConverter.java">
      <Message>At DateTimeConverter.java:[line 131]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="cbaefdb74b4724b4508f96f17c69358c" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>org.apache.commons.beanutils.converters.DateTimeConverter.setPatterns(String[]) may expose internal representation by storing an externally mutable object into DateTimeConverter.patterns</LongMessage>
    <Class classname="org.apache.commons.beanutils.converters.DateTimeConverter" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.converters.DateTimeConverter" start="96" end="634" sourcefile="DateTimeConverter.java" sourcepath="org/apache/commons/beanutils/converters/DateTimeConverter.java">
        <Message>At DateTimeConverter.java:[lines 96-634]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.converters.DateTimeConverter</Message>
    </Class>
    <Method classname="org.apache.commons.beanutils.converters.DateTimeConverter" name="setPatterns" signature="([Ljava/lang/String;)V" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.converters.DateTimeConverter" start="194" end="206" startBytecode="0" endBytecode="203" sourcefile="DateTimeConverter.java" sourcepath="org/apache/commons/beanutils/converters/DateTimeConverter.java"/>
      <Message>In method org.apache.commons.beanutils.converters.DateTimeConverter.setPatterns(String[])</Message>
    </Method>
    <Field classname="org.apache.commons.beanutils.converters.DateTimeConverter" name="patterns" signature="[Ljava/lang/String;" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.converters.DateTimeConverter" sourcefile="DateTimeConverter.java" sourcepath="org/apache/commons/beanutils/converters/DateTimeConverter.java">
        <Message>In DateTimeConverter.java</Message>
      </SourceLine>
      <Message>Field org.apache.commons.beanutils.converters.DateTimeConverter.patterns</Message>
    </Field>
    <LocalVariable name="patterns" register="1" pc="2" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named patterns</Message>
    </LocalVariable>
    <SourceLine classname="org.apache.commons.beanutils.converters.DateTimeConverter" primary="true" start="194" end="194" startBytecode="2" endBytecode="2" sourcefile="DateTimeConverter.java" sourcepath="org/apache/commons/beanutils/converters/DateTimeConverter.java">
      <Message>At DateTimeConverter.java:[line 194]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="b50cc8913048c946e0e8312aa607dc41" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>org.apache.commons.beanutils.converters.DateTimeConverter.setTimeZone(TimeZone) may expose internal representation by storing an externally mutable object into DateTimeConverter.timeZone</LongMessage>
    <Class classname="org.apache.commons.beanutils.converters.DateTimeConverter" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.converters.DateTimeConverter" start="96" end="634" sourcefile="DateTimeConverter.java" sourcepath="org/apache/commons/beanutils/converters/DateTimeConverter.java">
        <Message>At DateTimeConverter.java:[lines 96-634]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.converters.DateTimeConverter</Message>
    </Class>
    <Method classname="org.apache.commons.beanutils.converters.DateTimeConverter" name="setTimeZone" signature="(Ljava/util/TimeZone;)V" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.converters.DateTimeConverter" start="140" end="141" startBytecode="0" endBytecode="61" sourcefile="DateTimeConverter.java" sourcepath="org/apache/commons/beanutils/converters/DateTimeConverter.java"/>
      <Message>In method org.apache.commons.beanutils.converters.DateTimeConverter.setTimeZone(TimeZone)</Message>
    </Method>
    <Field classname="org.apache.commons.beanutils.converters.DateTimeConverter" name="timeZone" signature="Ljava/util/TimeZone;" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.converters.DateTimeConverter" sourcefile="DateTimeConverter.java" sourcepath="org/apache/commons/beanutils/converters/DateTimeConverter.java">
        <Message>In DateTimeConverter.java</Message>
      </SourceLine>
      <Message>Field org.apache.commons.beanutils.converters.DateTimeConverter.timeZone</Message>
    </Field>
    <LocalVariable name="timeZone" register="1" pc="2" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named timeZone</Message>
    </LocalVariable>
    <SourceLine classname="org.apache.commons.beanutils.converters.DateTimeConverter" primary="true" start="140" end="140" startBytecode="2" endBytecode="2" sourcefile="DateTimeConverter.java" sourcepath="org/apache/commons/beanutils/converters/DateTimeConverter.java">
      <Message>At DateTimeConverter.java:[line 140]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="UWF_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR" priority="3" rank="20" abbrev="UwF" category="STYLE" instanceHash="75113ed3b844c66963759efbdd2bc0a6" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Field not initialized in constructor but dereferenced without null check</ShortMessage>
    <LongMessage>DateTimeConverter.patterns not initialized in constructor and dereferenced in org.apache.commons.beanutils.converters.DateTimeConverter.parse(Class, Class, String)</LongMessage>
    <Class classname="org.apache.commons.beanutils.converters.DateTimeConverter" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.converters.DateTimeConverter" start="96" end="634" sourcefile="DateTimeConverter.java" sourcepath="org/apache/commons/beanutils/converters/DateTimeConverter.java">
        <Message>At DateTimeConverter.java:[lines 96-634]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.converters.DateTimeConverter</Message>
    </Class>
    <Field classname="org.apache.commons.beanutils.converters.DateTimeConverter" name="patterns" signature="[Ljava/lang/String;" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.converters.DateTimeConverter" sourcefile="DateTimeConverter.java" sourcepath="org/apache/commons/beanutils/converters/DateTimeConverter.java">
        <Message>In DateTimeConverter.java</Message>
      </SourceLine>
      <Message>Field org.apache.commons.beanutils.converters.DateTimeConverter.patterns</Message>
    </Field>
    <Method classname="org.apache.commons.beanutils.converters.DateTimeConverter" name="parse" signature="(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)Ljava/util/Calendar;" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.converters.DateTimeConverter" start="522" end="538" startBytecode="0" endBytecode="421" sourcefile="DateTimeConverter.java" sourcepath="org/apache/commons/beanutils/converters/DateTimeConverter.java"/>
      <Message>In method org.apache.commons.beanutils.converters.DateTimeConverter.parse(Class, Class, String)</Message>
    </Method>
    <SourceLine classname="org.apache.commons.beanutils.converters.DateTimeConverter" primary="true" start="523" end="523" startBytecode="11" endBytecode="11" sourcefile="DateTimeConverter.java" sourcepath="org/apache/commons/beanutils/converters/DateTimeConverter.java">
      <Message>At DateTimeConverter.java:[line 523]</Message>
    </SourceLine>
    <SourceLine classname="org.apache.commons.beanutils.converters.DateTimeConverter" start="534" end="534" startBytecode="74" endBytecode="74" sourcefile="DateTimeConverter.java" sourcepath="org/apache/commons/beanutils/converters/DateTimeConverter.java" role="SOURCE_LINE_ANOTHER_INSTANCE">
      <Message>Another occurrence at DateTimeConverter.java:[line 534]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DM_FP_NUMBER_CTOR" priority="3" rank="20" abbrev="Bx" category="PERFORMANCE" instanceHash="90c60a28a9e39f5e0c97ee98588146ec" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Method invokes inefficient floating-point Number constructor; use static valueOf instead</ShortMessage>
    <LongMessage>org.apache.commons.beanutils.converters.NumberConverter.toNumber(Class, Class, Number) invokes inefficient new Double(double) constructor; use Double.valueOf(double) instead</LongMessage>
    <Class classname="org.apache.commons.beanutils.converters.NumberConverter" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.converters.NumberConverter" start="87" end="560" sourcefile="NumberConverter.java" sourcepath="org/apache/commons/beanutils/converters/NumberConverter.java">
        <Message>At NumberConverter.java:[lines 87-560]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.converters.NumberConverter</Message>
    </Class>
    <Method classname="org.apache.commons.beanutils.converters.NumberConverter" name="toNumber" signature="(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Number;)Ljava/lang/Object;" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.converters.NumberConverter" start="303" end="395" startBytecode="0" endBytecode="1222" sourcefile="NumberConverter.java" sourcepath="org/apache/commons/beanutils/converters/NumberConverter.java"/>
      <Message>In method org.apache.commons.beanutils.converters.NumberConverter.toNumber(Class, Class, Number)</Message>
    </Method>
    <Method classname="java.lang.Double" name="&lt;init&gt;" signature="(D)V" isStatic="false" role="METHOD_CALLED" classAnnotationNames="jdk.internal.ValueBased">
      <SourceLine classname="java.lang.Double" start="711" end="713" startBytecode="0" endBytecode="69" sourcefile="Double.java" sourcepath="java/lang/Double.java"/>
      <Message>Called method new Double(double)</Message>
    </Method>
    <Method classname="java.lang.Double" name="valueOf" signature="(D)Ljava/lang/Double;" isStatic="true" role="SHOULD_CALL" classAnnotationNames="jdk.internal.ValueBased">
      <SourceLine classname="java.lang.Double" start="632" end="632" startBytecode="0" endBytecode="50" sourcefile="Double.java" sourcepath="java/lang/Double.java"/>
      <Message>Should call Double.valueOf(double) instead</Message>
    </Method>
    <SourceLine classname="org.apache.commons.beanutils.converters.NumberConverter" primary="true" start="365" end="365" startBytecode="579" endBytecode="579" sourcefile="NumberConverter.java" sourcepath="org/apache/commons/beanutils/converters/NumberConverter.java">
      <Message>At NumberConverter.java:[line 365]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DM_FP_NUMBER_CTOR" priority="3" rank="20" abbrev="Bx" category="PERFORMANCE" instanceHash="304631df9ef8d53d8766e873aa72030a" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Method invokes inefficient floating-point Number constructor; use static valueOf instead</ShortMessage>
    <LongMessage>org.apache.commons.beanutils.converters.NumberConverter.toNumber(Class, Class, Number) invokes inefficient new Float(float) constructor; use Float.valueOf(float) instead</LongMessage>
    <Class classname="org.apache.commons.beanutils.converters.NumberConverter" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.converters.NumberConverter" start="87" end="560" sourcefile="NumberConverter.java" sourcepath="org/apache/commons/beanutils/converters/NumberConverter.java">
        <Message>At NumberConverter.java:[lines 87-560]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.converters.NumberConverter</Message>
    </Class>
    <Method classname="org.apache.commons.beanutils.converters.NumberConverter" name="toNumber" signature="(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Number;)Ljava/lang/Object;" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.converters.NumberConverter" start="303" end="395" startBytecode="0" endBytecode="1222" sourcefile="NumberConverter.java" sourcepath="org/apache/commons/beanutils/converters/NumberConverter.java"/>
      <Message>In method org.apache.commons.beanutils.converters.NumberConverter.toNumber(Class, Class, Number)</Message>
    </Method>
    <Method classname="java.lang.Float" name="&lt;init&gt;" signature="(F)V" isStatic="false" role="METHOD_CALLED" classAnnotationNames="jdk.internal.ValueBased">
      <SourceLine classname="java.lang.Float" start="537" end="539" startBytecode="0" endBytecode="69" sourcefile="Float.java" sourcepath="java/lang/Float.java"/>
      <Message>Called method new Float(float)</Message>
    </Method>
    <Method classname="java.lang.Float" name="valueOf" signature="(F)Ljava/lang/Float;" isStatic="true" role="SHOULD_CALL" classAnnotationNames="jdk.internal.ValueBased">
      <SourceLine classname="java.lang.Float" start="458" end="458" startBytecode="0" endBytecode="50" sourcefile="Float.java" sourcepath="java/lang/Float.java"/>
      <Message>Should call Float.valueOf(float) instead</Message>
    </Method>
    <SourceLine classname="org.apache.commons.beanutils.converters.NumberConverter" primary="true" start="360" end="360" startBytecode="554" endBytecode="554" sourcefile="NumberConverter.java" sourcepath="org/apache/commons/beanutils/converters/NumberConverter.java">
      <Message>At NumberConverter.java:[line 360]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DM_FP_NUMBER_CTOR" priority="3" rank="20" abbrev="Bx" category="PERFORMANCE" instanceHash="2448619037c1bdade4b9cd58c3c44e69" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Method invokes inefficient floating-point Number constructor; use static valueOf instead</ShortMessage>
    <LongMessage>org.apache.commons.beanutils.converters.NumberConverter.toNumber(Class, Class, String) invokes inefficient new Double(String) constructor; use Double.valueOf(String) instead</LongMessage>
    <Class classname="org.apache.commons.beanutils.converters.NumberConverter" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.converters.NumberConverter" start="87" end="560" sourcefile="NumberConverter.java" sourcepath="org/apache/commons/beanutils/converters/NumberConverter.java">
        <Message>At NumberConverter.java:[lines 87-560]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.converters.NumberConverter</Message>
    </Class>
    <Method classname="org.apache.commons.beanutils.converters.NumberConverter" name="toNumber" signature="(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Number;" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.converters.NumberConverter" start="422" end="466" startBytecode="0" endBytecode="460" sourcefile="NumberConverter.java" sourcepath="org/apache/commons/beanutils/converters/NumberConverter.java"/>
      <Message>In method org.apache.commons.beanutils.converters.NumberConverter.toNumber(Class, Class, String)</Message>
    </Method>
    <Method classname="java.lang.Double" name="&lt;init&gt;" signature="(Ljava/lang/String;)V" isStatic="false" role="METHOD_CALLED" classAnnotationNames="jdk.internal.ValueBased">
      <SourceLine classname="java.lang.Double" start="732" end="734" startBytecode="0" endBytecode="72" sourcefile="Double.java" sourcepath="java/lang/Double.java"/>
      <Message>Called method new Double(String)</Message>
    </Method>
    <Method classname="java.lang.Double" name="valueOf" signature="(Ljava/lang/String;)Ljava/lang/Double;" isStatic="true" role="SHOULD_CALL" classAnnotationNames="jdk.internal.ValueBased">
      <SourceLine classname="java.lang.Double" start="614" end="614" startBytecode="0" endBytecode="53" sourcefile="Double.java" sourcepath="java/lang/Double.java"/>
      <Message>Should call Double.valueOf(String) instead</Message>
    </Method>
    <SourceLine classname="org.apache.commons.beanutils.converters.NumberConverter" primary="true" start="448" end="448" startBytecode="104" endBytecode="104" sourcefile="NumberConverter.java" sourcepath="org/apache/commons/beanutils/converters/NumberConverter.java">
      <Message>At NumberConverter.java:[line 448]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DM_FP_NUMBER_CTOR" priority="3" rank="20" abbrev="Bx" category="PERFORMANCE" instanceHash="9cc58b0f7036a9cff0bc54bba3faea92" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Method invokes inefficient floating-point Number constructor; use static valueOf instead</ShortMessage>
    <LongMessage>org.apache.commons.beanutils.converters.NumberConverter.toNumber(Class, Class, String) invokes inefficient new Float(String) constructor; use Float.valueOf(String) instead</LongMessage>
    <Class classname="org.apache.commons.beanutils.converters.NumberConverter" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.converters.NumberConverter" start="87" end="560" sourcefile="NumberConverter.java" sourcepath="org/apache/commons/beanutils/converters/NumberConverter.java">
        <Message>At NumberConverter.java:[lines 87-560]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.converters.NumberConverter</Message>
    </Class>
    <Method classname="org.apache.commons.beanutils.converters.NumberConverter" name="toNumber" signature="(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Number;" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.converters.NumberConverter" start="422" end="466" startBytecode="0" endBytecode="460" sourcefile="NumberConverter.java" sourcepath="org/apache/commons/beanutils/converters/NumberConverter.java"/>
      <Message>In method org.apache.commons.beanutils.converters.NumberConverter.toNumber(Class, Class, String)</Message>
    </Method>
    <Method classname="java.lang.Float" name="&lt;init&gt;" signature="(Ljava/lang/String;)V" isStatic="false" role="METHOD_CALLED" classAnnotationNames="jdk.internal.ValueBased">
      <SourceLine classname="java.lang.Float" start="574" end="576" startBytecode="0" endBytecode="72" sourcefile="Float.java" sourcepath="java/lang/Float.java"/>
      <Message>Called method new Float(String)</Message>
    </Method>
    <Method classname="java.lang.Float" name="valueOf" signature="(Ljava/lang/String;)Ljava/lang/Float;" isStatic="true" role="SHOULD_CALL" classAnnotationNames="jdk.internal.ValueBased">
      <SourceLine classname="java.lang.Float" start="440" end="440" startBytecode="0" endBytecode="53" sourcefile="Float.java" sourcepath="java/lang/Float.java"/>
      <Message>Should call Float.valueOf(String) instead</Message>
    </Method>
    <SourceLine classname="org.apache.commons.beanutils.converters.NumberConverter" primary="true" start="443" end="443" startBytecode="86" endBytecode="86" sourcefile="NumberConverter.java" sourcepath="org/apache/commons/beanutils/converters/NumberConverter.java">
      <Message>At NumberConverter.java:[line 443]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DM_NUMBER_CTOR" priority="2" rank="18" abbrev="Bx" category="PERFORMANCE" instanceHash="45f0738c02d7a51e2a62f84ba70eb8d4" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Method invokes inefficient Number constructor; use static valueOf instead</ShortMessage>
    <LongMessage>org.apache.commons.beanutils.converters.NumberConverter.&lt;static initializer for NumberConverter&gt;() invokes inefficient new Integer(int) constructor; use Integer.valueOf(int) instead</LongMessage>
    <Class classname="org.apache.commons.beanutils.converters.NumberConverter" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.converters.NumberConverter" start="87" end="560" sourcefile="NumberConverter.java" sourcepath="org/apache/commons/beanutils/converters/NumberConverter.java">
        <Message>At NumberConverter.java:[lines 87-560]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.converters.NumberConverter</Message>
    </Class>
    <Method classname="org.apache.commons.beanutils.converters.NumberConverter" name="&lt;clinit&gt;" signature="()V" isStatic="true" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.converters.NumberConverter" start="87" end="88" startBytecode="0" endBytecode="50" sourcefile="NumberConverter.java" sourcepath="org/apache/commons/beanutils/converters/NumberConverter.java"/>
      <Message>In method org.apache.commons.beanutils.converters.NumberConverter.&lt;static initializer for NumberConverter&gt;()</Message>
    </Method>
    <Method classname="java.lang.Integer" name="&lt;init&gt;" signature="(I)V" isStatic="false" role="METHOD_CALLED" classAnnotationNames="jdk.internal.ValueBased">
      <SourceLine classname="java.lang.Integer" start="1104" end="1106" startBytecode="0" endBytecode="69" sourcefile="Integer.java" sourcepath="java/lang/Integer.java"/>
      <Message>Called method new Integer(int)</Message>
    </Method>
    <Method classname="java.lang.Integer" name="valueOf" signature="(I)Ljava/lang/Integer;" isStatic="true" role="SHOULD_CALL" classAnnotationNames="jdk.internal.ValueBased">
      <SourceLine classname="java.lang.Integer" start="1079" end="1081" startBytecode="0" endBytecode="90" sourcefile="Integer.java" sourcepath="java/lang/Integer.java"/>
      <Message>Should call Integer.valueOf(int) instead</Message>
    </Method>
    <SourceLine classname="org.apache.commons.beanutils.converters.NumberConverter" primary="true" start="87" end="87" startBytecode="5" endBytecode="5" sourcefile="NumberConverter.java" sourcepath="org/apache/commons/beanutils/converters/NumberConverter.java">
      <Message>At NumberConverter.java:[line 87]</Message>
    </SourceLine>
    <SourceLine classname="org.apache.commons.beanutils.converters.NumberConverter" start="88" end="88" startBytecode="16" endBytecode="16" sourcefile="NumberConverter.java" sourcepath="org/apache/commons/beanutils/converters/NumberConverter.java" role="SOURCE_LINE_ANOTHER_INSTANCE">
      <Message>Another occurrence at NumberConverter.java:[line 88]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DM_NUMBER_CTOR" priority="2" rank="18" abbrev="Bx" category="PERFORMANCE" instanceHash="15667559b9597529e90f17f58a2a1c68" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Method invokes inefficient Number constructor; use static valueOf instead</ShortMessage>
    <LongMessage>org.apache.commons.beanutils.converters.NumberConverter.convertToType(Class, Object) invokes inefficient new Long(long) constructor; use Long.valueOf(long) instead</LongMessage>
    <Class classname="org.apache.commons.beanutils.converters.NumberConverter" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.converters.NumberConverter" start="87" end="560" sourcefile="NumberConverter.java" sourcepath="org/apache/commons/beanutils/converters/NumberConverter.java">
        <Message>At NumberConverter.java:[lines 87-560]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.converters.NumberConverter</Message>
    </Class>
    <Method classname="org.apache.commons.beanutils.converters.NumberConverter" name="convertToType" signature="(Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.converters.NumberConverter" start="235" end="275" startBytecode="0" endBytecode="524" sourcefile="NumberConverter.java" sourcepath="org/apache/commons/beanutils/converters/NumberConverter.java"/>
      <Message>In method org.apache.commons.beanutils.converters.NumberConverter.convertToType(Class, Object)</Message>
    </Method>
    <Method classname="java.lang.Long" name="&lt;init&gt;" signature="(J)V" isStatic="false" role="METHOD_CALLED" classAnnotationNames="jdk.internal.ValueBased">
      <SourceLine classname="java.lang.Long" start="1324" end="1326" startBytecode="0" endBytecode="69" sourcefile="Long.java" sourcepath="java/lang/Long.java"/>
      <Message>Called method new Long(long)</Message>
    </Method>
    <Method classname="java.lang.Long" name="valueOf" signature="(J)Ljava/lang/Long;" isStatic="true" role="SHOULD_CALL" classAnnotationNames="jdk.internal.ValueBased">
      <SourceLine classname="java.lang.Long" start="1207" end="1211" startBytecode="0" endBytecode="115" sourcefile="Long.java" sourcepath="java/lang/Long.java"/>
      <Message>Should call Long.valueOf(long) instead</Message>
    </Method>
    <SourceLine classname="org.apache.commons.beanutils.converters.NumberConverter" primary="true" start="248" end="248" startBytecode="84" endBytecode="84" sourcefile="NumberConverter.java" sourcepath="org/apache/commons/beanutils/converters/NumberConverter.java">
      <Message>At NumberConverter.java:[line 248]</Message>
    </SourceLine>
    <SourceLine classname="org.apache.commons.beanutils.converters.NumberConverter" start="253" end="253" startBytecode="122" endBytecode="122" sourcefile="NumberConverter.java" sourcepath="org/apache/commons/beanutils/converters/NumberConverter.java" role="SOURCE_LINE_ANOTHER_INSTANCE">
      <Message>Another occurrence at NumberConverter.java:[line 253]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DM_NUMBER_CTOR" priority="2" rank="18" abbrev="Bx" category="PERFORMANCE" instanceHash="2c829fd0ba03392015340f22f7f9e81f" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Method invokes inefficient Number constructor; use static valueOf instead</ShortMessage>
    <LongMessage>org.apache.commons.beanutils.converters.NumberConverter.toNumber(Class, Class, Number) invokes inefficient new Byte(byte) constructor; use Byte.valueOf(byte) instead</LongMessage>
    <Class classname="org.apache.commons.beanutils.converters.NumberConverter" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.converters.NumberConverter" start="87" end="560" sourcefile="NumberConverter.java" sourcepath="org/apache/commons/beanutils/converters/NumberConverter.java">
        <Message>At NumberConverter.java:[lines 87-560]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.converters.NumberConverter</Message>
    </Class>
    <Method classname="org.apache.commons.beanutils.converters.NumberConverter" name="toNumber" signature="(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Number;)Ljava/lang/Object;" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.converters.NumberConverter" start="303" end="395" startBytecode="0" endBytecode="1222" sourcefile="NumberConverter.java" sourcepath="org/apache/commons/beanutils/converters/NumberConverter.java"/>
      <Message>In method org.apache.commons.beanutils.converters.NumberConverter.toNumber(Class, Class, Number)</Message>
    </Method>
    <Method classname="java.lang.Byte" name="&lt;init&gt;" signature="(B)V" isStatic="false" role="METHOD_CALLED" classAnnotationNames="jdk.internal.ValueBased">
      <SourceLine classname="java.lang.Byte" start="348" end="350" startBytecode="0" endBytecode="69" sourcefile="Byte.java" sourcepath="java/lang/Byte.java"/>
      <Message>Called method new Byte(byte)</Message>
    </Method>
    <Method classname="java.lang.Byte" name="valueOf" signature="(B)Ljava/lang/Byte;" isStatic="true" role="SHOULD_CALL" classAnnotationNames="jdk.internal.ValueBased">
      <SourceLine classname="java.lang.Byte" start="146" end="147" startBytecode="0" endBytecode="69" sourcefile="Byte.java" sourcepath="java/lang/Byte.java"/>
      <Message>Should call Byte.valueOf(byte) instead</Message>
    </Method>
    <SourceLine classname="org.apache.commons.beanutils.converters.NumberConverter" primary="true" start="318" end="318" startBytecode="155" endBytecode="155" sourcefile="NumberConverter.java" sourcepath="org/apache/commons/beanutils/converters/NumberConverter.java">
      <Message>At NumberConverter.java:[line 318]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DM_NUMBER_CTOR" priority="2" rank="18" abbrev="Bx" category="PERFORMANCE" instanceHash="b7c14d423df5729728641d57a911b39" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Method invokes inefficient Number constructor; use static valueOf instead</ShortMessage>
    <LongMessage>org.apache.commons.beanutils.converters.NumberConverter.toNumber(Class, Class, Number) invokes inefficient new Integer(int) constructor; use Integer.valueOf(int) instead</LongMessage>
    <Class classname="org.apache.commons.beanutils.converters.NumberConverter" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.converters.NumberConverter" start="87" end="560" sourcefile="NumberConverter.java" sourcepath="org/apache/commons/beanutils/converters/NumberConverter.java">
        <Message>At NumberConverter.java:[lines 87-560]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.converters.NumberConverter</Message>
    </Class>
    <Method classname="org.apache.commons.beanutils.converters.NumberConverter" name="toNumber" signature="(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Number;)Ljava/lang/Object;" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.converters.NumberConverter" start="303" end="395" startBytecode="0" endBytecode="1222" sourcefile="NumberConverter.java" sourcepath="org/apache/commons/beanutils/converters/NumberConverter.java"/>
      <Message>In method org.apache.commons.beanutils.converters.NumberConverter.toNumber(Class, Class, Number)</Message>
    </Method>
    <Method classname="java.lang.Integer" name="&lt;init&gt;" signature="(I)V" isStatic="false" role="METHOD_CALLED" classAnnotationNames="jdk.internal.ValueBased">
      <SourceLine classname="java.lang.Integer" start="1104" end="1106" startBytecode="0" endBytecode="69" sourcefile="Integer.java" sourcepath="java/lang/Integer.java"/>
      <Message>Called method new Integer(int)</Message>
    </Method>
    <Method classname="java.lang.Integer" name="valueOf" signature="(I)Ljava/lang/Integer;" isStatic="true" role="SHOULD_CALL" classAnnotationNames="jdk.internal.ValueBased">
      <SourceLine classname="java.lang.Integer" start="1079" end="1081" startBytecode="0" endBytecode="90" sourcefile="Integer.java" sourcepath="java/lang/Integer.java"/>
      <Message>Should call Integer.valueOf(int) instead</Message>
    </Method>
    <SourceLine classname="org.apache.commons.beanutils.converters.NumberConverter" primary="true" start="346" end="346" startBytecode="445" endBytecode="445" sourcefile="NumberConverter.java" sourcepath="org/apache/commons/beanutils/converters/NumberConverter.java">
      <Message>At NumberConverter.java:[line 346]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DM_NUMBER_CTOR" priority="2" rank="18" abbrev="Bx" category="PERFORMANCE" instanceHash="56313bd655f7f8e97fc3123a2684c5ec" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Method invokes inefficient Number constructor; use static valueOf instead</ShortMessage>
    <LongMessage>org.apache.commons.beanutils.converters.NumberConverter.toNumber(Class, Class, Number) invokes inefficient new Long(long) constructor; use Long.valueOf(long) instead</LongMessage>
    <Class classname="org.apache.commons.beanutils.converters.NumberConverter" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.converters.NumberConverter" start="87" end="560" sourcefile="NumberConverter.java" sourcepath="org/apache/commons/beanutils/converters/NumberConverter.java">
        <Message>At NumberConverter.java:[lines 87-560]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.converters.NumberConverter</Message>
    </Class>
    <Method classname="org.apache.commons.beanutils.converters.NumberConverter" name="toNumber" signature="(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Number;)Ljava/lang/Object;" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.converters.NumberConverter" start="303" end="395" startBytecode="0" endBytecode="1222" sourcefile="NumberConverter.java" sourcepath="org/apache/commons/beanutils/converters/NumberConverter.java"/>
      <Message>In method org.apache.commons.beanutils.converters.NumberConverter.toNumber(Class, Class, Number)</Message>
    </Method>
    <Method classname="java.lang.Long" name="&lt;init&gt;" signature="(J)V" isStatic="false" role="METHOD_CALLED" classAnnotationNames="jdk.internal.ValueBased">
      <SourceLine classname="java.lang.Long" start="1324" end="1326" startBytecode="0" endBytecode="69" sourcefile="Long.java" sourcepath="java/lang/Long.java"/>
      <Message>Called method new Long(long)</Message>
    </Method>
    <Method classname="java.lang.Long" name="valueOf" signature="(J)Ljava/lang/Long;" isStatic="true" role="SHOULD_CALL" classAnnotationNames="jdk.internal.ValueBased">
      <SourceLine classname="java.lang.Long" start="1207" end="1211" startBytecode="0" endBytecode="115" sourcefile="Long.java" sourcepath="java/lang/Long.java"/>
      <Message>Should call Long.valueOf(long) instead</Message>
    </Method>
    <SourceLine classname="org.apache.commons.beanutils.converters.NumberConverter" primary="true" start="351" end="351" startBytecode="470" endBytecode="470" sourcefile="NumberConverter.java" sourcepath="org/apache/commons/beanutils/converters/NumberConverter.java">
      <Message>At NumberConverter.java:[line 351]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DM_NUMBER_CTOR" priority="2" rank="18" abbrev="Bx" category="PERFORMANCE" instanceHash="32c8af7dd47f1efb6f284a833f7a3ebb" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Method invokes inefficient Number constructor; use static valueOf instead</ShortMessage>
    <LongMessage>org.apache.commons.beanutils.converters.NumberConverter.toNumber(Class, Class, Number) invokes inefficient new Short(short) constructor; use Short.valueOf(short) instead</LongMessage>
    <Class classname="org.apache.commons.beanutils.converters.NumberConverter" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.converters.NumberConverter" start="87" end="560" sourcefile="NumberConverter.java" sourcepath="org/apache/commons/beanutils/converters/NumberConverter.java">
        <Message>At NumberConverter.java:[lines 87-560]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.converters.NumberConverter</Message>
    </Class>
    <Method classname="org.apache.commons.beanutils.converters.NumberConverter" name="toNumber" signature="(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Number;)Ljava/lang/Object;" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.converters.NumberConverter" start="303" end="395" startBytecode="0" endBytecode="1222" sourcefile="NumberConverter.java" sourcepath="org/apache/commons/beanutils/converters/NumberConverter.java"/>
      <Message>In method org.apache.commons.beanutils.converters.NumberConverter.toNumber(Class, Class, Number)</Message>
    </Method>
    <Method classname="java.lang.Short" name="&lt;init&gt;" signature="(S)V" isStatic="false" role="METHOD_CALLED" classAnnotationNames="jdk.internal.ValueBased">
      <SourceLine classname="java.lang.Short" start="353" end="355" startBytecode="0" endBytecode="69" sourcefile="Short.java" sourcepath="java/lang/Short.java"/>
      <Message>Called method new Short(short)</Message>
    </Method>
    <Method classname="java.lang.Short" name="valueOf" signature="(S)Ljava/lang/Short;" isStatic="true" role="SHOULD_CALL" classAnnotationNames="jdk.internal.ValueBased">
      <SourceLine classname="java.lang.Short" start="275" end="280" startBytecode="0" endBytecode="127" sourcefile="Short.java" sourcepath="java/lang/Short.java"/>
      <Message>Should call Short.valueOf(short) instead</Message>
    </Method>
    <SourceLine classname="org.apache.commons.beanutils.converters.NumberConverter" primary="true" start="332" end="332" startBytecode="300" endBytecode="300" sourcefile="NumberConverter.java" sourcepath="org/apache/commons/beanutils/converters/NumberConverter.java">
      <Message>At NumberConverter.java:[line 332]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DM_NUMBER_CTOR" priority="2" rank="18" abbrev="Bx" category="PERFORMANCE" instanceHash="2df5d332387ac8293b67b52a15c7031b" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Method invokes inefficient Number constructor; use static valueOf instead</ShortMessage>
    <LongMessage>org.apache.commons.beanutils.converters.NumberConverter.toNumber(Class, Class, String) invokes inefficient new Byte(String) constructor; use Byte.valueOf(String) instead</LongMessage>
    <Class classname="org.apache.commons.beanutils.converters.NumberConverter" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.converters.NumberConverter" start="87" end="560" sourcefile="NumberConverter.java" sourcepath="org/apache/commons/beanutils/converters/NumberConverter.java">
        <Message>At NumberConverter.java:[lines 87-560]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.converters.NumberConverter</Message>
    </Class>
    <Method classname="org.apache.commons.beanutils.converters.NumberConverter" name="toNumber" signature="(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Number;" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.converters.NumberConverter" start="422" end="466" startBytecode="0" endBytecode="460" sourcefile="NumberConverter.java" sourcepath="org/apache/commons/beanutils/converters/NumberConverter.java"/>
      <Message>In method org.apache.commons.beanutils.converters.NumberConverter.toNumber(Class, Class, String)</Message>
    </Method>
    <Method classname="java.lang.Byte" name="&lt;init&gt;" signature="(Ljava/lang/String;)V" isStatic="false" role="METHOD_CALLED" classAnnotationNames="jdk.internal.ValueBased">
      <SourceLine classname="java.lang.Byte" start="371" end="373" startBytecode="0" endBytecode="74" sourcefile="Byte.java" sourcepath="java/lang/Byte.java"/>
      <Message>Called method new Byte(String)</Message>
    </Method>
    <Method classname="java.lang.Byte" name="valueOf" signature="(Ljava/lang/String;)Ljava/lang/Byte;" isStatic="true" role="SHOULD_CALL" classAnnotationNames="jdk.internal.ValueBased">
      <SourceLine classname="java.lang.Byte" start="275" end="275" startBytecode="0" endBytecode="48" sourcefile="Byte.java" sourcepath="java/lang/Byte.java"/>
      <Message>Should call Byte.valueOf(String) instead</Message>
    </Method>
    <SourceLine classname="org.apache.commons.beanutils.converters.NumberConverter" primary="true" start="423" end="423" startBytecode="14" endBytecode="14" sourcefile="NumberConverter.java" sourcepath="org/apache/commons/beanutils/converters/NumberConverter.java">
      <Message>At NumberConverter.java:[line 423]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DM_NUMBER_CTOR" priority="2" rank="18" abbrev="Bx" category="PERFORMANCE" instanceHash="e8c48d7fdca8b918406ec39cc61b937" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Method invokes inefficient Number constructor; use static valueOf instead</ShortMessage>
    <LongMessage>org.apache.commons.beanutils.converters.NumberConverter.toNumber(Class, Class, String) invokes inefficient new Integer(String) constructor; use Integer.valueOf(String) instead</LongMessage>
    <Class classname="org.apache.commons.beanutils.converters.NumberConverter" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.converters.NumberConverter" start="87" end="560" sourcefile="NumberConverter.java" sourcepath="org/apache/commons/beanutils/converters/NumberConverter.java">
        <Message>At NumberConverter.java:[lines 87-560]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.converters.NumberConverter</Message>
    </Class>
    <Method classname="org.apache.commons.beanutils.converters.NumberConverter" name="toNumber" signature="(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Number;" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.converters.NumberConverter" start="422" end="466" startBytecode="0" endBytecode="460" sourcefile="NumberConverter.java" sourcepath="org/apache/commons/beanutils/converters/NumberConverter.java"/>
      <Message>In method org.apache.commons.beanutils.converters.NumberConverter.toNumber(Class, Class, String)</Message>
    </Method>
    <Method classname="java.lang.Integer" name="&lt;init&gt;" signature="(Ljava/lang/String;)V" isStatic="false" role="METHOD_CALLED" classAnnotationNames="jdk.internal.ValueBased">
      <SourceLine classname="java.lang.Integer" start="1126" end="1128" startBytecode="0" endBytecode="74" sourcefile="Integer.java" sourcepath="java/lang/Integer.java"/>
      <Message>Called method new Integer(String)</Message>
    </Method>
    <Method classname="java.lang.Integer" name="valueOf" signature="(Ljava/lang/String;)Ljava/lang/Integer;" isStatic="true" role="SHOULD_CALL" classAnnotationNames="jdk.internal.ValueBased">
      <SourceLine classname="java.lang.Integer" start="999" end="999" startBytecode="0" endBytecode="51" sourcefile="Integer.java" sourcepath="java/lang/Integer.java"/>
      <Message>Should call Integer.valueOf(String) instead</Message>
    </Method>
    <SourceLine classname="org.apache.commons.beanutils.converters.NumberConverter" primary="true" start="433" end="433" startBytecode="50" endBytecode="50" sourcefile="NumberConverter.java" sourcepath="org/apache/commons/beanutils/converters/NumberConverter.java">
      <Message>At NumberConverter.java:[line 433]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DM_NUMBER_CTOR" priority="2" rank="18" abbrev="Bx" category="PERFORMANCE" instanceHash="40d021d18979881a7ae8fc54367845fd" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Method invokes inefficient Number constructor; use static valueOf instead</ShortMessage>
    <LongMessage>org.apache.commons.beanutils.converters.NumberConverter.toNumber(Class, Class, String) invokes inefficient new Long(String) constructor; use Long.valueOf(String) instead</LongMessage>
    <Class classname="org.apache.commons.beanutils.converters.NumberConverter" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.converters.NumberConverter" start="87" end="560" sourcefile="NumberConverter.java" sourcepath="org/apache/commons/beanutils/converters/NumberConverter.java">
        <Message>At NumberConverter.java:[lines 87-560]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.converters.NumberConverter</Message>
    </Class>
    <Method classname="org.apache.commons.beanutils.converters.NumberConverter" name="toNumber" signature="(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Number;" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.converters.NumberConverter" start="422" end="466" startBytecode="0" endBytecode="460" sourcefile="NumberConverter.java" sourcepath="org/apache/commons/beanutils/converters/NumberConverter.java"/>
      <Message>In method org.apache.commons.beanutils.converters.NumberConverter.toNumber(Class, Class, String)</Message>
    </Method>
    <Method classname="java.lang.Long" name="&lt;init&gt;" signature="(Ljava/lang/String;)V" isStatic="false" role="METHOD_CALLED" classAnnotationNames="jdk.internal.ValueBased">
      <SourceLine classname="java.lang.Long" start="1347" end="1349" startBytecode="0" endBytecode="74" sourcefile="Long.java" sourcepath="java/lang/Long.java"/>
      <Message>Called method new Long(String)</Message>
    </Method>
    <Method classname="java.lang.Long" name="valueOf" signature="(Ljava/lang/String;)Ljava/lang/Long;" isStatic="true" role="SHOULD_CALL" classAnnotationNames="jdk.internal.ValueBased">
      <SourceLine classname="java.lang.Long" start="1163" end="1163" startBytecode="0" endBytecode="51" sourcefile="Long.java" sourcepath="java/lang/Long.java"/>
      <Message>Should call Long.valueOf(String) instead</Message>
    </Method>
    <SourceLine classname="org.apache.commons.beanutils.converters.NumberConverter" primary="true" start="438" end="438" startBytecode="68" endBytecode="68" sourcefile="NumberConverter.java" sourcepath="org/apache/commons/beanutils/converters/NumberConverter.java">
      <Message>At NumberConverter.java:[line 438]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DM_NUMBER_CTOR" priority="2" rank="18" abbrev="Bx" category="PERFORMANCE" instanceHash="aa102cde077153259264b08ec283239b" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Method invokes inefficient Number constructor; use static valueOf instead</ShortMessage>
    <LongMessage>org.apache.commons.beanutils.converters.NumberConverter.toNumber(Class, Class, String) invokes inefficient new Short(String) constructor; use Short.valueOf(String) instead</LongMessage>
    <Class classname="org.apache.commons.beanutils.converters.NumberConverter" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.converters.NumberConverter" start="87" end="560" sourcefile="NumberConverter.java" sourcepath="org/apache/commons/beanutils/converters/NumberConverter.java">
        <Message>At NumberConverter.java:[lines 87-560]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.converters.NumberConverter</Message>
    </Class>
    <Method classname="org.apache.commons.beanutils.converters.NumberConverter" name="toNumber" signature="(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Number;" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.converters.NumberConverter" start="422" end="466" startBytecode="0" endBytecode="460" sourcefile="NumberConverter.java" sourcepath="org/apache/commons/beanutils/converters/NumberConverter.java"/>
      <Message>In method org.apache.commons.beanutils.converters.NumberConverter.toNumber(Class, Class, String)</Message>
    </Method>
    <Method classname="java.lang.Short" name="&lt;init&gt;" signature="(Ljava/lang/String;)V" isStatic="false" role="METHOD_CALLED" classAnnotationNames="jdk.internal.ValueBased">
      <SourceLine classname="java.lang.Short" start="376" end="378" startBytecode="0" endBytecode="74" sourcefile="Short.java" sourcepath="java/lang/Short.java"/>
      <Message>Called method new Short(String)</Message>
    </Method>
    <Method classname="java.lang.Short" name="valueOf" signature="(Ljava/lang/String;)Ljava/lang/Short;" isStatic="true" role="SHOULD_CALL" classAnnotationNames="jdk.internal.ValueBased">
      <SourceLine classname="java.lang.Short" start="219" end="219" startBytecode="0" endBytecode="48" sourcefile="Short.java" sourcepath="java/lang/Short.java"/>
      <Message>Should call Short.valueOf(String) instead</Message>
    </Method>
    <SourceLine classname="org.apache.commons.beanutils.converters.NumberConverter" primary="true" start="428" end="428" startBytecode="32" endBytecode="32" sourcefile="NumberConverter.java" sourcepath="org/apache/commons/beanutils/converters/NumberConverter.java">
      <Message>At NumberConverter.java:[line 428]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="49fb7bd6d599befad0671d165bb93b91" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>org.apache.commons.beanutils.locale.LocaleBeanUtilsBean.getLocaleConvertUtils() may expose internal representation by returning LocaleBeanUtilsBean.localeConvertUtils</LongMessage>
    <Class classname="org.apache.commons.beanutils.locale.LocaleBeanUtilsBean" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.locale.LocaleBeanUtilsBean" start="54" end="938" sourcefile="LocaleBeanUtilsBean.java" sourcepath="org/apache/commons/beanutils/locale/LocaleBeanUtilsBean.java">
        <Message>At LocaleBeanUtilsBean.java:[lines 54-938]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.locale.LocaleBeanUtilsBean</Message>
    </Class>
    <Method classname="org.apache.commons.beanutils.locale.LocaleBeanUtilsBean" name="getLocaleConvertUtils" signature="()Lorg/apache/commons/beanutils/locale/LocaleConvertUtilsBean;" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.locale.LocaleBeanUtilsBean" start="131" end="131" startBytecode="0" endBytecode="46" sourcefile="LocaleBeanUtilsBean.java" sourcepath="org/apache/commons/beanutils/locale/LocaleBeanUtilsBean.java"/>
      <Message>In method org.apache.commons.beanutils.locale.LocaleBeanUtilsBean.getLocaleConvertUtils()</Message>
    </Method>
    <Field classname="org.apache.commons.beanutils.locale.LocaleBeanUtilsBean" name="localeConvertUtils" signature="Lorg/apache/commons/beanutils/locale/LocaleConvertUtilsBean;" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.locale.LocaleBeanUtilsBean" sourcefile="LocaleBeanUtilsBean.java" sourcepath="org/apache/commons/beanutils/locale/LocaleBeanUtilsBean.java">
        <Message>In LocaleBeanUtilsBean.java</Message>
      </SourceLine>
      <Message>Field org.apache.commons.beanutils.locale.LocaleBeanUtilsBean.localeConvertUtils</Message>
    </Field>
    <SourceLine classname="org.apache.commons.beanutils.locale.LocaleBeanUtilsBean" primary="true" start="131" end="131" startBytecode="4" endBytecode="4" sourcefile="LocaleBeanUtilsBean.java" sourcepath="org/apache/commons/beanutils/locale/LocaleBeanUtilsBean.java">
      <Message>At LocaleBeanUtilsBean.java:[line 131]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="5579a0ece1a7a0e182641e952f1aa0e2" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>new org.apache.commons.beanutils.locale.LocaleBeanUtilsBean(LocaleConvertUtilsBean) may expose internal representation by storing an externally mutable object into LocaleBeanUtilsBean.localeConvertUtils</LongMessage>
    <Class classname="org.apache.commons.beanutils.locale.LocaleBeanUtilsBean" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.locale.LocaleBeanUtilsBean" start="54" end="938" sourcefile="LocaleBeanUtilsBean.java" sourcepath="org/apache/commons/beanutils/locale/LocaleBeanUtilsBean.java">
        <Message>At LocaleBeanUtilsBean.java:[lines 54-938]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.locale.LocaleBeanUtilsBean</Message>
    </Class>
    <Method classname="org.apache.commons.beanutils.locale.LocaleBeanUtilsBean" name="&lt;init&gt;" signature="(Lorg/apache/commons/beanutils/locale/LocaleConvertUtilsBean;)V" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.locale.LocaleBeanUtilsBean" start="119" end="121" startBytecode="0" endBytecode="82" sourcefile="LocaleBeanUtilsBean.java" sourcepath="org/apache/commons/beanutils/locale/LocaleBeanUtilsBean.java"/>
      <Message>In method new org.apache.commons.beanutils.locale.LocaleBeanUtilsBean(LocaleConvertUtilsBean)</Message>
    </Method>
    <Field classname="org.apache.commons.beanutils.locale.LocaleBeanUtilsBean" name="localeConvertUtils" signature="Lorg/apache/commons/beanutils/locale/LocaleConvertUtilsBean;" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.locale.LocaleBeanUtilsBean" sourcefile="LocaleBeanUtilsBean.java" sourcepath="org/apache/commons/beanutils/locale/LocaleBeanUtilsBean.java">
        <Message>In LocaleBeanUtilsBean.java</Message>
      </SourceLine>
      <Message>Field org.apache.commons.beanutils.locale.LocaleBeanUtilsBean.localeConvertUtils</Message>
    </Field>
    <LocalVariable name="localeConvertUtils" register="1" pc="15" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named localeConvertUtils</Message>
    </LocalVariable>
    <SourceLine classname="org.apache.commons.beanutils.locale.LocaleBeanUtilsBean" primary="true" start="120" end="120" startBytecode="15" endBytecode="15" sourcefile="LocaleBeanUtilsBean.java" sourcepath="org/apache/commons/beanutils/locale/LocaleBeanUtilsBean.java">
      <Message>At LocaleBeanUtilsBean.java:[line 120]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="c385524f6e02832e0225d4f353e7e4e6" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>new org.apache.commons.beanutils.locale.LocaleBeanUtilsBean(LocaleConvertUtilsBean, ConvertUtilsBean, PropertyUtilsBean) may expose internal representation by storing an externally mutable object into LocaleBeanUtilsBean.localeConvertUtils</LongMessage>
    <Class classname="org.apache.commons.beanutils.locale.LocaleBeanUtilsBean" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.locale.LocaleBeanUtilsBean" start="54" end="938" sourcefile="LocaleBeanUtilsBean.java" sourcepath="org/apache/commons/beanutils/locale/LocaleBeanUtilsBean.java">
        <Message>At LocaleBeanUtilsBean.java:[lines 54-938]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.locale.LocaleBeanUtilsBean</Message>
    </Class>
    <Method classname="org.apache.commons.beanutils.locale.LocaleBeanUtilsBean" name="&lt;init&gt;" signature="(Lorg/apache/commons/beanutils/locale/LocaleConvertUtilsBean;Lorg/apache/commons/beanutils/ConvertUtilsBean;Lorg/apache/commons/beanutils/PropertyUtilsBean;)V" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.locale.LocaleBeanUtilsBean" start="109" end="111" startBytecode="0" endBytecode="104" sourcefile="LocaleBeanUtilsBean.java" sourcepath="org/apache/commons/beanutils/locale/LocaleBeanUtilsBean.java"/>
      <Message>In method new org.apache.commons.beanutils.locale.LocaleBeanUtilsBean(LocaleConvertUtilsBean, ConvertUtilsBean, PropertyUtilsBean)</Message>
    </Method>
    <Field classname="org.apache.commons.beanutils.locale.LocaleBeanUtilsBean" name="localeConvertUtils" signature="Lorg/apache/commons/beanutils/locale/LocaleConvertUtilsBean;" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.locale.LocaleBeanUtilsBean" sourcefile="LocaleBeanUtilsBean.java" sourcepath="org/apache/commons/beanutils/locale/LocaleBeanUtilsBean.java">
        <Message>In LocaleBeanUtilsBean.java</Message>
      </SourceLine>
      <Message>Field org.apache.commons.beanutils.locale.LocaleBeanUtilsBean.localeConvertUtils</Message>
    </Field>
    <LocalVariable name="localeConvertUtils" register="1" pc="17" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named localeConvertUtils</Message>
    </LocalVariable>
    <SourceLine classname="org.apache.commons.beanutils.locale.LocaleBeanUtilsBean" primary="true" start="110" end="110" startBytecode="17" endBytecode="17" sourcefile="LocaleBeanUtilsBean.java" sourcepath="org/apache/commons/beanutils/locale/LocaleBeanUtilsBean.java">
      <Message>At LocaleBeanUtilsBean.java:[line 110]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="c803c6bad0e96b62642991e8fcb107df" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>new org.apache.commons.beanutils.locale.LocaleBeanUtilsBean$Descriptor(LocaleBeanUtilsBean, Object, String, String, String, int) may expose internal representation by storing an externally mutable object into LocaleBeanUtilsBean$Descriptor.this$0</LongMessage>
    <Class classname="org.apache.commons.beanutils.locale.LocaleBeanUtilsBean$Descriptor" primary="true" classAnnotationNames="java.lang.Deprecated">
      <SourceLine classname="org.apache.commons.beanutils.locale.LocaleBeanUtilsBean$Descriptor" start="949" end="1061" sourcefile="LocaleBeanUtilsBean.java" sourcepath="org/apache/commons/beanutils/locale/LocaleBeanUtilsBean.java">
        <Message>At LocaleBeanUtilsBean.java:[lines 949-1061]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.locale.LocaleBeanUtilsBean$Descriptor</Message>
    </Class>
    <Method classname="org.apache.commons.beanutils.locale.LocaleBeanUtilsBean$Descriptor" name="&lt;init&gt;" signature="(Lorg/apache/commons/beanutils/locale/LocaleBeanUtilsBean;Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V" isStatic="false" primary="true" classAnnotationNames="java.lang.Deprecated">
      <SourceLine classname="org.apache.commons.beanutils.locale.LocaleBeanUtilsBean$Descriptor" start="964" end="971" startBytecode="0" endBytecode="172" sourcefile="LocaleBeanUtilsBean.java" sourcepath="org/apache/commons/beanutils/locale/LocaleBeanUtilsBean.java"/>
      <Message>In method new org.apache.commons.beanutils.locale.LocaleBeanUtilsBean$Descriptor(LocaleBeanUtilsBean, Object, String, String, String, int)</Message>
    </Method>
    <Field classname="org.apache.commons.beanutils.locale.LocaleBeanUtilsBean$Descriptor" name="this$0" signature="Lorg/apache/commons/beanutils/locale/LocaleBeanUtilsBean;" isStatic="false" primary="true" classAnnotationNames="java.lang.Deprecated">
      <SourceLine classname="org.apache.commons.beanutils.locale.LocaleBeanUtilsBean$Descriptor" sourcefile="LocaleBeanUtilsBean.java" sourcepath="org/apache/commons/beanutils/locale/LocaleBeanUtilsBean.java">
        <Message>In LocaleBeanUtilsBean.java</Message>
      </SourceLine>
      <Message>Field org.apache.commons.beanutils.locale.LocaleBeanUtilsBean$Descriptor.this$0</Message>
    </Field>
    <LocalVariable name="this$0" register="1" pc="2" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named this$0</Message>
    </LocalVariable>
    <SourceLine classname="org.apache.commons.beanutils.locale.LocaleBeanUtilsBean$Descriptor" primary="true" start="964" end="964" startBytecode="2" endBytecode="2" sourcefile="LocaleBeanUtilsBean.java" sourcepath="org/apache/commons/beanutils/locale/LocaleBeanUtilsBean.java">
      <Message>At LocaleBeanUtilsBean.java:[line 964]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="SIC_INNER_SHOULD_BE_STATIC" priority="2" rank="18" abbrev="SIC" category="PERFORMANCE" instanceHash="21497d801a062018133c751e79c9f76a" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Should be a static inner class</ShortMessage>
    <LongMessage>Should org.apache.commons.beanutils.locale.LocaleBeanUtilsBean$Descriptor be a _static_ inner class?</LongMessage>
    <Class classname="org.apache.commons.beanutils.locale.LocaleBeanUtilsBean$Descriptor" primary="true" classAnnotationNames="java.lang.Deprecated">
      <SourceLine classname="org.apache.commons.beanutils.locale.LocaleBeanUtilsBean$Descriptor" start="949" end="1061" sourcefile="LocaleBeanUtilsBean.java" sourcepath="org/apache/commons/beanutils/locale/LocaleBeanUtilsBean.java">
        <Message>At LocaleBeanUtilsBean.java:[lines 949-1061]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.locale.LocaleBeanUtilsBean$Descriptor</Message>
    </Class>
    <SourceLine classname="org.apache.commons.beanutils.locale.LocaleBeanUtilsBean$Descriptor" start="949" end="1061" sourcefile="LocaleBeanUtilsBean.java" sourcepath="org/apache/commons/beanutils/locale/LocaleBeanUtilsBean.java" synthetic="true">
      <Message>At LocaleBeanUtilsBean.java:[lines 949-1061]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="MC_OVERRIDABLE_METHOD_CALL_IN_CONSTRUCTOR" priority="3" rank="20" abbrev="MC" category="MALICIOUS_CODE" instanceHash="1f6747524dd03f6bdf889834c3bac53e" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>An overridable method is called from a constructor</ShortMessage>
    <LongMessage>Overridable method deregister is called from constructor new org.apache.commons.beanutils.locale.LocaleConvertUtilsBean().</LongMessage>
    <Class classname="org.apache.commons.beanutils.locale.LocaleConvertUtilsBean" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.locale.LocaleConvertUtilsBean" start="93" end="502" sourcefile="LocaleConvertUtilsBean.java" sourcepath="org/apache/commons/beanutils/locale/LocaleConvertUtilsBean.java">
        <Message>At LocaleConvertUtilsBean.java:[lines 93-502]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.locale.LocaleConvertUtilsBean</Message>
    </Class>
    <Method classname="org.apache.commons.beanutils.locale.LocaleConvertUtilsBean" name="&lt;init&gt;" signature="()V" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.locale.LocaleConvertUtilsBean" start="119" end="123" startBytecode="0" endBytecode="134" sourcefile="LocaleConvertUtilsBean.java" sourcepath="org/apache/commons/beanutils/locale/LocaleConvertUtilsBean.java"/>
      <Message>In method new org.apache.commons.beanutils.locale.LocaleConvertUtilsBean()</Message>
    </Method>
    <String value="deregister">
      <Message>Value deregister</Message>
    </String>
    <SourceLine classname="org.apache.commons.beanutils.locale.LocaleConvertUtilsBean" primary="true" start="121" end="121" startBytecode="49" endBytecode="49" sourcefile="LocaleConvertUtilsBean.java" sourcepath="org/apache/commons/beanutils/locale/LocaleConvertUtilsBean.java">
      <Message>At LocaleConvertUtilsBean.java:[line 121]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DM_NUMBER_CTOR" priority="2" rank="18" abbrev="Bx" category="PERFORMANCE" instanceHash="b6360a38408ba7002b5275e59911c2aa" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Method invokes inefficient Number constructor; use static valueOf instead</ShortMessage>
    <LongMessage>org.apache.commons.beanutils.locale.converters.ByteLocaleConverter.parse(Object, String) invokes inefficient new Byte(byte) constructor; use Byte.valueOf(byte) instead</LongMessage>
    <Class classname="org.apache.commons.beanutils.locale.converters.ByteLocaleConverter" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.locale.converters.ByteLocaleConverter" start="52" end="223" sourcefile="ByteLocaleConverter.java" sourcepath="org/apache/commons/beanutils/locale/converters/ByteLocaleConverter.java">
        <Message>At ByteLocaleConverter.java:[lines 52-223]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.locale.converters.ByteLocaleConverter</Message>
    </Class>
    <Method classname="org.apache.commons.beanutils.locale.converters.ByteLocaleConverter" name="parse" signature="(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.locale.converters.ByteLocaleConverter" start="218" end="223" startBytecode="0" endBytecode="162" sourcefile="ByteLocaleConverter.java" sourcepath="org/apache/commons/beanutils/locale/converters/ByteLocaleConverter.java"/>
      <Message>In method org.apache.commons.beanutils.locale.converters.ByteLocaleConverter.parse(Object, String)</Message>
    </Method>
    <Method classname="java.lang.Byte" name="&lt;init&gt;" signature="(B)V" isStatic="false" role="METHOD_CALLED" classAnnotationNames="jdk.internal.ValueBased">
      <SourceLine classname="java.lang.Byte" start="348" end="350" startBytecode="0" endBytecode="69" sourcefile="Byte.java" sourcepath="java/lang/Byte.java"/>
      <Message>Called method new Byte(byte)</Message>
    </Method>
    <Method classname="java.lang.Byte" name="valueOf" signature="(B)Ljava/lang/Byte;" isStatic="true" role="SHOULD_CALL" classAnnotationNames="jdk.internal.ValueBased">
      <SourceLine classname="java.lang.Byte" start="146" end="147" startBytecode="0" endBytecode="69" sourcefile="Byte.java" sourcepath="java/lang/Byte.java"/>
      <Message>Should call Byte.valueOf(byte) instead</Message>
    </Method>
    <SourceLine classname="org.apache.commons.beanutils.locale.converters.ByteLocaleConverter" primary="true" start="223" end="223" startBytecode="61" endBytecode="61" sourcefile="ByteLocaleConverter.java" sourcepath="org/apache/commons/beanutils/locale/converters/ByteLocaleConverter.java">
      <Message>At ByteLocaleConverter.java:[line 223]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DM_FP_NUMBER_CTOR" priority="3" rank="20" abbrev="Bx" category="PERFORMANCE" instanceHash="2ec8768b29a7b4495cc419a749397f72" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Method invokes inefficient floating-point Number constructor; use static valueOf instead</ShortMessage>
    <LongMessage>org.apache.commons.beanutils.locale.converters.DoubleLocaleConverter.parse(Object, String) invokes inefficient new Double(double) constructor; use Double.valueOf(double) instead</LongMessage>
    <Class classname="org.apache.commons.beanutils.locale.converters.DoubleLocaleConverter" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.locale.converters.DoubleLocaleConverter" start="51" end="221" sourcefile="DoubleLocaleConverter.java" sourcepath="org/apache/commons/beanutils/locale/converters/DoubleLocaleConverter.java">
        <Message>At DoubleLocaleConverter.java:[lines 51-221]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.locale.converters.DoubleLocaleConverter</Message>
    </Class>
    <Method classname="org.apache.commons.beanutils.locale.converters.DoubleLocaleConverter" name="parse" signature="(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.locale.converters.DoubleLocaleConverter" start="217" end="221" startBytecode="0" endBytecode="128" sourcefile="DoubleLocaleConverter.java" sourcepath="org/apache/commons/beanutils/locale/converters/DoubleLocaleConverter.java"/>
      <Message>In method org.apache.commons.beanutils.locale.converters.DoubleLocaleConverter.parse(Object, String)</Message>
    </Method>
    <Method classname="java.lang.Double" name="&lt;init&gt;" signature="(D)V" isStatic="false" role="METHOD_CALLED" classAnnotationNames="jdk.internal.ValueBased">
      <SourceLine classname="java.lang.Double" start="711" end="713" startBytecode="0" endBytecode="69" sourcefile="Double.java" sourcepath="java/lang/Double.java"/>
      <Message>Called method new Double(double)</Message>
    </Method>
    <Method classname="java.lang.Double" name="valueOf" signature="(D)Ljava/lang/Double;" isStatic="true" role="SHOULD_CALL" classAnnotationNames="jdk.internal.ValueBased">
      <SourceLine classname="java.lang.Double" start="632" end="632" startBytecode="0" endBytecode="50" sourcefile="Double.java" sourcepath="java/lang/Double.java"/>
      <Message>Should call Double.valueOf(double) instead</Message>
    </Method>
    <SourceLine classname="org.apache.commons.beanutils.locale.converters.DoubleLocaleConverter" primary="true" start="219" end="219" startBytecode="25" endBytecode="25" sourcefile="DoubleLocaleConverter.java" sourcepath="org/apache/commons/beanutils/locale/converters/DoubleLocaleConverter.java">
      <Message>At DoubleLocaleConverter.java:[line 219]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DM_FP_NUMBER_CTOR" priority="3" rank="20" abbrev="Bx" category="PERFORMANCE" instanceHash="d73f34c3003a872707288eea1c9101cd" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Method invokes inefficient floating-point Number constructor; use static valueOf instead</ShortMessage>
    <LongMessage>org.apache.commons.beanutils.locale.converters.FloatLocaleConverter.parse(Object, String) invokes inefficient new Float(float) constructor; use Float.valueOf(float) instead</LongMessage>
    <Class classname="org.apache.commons.beanutils.locale.converters.FloatLocaleConverter" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.locale.converters.FloatLocaleConverter" start="52" end="225" sourcefile="FloatLocaleConverter.java" sourcepath="org/apache/commons/beanutils/locale/converters/FloatLocaleConverter.java">
        <Message>At FloatLocaleConverter.java:[lines 52-225]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.locale.converters.FloatLocaleConverter</Message>
    </Class>
    <Method classname="org.apache.commons.beanutils.locale.converters.FloatLocaleConverter" name="parse" signature="(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.locale.converters.FloatLocaleConverter" start="219" end="225" startBytecode="0" endBytecode="233" sourcefile="FloatLocaleConverter.java" sourcepath="org/apache/commons/beanutils/locale/converters/FloatLocaleConverter.java"/>
      <Message>In method org.apache.commons.beanutils.locale.converters.FloatLocaleConverter.parse(Object, String)</Message>
    </Method>
    <Method classname="java.lang.Float" name="&lt;init&gt;" signature="(F)V" isStatic="false" role="METHOD_CALLED" classAnnotationNames="jdk.internal.ValueBased">
      <SourceLine classname="java.lang.Float" start="537" end="539" startBytecode="0" endBytecode="69" sourcefile="Float.java" sourcepath="java/lang/Float.java"/>
      <Message>Called method new Float(float)</Message>
    </Method>
    <Method classname="java.lang.Float" name="valueOf" signature="(F)Ljava/lang/Float;" isStatic="true" role="SHOULD_CALL" classAnnotationNames="jdk.internal.ValueBased">
      <SourceLine classname="java.lang.Float" start="458" end="458" startBytecode="0" endBytecode="50" sourcefile="Float.java" sourcepath="java/lang/Float.java"/>
      <Message>Should call Float.valueOf(float) instead</Message>
    </Method>
    <SourceLine classname="org.apache.commons.beanutils.locale.converters.FloatLocaleConverter" primary="true" start="225" end="225" startBytecode="96" endBytecode="96" sourcefile="FloatLocaleConverter.java" sourcepath="org/apache/commons/beanutils/locale/converters/FloatLocaleConverter.java">
      <Message>At FloatLocaleConverter.java:[line 225]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DM_NUMBER_CTOR" priority="2" rank="18" abbrev="Bx" category="PERFORMANCE" instanceHash="ecce38363fb9ece47b6e3c6bb34cf35f" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Method invokes inefficient Number constructor; use static valueOf instead</ShortMessage>
    <LongMessage>org.apache.commons.beanutils.locale.converters.IntegerLocaleConverter.parse(Object, String) invokes inefficient new Integer(int) constructor; use Integer.valueOf(int) instead</LongMessage>
    <Class classname="org.apache.commons.beanutils.locale.converters.IntegerLocaleConverter" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.locale.converters.IntegerLocaleConverter" start="53" end="223" sourcefile="IntegerLocaleConverter.java" sourcepath="org/apache/commons/beanutils/locale/converters/IntegerLocaleConverter.java">
        <Message>At IntegerLocaleConverter.java:[lines 53-223]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.locale.converters.IntegerLocaleConverter</Message>
    </Class>
    <Method classname="org.apache.commons.beanutils.locale.converters.IntegerLocaleConverter" name="parse" signature="(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.locale.converters.IntegerLocaleConverter" start="219" end="223" startBytecode="0" endBytecode="162" sourcefile="IntegerLocaleConverter.java" sourcepath="org/apache/commons/beanutils/locale/converters/IntegerLocaleConverter.java"/>
      <Message>In method org.apache.commons.beanutils.locale.converters.IntegerLocaleConverter.parse(Object, String)</Message>
    </Method>
    <Method classname="java.lang.Integer" name="&lt;init&gt;" signature="(I)V" isStatic="false" role="METHOD_CALLED" classAnnotationNames="jdk.internal.ValueBased">
      <SourceLine classname="java.lang.Integer" start="1104" end="1106" startBytecode="0" endBytecode="69" sourcefile="Integer.java" sourcepath="java/lang/Integer.java"/>
      <Message>Called method new Integer(int)</Message>
    </Method>
    <Method classname="java.lang.Integer" name="valueOf" signature="(I)Ljava/lang/Integer;" isStatic="true" role="SHOULD_CALL" classAnnotationNames="jdk.internal.ValueBased">
      <SourceLine classname="java.lang.Integer" start="1079" end="1081" startBytecode="0" endBytecode="90" sourcefile="Integer.java" sourcepath="java/lang/Integer.java"/>
      <Message>Should call Integer.valueOf(int) instead</Message>
    </Method>
    <SourceLine classname="org.apache.commons.beanutils.locale.converters.IntegerLocaleConverter" primary="true" start="223" end="223" startBytecode="61" endBytecode="61" sourcefile="IntegerLocaleConverter.java" sourcepath="org/apache/commons/beanutils/locale/converters/IntegerLocaleConverter.java">
      <Message>At IntegerLocaleConverter.java:[line 223]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DM_NUMBER_CTOR" priority="2" rank="18" abbrev="Bx" category="PERFORMANCE" instanceHash="6f30a99c41abda7f2cdfc5a186cb16e7" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Method invokes inefficient Number constructor; use static valueOf instead</ShortMessage>
    <LongMessage>org.apache.commons.beanutils.locale.converters.LongLocaleConverter.parse(Object, String) invokes inefficient new Long(long) constructor; use Long.valueOf(long) instead</LongMessage>
    <Class classname="org.apache.commons.beanutils.locale.converters.LongLocaleConverter" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.locale.converters.LongLocaleConverter" start="50" end="224" sourcefile="LongLocaleConverter.java" sourcepath="org/apache/commons/beanutils/locale/converters/LongLocaleConverter.java">
        <Message>At LongLocaleConverter.java:[lines 50-224]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.locale.converters.LongLocaleConverter</Message>
    </Class>
    <Method classname="org.apache.commons.beanutils.locale.converters.LongLocaleConverter" name="parse" signature="(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.locale.converters.LongLocaleConverter" start="218" end="224" startBytecode="0" endBytecode="133" sourcefile="LongLocaleConverter.java" sourcepath="org/apache/commons/beanutils/locale/converters/LongLocaleConverter.java"/>
      <Message>In method org.apache.commons.beanutils.locale.converters.LongLocaleConverter.parse(Object, String)</Message>
    </Method>
    <Method classname="java.lang.Long" name="&lt;init&gt;" signature="(J)V" isStatic="false" role="METHOD_CALLED" classAnnotationNames="jdk.internal.ValueBased">
      <SourceLine classname="java.lang.Long" start="1324" end="1326" startBytecode="0" endBytecode="69" sourcefile="Long.java" sourcepath="java/lang/Long.java"/>
      <Message>Called method new Long(long)</Message>
    </Method>
    <Method classname="java.lang.Long" name="valueOf" signature="(J)Ljava/lang/Long;" isStatic="true" role="SHOULD_CALL" classAnnotationNames="jdk.internal.ValueBased">
      <SourceLine classname="java.lang.Long" start="1207" end="1211" startBytecode="0" endBytecode="115" sourcefile="Long.java" sourcepath="java/lang/Long.java"/>
      <Message>Should call Long.valueOf(long) instead</Message>
    </Method>
    <SourceLine classname="org.apache.commons.beanutils.locale.converters.LongLocaleConverter" primary="true" start="224" end="224" startBytecode="31" endBytecode="31" sourcefile="LongLocaleConverter.java" sourcepath="org/apache/commons/beanutils/locale/converters/LongLocaleConverter.java">
      <Message>At LongLocaleConverter.java:[line 224]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DM_NUMBER_CTOR" priority="2" rank="18" abbrev="Bx" category="PERFORMANCE" instanceHash="8e92458217882187b6d941c28f830207" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Method invokes inefficient Number constructor; use static valueOf instead</ShortMessage>
    <LongMessage>org.apache.commons.beanutils.locale.converters.ShortLocaleConverter.parse(Object, String) invokes inefficient new Short(short) constructor; use Short.valueOf(short) instead</LongMessage>
    <Class classname="org.apache.commons.beanutils.locale.converters.ShortLocaleConverter" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.locale.converters.ShortLocaleConverter" start="50" end="230" sourcefile="ShortLocaleConverter.java" sourcepath="org/apache/commons/beanutils/locale/converters/ShortLocaleConverter.java">
        <Message>At ShortLocaleConverter.java:[lines 50-230]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.beanutils.locale.converters.ShortLocaleConverter</Message>
    </Class>
    <Method classname="org.apache.commons.beanutils.locale.converters.ShortLocaleConverter" name="parse" signature="(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.beanutils.locale.converters.ShortLocaleConverter" start="218" end="230" startBytecode="0" endBytecode="211" sourcefile="ShortLocaleConverter.java" sourcepath="org/apache/commons/beanutils/locale/converters/ShortLocaleConverter.java"/>
      <Message>In method org.apache.commons.beanutils.locale.converters.ShortLocaleConverter.parse(Object, String)</Message>
    </Method>
    <Method classname="java.lang.Short" name="&lt;init&gt;" signature="(S)V" isStatic="false" role="METHOD_CALLED" classAnnotationNames="jdk.internal.ValueBased">
      <SourceLine classname="java.lang.Short" start="353" end="355" startBytecode="0" endBytecode="69" sourcefile="Short.java" sourcepath="java/lang/Short.java"/>
      <Message>Called method new Short(short)</Message>
    </Method>
    <Method classname="java.lang.Short" name="valueOf" signature="(S)Ljava/lang/Short;" isStatic="true" role="SHOULD_CALL" classAnnotationNames="jdk.internal.ValueBased">
      <SourceLine classname="java.lang.Short" start="275" end="280" startBytecode="0" endBytecode="127" sourcefile="Short.java" sourcepath="java/lang/Short.java"/>
      <Message>Should call Short.valueOf(short) instead</Message>
    </Method>
    <SourceLine classname="org.apache.commons.beanutils.locale.converters.ShortLocaleConverter" primary="true" start="230" end="230" startBytecode="81" endBytecode="81" sourcefile="ShortLocaleConverter.java" sourcepath="org/apache/commons/beanutils/locale/converters/ShortLocaleConverter.java">
      <Message>At ShortLocaleConverter.java:[line 230]</Message>
    </SourceLine>
  </BugInstance>
  <BugCategory category="BAD_PRACTICE">
    <Description>Bad practice</Description>
  </BugCategory>
  <BugCategory category="MALICIOUS_CODE">
    <Description>Malicious code vulnerability</Description>
  </BugCategory>
  <BugCategory category="PERFORMANCE">
    <Description>Performance</Description>
  </BugCategory>
  <BugCategory category="STYLE">
    <Description>Dodgy code</Description>
  </BugCategory>
  <BugCategory category="I18N">
    <Description>Internationalization</Description>
  </BugCategory>
  <BugPattern type="UWF_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR" abbrev="UwF" category="STYLE">
    <ShortDescription>Field not initialized in constructor but dereferenced without null check</ShortDescription>
    <Details><![CDATA[

  <p> This field is never initialized within any constructor, and is therefore could be null after
the object is constructed. Elsewhere, it is loaded and dereferenced without a null check.
This could be a either an error or a questionable design, since
it means a null pointer exception will be generated if that field is dereferenced
before being initialized.
</p>

    ]]></Details>
  </BugPattern>
  <BugPattern type="EI_EXPOSE_REP2" abbrev="EI2" category="MALICIOUS_CODE" cweid="374">
    <ShortDescription>May expose internal representation by incorporating reference to mutable object</ShortDescription>
    <Details><![CDATA[

  <p> This code stores a reference to an externally mutable object into the
  internal representation of the object.&nbsp;
   If instances
   are accessed by untrusted code, and unchecked changes to
   the mutable object would compromise security or other
   important properties, you will need to do something different.
  Storing a copy of the object is better approach in many situations.</p>

    ]]></Details>
  </BugPattern>
  <BugPattern type="RV_RETURN_VALUE_IGNORED_NO_SIDE_EFFECT" abbrev="RV" category="STYLE">
    <ShortDescription>Return value of method without side effect is ignored</ShortDescription>
    <Details><![CDATA[

<p>This code calls a method and ignores the return value. However our analysis shows that
the method (including its implementations in subclasses if any) does not produce any effect
other than return value. Thus this call can be removed.
</p>
<p>We are trying to reduce the false positives as much as possible, but in some cases this warning might be wrong.
Common false-positive cases include:</p>
<p>- The method is designed to be overridden and produce a side effect in other projects which are out of the scope of the analysis.</p>
<p>- The method is called to trigger the class loading which may have a side effect.</p>
<p>- The method is called just to get some exception.</p>
<p>If you feel that our assumption is incorrect, you can use a @CheckReturnValue annotation
to instruct SpotBugs that ignoring the return value of this method is acceptable.
</p>

    ]]></Details>
  </BugPattern>
  <BugPattern type="WMI_WRONG_MAP_ITERATOR" abbrev="WMI" category="PERFORMANCE">
    <ShortDescription>Inefficient use of keySet iterator instead of entrySet iterator</ShortDescription>
    <Details><![CDATA[

<p> This method accesses the value of a Map entry, using a key that was retrieved from
a keySet iterator. It is more efficient to use an iterator on the entrySet of the map, to avoid the
Map.get(key) lookup.</p>

        ]]></Details>
  </BugPattern>
  <BugPattern type="SIC_INNER_SHOULD_BE_STATIC" abbrev="SIC" category="PERFORMANCE">
    <ShortDescription>Should be a static inner class</ShortDescription>
    <Details><![CDATA[

  <p> This class is an inner class, but does not use its embedded reference
  to the object which created it.&nbsp; This reference makes the instances
  of the class larger, and may keep the reference to the creator object
  alive longer than necessary.&nbsp; If possible, the class should be
   made static.
</p>

    ]]></Details>
  </BugPattern>
  <BugPattern type="MS_SHOULD_BE_FINAL" abbrev="MS" category="MALICIOUS_CODE">
    <ShortDescription>Field isn&apos;t final but should be</ShortDescription>
    <Details><![CDATA[

   <p>
This <code>public static</code> or <code>protected static</code> field is not final, and
could be changed by malicious code or
        by accident from another package.
        The field could be made final to avoid
        this vulnerability.</p>

    ]]></Details>
  </BugPattern>
  <BugPattern type="REC_CATCH_EXCEPTION" abbrev="REC" category="STYLE" cweid="396">
    <ShortDescription>Exception is caught when Exception is not thrown</ShortDescription>
    <Details><![CDATA[
  
  <p>
  This method uses a try-catch block that catches Exception objects, but Exception is not
  thrown within the try block, and RuntimeException is not explicitly caught.  It is a common bug pattern to
  say try { ... } catch (Exception e) { something } as a shorthand for catching a number of types of exception
  each of whose catch blocks is identical, but this construct also accidentally catches RuntimeException as well,
  masking potential bugs.
  </p>
  <p>A better approach is to either explicitly catch the specific exceptions that are thrown,
  or to explicitly catch RuntimeException exception, rethrow it, and then catch all non-Runtime Exceptions, as shown below:</p>
<pre><code>try {
    ...
} catch (RuntimeException e) {
    throw e;
} catch (Exception e) {
    ... deal with all non-runtime exceptions ...
}
</code></pre>
  
     ]]></Details>
  </BugPattern>
  <BugPattern type="BC_UNCONFIRMED_CAST" abbrev="BC" category="STYLE">
    <ShortDescription>Unchecked/unconfirmed cast</ShortDescription>
    <Details><![CDATA[

<p>
This cast is unchecked, and not all instances of the type casted from can be cast to
the type it is being cast to. Check that your program logic ensures that this
cast will not fail.
</p>

    ]]></Details>
  </BugPattern>
  <BugPattern type="RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE" abbrev="RCN" category="STYLE">
    <ShortDescription>Redundant nullcheck of value known to be non-null</ShortDescription>
    <Details><![CDATA[

<p> This method contains a redundant check of a known non-null value against
the constant null.</p>

    ]]></Details>
  </BugPattern>
  <BugPattern type="ST_WRITE_TO_STATIC_FROM_INSTANCE_METHOD" abbrev="ST" category="STYLE">
    <ShortDescription>Write to static field from instance method</ShortDescription>
    <Details><![CDATA[

  <p> This instance method writes to a static field. This is tricky to get
correct if multiple instances are being manipulated,
and generally bad practice.
</p>

    ]]></Details>
  </BugPattern>
  <BugPattern type="BC_UNCONFIRMED_CAST_OF_RETURN_VALUE" abbrev="BC" category="STYLE">
    <ShortDescription>Unchecked/unconfirmed cast of return value from method</ShortDescription>
    <Details><![CDATA[

<p>
This code performs an unchecked cast of the return value of a method.
The code might be calling the method in such a way that the cast is guaranteed to be
safe, but SpotBugs is unable to verify that the cast is safe.  Check that your program logic ensures that this
cast will not fail.
</p>

    ]]></Details>
  </BugPattern>
  <BugPattern type="EI_EXPOSE_REP" abbrev="EI" category="MALICIOUS_CODE" cweid="374">
    <ShortDescription>May expose internal representation by returning reference to mutable object</ShortDescription>
    <Details><![CDATA[

  <p> Returning a reference to a mutable object value stored in one of the object's fields
  exposes the internal representation of the object.&nbsp;
   If instances
   are accessed by untrusted code, and unchecked changes to
   the mutable object would compromise security or other
   important properties, you will need to do something different.
  Returning a new copy of the object is better approach in many situations.</p>

    ]]></Details>
  </BugPattern>
  <BugPattern type="MS_FINAL_PKGPROTECT" abbrev="MS" category="MALICIOUS_CODE">
    <ShortDescription>Field should be both final and package protected</ShortDescription>
    <Details><![CDATA[

 <p>
   A mutable static field could be changed by malicious code or
        by accident from another package.
        The field could be made package protected and/or made final
   to avoid
        this vulnerability.</p>

    ]]></Details>
  </BugPattern>
  <BugPattern type="EQ_DOESNT_OVERRIDE_EQUALS" abbrev="Eq" category="STYLE">
    <ShortDescription>Class doesn&apos;t override equals in superclass</ShortDescription>
    <Details><![CDATA[

  <p> This class extends a class that defines an equals method and adds fields, but doesn't
define an equals method itself. Thus, equality on instances of this class will
ignore the identity of the subclass and the added fields. Be sure this is what is intended,
and that you don't need to override the equals method. Even if you don't need to override
the equals method, consider overriding it anyway to document the fact
that the equals method for the subclass just return the result of
invoking super.equals(o).
  </p>

    ]]></Details>
  </BugPattern>
  <BugPattern type="CI_CONFUSED_INHERITANCE" abbrev="CI" category="STYLE">
    <ShortDescription>Class is final but declares protected field</ShortDescription>
    <Details><![CDATA[
      
      <p>
      This class is declared to be final, but declares fields to be protected. Since the class
      is final, it cannot be derived from, and the use of protected is confusing. The access
      modifier for the field should be changed to private or public to represent the true
      use for the field.
      </p>
      
    ]]></Details>
  </BugPattern>
  <BugPattern type="DM_NUMBER_CTOR" abbrev="Bx" category="PERFORMANCE">
    <ShortDescription>Method invokes inefficient Number constructor; use static valueOf instead</ShortDescription>
    <Details><![CDATA[
      
      <p>
      Using <code>new Integer(int)</code> is guaranteed to always result in a new object whereas
      <code>Integer.valueOf(int)</code> allows caching of values to be done by the compiler, class library, or JVM.
      Using of cached values avoids object allocation and the code will be faster.
      </p>
      <p>
      Values between -128 and 127 are guaranteed to have corresponding cached instances
      and using <code>valueOf</code> is approximately 3.5 times faster than using constructor.
      For values outside the constant range the performance of both styles is the same.
      </p>
      <p>
      Unless the class must be compatible with JVMs predating Java 5,
      use either autoboxing or the <code>valueOf()</code> method when creating instances of
      <code>Long</code>, <code>Integer</code>, <code>Short</code>, <code>Character</code>, and <code>Byte</code>.
      </p>
      
    ]]></Details>
  </BugPattern>
  <BugPattern type="SE_BAD_FIELD" abbrev="Se" category="BAD_PRACTICE">
    <ShortDescription>Non-transient non-serializable instance field in serializable class</ShortDescription>
    <Details><![CDATA[

<p> This Serializable class defines a non-primitive instance field which is neither transient,
Serializable, or <code>java.lang.Object</code>, and does not appear to implement
the <code>Externalizable</code> interface or the
<code>readObject()</code> and <code>writeObject()</code> methods.&nbsp;
Objects of this class will not be deserialized correctly if a non-Serializable
object is stored in this field.</p>

    ]]></Details>
  </BugPattern>
  <BugPattern type="URF_UNREAD_PUBLIC_OR_PROTECTED_FIELD" abbrev="UrF" category="STYLE">
    <ShortDescription>Unread public/protected field</ShortDescription>
    <Details><![CDATA[

  <p> This field is never read.&nbsp;
The field is public or protected, so perhaps
    it is intended to be used with classes not seen as part of the analysis. If not,
consider removing it from the class.</p>

    ]]></Details>
  </BugPattern>
  <BugPattern type="NP_LOAD_OF_KNOWN_NULL_VALUE" abbrev="NP" category="STYLE">
    <ShortDescription>Load of known null value</ShortDescription>
    <Details><![CDATA[

  <p> The variable referenced at this point is known to be null due to an earlier
   check against null. Although this is valid, it might be a mistake (perhaps you
intended to refer to a different variable, or perhaps the earlier check to see if the
variable is null should have been a check to see if it was non-null).
</p>

    ]]></Details>
  </BugPattern>
  <BugPattern type="RI_REDUNDANT_INTERFACES" abbrev="RI" category="STYLE">
    <ShortDescription>Class implements same interface as superclass</ShortDescription>
    <Details><![CDATA[
   
    <p>
    This class declares that it implements an interface that is also implemented by a superclass.
    This is redundant because once a superclass implements an interface, all subclasses by default also
    implement this interface. It may point out that the inheritance hierarchy has changed since
    this class was created, and consideration should be given to the ownership of
    the interface's implementation.
    </p>
    
     ]]></Details>
  </BugPattern>
  <BugPattern type="SBSC_USE_STRINGBUFFER_CONCATENATION" abbrev="SBSC" category="PERFORMANCE">
    <ShortDescription>Method concatenates strings using + in a loop</ShortDescription>
    <Details><![CDATA[

<p> The method seems to be building a String using concatenation in a loop.
In each iteration, the String is converted to a StringBuffer/StringBuilder,
   appended to, and converted back to a String.
   This can lead to a cost quadratic in the number of iterations,
   as the growing string is recopied in each iteration. </p>

<p>Better performance can be obtained by using
a StringBuffer (or StringBuilder in Java 5) explicitly.</p>

<p> For example:</p>
<pre><code>// This is bad
String s = "";
for (int i = 0; i &lt; field.length; ++i) {
    s = s + field[i];
}

// This is better
StringBuffer buf = new StringBuffer();
for (int i = 0; i &lt; field.length; ++i) {
    buf.append(field[i]);
}
String s = buf.toString();
</code></pre>

    ]]></Details>
  </BugPattern>
  <BugPattern type="DCN_NULLPOINTER_EXCEPTION" abbrev="DCN" category="STYLE">
    <ShortDescription>NullPointerException caught</ShortDescription>
    <Details><![CDATA[
   
<p>
According to SEI Cert rule <a href="https://wiki.sei.cmu.edu/confluence/display/java/ERR08-J.+Do+not+catch+NullPointerException+or+any+of+its+ancestors">ERR08-J</a> NullPointerException should not be caught. Handling NullPointerException is considered an inferior alternative to null-checking.
<p>
This non-compliant code catches a NullPointerException to see if an incoming parameter is null:
</p>
<pre><code>
boolean hasSpace(String m) {
  try {
    String ms[] = m.split(" ");
    return names.length != 1;
  } catch (NullPointerException e) {
    return false;
  }
}
</code></pre>
<p>
A compliant solution would use a null-check as in the following example:
</p>
<pre><code>
boolean hasSpace(String m) {
    if (m == null) return false;
    String ms[] = m.split(" ");
    return names.length != 1;
}
</code></pre>
    
     ]]></Details>
  </BugPattern>
  <BugPattern type="CT_CONSTRUCTOR_THROW" abbrev="CT" category="BAD_PRACTICE">
    <ShortDescription>Be wary of letting constructors throw exceptions.</ShortDescription>
    <Details><![CDATA[
      
            <p>Classes that throw exceptions in their constructors are vulnerable to Finalizer attacks</p>

            <p>A finalizer attack can be prevented, by declaring the class final, using an empty finalizer declared as final, or by a clever use of a private constructor.</p>

            <p>See <a href="https://wiki.sei.cmu.edu/confluence/display/java/OBJ11-J.+Be+wary+of+letting+constructors+throw+exceptions"><code>SEI CERT Rule OBJ-11</code></a>
            for more information.
            </p>
            
    ]]></Details>
  </BugPattern>
  <BugPattern type="REFLC_REFLECTION_MAY_INCREASE_ACCESSIBILITY_OF_CLASS" abbrev="REFLC" category="MALICIOUS_CODE">
    <ShortDescription>Public method uses reflection to create a class it gets in its parameter which could increase the accessibility of any class</ShortDescription>
    <Details><![CDATA[
      
        <p>
        <a href="https://wiki.sei.cmu.edu/confluence/display/java/SEC05-J.+Do+not+use+reflection+to+increase+accessibility+of+classes%2C+methods%2C+or+fields">SEI CERT SEC05-J</a> rule forbids the use of reflection to increase accessibility of classes, methods or fields. If
        a class in a package provides a public method which takes an instance of java.lang.Class as its parameter and
        calls its newInstance() method then it increases accessibility of classes in the same package without public
        constructors. An attacker code may call this method and pass such class to create an instance of it. This should
        be avoided by either making the method non-public or by checking for package access permission on the package.
        A third possibility is to use the java.beans.Beans.instantiate() method instead of java.lang.Class.newInstance()
        which checks whether the Class object being received has any public constructors.
        </p>
    ]]></Details>
  </BugPattern>
  <BugPattern type="DM_FP_NUMBER_CTOR" abbrev="Bx" category="PERFORMANCE">
    <ShortDescription>Method invokes inefficient floating-point Number constructor; use static valueOf instead</ShortDescription>
    <Details><![CDATA[
      
      <p>
      Using <code>new Double(double)</code> is guaranteed to always result in a new object whereas
      <code>Double.valueOf(double)</code> allows caching of values to be done by the compiler, class library, or JVM.
      Using of cached values avoids object allocation and the code will be faster.
      </p>
      <p>
      Unless the class must be compatible with JVMs predating Java 5,
      use either autoboxing or the <code>valueOf()</code> method when creating instances of <code>Double</code> and <code>Float</code>.
      </p>
      
    ]]></Details>
  </BugPattern>
  <BugPattern type="PZLA_PREFER_ZERO_LENGTH_ARRAYS" abbrev="PZLA" category="STYLE">
    <ShortDescription>Consider returning a zero length array rather than null</ShortDescription>
    <Details><![CDATA[

<p> It is often a better design to
return a length zero array rather than a null reference to indicate that there
are no results (i.e., an empty list of results).
This way, no explicit check for null is needed by clients of the method.</p>

<p>On the other hand, using null to indicate
"there is no answer to this question" is probably appropriate.
For example, <code>File.listFiles()</code> returns an empty list
if given a directory containing no files, and returns null if the file
is not a directory.</p>

    ]]></Details>
  </BugPattern>
  <BugPattern type="EQ_UNUSUAL" abbrev="Eq" category="STYLE">
    <ShortDescription>Unusual equals method</ShortDescription>
    <Details><![CDATA[

  <p> This class doesn't do any of the patterns we recognize for checking that the type of the argument
is compatible with the type of the <code>this</code> object. There might not be anything wrong with
this code, but it is worth reviewing.
</p>

    ]]></Details>
  </BugPattern>
  <BugPattern type="MC_OVERRIDABLE_METHOD_CALL_IN_CONSTRUCTOR" abbrev="MC" category="MALICIOUS_CODE">
    <ShortDescription>An overridable method is called from a constructor</ShortDescription>
    <Details><![CDATA[
      <p>
      Calling an overridable method during in a constructor may result in the use of uninitialized data. It may also
      leak the this reference of the partially constructed object. Only static, final or private methods should be
      invoked from a constructor.</p>
      <p>
      See SEI CERT rule <a href="https://wiki.sei.cmu.edu/confluence/display/java/MET05-J.+Ensure+that+constructors+do+not+call+overridable+methods">MET05-J. Ensure that constructors do not call overridable methods</a>.
      </p>
    ]]></Details>
  </BugPattern>
  <BugPattern type="SE_TRANSIENT_FIELD_NOT_RESTORED" abbrev="Se" category="BAD_PRACTICE">
    <ShortDescription>Transient field that isn&apos;t set by deserialization.</ShortDescription>
    <Details><![CDATA[

  <p> This class contains a field that is updated at multiple places in the class, thus it seems to be part of the state of the class. However, since the field is marked as transient and not set in readObject or readResolve, it will contain the default value in any
deserialized instance of the class.
</p>

    ]]></Details>
  </BugPattern>
  <BugPattern type="SE_NO_SERIALVERSIONID" abbrev="SnVI" category="BAD_PRACTICE">
    <ShortDescription>Class is Serializable, but doesn&apos;t define serialVersionUID</ShortDescription>
    <Details><![CDATA[

  <p> This class implements the <code>Serializable</code> interface, but does
  not define a <code>serialVersionUID</code> field.&nbsp;
  A change as simple as adding a reference to a .class object
    will add synthetic fields to the class,
   which will unfortunately change the implicit
   serialVersionUID (e.g., adding a reference to <code>String.class</code>
   will generate a static field <code>class$java$lang$String</code>).
   Also, different source code to bytecode compilers may use different
   naming conventions for synthetic variables generated for
   references to class objects or inner classes.
   To ensure interoperability of Serializable across versions,
   consider adding an explicit serialVersionUID.</p>

    ]]></Details>
  </BugPattern>
  <BugPattern type="DM_CONVERT_CASE" abbrev="Dm" category="I18N">
    <ShortDescription>Consider using Locale parameterized version of invoked method</ShortDescription>
    <Details><![CDATA[

  <p> A String is being converted to upper or lowercase, using the platform's default encoding. This may
      result in improper conversions when used with international characters. Use the </p>
      <ul>
    <li>String.toUpperCase( Locale l )</li>
    <li>String.toLowerCase( Locale l )</li>
    </ul>
      <p>versions instead.</p>

    ]]></Details>
  </BugPattern>
  <BugCode abbrev="BC">
    <Description>Bad casts of object references</Description>
  </BugCode>
  <BugCode abbrev="NP" cweid="476">
    <Description>Null pointer dereference</Description>
  </BugCode>
  <BugCode abbrev="RV" cweid="440">
    <Description>Bad use of return value from method</Description>
  </BugCode>
  <BugCode abbrev="UwF">
    <Description>Unwritten field</Description>
  </BugCode>
  <BugCode abbrev="SnVI">
    <Description>Serializable class with no Version ID</Description>
  </BugCode>
  <BugCode abbrev="REFLC">
    <Description>Reflection increasing accessibility of classes</Description>
  </BugCode>
  <BugCode abbrev="Eq">
    <Description>Problems with implementation of equals()</Description>
  </BugCode>
  <BugCode abbrev="EI2">
    <Description>Storing reference to mutable object</Description>
  </BugCode>
  <BugCode abbrev="MC">
    <Description>Dangerous call to overridable method</Description>
  </BugCode>
  <BugCode abbrev="PZLA">
    <Description>Prefer zero length arrays to null to indicate no results</Description>
  </BugCode>
  <BugCode abbrev="ST">
    <Description>Misuse of static fields</Description>
  </BugCode>
  <BugCode abbrev="EI">
    <Description>Method returning array may expose internal representation</Description>
  </BugCode>
  <BugCode abbrev="MS" cweid="218">
    <Description>Mutable static field</Description>
  </BugCode>
  <BugCode abbrev="CI">
    <Description>Confused Inheritance</Description>
  </BugCode>
  <BugCode abbrev="UrF">
    <Description>Unread field</Description>
  </BugCode>
  <BugCode abbrev="Dm">
    <Description>Dubious method used</Description>
  </BugCode>
  <BugCode abbrev="SIC">
    <Description>Inner class could be made static</Description>
  </BugCode>
  <BugCode abbrev="DCN">
    <Description>Don&apos;t Catch NullPointer Exception</Description>
  </BugCode>
  <BugCode abbrev="CT">
    <Description>Constructor throws</Description>
  </BugCode>
  <BugCode abbrev="REC">
    <Description>RuntimeException capture</Description>
  </BugCode>
  <BugCode abbrev="Se">
    <Description>Incorrect definition of Serializable class</Description>
  </BugCode>
  <BugCode abbrev="WMI">
    <Description>Inefficient Map Iterator</Description>
  </BugCode>
  <BugCode abbrev="Bx">
    <Description>Questionable Boxing of primitive value</Description>
  </BugCode>
  <BugCode abbrev="RI">
    <Description>Redundant Interfaces</Description>
  </BugCode>
  <BugCode abbrev="SBSC">
    <Description>String concatenation in loop using + operator</Description>
  </BugCode>
  <BugCode abbrev="RCN" cweid="476">
    <Description>Redundant comparison to null</Description>
  </BugCode>
  <Errors errors="0" missingClasses="8">
    <MissingClass>org.apache.commons.collections.Closure</MissingClass>
    <MissingClass>org.apache.commons.collections.FastHashMap</MissingClass>
    <MissingClass>org.apache.commons.collections.Predicate</MissingClass>
    <MissingClass>org.apache.commons.collections.Transformer</MissingClass>
    <MissingClass>org.apache.commons.collections.comparators.ComparableComparator</MissingClass>
    <MissingClass>org.apache.commons.collections.keyvalue.AbstractMapEntry</MissingClass>
    <MissingClass>org.apache.commons.logging.Log</MissingClass>
    <MissingClass>org.apache.commons.logging.LogFactory</MissingClass>
  </Errors>
  <FindBugsSummary timestamp="Fri, 8 Dec 2023 14:26:35 +0900" total_classes="137" referenced_classes="336" total_bugs="175" total_size="8102" num_packages="5" java_version="17.0.9" vm_version="17.0.9+11-LTS-201" cpu_seconds="3.83" clock_seconds="4.47" peak_mbytes="282.24" alloc_mbytes="4078.00" gc_seconds="0.10" priority_3="57" priority_2="117" priority_1="1">
    <FileStats path="org/apache/commons/beanutils/BaseDynaBeanMapDecorator.java" bugCount="3" size="113" bugHash="b4c7fc6ed4aae5aa2457610017e1c983"/>
    <FileStats path="org/apache/commons/beanutils/BasicDynaBean.java" bugCount="11" size="115" bugHash="d33eda005f1770113a699f1279b16d13"/>
    <FileStats path="org/apache/commons/beanutils/BasicDynaClass.java" bugCount="3" size="69" bugHash="752c8c3a5e9880290f21e89ba2217804"/>
    <FileStats path="org/apache/commons/beanutils/BeanAccessLanguageException.java" bugCount="0" size="7"/>
    <FileStats path="org/apache/commons/beanutils/BeanComparator.java" bugCount="2" size="54" bugHash="43ed557a25dae80d0a4d50b3e71a2fb0"/>
    <FileStats path="org/apache/commons/beanutils/BeanIntrospectionData.java" bugCount="0" size="37"/>
    <FileStats path="org/apache/commons/beanutils/BeanIntrospector.java" bugCount="0" size="2"/>
    <FileStats path="org/apache/commons/beanutils/BeanMap.java" bugCount="6" size="353" bugHash="a5d67b79e5bafb2d43c65fe57884329d"/>
    <FileStats path="org/apache/commons/beanutils/BeanPredicate.java" bugCount="0" size="42"/>
    <FileStats path="org/apache/commons/beanutils/BeanPropertyValueChangeClosure.java" bugCount="1" size="53" bugHash="2f973bdc3220e5be899ef8f0d5664c0a"/>
    <FileStats path="org/apache/commons/beanutils/BeanPropertyValueEqualsPredicate.java" bugCount="1" size="57" bugHash="54b9017b536f1054e1e97d520cc17b04"/>
    <FileStats path="org/apache/commons/beanutils/BeanToPropertyValueTransformer.java" bugCount="1" size="50" bugHash="4f08261ff2a32a01f2b3ebf9eb9e3ddd"/>
    <FileStats path="org/apache/commons/beanutils/BeanUtils.java" bugCount="0" size="55"/>
    <FileStats path="org/apache/commons/beanutils/BeanUtilsBean.java" bugCount="5" size="385" bugHash="4d4f00ff6224ca14239e437c12ef3b79"/>
    <FileStats path="org/apache/commons/beanutils/BeanUtilsBean2.java" bugCount="0" size="6"/>
    <FileStats path="org/apache/commons/beanutils/ConstructorUtils.java" bugCount="0" size="101"/>
    <FileStats path="org/apache/commons/beanutils/ContextClassLoaderLocal.java" bugCount="2" size="44" bugHash="9d814abe5bbd8e53708ec8ffdacbd220"/>
    <FileStats path="org/apache/commons/beanutils/ConversionException.java" bugCount="3" size="16" bugHash="93dda46abe9419f3bd334017853974bd"/>
    <FileStats path="org/apache/commons/beanutils/ConvertUtils.java" bugCount="0" size="84"/>
    <FileStats path="org/apache/commons/beanutils/ConvertUtilsBean.java" bugCount="18" size="275" bugHash="041fa4d7c635c25456335dc8e73aa193"/>
    <FileStats path="org/apache/commons/beanutils/ConvertUtilsBean2.java" bugCount="0" size="9"/>
    <FileStats path="org/apache/commons/beanutils/Converter.java" bugCount="0" size="2"/>
    <FileStats path="org/apache/commons/beanutils/ConvertingWrapDynaBean.java" bugCount="1" size="15" bugHash="c238e0b287e392add36e19739e889161"/>
    <FileStats path="org/apache/commons/beanutils/DefaultBeanIntrospector.java" bugCount="1" size="63" bugHash="58c5324b6c0f55e31fdb4c82bf4775b2"/>
    <FileStats path="org/apache/commons/beanutils/DefaultIntrospectionContext.java" bugCount="0" size="35"/>
    <FileStats path="org/apache/commons/beanutils/DynaBean.java" bugCount="0" size="10"/>
    <FileStats path="org/apache/commons/beanutils/DynaBeanMapDecorator.java" bugCount="0" size="9"/>
    <FileStats path="org/apache/commons/beanutils/DynaBeanPropertyMapDecorator.java" bugCount="0" size="11"/>
    <FileStats path="org/apache/commons/beanutils/DynaClass.java" bugCount="0" size="5"/>
    <FileStats path="org/apache/commons/beanutils/DynaProperty.java" bugCount="1" size="122" bugHash="0bbdc18564cd7f7616da7ba086011125"/>
    <FileStats path="org/apache/commons/beanutils/FluentPropertyBeanIntrospector.java" bugCount="1" size="38" bugHash="074348b58a960bd3a12c0f00e549ce17"/>
    <FileStats path="org/apache/commons/beanutils/IntrospectionContext.java" bugCount="0" size="8"/>
    <FileStats path="org/apache/commons/beanutils/JDBCDynaClass.java" bugCount="2" size="85" bugHash="0a2af9c087856a61a03a9ea53740f57f"/>
    <FileStats path="org/apache/commons/beanutils/LazyDynaBean.java" bugCount="14" size="282" bugHash="70c2975a9f39e96c08b0b9e76809b525"/>
    <FileStats path="org/apache/commons/beanutils/LazyDynaClass.java" bugCount="1" size="79" bugHash="6923fe2dac8e3187debf5c499f6890e4"/>
    <FileStats path="org/apache/commons/beanutils/LazyDynaList.java" bugCount="5" size="193" bugHash="6815102a33a0e752f43ad1d81436fb2d"/>
    <FileStats path="org/apache/commons/beanutils/LazyDynaMap.java" bugCount="7" size="115" bugHash="05e7f014ed22f917bf336db26f84e50a"/>
    <FileStats path="org/apache/commons/beanutils/MappedPropertyDescriptor.java" bugCount="4" size="209" bugHash="56cb4ccd899be28fcdfdb21f4fcf3d1c"/>
    <FileStats path="org/apache/commons/beanutils/MethodUtils.java" bugCount="1" size="378" bugHash="15d545978aa60365aa969b68705605ae"/>
    <FileStats path="org/apache/commons/beanutils/MutableDynaClass.java" bugCount="0" size="7"/>
    <FileStats path="org/apache/commons/beanutils/NestedNullException.java" bugCount="0" size="7"/>
    <FileStats path="org/apache/commons/beanutils/PropertyUtils.java" bugCount="0" size="89"/>
    <FileStats path="org/apache/commons/beanutils/PropertyUtilsBean.java" bugCount="9" size="817" bugHash="137040fffed0c6cf80f22f8a5621d577"/>
    <FileStats path="org/apache/commons/beanutils/ResultSetDynaClass.java" bugCount="7" size="34" bugHash="857a48f32643d3e93c799e5d38681f12"/>
    <FileStats path="org/apache/commons/beanutils/ResultSetIterator.java" bugCount="1" size="64" bugHash="8393bddbecb679a30aae5f2dc4f702f0"/>
    <FileStats path="org/apache/commons/beanutils/RowSetDynaClass.java" bugCount="10" size="51" bugHash="aac6a4ef07925a25def0f146c3a85a5e"/>
    <FileStats path="org/apache/commons/beanutils/SuppressPropertiesBeanIntrospector.java" bugCount="1" size="19" bugHash="641132de07c36bec27d0424432658946"/>
    <FileStats path="org/apache/commons/beanutils/WeakFastHashMap.java" bugCount="3" size="342" bugHash="87c7f3217245c6b0512f5370d370b348"/>
    <FileStats path="org/apache/commons/beanutils/WrapDynaBean.java" bugCount="2" size="94" bugHash="9e66adc90a58e848874e6e8283b0b4e3"/>
    <FileStats path="org/apache/commons/beanutils/WrapDynaClass.java" bugCount="7" size="163" bugHash="16da150beb8029a442ddb98a0cb74600"/>
    <FileStats path="org/apache/commons/beanutils/converters/AbstractArrayConverter.java" bugCount="1" size="48" bugHash="a840e57010beffd502aa03cb92ee9988"/>
    <FileStats path="org/apache/commons/beanutils/converters/AbstractConverter.java" bugCount="2" size="145" bugHash="296e4f44bb95c7cd728e3d04f4bc7f29"/>
    <FileStats path="org/apache/commons/beanutils/converters/ArrayConverter.java" bugCount="2" size="142" bugHash="7a87dc950dd2342a3152092d117febf7"/>
    <FileStats path="org/apache/commons/beanutils/converters/BigDecimalConverter.java" bugCount="0" size="9"/>
    <FileStats path="org/apache/commons/beanutils/converters/BigIntegerConverter.java" bugCount="0" size="9"/>
    <FileStats path="org/apache/commons/beanutils/converters/BooleanArrayConverter.java" bugCount="2" size="49" bugHash="faca9e671acf53243a7f32504aa9abf0"/>
    <FileStats path="org/apache/commons/beanutils/converters/BooleanConverter.java" bugCount="2" size="45" bugHash="810cfc6c9dc06bec43ff448435c8e148"/>
    <FileStats path="org/apache/commons/beanutils/converters/ByteArrayConverter.java" bugCount="0" size="40"/>
    <FileStats path="org/apache/commons/beanutils/converters/ByteConverter.java" bugCount="0" size="9"/>
    <FileStats path="org/apache/commons/beanutils/converters/CalendarConverter.java" bugCount="0" size="9"/>
    <FileStats path="org/apache/commons/beanutils/converters/CharacterArrayConverter.java" bugCount="0" size="40"/>
    <FileStats path="org/apache/commons/beanutils/converters/CharacterConverter.java" bugCount="1" size="16" bugHash="d235022dce3682d0a8ebe805f7737a3c"/>
    <FileStats path="org/apache/commons/beanutils/converters/ClassConverter.java" bugCount="0" size="21"/>
    <FileStats path="org/apache/commons/beanutils/converters/ConverterFacade.java" bugCount="0" size="12"/>
    <FileStats path="org/apache/commons/beanutils/converters/DateConverter.java" bugCount="0" size="9"/>
    <FileStats path="org/apache/commons/beanutils/converters/DateTimeConverter.java" bugCount="5" size="219" bugHash="93520d65845da50ffbfac0cbf7171c85"/>
    <FileStats path="org/apache/commons/beanutils/converters/DoubleArrayConverter.java" bugCount="0" size="40"/>
    <FileStats path="org/apache/commons/beanutils/converters/DoubleConverter.java" bugCount="0" size="9"/>
    <FileStats path="org/apache/commons/beanutils/converters/FileConverter.java" bugCount="0" size="13"/>
    <FileStats path="org/apache/commons/beanutils/converters/FloatArrayConverter.java" bugCount="0" size="40"/>
    <FileStats path="org/apache/commons/beanutils/converters/FloatConverter.java" bugCount="0" size="9"/>
    <FileStats path="org/apache/commons/beanutils/converters/IntegerArrayConverter.java" bugCount="0" size="40"/>
    <FileStats path="org/apache/commons/beanutils/converters/IntegerConverter.java" bugCount="0" size="9"/>
    <FileStats path="org/apache/commons/beanutils/converters/LongArrayConverter.java" bugCount="0" size="40"/>
    <FileStats path="org/apache/commons/beanutils/converters/LongConverter.java" bugCount="0" size="9"/>
    <FileStats path="org/apache/commons/beanutils/converters/NumberConverter.java" bugCount="14" size="199" bugHash="f0fa086413a28d8cab21b7819dcaed81"/>
    <FileStats path="org/apache/commons/beanutils/converters/ShortArrayConverter.java" bugCount="0" size="40"/>
    <FileStats path="org/apache/commons/beanutils/converters/ShortConverter.java" bugCount="0" size="9"/>
    <FileStats path="org/apache/commons/beanutils/converters/SqlDateConverter.java" bugCount="0" size="9"/>
    <FileStats path="org/apache/commons/beanutils/converters/SqlTimeConverter.java" bugCount="0" size="17"/>
    <FileStats path="org/apache/commons/beanutils/converters/SqlTimestampConverter.java" bugCount="0" size="17"/>
    <FileStats path="org/apache/commons/beanutils/converters/StringArrayConverter.java" bugCount="0" size="38"/>
    <FileStats path="org/apache/commons/beanutils/converters/StringConverter.java" bugCount="0" size="13"/>
    <FileStats path="org/apache/commons/beanutils/converters/URLConverter.java" bugCount="0" size="13"/>
    <FileStats path="org/apache/commons/beanutils/expression/DefaultResolver.java" bugCount="0" size="107"/>
    <FileStats path="org/apache/commons/beanutils/expression/Resolver.java" bugCount="0" size="9"/>
    <FileStats path="org/apache/commons/beanutils/locale/BaseLocaleConverter.java" bugCount="0" size="69"/>
    <FileStats path="org/apache/commons/beanutils/locale/LocaleBeanUtils.java" bugCount="0" size="104"/>
    <FileStats path="org/apache/commons/beanutils/locale/LocaleBeanUtilsBean.java" bugCount="5" size="265" bugHash="a52838606bf50eb0608add7a9fb5410d"/>
    <FileStats path="org/apache/commons/beanutils/locale/LocaleConvertUtils.java" bugCount="0" size="49"/>
    <FileStats path="org/apache/commons/beanutils/locale/LocaleConvertUtilsBean.java" bugCount="1" size="163" bugHash="056d3c9659b248fe3f38116be9630c9f"/>
    <FileStats path="org/apache/commons/beanutils/locale/LocaleConverter.java" bugCount="0" size="2"/>
    <FileStats path="org/apache/commons/beanutils/locale/converters/BigDecimalLocaleConverter.java" bugCount="0" size="44"/>
    <FileStats path="org/apache/commons/beanutils/locale/converters/BigIntegerLocaleConverter.java" bugCount="0" size="46"/>
    <FileStats path="org/apache/commons/beanutils/locale/converters/ByteLocaleConverter.java" bugCount="1" size="42" bugHash="27b564e9c54d5965ed8c330af25f00a5"/>
    <FileStats path="org/apache/commons/beanutils/locale/converters/DateLocaleConverter.java" bugCount="0" size="103"/>
    <FileStats path="org/apache/commons/beanutils/locale/converters/DecimalLocaleConverter.java" bugCount="0" size="49"/>
    <FileStats path="org/apache/commons/beanutils/locale/converters/DoubleLocaleConverter.java" bugCount="1" size="42" bugHash="32a210bb0b5870fd5d25123b248da57a"/>
    <FileStats path="org/apache/commons/beanutils/locale/converters/FloatLocaleConverter.java" bugCount="1" size="44" bugHash="b801b29adb318cc8b99e06fa501a1b93"/>
    <FileStats path="org/apache/commons/beanutils/locale/converters/IntegerLocaleConverter.java" bugCount="1" size="42" bugHash="01bb7b85cf6bde791480249d540e2388"/>
    <FileStats path="org/apache/commons/beanutils/locale/converters/LongLocaleConverter.java" bugCount="1" size="42" bugHash="c5ec07420f51e2d90344be18b78e4b4e"/>
    <FileStats path="org/apache/commons/beanutils/locale/converters/ShortLocaleConverter.java" bugCount="1" size="45" bugHash="fbd2c53cdc1397c11faf0eebc36cb92e"/>
    <FileStats path="org/apache/commons/beanutils/locale/converters/SqlDateLocaleConverter.java" bugCount="0" size="39"/>
    <FileStats path="org/apache/commons/beanutils/locale/converters/SqlTimeLocaleConverter.java" bugCount="0" size="39"/>
    <FileStats path="org/apache/commons/beanutils/locale/converters/SqlTimestampLocaleConverter.java" bugCount="0" size="39"/>
    <FileStats path="org/apache/commons/beanutils/locale/converters/StringLocaleConverter.java" bugCount="0" size="59"/>
    <PackageStats package="org.apache.commons.beanutils" total_bugs="134" total_types="76" total_size="5273" priority_3="46" priority_2="87" priority_1="1">
      <ClassStats class="org.apache.commons.beanutils.BaseDynaBeanMapDecorator" sourceFile="BaseDynaBeanMapDecorator.java" interface="false" size="90" bugs="3" priority_2="3"/>
      <ClassStats class="org.apache.commons.beanutils.BaseDynaBeanMapDecorator$MapEntry" sourceFile="BaseDynaBeanMapDecorator.java" interface="false" size="23" bugs="0"/>
      <ClassStats class="org.apache.commons.beanutils.BasicDynaBean" sourceFile="BasicDynaBean.java" interface="false" size="115" bugs="11" priority_3="4" priority_2="7"/>
      <ClassStats class="org.apache.commons.beanutils.BasicDynaClass" sourceFile="BasicDynaClass.java" interface="false" size="69" bugs="3" priority_2="3"/>
      <ClassStats class="org.apache.commons.beanutils.BeanAccessLanguageException" sourceFile="BeanAccessLanguageException.java" interface="false" size="7" bugs="0"/>
      <ClassStats class="org.apache.commons.beanutils.BeanComparator" sourceFile="BeanComparator.java" interface="false" size="54" bugs="2" priority_3="2"/>
      <ClassStats class="org.apache.commons.beanutils.BeanIntrospectionData" sourceFile="BeanIntrospectionData.java" interface="false" size="37" bugs="0"/>
      <ClassStats class="org.apache.commons.beanutils.BeanIntrospector" sourceFile="BeanIntrospector.java" interface="true" size="2" bugs="0"/>
      <ClassStats class="org.apache.commons.beanutils.BeanMap" sourceFile="BeanMap.java" interface="false" size="238" bugs="5" priority_3="4" priority_2="1"/>
      <ClassStats class="org.apache.commons.beanutils.BeanMap$1" sourceFile="BeanMap.java" interface="false" size="27" bugs="0"/>
      <ClassStats class="org.apache.commons.beanutils.BeanMap$10" sourceFile="BeanMap.java" interface="false" size="8" bugs="0"/>
      <ClassStats class="org.apache.commons.beanutils.BeanMap$11" sourceFile="BeanMap.java" interface="false" size="12" bugs="0"/>
      <ClassStats class="org.apache.commons.beanutils.BeanMap$12" sourceFile="BeanMap.java" interface="false" size="15" bugs="0"/>
      <ClassStats class="org.apache.commons.beanutils.BeanMap$2" sourceFile="BeanMap.java" interface="false" size="5" bugs="0"/>
      <ClassStats class="org.apache.commons.beanutils.BeanMap$3" sourceFile="BeanMap.java" interface="false" size="5" bugs="1" priority_2="1"/>
      <ClassStats class="org.apache.commons.beanutils.BeanMap$4" sourceFile="BeanMap.java" interface="false" size="5" bugs="0"/>
      <ClassStats class="org.apache.commons.beanutils.BeanMap$5" sourceFile="BeanMap.java" interface="false" size="5" bugs="0"/>
      <ClassStats class="org.apache.commons.beanutils.BeanMap$6" sourceFile="BeanMap.java" interface="false" size="5" bugs="0"/>
      <ClassStats class="org.apache.commons.beanutils.BeanMap$7" sourceFile="BeanMap.java" interface="false" size="5" bugs="0"/>
      <ClassStats class="org.apache.commons.beanutils.BeanMap$8" sourceFile="BeanMap.java" interface="false" size="5" bugs="0"/>
      <ClassStats class="org.apache.commons.beanutils.BeanMap$9" sourceFile="BeanMap.java" interface="false" size="5" bugs="0"/>
      <ClassStats class="org.apache.commons.beanutils.BeanMap$Entry" sourceFile="BeanMap.java" interface="false" size="13" bugs="0"/>
      <ClassStats class="org.apache.commons.beanutils.BeanPredicate" sourceFile="BeanPredicate.java" interface="false" size="42" bugs="0"/>
      <ClassStats class="org.apache.commons.beanutils.BeanPropertyValueChangeClosure" sourceFile="BeanPropertyValueChangeClosure.java" interface="false" size="53" bugs="1" priority_2="1"/>
      <ClassStats class="org.apache.commons.beanutils.BeanPropertyValueEqualsPredicate" sourceFile="BeanPropertyValueEqualsPredicate.java" interface="false" size="57" bugs="1" priority_2="1"/>
      <ClassStats class="org.apache.commons.beanutils.BeanToPropertyValueTransformer" sourceFile="BeanToPropertyValueTransformer.java" interface="false" size="50" bugs="1" priority_2="1"/>
      <ClassStats class="org.apache.commons.beanutils.BeanUtils" sourceFile="BeanUtils.java" interface="false" size="55" bugs="0"/>
      <ClassStats class="org.apache.commons.beanutils.BeanUtilsBean" sourceFile="BeanUtilsBean.java" interface="false" size="379" bugs="5" priority_3="1" priority_2="4"/>
      <ClassStats class="org.apache.commons.beanutils.BeanUtilsBean$1" sourceFile="BeanUtilsBean.java" interface="false" size="6" bugs="0"/>
      <ClassStats class="org.apache.commons.beanutils.BeanUtilsBean2" sourceFile="BeanUtilsBean2.java" interface="false" size="6" bugs="0"/>
      <ClassStats class="org.apache.commons.beanutils.ConstructorUtils" sourceFile="ConstructorUtils.java" interface="false" size="101" bugs="0"/>
      <ClassStats class="org.apache.commons.beanutils.ContextClassLoaderLocal" sourceFile="ContextClassLoaderLocal.java" interface="false" size="44" bugs="2" priority_2="2"/>
      <ClassStats class="org.apache.commons.beanutils.ConversionException" sourceFile="ConversionException.java" interface="false" size="16" bugs="3" priority_2="3"/>
      <ClassStats class="org.apache.commons.beanutils.ConvertUtils" sourceFile="ConvertUtils.java" interface="false" size="84" bugs="0"/>
      <ClassStats class="org.apache.commons.beanutils.ConvertUtilsBean" sourceFile="ConvertUtilsBean.java" interface="false" size="275" bugs="18" priority_3="5" priority_2="12" priority_1="1"/>
      <ClassStats class="org.apache.commons.beanutils.ConvertUtilsBean2" sourceFile="ConvertUtilsBean2.java" interface="false" size="9" bugs="0"/>
      <ClassStats class="org.apache.commons.beanutils.Converter" sourceFile="Converter.java" interface="true" size="2" bugs="0"/>
      <ClassStats class="org.apache.commons.beanutils.ConvertingWrapDynaBean" sourceFile="ConvertingWrapDynaBean.java" interface="false" size="15" bugs="1" priority_3="1"/>
      <ClassStats class="org.apache.commons.beanutils.DefaultBeanIntrospector" sourceFile="DefaultBeanIntrospector.java" interface="false" size="63" bugs="1" priority_3="1"/>
      <ClassStats class="org.apache.commons.beanutils.DefaultIntrospectionContext" sourceFile="DefaultIntrospectionContext.java" interface="false" size="35" bugs="0"/>
      <ClassStats class="org.apache.commons.beanutils.DynaBean" sourceFile="DynaBean.java" interface="true" size="10" bugs="0"/>
      <ClassStats class="org.apache.commons.beanutils.DynaBeanMapDecorator" sourceFile="DynaBeanMapDecorator.java" interface="false" size="9" bugs="0"/>
      <ClassStats class="org.apache.commons.beanutils.DynaBeanPropertyMapDecorator" sourceFile="DynaBeanPropertyMapDecorator.java" interface="false" size="11" bugs="0"/>
      <ClassStats class="org.apache.commons.beanutils.DynaClass" sourceFile="DynaClass.java" interface="true" size="5" bugs="0"/>
      <ClassStats class="org.apache.commons.beanutils.DynaProperty" sourceFile="DynaProperty.java" interface="false" size="122" bugs="1" priority_2="1"/>
      <ClassStats class="org.apache.commons.beanutils.FluentPropertyBeanIntrospector" sourceFile="FluentPropertyBeanIntrospector.java" interface="false" size="38" bugs="1" priority_2="1"/>
      <ClassStats class="org.apache.commons.beanutils.IntrospectionContext" sourceFile="IntrospectionContext.java" interface="true" size="8" bugs="0"/>
      <ClassStats class="org.apache.commons.beanutils.JDBCDynaClass" sourceFile="JDBCDynaClass.java" interface="false" size="85" bugs="2" priority_3="2"/>
      <ClassStats class="org.apache.commons.beanutils.LazyDynaBean" sourceFile="LazyDynaBean.java" interface="false" size="282" bugs="14" priority_3="4" priority_2="10"/>
      <ClassStats class="org.apache.commons.beanutils.LazyDynaClass" sourceFile="LazyDynaClass.java" interface="false" size="79" bugs="1" priority_3="1"/>
      <ClassStats class="org.apache.commons.beanutils.LazyDynaList" sourceFile="LazyDynaList.java" interface="false" size="193" bugs="5" priority_3="2" priority_2="3"/>
      <ClassStats class="org.apache.commons.beanutils.LazyDynaMap" sourceFile="LazyDynaMap.java" interface="false" size="115" bugs="7" priority_3="4" priority_2="3"/>
      <ClassStats class="org.apache.commons.beanutils.MappedPropertyDescriptor" sourceFile="MappedPropertyDescriptor.java" interface="false" size="141" bugs="4" priority_2="4"/>
      <ClassStats class="org.apache.commons.beanutils.MappedPropertyDescriptor$MappedMethodReference" sourceFile="MappedPropertyDescriptor.java" interface="false" size="68" bugs="0"/>
      <ClassStats class="org.apache.commons.beanutils.MethodUtils" sourceFile="MethodUtils.java" interface="false" size="348" bugs="0"/>
      <ClassStats class="org.apache.commons.beanutils.MethodUtils$MethodDescriptor" sourceFile="MethodUtils.java" interface="false" size="30" bugs="1" priority_2="1"/>
      <ClassStats class="org.apache.commons.beanutils.MutableDynaClass" sourceFile="MutableDynaClass.java" interface="true" size="7" bugs="0"/>
      <ClassStats class="org.apache.commons.beanutils.NestedNullException" sourceFile="NestedNullException.java" interface="false" size="7" bugs="0"/>
      <ClassStats class="org.apache.commons.beanutils.PropertyUtils" sourceFile="PropertyUtils.java" interface="false" size="89" bugs="0"/>
      <ClassStats class="org.apache.commons.beanutils.PropertyUtilsBean" sourceFile="PropertyUtilsBean.java" interface="false" size="817" bugs="9" priority_3="3" priority_2="6"/>
      <ClassStats class="org.apache.commons.beanutils.ResultSetDynaClass" sourceFile="ResultSetDynaClass.java" interface="false" size="34" bugs="7" priority_3="3" priority_2="4"/>
      <ClassStats class="org.apache.commons.beanutils.ResultSetIterator" sourceFile="ResultSetIterator.java" interface="false" size="64" bugs="1" priority_2="1"/>
      <ClassStats class="org.apache.commons.beanutils.RowSetDynaClass" sourceFile="RowSetDynaClass.java" interface="false" size="51" bugs="10" priority_3="3" priority_2="7"/>
      <ClassStats class="org.apache.commons.beanutils.SuppressPropertiesBeanIntrospector" sourceFile="SuppressPropertiesBeanIntrospector.java" interface="false" size="19" bugs="1" priority_2="1"/>
      <ClassStats class="org.apache.commons.beanutils.WeakFastHashMap" sourceFile="WeakFastHashMap.java" interface="false" size="174" bugs="2" priority_3="2"/>
      <ClassStats class="org.apache.commons.beanutils.WeakFastHashMap$1" sourceFile="WeakFastHashMap.java" interface="false" size="1" bugs="0"/>
      <ClassStats class="org.apache.commons.beanutils.WeakFastHashMap$CollectionView" sourceFile="WeakFastHashMap.java" interface="false" size="105" bugs="1" priority_2="1"/>
      <ClassStats class="org.apache.commons.beanutils.WeakFastHashMap$CollectionView$CollectionViewIterator" sourceFile="WeakFastHashMap.java" interface="false" size="34" bugs="0"/>
      <ClassStats class="org.apache.commons.beanutils.WeakFastHashMap$EntrySet" sourceFile="WeakFastHashMap.java" interface="false" size="10" bugs="0"/>
      <ClassStats class="org.apache.commons.beanutils.WeakFastHashMap$KeySet" sourceFile="WeakFastHashMap.java" interface="false" size="9" bugs="0"/>
      <ClassStats class="org.apache.commons.beanutils.WeakFastHashMap$Values" sourceFile="WeakFastHashMap.java" interface="false" size="9" bugs="0"/>
      <ClassStats class="org.apache.commons.beanutils.WrapDynaBean" sourceFile="WrapDynaBean.java" interface="false" size="94" bugs="2" priority_3="1" priority_2="1"/>
      <ClassStats class="org.apache.commons.beanutils.WrapDynaClass" sourceFile="WrapDynaClass.java" interface="false" size="94" bugs="7" priority_3="3" priority_2="4"/>
      <ClassStats class="org.apache.commons.beanutils.WrapDynaClass$1" sourceFile="WrapDynaClass.java" interface="false" size="6" bugs="0"/>
      <ClassStats class="org.apache.commons.beanutils.WrapDynaClass$2" sourceFile="WrapDynaClass.java" interface="false" size="40" bugs="0"/>
      <ClassStats class="org.apache.commons.beanutils.WrapDynaClass$CacheKey" sourceFile="WrapDynaClass.java" interface="false" size="23" bugs="0"/>
    </PackageStats>
    <PackageStats package="org.apache.commons.beanutils.converters" total_bugs="29" total_types="34" total_size="1386" priority_3="8" priority_2="21">
      <ClassStats class="org.apache.commons.beanutils.converters.AbstractArrayConverter" sourceFile="AbstractArrayConverter.java" interface="false" size="48" bugs="1" priority_2="1"/>
      <ClassStats class="org.apache.commons.beanutils.converters.AbstractConverter" sourceFile="AbstractConverter.java" interface="false" size="145" bugs="2" priority_2="2"/>
      <ClassStats class="org.apache.commons.beanutils.converters.ArrayConverter" sourceFile="ArrayConverter.java" interface="false" size="142" bugs="2" priority_2="2"/>
      <ClassStats class="org.apache.commons.beanutils.converters.BigDecimalConverter" sourceFile="BigDecimalConverter.java" interface="false" size="9" bugs="0"/>
      <ClassStats class="org.apache.commons.beanutils.converters.BigIntegerConverter" sourceFile="BigIntegerConverter.java" interface="false" size="9" bugs="0"/>
      <ClassStats class="org.apache.commons.beanutils.converters.BooleanArrayConverter" sourceFile="BooleanArrayConverter.java" interface="false" size="49" bugs="2" priority_3="1" priority_2="1"/>
      <ClassStats class="org.apache.commons.beanutils.converters.BooleanConverter" sourceFile="BooleanConverter.java" interface="false" size="45" bugs="2" priority_3="2"/>
      <ClassStats class="org.apache.commons.beanutils.converters.ByteArrayConverter" sourceFile="ByteArrayConverter.java" interface="false" size="40" bugs="0"/>
      <ClassStats class="org.apache.commons.beanutils.converters.ByteConverter" sourceFile="ByteConverter.java" interface="false" size="9" bugs="0"/>
      <ClassStats class="org.apache.commons.beanutils.converters.CalendarConverter" sourceFile="CalendarConverter.java" interface="false" size="9" bugs="0"/>
      <ClassStats class="org.apache.commons.beanutils.converters.CharacterArrayConverter" sourceFile="CharacterArrayConverter.java" interface="false" size="40" bugs="0"/>
      <ClassStats class="org.apache.commons.beanutils.converters.CharacterConverter" sourceFile="CharacterConverter.java" interface="false" size="16" bugs="1" priority_2="1"/>
      <ClassStats class="org.apache.commons.beanutils.converters.ClassConverter" sourceFile="ClassConverter.java" interface="false" size="21" bugs="0"/>
      <ClassStats class="org.apache.commons.beanutils.converters.ConverterFacade" sourceFile="ConverterFacade.java" interface="false" size="12" bugs="0"/>
      <ClassStats class="org.apache.commons.beanutils.converters.DateConverter" sourceFile="DateConverter.java" interface="false" size="9" bugs="0"/>
      <ClassStats class="org.apache.commons.beanutils.converters.DateTimeConverter" sourceFile="DateTimeConverter.java" interface="false" size="219" bugs="5" priority_3="1" priority_2="4"/>
      <ClassStats class="org.apache.commons.beanutils.converters.DoubleArrayConverter" sourceFile="DoubleArrayConverter.java" interface="false" size="40" bugs="0"/>
      <ClassStats class="org.apache.commons.beanutils.converters.DoubleConverter" sourceFile="DoubleConverter.java" interface="false" size="9" bugs="0"/>
      <ClassStats class="org.apache.commons.beanutils.converters.FileConverter" sourceFile="FileConverter.java" interface="false" size="13" bugs="0"/>
      <ClassStats class="org.apache.commons.beanutils.converters.FloatArrayConverter" sourceFile="FloatArrayConverter.java" interface="false" size="40" bugs="0"/>
      <ClassStats class="org.apache.commons.beanutils.converters.FloatConverter" sourceFile="FloatConverter.java" interface="false" size="9" bugs="0"/>
      <ClassStats class="org.apache.commons.beanutils.converters.IntegerArrayConverter" sourceFile="IntegerArrayConverter.java" interface="false" size="40" bugs="0"/>
      <ClassStats class="org.apache.commons.beanutils.converters.IntegerConverter" sourceFile="IntegerConverter.java" interface="false" size="9" bugs="0"/>
      <ClassStats class="org.apache.commons.beanutils.converters.LongArrayConverter" sourceFile="LongArrayConverter.java" interface="false" size="40" bugs="0"/>
      <ClassStats class="org.apache.commons.beanutils.converters.LongConverter" sourceFile="LongConverter.java" interface="false" size="9" bugs="0"/>
      <ClassStats class="org.apache.commons.beanutils.converters.NumberConverter" sourceFile="NumberConverter.java" interface="false" size="199" bugs="14" priority_3="4" priority_2="10"/>
      <ClassStats class="org.apache.commons.beanutils.converters.ShortArrayConverter" sourceFile="ShortArrayConverter.java" interface="false" size="40" bugs="0"/>
      <ClassStats class="org.apache.commons.beanutils.converters.ShortConverter" sourceFile="ShortConverter.java" interface="false" size="9" bugs="0"/>
      <ClassStats class="org.apache.commons.beanutils.converters.SqlDateConverter" sourceFile="SqlDateConverter.java" interface="false" size="9" bugs="0"/>
      <ClassStats class="org.apache.commons.beanutils.converters.SqlTimeConverter" sourceFile="SqlTimeConverter.java" interface="false" size="17" bugs="0"/>
      <ClassStats class="org.apache.commons.beanutils.converters.SqlTimestampConverter" sourceFile="SqlTimestampConverter.java" interface="false" size="17" bugs="0"/>
      <ClassStats class="org.apache.commons.beanutils.converters.StringArrayConverter" sourceFile="StringArrayConverter.java" interface="false" size="38" bugs="0"/>
      <ClassStats class="org.apache.commons.beanutils.converters.StringConverter" sourceFile="StringConverter.java" interface="false" size="13" bugs="0"/>
      <ClassStats class="org.apache.commons.beanutils.converters.URLConverter" sourceFile="URLConverter.java" interface="false" size="13" bugs="0"/>
    </PackageStats>
    <PackageStats package="org.apache.commons.beanutils.expression" total_bugs="0" total_types="2" total_size="116">
      <ClassStats class="org.apache.commons.beanutils.expression.DefaultResolver" sourceFile="DefaultResolver.java" interface="false" size="107" bugs="0"/>
      <ClassStats class="org.apache.commons.beanutils.expression.Resolver" sourceFile="Resolver.java" interface="true" size="9" bugs="0"/>
    </PackageStats>
    <PackageStats package="org.apache.commons.beanutils.locale" total_bugs="6" total_types="11" total_size="652" priority_3="1" priority_2="5">
      <ClassStats class="org.apache.commons.beanutils.locale.BaseLocaleConverter" sourceFile="BaseLocaleConverter.java" interface="false" size="69" bugs="0"/>
      <ClassStats class="org.apache.commons.beanutils.locale.LocaleBeanUtils" sourceFile="LocaleBeanUtils.java" interface="false" size="64" bugs="0"/>
      <ClassStats class="org.apache.commons.beanutils.locale.LocaleBeanUtils$Descriptor" sourceFile="LocaleBeanUtils.java" interface="false" size="40" bugs="0"/>
      <ClassStats class="org.apache.commons.beanutils.locale.LocaleBeanUtilsBean" sourceFile="LocaleBeanUtilsBean.java" interface="false" size="218" bugs="3" priority_2="3"/>
      <ClassStats class="org.apache.commons.beanutils.locale.LocaleBeanUtilsBean$1" sourceFile="LocaleBeanUtilsBean.java" interface="false" size="6" bugs="0"/>
      <ClassStats class="org.apache.commons.beanutils.locale.LocaleBeanUtilsBean$Descriptor" sourceFile="LocaleBeanUtilsBean.java" interface="false" size="41" bugs="2" priority_2="2"/>
      <ClassStats class="org.apache.commons.beanutils.locale.LocaleConvertUtils" sourceFile="LocaleConvertUtils.java" interface="false" size="49" bugs="0"/>
      <ClassStats class="org.apache.commons.beanutils.locale.LocaleConvertUtilsBean" sourceFile="LocaleConvertUtilsBean.java" interface="false" size="119" bugs="1" priority_3="1"/>
      <ClassStats class="org.apache.commons.beanutils.locale.LocaleConvertUtilsBean$1" sourceFile="LocaleConvertUtilsBean.java" interface="false" size="1" bugs="0"/>
      <ClassStats class="org.apache.commons.beanutils.locale.LocaleConvertUtilsBean$DelegateFastHashMap" sourceFile="LocaleConvertUtilsBean.java" interface="false" size="43" bugs="0"/>
      <ClassStats class="org.apache.commons.beanutils.locale.LocaleConverter" sourceFile="LocaleConverter.java" interface="true" size="2" bugs="0"/>
    </PackageStats>
    <PackageStats package="org.apache.commons.beanutils.locale.converters" total_bugs="6" total_types="14" total_size="675" priority_3="2" priority_2="4">
      <ClassStats class="org.apache.commons.beanutils.locale.converters.BigDecimalLocaleConverter" sourceFile="BigDecimalLocaleConverter.java" interface="false" size="44" bugs="0"/>
      <ClassStats class="org.apache.commons.beanutils.locale.converters.BigIntegerLocaleConverter" sourceFile="BigIntegerLocaleConverter.java" interface="false" size="46" bugs="0"/>
      <ClassStats class="org.apache.commons.beanutils.locale.converters.ByteLocaleConverter" sourceFile="ByteLocaleConverter.java" interface="false" size="42" bugs="1" priority_2="1"/>
      <ClassStats class="org.apache.commons.beanutils.locale.converters.DateLocaleConverter" sourceFile="DateLocaleConverter.java" interface="false" size="103" bugs="0"/>
      <ClassStats class="org.apache.commons.beanutils.locale.converters.DecimalLocaleConverter" sourceFile="DecimalLocaleConverter.java" interface="false" size="49" bugs="0"/>
      <ClassStats class="org.apache.commons.beanutils.locale.converters.DoubleLocaleConverter" sourceFile="DoubleLocaleConverter.java" interface="false" size="42" bugs="1" priority_3="1"/>
      <ClassStats class="org.apache.commons.beanutils.locale.converters.FloatLocaleConverter" sourceFile="FloatLocaleConverter.java" interface="false" size="44" bugs="1" priority_3="1"/>
      <ClassStats class="org.apache.commons.beanutils.locale.converters.IntegerLocaleConverter" sourceFile="IntegerLocaleConverter.java" interface="false" size="42" bugs="1" priority_2="1"/>
      <ClassStats class="org.apache.commons.beanutils.locale.converters.LongLocaleConverter" sourceFile="LongLocaleConverter.java" interface="false" size="42" bugs="1" priority_2="1"/>
      <ClassStats class="org.apache.commons.beanutils.locale.converters.ShortLocaleConverter" sourceFile="ShortLocaleConverter.java" interface="false" size="45" bugs="1" priority_2="1"/>
      <ClassStats class="org.apache.commons.beanutils.locale.converters.SqlDateLocaleConverter" sourceFile="SqlDateLocaleConverter.java" interface="false" size="39" bugs="0"/>
      <ClassStats class="org.apache.commons.beanutils.locale.converters.SqlTimeLocaleConverter" sourceFile="SqlTimeLocaleConverter.java" interface="false" size="39" bugs="0"/>
      <ClassStats class="org.apache.commons.beanutils.locale.converters.SqlTimestampLocaleConverter" sourceFile="SqlTimestampLocaleConverter.java" interface="false" size="39" bugs="0"/>
      <ClassStats class="org.apache.commons.beanutils.locale.converters.StringLocaleConverter" sourceFile="StringLocaleConverter.java" interface="false" size="59" bugs="0"/>
    </PackageStats>
    <FindBugsProfile>
      <ClassProfile name="edu.umd.cs.findbugs.classfile.engine.ClassInfoAnalysisEngine" totalMilliseconds="336" invocations="1152" avgMicrosecondsPerInvocation="292" maxMicrosecondsPerInvocation="20694" standardDeviationMicrosecondsPerInvocation="859"/>
      <ClassProfile name="edu.umd.cs.findbugs.classfile.engine.bcel.IsNullValueDataflowFactory" totalMilliseconds="222" invocations="1288" avgMicrosecondsPerInvocation="172" maxMicrosecondsPerInvocation="11969" standardDeviationMicrosecondsPerInvocation="593"/>
      <ClassProfile name="edu.umd.cs.findbugs.ba.npe.NullDerefAndRedundantComparisonFinder" totalMilliseconds="192" invocations="1271" avgMicrosecondsPerInvocation="151" maxMicrosecondsPerInvocation="5931" standardDeviationMicrosecondsPerInvocation="343"/>
      <ClassProfile name="edu.umd.cs.findbugs.classfile.engine.bcel.TypeDataflowFactory" totalMilliseconds="190" invocations="1330" avgMicrosecondsPerInvocation="143" maxMicrosecondsPerInvocation="7159" standardDeviationMicrosecondsPerInvocation="382"/>
      <ClassProfile name="edu.umd.cs.findbugs.classfile.engine.bcel.UnconditionalValueDerefDataflowFactory" totalMilliseconds="174" invocations="1275" avgMicrosecondsPerInvocation="136" maxMicrosecondsPerInvocation="12440" standardDeviationMicrosecondsPerInvocation="466"/>
      <ClassProfile name="edu.umd.cs.findbugs.classfile.engine.bcel.ValueNumberDataflowFactory" totalMilliseconds="167" invocations="1334" avgMicrosecondsPerInvocation="125" maxMicrosecondsPerInvocation="6250" standardDeviationMicrosecondsPerInvocation="342"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.FindNoSideEffectMethods" totalMilliseconds="162" invocations="336" avgMicrosecondsPerInvocation="484" maxMicrosecondsPerInvocation="35069" standardDeviationMicrosecondsPerInvocation="2011"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.FieldItemSummary" totalMilliseconds="156" invocations="336" avgMicrosecondsPerInvocation="466" maxMicrosecondsPerInvocation="7651" standardDeviationMicrosecondsPerInvocation="984"/>
      <ClassProfile name="edu.umd.cs.findbugs.OpcodeStack$JumpInfoFactory" totalMilliseconds="132" invocations="1953" avgMicrosecondsPerInvocation="68" maxMicrosecondsPerInvocation="3489" standardDeviationMicrosecondsPerInvocation="163"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.FindRefComparison$SpecialTypeAnalysis" totalMilliseconds="113" invocations="1130" avgMicrosecondsPerInvocation="100" maxMicrosecondsPerInvocation="4155" standardDeviationMicrosecondsPerInvocation="248"/>
      <ClassProfile name="edu.umd.cs.findbugs.classfile.engine.bcel.CFGFactory" totalMilliseconds="111" invocations="1288" avgMicrosecondsPerInvocation="86" maxMicrosecondsPerInvocation="6183" standardDeviationMicrosecondsPerInvocation="221"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.ConstructorThrow" totalMilliseconds="72" invocations="137" avgMicrosecondsPerInvocation="532" maxMicrosecondsPerInvocation="13937" standardDeviationMicrosecondsPerInvocation="1415"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.NoteDirectlyRelevantTypeQualifiers" totalMilliseconds="71" invocations="336" avgMicrosecondsPerInvocation="211" maxMicrosecondsPerInvocation="9756" standardDeviationMicrosecondsPerInvocation="682"/>
      <ClassProfile name="edu.umd.cs.findbugs.classfile.engine.bcel.ConstantDataflowFactory" totalMilliseconds="59" invocations="1288" avgMicrosecondsPerInvocation="46" maxMicrosecondsPerInvocation="5947" standardDeviationMicrosecondsPerInvocation="206"/>
      <ClassProfile name="edu.umd.cs.findbugs.classfile.engine.bcel.MethodGenFactory" totalMilliseconds="52" invocations="1332" avgMicrosecondsPerInvocation="39" maxMicrosecondsPerInvocation="13985" standardDeviationMicrosecondsPerInvocation="385"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.CalledMethods" totalMilliseconds="43" invocations="336" avgMicrosecondsPerInvocation="129" maxMicrosecondsPerInvocation="3225" standardDeviationMicrosecondsPerInvocation="289"/>
      <ClassProfile name="edu.umd.cs.findbugs.classfile.engine.ClassDataAnalysisEngine" totalMilliseconds="43" invocations="1159" avgMicrosecondsPerInvocation="37" maxMicrosecondsPerInvocation="1812" standardDeviationMicrosecondsPerInvocation="82"/>
      <ClassProfile name="edu.umd.cs.findbugs.classfile.engine.bcel.JavaClassAnalysisEngine" totalMilliseconds="40" invocations="408" avgMicrosecondsPerInvocation="99" maxMicrosecondsPerInvocation="9633" standardDeviationMicrosecondsPerInvocation="488"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.BuildStringPassthruGraph" totalMilliseconds="39" invocations="336" avgMicrosecondsPerInvocation="117" maxMicrosecondsPerInvocation="6710" standardDeviationMicrosecondsPerInvocation="435"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.FunctionsThatMightBeMistakenForProcedures" totalMilliseconds="39" invocations="336" avgMicrosecondsPerInvocation="116" maxMicrosecondsPerInvocation="4752" standardDeviationMicrosecondsPerInvocation="404"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.LoadOfKnownNullValue" totalMilliseconds="38" invocations="137" avgMicrosecondsPerInvocation="282" maxMicrosecondsPerInvocation="4690" standardDeviationMicrosecondsPerInvocation="621"/>
      <ClassProfile name="edu.umd.cs.findbugs.ba.npe.TypeQualifierNullnessAnnotationDatabase" totalMilliseconds="36" invocations="31046" avgMicrosecondsPerInvocation="1" maxMicrosecondsPerInvocation="701" standardDeviationMicrosecondsPerInvocation="8"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.FindNullDeref$CheckCallSitesAndReturnInstructions" totalMilliseconds="35" invocations="1271" avgMicrosecondsPerInvocation="27" maxMicrosecondsPerInvocation="5826" standardDeviationMicrosecondsPerInvocation="230"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.FindOverridableMethodCall" totalMilliseconds="35" invocations="137" avgMicrosecondsPerInvocation="255" maxMicrosecondsPerInvocation="19044" standardDeviationMicrosecondsPerInvocation="1623"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.OverridingEqualsNotSymmetrical" totalMilliseconds="34" invocations="336" avgMicrosecondsPerInvocation="103" maxMicrosecondsPerInvocation="6364" standardDeviationMicrosecondsPerInvocation="440"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.UnreadFields" totalMilliseconds="33" invocations="137" avgMicrosecondsPerInvocation="248" maxMicrosecondsPerInvocation="2009" standardDeviationMicrosecondsPerInvocation="375"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.BuildObligationPolicyDatabase" totalMilliseconds="33" invocations="336" avgMicrosecondsPerInvocation="99" maxMicrosecondsPerInvocation="1443" standardDeviationMicrosecondsPerInvocation="160"/>
      <ClassProfile name="edu.umd.cs.findbugs.util.TopologicalSort" totalMilliseconds="32" invocations="1097" avgMicrosecondsPerInvocation="29" maxMicrosecondsPerInvocation="791" standardDeviationMicrosecondsPerInvocation="55"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.ExplicitSerialization" totalMilliseconds="29" invocations="336" avgMicrosecondsPerInvocation="88" maxMicrosecondsPerInvocation="6574" standardDeviationMicrosecondsPerInvocation="574"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.DumbMethods" totalMilliseconds="29" invocations="137" avgMicrosecondsPerInvocation="212" maxMicrosecondsPerInvocation="1913" standardDeviationMicrosecondsPerInvocation="335"/>
      <ClassProfile name="edu.umd.cs.findbugs.classfile.engine.bcel.LiveLocalStoreDataflowFactory" totalMilliseconds="29" invocations="1256" avgMicrosecondsPerInvocation="23" maxMicrosecondsPerInvocation="1514" standardDeviationMicrosecondsPerInvocation="66"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.FindDeadLocalStores" totalMilliseconds="28" invocations="137" avgMicrosecondsPerInvocation="204" maxMicrosecondsPerInvocation="4824" standardDeviationMicrosecondsPerInvocation="553"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.FindInconsistentSync2" totalMilliseconds="27" invocations="137" avgMicrosecondsPerInvocation="201" maxMicrosecondsPerInvocation="2590" standardDeviationMicrosecondsPerInvocation="322"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.ReflectiveClasses" totalMilliseconds="25" invocations="336" avgMicrosecondsPerInvocation="75" maxMicrosecondsPerInvocation="1379" standardDeviationMicrosecondsPerInvocation="166"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.FindReturnRef" totalMilliseconds="25" invocations="137" avgMicrosecondsPerInvocation="183" maxMicrosecondsPerInvocation="3127" standardDeviationMicrosecondsPerInvocation="384"/>
      <ClassProfile name="edu.umd.cs.findbugs.classfile.engine.bcel.ValueRangeAnalysisFactory" totalMilliseconds="24" invocations="1332" avgMicrosecondsPerInvocation="18" maxMicrosecondsPerInvocation="2252" standardDeviationMicrosecondsPerInvocation="84"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.FindUselessObjects" totalMilliseconds="24" invocations="137" avgMicrosecondsPerInvocation="175" maxMicrosecondsPerInvocation="3187" standardDeviationMicrosecondsPerInvocation="406"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.RuntimeExceptionCapture" totalMilliseconds="23" invocations="137" avgMicrosecondsPerInvocation="170" maxMicrosecondsPerInvocation="1601" standardDeviationMicrosecondsPerInvocation="279"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.FindRefComparison" totalMilliseconds="23" invocations="137" avgMicrosecondsPerInvocation="170" maxMicrosecondsPerInvocation="1762" standardDeviationMicrosecondsPerInvocation="271"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.MethodReturnCheck" totalMilliseconds="22" invocations="137" avgMicrosecondsPerInvocation="164" maxMicrosecondsPerInvocation="1724" standardDeviationMicrosecondsPerInvocation="302"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.CheckRelaxingNullnessAnnotation" totalMilliseconds="20" invocations="137" avgMicrosecondsPerInvocation="151" maxMicrosecondsPerInvocation="2949" standardDeviationMicrosecondsPerInvocation="341"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.FindHEmismatch" totalMilliseconds="20" invocations="137" avgMicrosecondsPerInvocation="149" maxMicrosecondsPerInvocation="2112" standardDeviationMicrosecondsPerInvocation="260"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.FindSelfComparison" totalMilliseconds="19" invocations="137" avgMicrosecondsPerInvocation="144" maxMicrosecondsPerInvocation="1956" standardDeviationMicrosecondsPerInvocation="254"/>
    </FindBugsProfile>
  </FindBugsSummary>
  <ClassFeatures></ClassFeatures>
  <History></History>
</BugCollection>
