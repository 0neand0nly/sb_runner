<?xml version="1.0" encoding="UTF-8"?>

<BugCollection version="4.8.1" sequence="0" timestamp="1699685190246" analysisTimestamp="1699687567184" release="">
  <Project projectName="">
    <Jar>clean_train50\chronicle-core-2.21ea9.jar</Jar>
  </Project>
  <BugInstance type="CT_CONSTRUCTOR_THROW" priority="2" rank="16" abbrev="CT" category="BAD_PRACTICE" instanceHash="58beca5a14b6fae0f22784ba2fb9ea85" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Be wary of letting constructors throw exceptions.</ShortMessage>
    <LongMessage>Exception thrown in class net.openhft.chronicle.core.CleaningRandomAccessFile at new net.openhft.chronicle.core.CleaningRandomAccessFile(File, String) will leave the constructor. The object under construction remains partially initialized and may be vulnerable to Finalizer attacks.</LongMessage>
    <Class classname="net.openhft.chronicle.core.CleaningRandomAccessFile" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.CleaningRandomAccessFile" start="36" end="47" sourcefile="CleaningRandomAccessFile.java" sourcepath="net/openhft/chronicle/core/CleaningRandomAccessFile.java">
        <Message>At CleaningRandomAccessFile.java:[lines 36-47]</Message>
      </SourceLine>
      <Message>In class net.openhft.chronicle.core.CleaningRandomAccessFile</Message>
    </Class>
    <Method classname="net.openhft.chronicle.core.CleaningRandomAccessFile" name="&lt;init&gt;" signature="(Ljava/io/File;Ljava/lang/String;)V" isStatic="false" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.CleaningRandomAccessFile" start="40" end="41" startBytecode="0" endBytecode="72" sourcefile="CleaningRandomAccessFile.java" sourcepath="net/openhft/chronicle/core/CleaningRandomAccessFile.java"/>
      <Message>In method new net.openhft.chronicle.core.CleaningRandomAccessFile(File, String)</Message>
    </Method>
    <SourceLine classname="net.openhft.chronicle.core.CleaningRandomAccessFile" primary="true" start="41" end="41" startBytecode="6" endBytecode="6" sourcefile="CleaningRandomAccessFile.java" sourcepath="net/openhft/chronicle/core/CleaningRandomAccessFile.java">
      <Message>At CleaningRandomAccessFile.java:[line 41]</Message>
    </SourceLine>
    <SourceLine classname="net.openhft.chronicle.core.CleaningRandomAccessFile" start="41" end="41" startBytecode="6" endBytecode="6" sourcefile="CleaningRandomAccessFile.java" sourcepath="net/openhft/chronicle/core/CleaningRandomAccessFile.java">
      <Message>At CleaningRandomAccessFile.java:[line 41]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="CT_CONSTRUCTOR_THROW" priority="2" rank="16" abbrev="CT" category="BAD_PRACTICE" instanceHash="753432d540fe1a697cee76e7f4f8fa0" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Be wary of letting constructors throw exceptions.</ShortMessage>
    <LongMessage>Exception thrown in class net.openhft.chronicle.core.CleaningRandomAccessFile at new net.openhft.chronicle.core.CleaningRandomAccessFile(String, String) will leave the constructor. The object under construction remains partially initialized and may be vulnerable to Finalizer attacks.</LongMessage>
    <Class classname="net.openhft.chronicle.core.CleaningRandomAccessFile" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.CleaningRandomAccessFile" start="36" end="47" sourcefile="CleaningRandomAccessFile.java" sourcepath="net/openhft/chronicle/core/CleaningRandomAccessFile.java">
        <Message>At CleaningRandomAccessFile.java:[lines 36-47]</Message>
      </SourceLine>
      <Message>In class net.openhft.chronicle.core.CleaningRandomAccessFile</Message>
    </Class>
    <Method classname="net.openhft.chronicle.core.CleaningRandomAccessFile" name="&lt;init&gt;" signature="(Ljava/lang/String;Ljava/lang/String;)V" isStatic="false" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.CleaningRandomAccessFile" start="36" end="37" startBytecode="0" endBytecode="72" sourcefile="CleaningRandomAccessFile.java" sourcepath="net/openhft/chronicle/core/CleaningRandomAccessFile.java"/>
      <Message>In method new net.openhft.chronicle.core.CleaningRandomAccessFile(String, String)</Message>
    </Method>
    <SourceLine classname="net.openhft.chronicle.core.CleaningRandomAccessFile" primary="true" start="37" end="37" startBytecode="13" endBytecode="13" sourcefile="CleaningRandomAccessFile.java" sourcepath="net/openhft/chronicle/core/CleaningRandomAccessFile.java">
      <Message>At CleaningRandomAccessFile.java:[line 37]</Message>
    </SourceLine>
    <SourceLine classname="net.openhft.chronicle.core.CleaningRandomAccessFile" start="37" end="37" startBytecode="13" endBytecode="13" sourcefile="CleaningRandomAccessFile.java" sourcepath="net/openhft/chronicle/core/CleaningRandomAccessFile.java">
      <Message>At CleaningRandomAccessFile.java:[line 37]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DM_GC" priority="1" rank="16" abbrev="Dm" category="PERFORMANCE" instanceHash="578c27b177f8dd060947b9c8d7179617" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Explicit garbage collection; extremely dubious except in benchmarking code</ShortMessage>
    <LongMessage>net.openhft.chronicle.core.FlakyTestRunner.run(boolean, FlakyTestRunner$RunnableThrows) forces garbage collection; extremely dubious except in benchmarking code</LongMessage>
    <Class classname="net.openhft.chronicle.core.FlakyTestRunner" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.FlakyTestRunner" start="5" end="36" sourcefile="FlakyTestRunner.java" sourcepath="net/openhft/chronicle/core/FlakyTestRunner.java">
        <Message>At FlakyTestRunner.java:[lines 5-36]</Message>
      </SourceLine>
      <Message>In class net.openhft.chronicle.core.FlakyTestRunner</Message>
    </Class>
    <Method classname="net.openhft.chronicle.core.FlakyTestRunner" name="run" signature="(ZLnet/openhft/chronicle/core/FlakyTestRunner$RunnableThrows;)V" isStatic="true" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.FlakyTestRunner" start="15" end="36" startBytecode="0" endBytecode="292" sourcefile="FlakyTestRunner.java" sourcepath="net/openhft/chronicle/core/FlakyTestRunner.java"/>
      <Message>In method net.openhft.chronicle.core.FlakyTestRunner.run(boolean, FlakyTestRunner$RunnableThrows)</Message>
    </Method>
    <SourceLine classname="net.openhft.chronicle.core.FlakyTestRunner" primary="true" start="29" end="29" startBytecode="53" endBytecode="53" sourcefile="FlakyTestRunner.java" sourcepath="net/openhft/chronicle/core/FlakyTestRunner.java">
      <Message>At FlakyTestRunner.java:[line 29]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="BC_UNCONFIRMED_CAST" priority="3" rank="20" abbrev="BC" category="STYLE" instanceHash="d758c16bb983547bce1a82a4860f64e" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Unchecked/unconfirmed cast</ShortMessage>
    <LongMessage>Unchecked/unconfirmed cast from java.nio.ByteBuffer to sun.nio.ch.DirectBuffer in net.openhft.chronicle.core.Jvm.address(ByteBuffer)</LongMessage>
    <Class classname="net.openhft.chronicle.core.Jvm" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.Jvm" start="62" end="1150" sourcefile="Jvm.java" sourcepath="net/openhft/chronicle/core/Jvm.java">
        <Message>At Jvm.java:[lines 62-1150]</Message>
      </SourceLine>
      <Message>In class net.openhft.chronicle.core.Jvm</Message>
    </Class>
    <Method classname="net.openhft.chronicle.core.Jvm" name="address" signature="(Ljava/nio/ByteBuffer;)J" isStatic="true" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.Jvm" start="1012" end="1012" startBytecode="0" endBytecode="3" sourcefile="Jvm.java" sourcepath="net/openhft/chronicle/core/Jvm.java"/>
      <Message>In method net.openhft.chronicle.core.Jvm.address(ByteBuffer)</Message>
    </Method>
    <Type descriptor="Ljava/nio/ByteBuffer;" role="TYPE_FOUND">
      <SourceLine classname="java.nio.ByteBuffer" start="267" end="2261" sourcefile="ByteBuffer.java" sourcepath="java/nio/ByteBuffer.java">
        <Message>At ByteBuffer.java:[lines 267-2261]</Message>
      </SourceLine>
      <Message>Actual type java.nio.ByteBuffer</Message>
    </Type>
    <Type descriptor="Lsun/nio/ch/DirectBuffer;" role="TYPE_EXPECTED">
      <SourceLine classname="sun.nio.ch.DirectBuffer" sourcefile="DirectBuffer.java" sourcepath="sun/nio/ch/DirectBuffer.java">
        <Message>In DirectBuffer.java</Message>
      </SourceLine>
      <Message>Expected sun.nio.ch.DirectBuffer</Message>
    </Type>
    <LocalVariable name="bb" register="0" pc="0" role="LOCAL_VARIABLE_VALUE_OF">
      <Message>Value loaded from bb</Message>
    </LocalVariable>
    <SourceLine classname="net.openhft.chronicle.core.Jvm" primary="true" start="1012" end="1012" startBytecode="1" endBytecode="1" sourcefile="Jvm.java" sourcepath="net/openhft/chronicle/core/Jvm.java">
      <Message>At Jvm.java:[line 1012]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DE_MIGHT_IGNORE" priority="3" rank="19" abbrev="DE" category="BAD_PRACTICE" instanceHash="48d200575680c13848016cfb367ff523" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="391">
    <ShortMessage>Method might ignore exception</ShortMessage>
    <LongMessage>net.openhft.chronicle.core.Jvm.&lt;static initializer for Jvm&gt;() might ignore java.lang.Exception</LongMessage>
    <Class classname="net.openhft.chronicle.core.Jvm" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.Jvm" start="62" end="1150" sourcefile="Jvm.java" sourcepath="net/openhft/chronicle/core/Jvm.java">
        <Message>At Jvm.java:[lines 62-1150]</Message>
      </SourceLine>
      <Message>In class net.openhft.chronicle.core.Jvm</Message>
    </Class>
    <Method classname="net.openhft.chronicle.core.Jvm" name="&lt;clinit&gt;" signature="()V" isStatic="true" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.Jvm" start="62" end="161" startBytecode="0" endBytecode="1135" sourcefile="Jvm.java" sourcepath="net/openhft/chronicle/core/Jvm.java"/>
      <Message>In method net.openhft.chronicle.core.Jvm.&lt;static initializer for Jvm&gt;()</Message>
    </Method>
    <Class classname="java.lang.Exception" role="CLASS_EXCEPTION">
      <SourceLine classname="java.lang.Exception" start="55" end="124" sourcefile="Exception.java" sourcepath="java/lang/Exception.java">
        <Message>At Exception.java:[lines 55-124]</Message>
      </SourceLine>
      <Message>Exception class java.lang.Exception</Message>
    </Class>
    <SourceLine classname="net.openhft.chronicle.core.Jvm" primary="true" start="146" end="146" startBytecode="538" endBytecode="538" sourcefile="Jvm.java" sourcepath="net/openhft/chronicle/core/Jvm.java">
      <Message>At Jvm.java:[line 146]</Message>
    </SourceLine>
    <SourceLine classname="net.openhft.chronicle.core.Jvm" primary="true" start="146" end="146" startBytecode="538" endBytecode="538" sourcefile="Jvm.java" sourcepath="net/openhft/chronicle/core/Jvm.java">
      <Message>At Jvm.java:[line 146]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DMI_RANDOM_USED_ONLY_ONCE" priority="1" rank="14" abbrev="DMI" category="BAD_PRACTICE" instanceHash="3824f5b0554226ce56fa9d52a2acfceb" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="440">
    <ShortMessage>Random object created and used only once</ShortMessage>
    <LongMessage>Random object created and used only once in net.openhft.chronicle.core.Jvm.getProcessId0()</LongMessage>
    <Class classname="net.openhft.chronicle.core.Jvm" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.Jvm" start="62" end="1150" sourcefile="Jvm.java" sourcepath="net/openhft/chronicle/core/Jvm.java">
        <Message>At Jvm.java:[lines 62-1150]</Message>
      </SourceLine>
      <Message>In class net.openhft.chronicle.core.Jvm</Message>
    </Class>
    <Method classname="net.openhft.chronicle.core.Jvm" name="getProcessId0" signature="()I" isStatic="true" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.Jvm" start="278" end="296" startBytecode="0" endBytecode="250" sourcefile="Jvm.java" sourcepath="net/openhft/chronicle/core/Jvm.java"/>
      <Message>In method net.openhft.chronicle.core.Jvm.getProcessId0()</Message>
    </Method>
    <Method classname="java.util.Random" name="nextInt" signature="(I)I" isStatic="false" role="METHOD_CALLED" classAnnotationNames="jdk.internal.util.random.RandomSupport$RandomGeneratorProperties">
      <SourceLine classname="java.util.Random" start="321" end="333" startBytecode="0" endBytecode="212" sourcefile="Random.java" sourcepath="java/util/Random.java"/>
      <Message>Called method java.util.Random.nextInt(int)</Message>
    </Method>
    <SourceLine classname="net.openhft.chronicle.core.Jvm" primary="true" start="292" end="292" startBytecode="65" endBytecode="65" sourcefile="Jvm.java" sourcepath="net/openhft/chronicle/core/Jvm.java">
      <Message>At Jvm.java:[line 292]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DM_DEFAULT_ENCODING" priority="1" rank="19" abbrev="Dm" category="I18N" instanceHash="371fc5a4370360773398b1450aadd6a2" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Reliance on default encoding</ShortMessage>
    <LongMessage>Found reliance on default encoding in net.openhft.chronicle.core.Jvm.isProcessAlive0(long, String): new java.io.InputStreamReader(InputStream)</LongMessage>
    <Class classname="net.openhft.chronicle.core.Jvm" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.Jvm" start="62" end="1150" sourcefile="Jvm.java" sourcepath="net/openhft/chronicle/core/Jvm.java">
        <Message>At Jvm.java:[lines 62-1150]</Message>
      </SourceLine>
      <Message>In class net.openhft.chronicle.core.Jvm</Message>
    </Class>
    <Method classname="net.openhft.chronicle.core.Jvm" name="isProcessAlive0" signature="(JLjava/lang/String;)Z" isStatic="true" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.Jvm" start="1128" end="1141" startBytecode="0" endBytecode="282" sourcefile="Jvm.java" sourcepath="net/openhft/chronicle/core/Jvm.java"/>
      <Message>In method net.openhft.chronicle.core.Jvm.isProcessAlive0(long, String)</Message>
    </Method>
    <Method classname="java.io.InputStreamReader" name="&lt;init&gt;" signature="(Ljava/io/InputStream;)V" isStatic="false" role="METHOD_CALLED">
      <SourceLine classname="java.io.InputStreamReader" start="76" end="79" startBytecode="0" endBytecode="85" sourcefile="InputStreamReader.java" sourcepath="java/io/InputStreamReader.java"/>
      <Message>Called method new java.io.InputStreamReader(InputStream)</Message>
    </Method>
    <SourceLine classname="net.openhft.chronicle.core.Jvm" primary="true" start="1129" end="1129" startBytecode="14" endBytecode="14" sourcefile="Jvm.java" sourcepath="net/openhft/chronicle/core/Jvm.java">
      <Message>At Jvm.java:[line 1129]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="OS_OPEN_STREAM" priority="2" rank="16" abbrev="OS" category="BAD_PRACTICE" instanceHash="4ce17895c7e85c7a2118777993b6692" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Method may fail to close stream</ShortMessage>
    <LongMessage>net.openhft.chronicle.core.Jvm.isProcessAlive0(long, String) may fail to close stream</LongMessage>
    <Class classname="net.openhft.chronicle.core.Jvm" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.Jvm" start="62" end="1150" sourcefile="Jvm.java" sourcepath="net/openhft/chronicle/core/Jvm.java">
        <Message>At Jvm.java:[lines 62-1150]</Message>
      </SourceLine>
      <Message>In class net.openhft.chronicle.core.Jvm</Message>
    </Class>
    <Method classname="net.openhft.chronicle.core.Jvm" name="isProcessAlive0" signature="(JLjava/lang/String;)Z" isStatic="true" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.Jvm" start="1128" end="1141" startBytecode="0" endBytecode="48" sourcefile="Jvm.java" sourcepath="net/openhft/chronicle/core/Jvm.java"/>
      <Message>In method net.openhft.chronicle.core.Jvm.isProcessAlive0(long, String)</Message>
    </Method>
    <Type descriptor="Ljava/io/Reader;" role="TYPE_CLOSEIT">
      <SourceLine classname="java.io.Reader" start="82" end="417" sourcefile="Reader.java" sourcepath="java/io/Reader.java">
        <Message>At Reader.java:[lines 82-417]</Message>
      </SourceLine>
      <Message>Need to close java.io.Reader </Message>
    </Type>
    <SourceLine classname="net.openhft.chronicle.core.Jvm" primary="true" start="1131" end="1131" startBytecode="18" endBytecode="18" sourcefile="Jvm.java" sourcepath="net/openhft/chronicle/core/Jvm.java">
      <Message>At Jvm.java:[line 1131]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE" priority="3" rank="20" abbrev="RCN" category="STYLE" instanceHash="8506da6dc3acf2e04662d3bd4bdf07b" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="476">
    <ShortMessage>Redundant nullcheck of value known to be non-null</ShortMessage>
    <LongMessage>Redundant nullcheck of method, which is known to be non-null in net.openhft.chronicle.core.Jvm.getMajorVersion0()</LongMessage>
    <Class classname="net.openhft.chronicle.core.Jvm" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.Jvm" start="62" end="1150" sourcefile="Jvm.java" sourcepath="net/openhft/chronicle/core/Jvm.java">
        <Message>At Jvm.java:[lines 62-1150]</Message>
      </SourceLine>
      <Message>In class net.openhft.chronicle.core.Jvm</Message>
    </Class>
    <Method classname="net.openhft.chronicle.core.Jvm" name="getMajorVersion0" signature="()I" isStatic="true" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.Jvm" start="770" end="779" startBytecode="0" endBytecode="235" sourcefile="Jvm.java" sourcepath="net/openhft/chronicle/core/Jvm.java"/>
      <Message>In method net.openhft.chronicle.core.Jvm.getMajorVersion0()</Message>
    </Method>
    <LocalVariable name="method" register="0" pc="12" role="LOCAL_VARIABLE_VALUE_OF">
      <Message>Value loaded from method</Message>
    </LocalVariable>
    <Method classname="java.lang.Class" name="getDeclaredMethod" signature="(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;" isStatic="false" role="METHOD_RETURN_VALUE_OF">
      <SourceLine classname="java.lang.Class" start="2667" end="2677" startBytecode="0" endBytecode="220" sourcefile="Class.java" sourcepath="java/lang/Class.java"/>
      <Message>Return value of Class.getDeclaredMethod(String, Class[]) of type java.lang.reflect.Method</Message>
    </Method>
    <SourceLine classname="net.openhft.chronicle.core.Jvm" primary="true" start="771" end="771" startBytecode="13" endBytecode="13" sourcefile="Jvm.java" sourcepath="net/openhft/chronicle/core/Jvm.java" role="SOURCE_REDUNDANT_NULL_CHECK">
      <Message>Redundant null check at Jvm.java:[line 771]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="REC_CATCH_EXCEPTION" priority="2" rank="17" abbrev="REC" category="STYLE" instanceHash="df40d2dbcfc686cb6daf8e92fb9c10ac" instanceOccurrenceNum="0" instanceOccurrenceMax="1" cweid="396">
    <ShortMessage>Exception is caught when Exception is not thrown</ShortMessage>
    <LongMessage>Exception is caught when Exception is not thrown in net.openhft.chronicle.core.Jvm.&lt;static initializer for Jvm&gt;()</LongMessage>
    <Class classname="net.openhft.chronicle.core.Jvm" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.Jvm" start="62" end="1150" sourcefile="Jvm.java" sourcepath="net/openhft/chronicle/core/Jvm.java">
        <Message>At Jvm.java:[lines 62-1150]</Message>
      </SourceLine>
      <Message>In class net.openhft.chronicle.core.Jvm</Message>
    </Class>
    <Method classname="net.openhft.chronicle.core.Jvm" name="&lt;clinit&gt;" signature="()V" isStatic="true" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.Jvm" start="62" end="161" startBytecode="0" endBytecode="1135" sourcefile="Jvm.java" sourcepath="net/openhft/chronicle/core/Jvm.java"/>
      <Message>In method net.openhft.chronicle.core.Jvm.&lt;static initializer for Jvm&gt;()</Message>
    </Method>
    <SourceLine classname="net.openhft.chronicle.core.Jvm" primary="true" start="134" end="134" startBytecode="457" endBytecode="457" sourcefile="Jvm.java" sourcepath="net/openhft/chronicle/core/Jvm.java">
      <Message>At Jvm.java:[line 134]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="REC_CATCH_EXCEPTION" priority="2" rank="17" abbrev="REC" category="STYLE" instanceHash="b01d7ada19ee9b99225ebe2845572f16" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="396">
    <ShortMessage>Exception is caught when Exception is not thrown</ShortMessage>
    <LongMessage>Exception is caught when Exception is not thrown in net.openhft.chronicle.core.Jvm.maxDirectMemory0()</LongMessage>
    <Class classname="net.openhft.chronicle.core.Jvm" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.Jvm" start="62" end="1150" sourcefile="Jvm.java" sourcepath="net/openhft/chronicle/core/Jvm.java">
        <Message>At Jvm.java:[lines 62-1150]</Message>
      </SourceLine>
      <Message>In class net.openhft.chronicle.core.Jvm</Message>
    </Class>
    <Method classname="net.openhft.chronicle.core.Jvm" name="maxDirectMemory0" signature="()J" isStatic="true" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.Jvm" start="753" end="765" startBytecode="0" endBytecode="216" sourcefile="Jvm.java" sourcepath="net/openhft/chronicle/core/Jvm.java"/>
      <Message>In method net.openhft.chronicle.core.Jvm.maxDirectMemory0()</Message>
    </Method>
    <SourceLine classname="net.openhft.chronicle.core.Jvm" primary="true" start="761" end="761" startBytecode="34" endBytecode="34" sourcefile="Jvm.java" sourcepath="net/openhft/chronicle/core/Jvm.java">
      <Message>At Jvm.java:[line 761]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="REC_CATCH_EXCEPTION" priority="3" rank="20" abbrev="REC" category="STYLE" instanceHash="df40d2dbcfc686cb6daf8e92fb9c10ac" instanceOccurrenceNum="1" instanceOccurrenceMax="1" cweid="396">
    <ShortMessage>Exception is caught when Exception is not thrown</ShortMessage>
    <LongMessage>Exception is caught when Exception is not thrown in net.openhft.chronicle.core.Jvm.&lt;static initializer for Jvm&gt;()</LongMessage>
    <Class classname="net.openhft.chronicle.core.Jvm" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.Jvm" start="62" end="1150" sourcefile="Jvm.java" sourcepath="net/openhft/chronicle/core/Jvm.java">
        <Message>At Jvm.java:[lines 62-1150]</Message>
      </SourceLine>
      <Message>In class net.openhft.chronicle.core.Jvm</Message>
    </Class>
    <Method classname="net.openhft.chronicle.core.Jvm" name="&lt;clinit&gt;" signature="()V" isStatic="true" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.Jvm" start="62" end="161" startBytecode="0" endBytecode="1135" sourcefile="Jvm.java" sourcepath="net/openhft/chronicle/core/Jvm.java"/>
      <Message>In method net.openhft.chronicle.core.Jvm.&lt;static initializer for Jvm&gt;()</Message>
    </Method>
    <SourceLine classname="net.openhft.chronicle.core.Jvm" start="62" end="161" startBytecode="0" endBytecode="1135" sourcefile="Jvm.java" sourcepath="net/openhft/chronicle/core/Jvm.java" synthetic="true">
      <Message>At Jvm.java:[lines 62-161]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="REC_CATCH_EXCEPTION" priority="3" rank="20" abbrev="REC" category="STYLE" instanceHash="d7979a80744f9cf709933a6d9bc53d3e" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="396">
    <ShortMessage>Exception is caught when Exception is not thrown</ShortMessage>
    <LongMessage>Exception is caught when Exception is not thrown in net.openhft.chronicle.core.Jvm.isProcessAlive0(long, String)</LongMessage>
    <Class classname="net.openhft.chronicle.core.Jvm" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.Jvm" start="62" end="1150" sourcefile="Jvm.java" sourcepath="net/openhft/chronicle/core/Jvm.java">
        <Message>At Jvm.java:[lines 62-1150]</Message>
      </SourceLine>
      <Message>In class net.openhft.chronicle.core.Jvm</Message>
    </Class>
    <Method classname="net.openhft.chronicle.core.Jvm" name="isProcessAlive0" signature="(JLjava/lang/String;)Z" isStatic="true" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.Jvm" start="1128" end="1141" startBytecode="0" endBytecode="282" sourcefile="Jvm.java" sourcepath="net/openhft/chronicle/core/Jvm.java"/>
      <Message>In method net.openhft.chronicle.core.Jvm.isProcessAlive0(long, String)</Message>
    </Method>
    <SourceLine classname="net.openhft.chronicle.core.Jvm" primary="true" start="1140" end="1140" startBytecode="102" endBytecode="102" sourcefile="Jvm.java" sourcepath="net/openhft/chronicle/core/Jvm.java">
      <Message>At Jvm.java:[line 1140]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="REC_CATCH_EXCEPTION" priority="3" rank="20" abbrev="REC" category="STYLE" instanceHash="291fa29acc92d9ee0f4e6adc82956b3b" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="396">
    <ShortMessage>Exception is caught when Exception is not thrown</ShortMessage>
    <LongMessage>Exception is caught when Exception is not thrown in net.openhft.chronicle.core.Jvm.loadSystemProperties(String, boolean)</LongMessage>
    <Class classname="net.openhft.chronicle.core.Jvm" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.Jvm" start="62" end="1150" sourcefile="Jvm.java" sourcepath="net/openhft/chronicle/core/Jvm.java">
        <Message>At Jvm.java:[lines 62-1150]</Message>
      </SourceLine>
      <Message>In class net.openhft.chronicle.core.Jvm</Message>
    </Class>
    <Method classname="net.openhft.chronicle.core.Jvm" name="loadSystemProperties" signature="(Ljava/lang/String;Z)V" isStatic="true" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.Jvm" start="205" end="227" startBytecode="0" endBytecode="628" sourcefile="Jvm.java" sourcepath="net/openhft/chronicle/core/Jvm.java"/>
      <Message>In method net.openhft.chronicle.core.Jvm.loadSystemProperties(String, boolean)</Message>
    </Method>
    <SourceLine classname="net.openhft.chronicle.core.Jvm" primary="true" start="224" end="224" startBytecode="259" endBytecode="259" sourcefile="Jvm.java" sourcepath="net/openhft/chronicle/core/Jvm.java">
      <Message>At Jvm.java:[line 224]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="UC_USELESS_VOID_METHOD" priority="2" rank="17" abbrev="UC" category="STYLE" instanceHash="3914570657ec50f6cc0514f0b235ea1b" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Useless non-empty void method</ShortMessage>
    <LongMessage>Method net.openhft.chronicle.core.Jvm$Safepoint.force() seems to be useless</LongMessage>
    <Class classname="net.openhft.chronicle.core.Jvm$Safepoint" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.Jvm$Safepoint" start="1176" end="1183" sourcefile="Jvm.java" sourcepath="net/openhft/chronicle/core/Jvm.java">
        <Message>At Jvm.java:[lines 1176-1183]</Message>
      </SourceLine>
      <Message>In class net.openhft.chronicle.core.Jvm$Safepoint</Message>
    </Class>
    <Method classname="net.openhft.chronicle.core.Jvm$Safepoint" name="force" signature="()V" isStatic="true" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.Jvm$Safepoint" start="1182" end="1183" startBytecode="0" endBytecode="76" sourcefile="Jvm.java" sourcepath="net/openhft/chronicle/core/Jvm.java"/>
      <Message>In method net.openhft.chronicle.core.Jvm$Safepoint.force()</Message>
    </Method>
    <SourceLine classname="net.openhft.chronicle.core.Jvm$Safepoint" primary="true" start="1183" end="1183" startBytecode="15" endBytecode="15" sourcefile="Jvm.java" sourcepath="net/openhft/chronicle/core/Jvm.java">
      <Message>At Jvm.java:[line 1183]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DM_DEFAULT_ENCODING" priority="1" rank="19" abbrev="Dm" category="I18N" instanceHash="8477c419a96b2e051481a94872557c54" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Reliance on default encoding</ShortMessage>
    <LongMessage>Found reliance on default encoding in net.openhft.chronicle.core.LicenceCheck.check(String, Class): new String(byte[])</LongMessage>
    <Class classname="net.openhft.chronicle.core.LicenceCheck" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.LicenceCheck" start="36" end="72" sourcefile="LicenceCheck.java" sourcepath="net/openhft/chronicle/core/LicenceCheck.java">
        <Message>At LicenceCheck.java:[lines 36-72]</Message>
      </SourceLine>
      <Message>In class net.openhft.chronicle.core.LicenceCheck</Message>
    </Class>
    <Method classname="net.openhft.chronicle.core.LicenceCheck" name="check" signature="(Ljava/lang/String;Ljava/lang/Class;)V" isStatic="true" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.LicenceCheck" start="36" end="72" startBytecode="0" endBytecode="821" sourcefile="LicenceCheck.java" sourcepath="net/openhft/chronicle/core/LicenceCheck.java"/>
      <Message>In method net.openhft.chronicle.core.LicenceCheck.check(String, Class)</Message>
    </Method>
    <Method classname="java.lang.String" name="&lt;init&gt;" signature="([B)V" isStatic="false" role="METHOD_CALLED">
      <SourceLine classname="java.lang.String" start="1435" end="1436" startBytecode="0" endBytecode="64" sourcefile="String.java" sourcepath="java/lang/String.java"/>
      <Message>Called method new String(byte[])</Message>
    </Method>
    <SourceLine classname="net.openhft.chronicle.core.LicenceCheck" primary="true" start="43" end="43" startBytecode="68" endBytecode="68" sourcefile="LicenceCheck.java" sourcepath="net/openhft/chronicle/core/LicenceCheck.java">
      <Message>At LicenceCheck.java:[line 43]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="ICAST_INTEGER_MULTIPLY_CAST_TO_LONG" priority="1" rank="15" abbrev="ICAST" category="STYLE" instanceHash="23ee06bad6b050d1229e4ac0912cf7d9" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="192">
    <ShortMessage>Result of integer multiplication cast to long</ShortMessage>
    <LongMessage>Result of integer multiplication cast to long in net.openhft.chronicle.core.Maths.hash64(long)</LongMessage>
    <Class classname="net.openhft.chronicle.core.Maths" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.Maths" start="26" end="474" sourcefile="Maths.java" sourcepath="net/openhft/chronicle/core/Maths.java">
        <Message>At Maths.java:[lines 26-474]</Message>
      </SourceLine>
      <Message>In class net.openhft.chronicle.core.Maths</Message>
    </Class>
    <Method classname="net.openhft.chronicle.core.Maths" name="hash64" signature="(J)J" isStatic="true" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.Maths" start="400" end="404" startBytecode="0" endBytecode="92" sourcefile="Maths.java" sourcepath="net/openhft/chronicle/core/Maths.java"/>
      <Message>In method net.openhft.chronicle.core.Maths.hash64(long)</Message>
    </Method>
    <SourceLine classname="net.openhft.chronicle.core.Maths" primary="true" start="402" end="402" startBytecode="15" endBytecode="15" sourcefile="Maths.java" sourcepath="net/openhft/chronicle/core/Maths.java">
      <Message>At Maths.java:[line 402]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DLS_DEAD_LOCAL_STORE" priority="2" rank="17" abbrev="DLS" category="STYLE" instanceHash="81067b3c0f0a092832c30830ef912489" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="563">
    <ShortMessage>Dead store to local variable</ShortMessage>
    <LongMessage>Dead store to n in net.openhft.chronicle.core.OS.unmap(long, long)</LongMessage>
    <Class classname="net.openhft.chronicle.core.OS" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.OS" start="45" end="488" sourcefile="OS.java" sourcepath="net/openhft/chronicle/core/OS.java">
        <Message>At OS.java:[lines 45-488]</Message>
      </SourceLine>
      <Message>In class net.openhft.chronicle.core.OS</Message>
    </Class>
    <Method classname="net.openhft.chronicle.core.OS" name="unmap" signature="(JJ)V" isStatic="true" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.OS" start="396" end="402" startBytecode="0" endBytecode="18" sourcefile="OS.java" sourcepath="net/openhft/chronicle/core/OS.java"/>
      <Message>In method net.openhft.chronicle.core.OS.unmap(long, long)</Message>
    </Method>
    <LocalVariable name="n" register="6" pc="17" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named n</Message>
    </LocalVariable>
    <SourceLine classname="net.openhft.chronicle.core.OS" primary="true" start="397" end="397" startBytecode="15" endBytecode="15" sourcefile="OS.java" sourcepath="net/openhft/chronicle/core/OS.java">
      <Message>At OS.java:[line 397]</Message>
    </SourceLine>
    <Property name="edu.umd.cs.findbugs.detect.DeadLocalStoreProperty.BASE_VALUE" value="true"/>
    <Property name="edu.umd.cs.findbugs.detect.DeadLocalStoreProperty.LOCAL_NAME" value="n"/>
    <Property name="edu.umd.cs.findbugs.detect.DeadLocalStoreProperty.METHOD_RESULT" value="true"/>
    <Property name="edu.umd.cs.findbugs.detect.DeadLocalStoreProperty.NO_LOADS" value="true"/>
  </BugInstance>
  <BugInstance type="DM_CONVERT_CASE" priority="3" rank="20" abbrev="Dm" category="I18N" instanceHash="bed10042246263eca4521b1703d1a821" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Consider using Locale parameterized version of invoked method</ShortMessage>
    <LongMessage>Use of non-localized String.toUpperCase() or String.toLowerCase() in net.openhft.chronicle.core.OS.&lt;static initializer for OS&gt;()</LongMessage>
    <Class classname="net.openhft.chronicle.core.OS" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.OS" start="45" end="488" sourcefile="OS.java" sourcepath="net/openhft/chronicle/core/OS.java">
        <Message>At OS.java:[lines 45-488]</Message>
      </SourceLine>
      <Message>In class net.openhft.chronicle.core.OS</Message>
    </Class>
    <Method classname="net.openhft.chronicle.core.OS" name="&lt;clinit&gt;" signature="()V" isStatic="true" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.OS" start="45" end="110" startBytecode="0" endBytecode="732" sourcefile="OS.java" sourcepath="net/openhft/chronicle/core/OS.java"/>
      <Message>In method net.openhft.chronicle.core.OS.&lt;static initializer for OS&gt;()</Message>
    </Method>
    <SourceLine classname="net.openhft.chronicle.core.OS" primary="true" start="71" end="71" startBytecode="109" endBytecode="109" sourcefile="OS.java" sourcepath="net/openhft/chronicle/core/OS.java">
      <Message>At OS.java:[line 71]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DM_DEFAULT_ENCODING" priority="1" rank="19" abbrev="Dm" category="I18N" instanceHash="816b90f0bacdd77f1160570090d131ac" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Reliance on default encoding</ShortMessage>
    <LongMessage>Found reliance on default encoding in net.openhft.chronicle.core.OS.getPidMax(): new java.util.Scanner(File)</LongMessage>
    <Class classname="net.openhft.chronicle.core.OS" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.OS" start="45" end="488" sourcefile="OS.java" sourcepath="net/openhft/chronicle/core/OS.java">
        <Message>At OS.java:[lines 45-488]</Message>
      </SourceLine>
      <Message>In class net.openhft.chronicle.core.OS</Message>
    </Class>
    <Method classname="net.openhft.chronicle.core.OS" name="getPidMax" signature="()J" isStatic="true" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.OS" start="314" end="330" startBytecode="0" endBytecode="503" sourcefile="OS.java" sourcepath="net/openhft/chronicle/core/OS.java"/>
      <Message>In method net.openhft.chronicle.core.OS.getPidMax()</Message>
    </Method>
    <Method classname="java.util.Scanner" name="&lt;init&gt;" signature="(Ljava/io/File;)V" isStatic="false" role="METHOD_CALLED">
      <SourceLine classname="java.util.Scanner" start="639" end="640" startBytecode="0" endBytecode="71" sourcefile="Scanner.java" sourcepath="java/util/Scanner.java"/>
      <Message>Called method new java.util.Scanner(File)</Message>
    </Method>
    <SourceLine classname="net.openhft.chronicle.core.OS" primary="true" start="318" end="318" startBytecode="28" endBytecode="28" sourcefile="OS.java" sourcepath="net/openhft/chronicle/core/OS.java">
      <Message>At OS.java:[line 318]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DM_DEFAULT_ENCODING" priority="1" rank="19" abbrev="Dm" category="I18N" instanceHash="323e28d4a1fe598f7839fd6302de93ca" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Reliance on default encoding</ShortMessage>
    <LongMessage>Found reliance on default encoding in net.openhft.chronicle.core.OS.run(String[]): new java.io.InputStreamReader(InputStream)</LongMessage>
    <Class classname="net.openhft.chronicle.core.OS" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.OS" start="45" end="488" sourcefile="OS.java" sourcepath="net/openhft/chronicle/core/OS.java">
        <Message>At OS.java:[lines 45-488]</Message>
      </SourceLine>
      <Message>In class net.openhft.chronicle.core.OS</Message>
    </Class>
    <Method classname="net.openhft.chronicle.core.OS" name="run" signature="([Ljava/lang/String;)Ljava/lang/String;" isStatic="true" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.OS" start="452" end="462" startBytecode="0" endBytecode="528" sourcefile="OS.java" sourcepath="net/openhft/chronicle/core/OS.java"/>
      <Message>In method net.openhft.chronicle.core.OS.run(String[])</Message>
    </Method>
    <Method classname="java.io.InputStreamReader" name="&lt;init&gt;" signature="(Ljava/io/InputStream;)V" isStatic="false" role="METHOD_CALLED">
      <SourceLine classname="java.io.InputStreamReader" start="76" end="79" startBytecode="0" endBytecode="85" sourcefile="InputStreamReader.java" sourcepath="java/io/InputStreamReader.java"/>
      <Message>Called method new java.io.InputStreamReader(InputStream)</Message>
    </Method>
    <SourceLine classname="net.openhft.chronicle.core.OS" primary="true" start="457" end="457" startBytecode="43" endBytecode="43" sourcefile="OS.java" sourcepath="net/openhft/chronicle/core/OS.java">
      <Message>At OS.java:[line 457]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DM_GC" priority="1" rank="16" abbrev="Dm" category="PERFORMANCE" instanceHash="54c6bd940329216c394112b75b16e873" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Explicit garbage collection; extremely dubious except in benchmarking code</ShortMessage>
    <LongMessage>net.openhft.chronicle.core.OS.lambda$map0$2(MethodHandle, FileChannel, int, long, long, OutOfMemoryError) forces garbage collection; extremely dubious except in benchmarking code</LongMessage>
    <Class classname="net.openhft.chronicle.core.OS" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.OS" start="45" end="488" sourcefile="OS.java" sourcepath="net/openhft/chronicle/core/OS.java">
        <Message>At OS.java:[lines 45-488]</Message>
      </SourceLine>
      <Message>In class net.openhft.chronicle.core.OS</Message>
    </Class>
    <Method classname="net.openhft.chronicle.core.OS" name="lambda$map0$2" signature="(Ljava/lang/invoke/MethodHandle;Ljava/nio/channels/FileChannel;IJJLjava/lang/OutOfMemoryError;)Ljava/lang/Long;" isStatic="true" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.OS" start="376" end="379" startBytecode="0" endBytecode="126" sourcefile="OS.java" sourcepath="net/openhft/chronicle/core/OS.java"/>
      <Message>In method net.openhft.chronicle.core.OS.lambda$map0$2(MethodHandle, FileChannel, int, long, long, OutOfMemoryError)</Message>
    </Method>
    <SourceLine classname="net.openhft.chronicle.core.OS" primary="true" start="376" end="376" startBytecode="0" endBytecode="0" sourcefile="OS.java" sourcepath="net/openhft/chronicle/core/OS.java">
      <Message>At OS.java:[line 376]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="AA_ASSERTION_OF_ARGUMENTS" priority="3" rank="19" abbrev="AA" category="BAD_PRACTICE" instanceHash="31f76f287fcc2b7403defceedc2efc2c" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Assertion is used to validate an argument of a public method</ShortMessage>
    <LongMessage>Assertion validates method argument at new net.openhft.chronicle.core.OS$Unmapper(long, long). If assertions are disabled, there won&apos;t be any argument validation.</LongMessage>
    <Class classname="net.openhft.chronicle.core.OS$Unmapper" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.OS$Unmapper" start="492" end="516" sourcefile="OS.java" sourcepath="net/openhft/chronicle/core/OS.java">
        <Message>At OS.java:[lines 492-516]</Message>
      </SourceLine>
      <Message>In class net.openhft.chronicle.core.OS$Unmapper</Message>
    </Class>
    <Method classname="net.openhft.chronicle.core.OS$Unmapper" name="&lt;init&gt;" signature="(JJ)V" isStatic="false" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.OS$Unmapper" start="497" end="502" startBytecode="0" endBytecode="132" sourcefile="OS.java" sourcepath="net/openhft/chronicle/core/OS.java"/>
      <Message>In method new net.openhft.chronicle.core.OS$Unmapper(long, long)</Message>
    </Method>
    <SourceLine classname="net.openhft.chronicle.core.OS$Unmapper" primary="true" start="499" end="499" startBytecode="12" endBytecode="12" sourcefile="OS.java" sourcepath="net/openhft/chronicle/core/OS.java">
      <Message>At OS.java:[line 499]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DP_DO_INSIDE_DO_PRIVILEGED" priority="3" rank="20" abbrev="DP" category="MALICIOUS_CODE" instanceHash="18051694b00367cf4854df32361e21dc" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Method invoked that should be only be invoked inside a doPrivileged block</ShortMessage>
    <LongMessage>Invocation of reflect.Field.setAccessible(boolean), which should be invoked from within a doPrivileged block, in net.openhft.chronicle.core.UnsafeMemory.&lt;static initializer for UnsafeMemory&gt;()</LongMessage>
    <Class classname="net.openhft.chronicle.core.UnsafeMemory" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.UnsafeMemory" start="33" end="801" sourcefile="UnsafeMemory.java" sourcepath="net/openhft/chronicle/core/UnsafeMemory.java">
        <Message>At UnsafeMemory.java:[lines 33-801]</Message>
      </SourceLine>
      <Message>In class net.openhft.chronicle.core.UnsafeMemory</Message>
    </Class>
    <Method classname="net.openhft.chronicle.core.UnsafeMemory" name="&lt;clinit&gt;" signature="()V" isStatic="true" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.UnsafeMemory" start="49" end="56" startBytecode="0" endBytecode="185" sourcefile="UnsafeMemory.java" sourcepath="net/openhft/chronicle/core/UnsafeMemory.java"/>
      <Message>In method net.openhft.chronicle.core.UnsafeMemory.&lt;static initializer for UnsafeMemory&gt;()</Message>
    </Method>
    <Method classname="java.lang.reflect.Field" name="setAccessible" signature="(Z)V" isStatic="false" role="METHOD_CALLED">
      <SourceLine classname="java.lang.reflect.Field" start="171" end="174" startBytecode="0" endBytecode="93" sourcefile="Field.java" sourcepath="java/lang/reflect/Field.java"/>
      <Message>Called method reflect.Field.setAccessible(boolean)</Message>
    </Method>
    <SourceLine classname="net.openhft.chronicle.core.UnsafeMemory" primary="true" start="50" end="50" startBytecode="10" endBytecode="10" sourcefile="UnsafeMemory.java" sourcepath="net/openhft/chronicle/core/UnsafeMemory.java">
      <Message>At UnsafeMemory.java:[line 50]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="ICAST_IDIV_CAST_TO_DOUBLE" priority="2" rank="17" abbrev="ICAST" category="STYLE" instanceHash="e4d492bf507cdc55b650a5ab1533dc19" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="192">
    <ShortMessage>Integral division result cast to double or float</ShortMessage>
    <LongMessage>Integral division result cast to double or float in net.openhft.chronicle.core.UnsafeMemory.copyMemory(long, Object, long, int)</LongMessage>
    <Class classname="net.openhft.chronicle.core.UnsafeMemory" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.UnsafeMemory" start="33" end="801" sourcefile="UnsafeMemory.java" sourcepath="net/openhft/chronicle/core/UnsafeMemory.java">
        <Message>At UnsafeMemory.java:[lines 33-801]</Message>
      </SourceLine>
      <Message>In class net.openhft.chronicle.core.UnsafeMemory</Message>
    </Class>
    <Method classname="net.openhft.chronicle.core.UnsafeMemory" name="copyMemory" signature="(JLjava/lang/Object;JI)V" isStatic="false" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.UnsafeMemory" start="517" end="524" startBytecode="0" endBytecode="253" sourcefile="UnsafeMemory.java" sourcepath="net/openhft/chronicle/core/UnsafeMemory.java"/>
      <Message>In method net.openhft.chronicle.core.UnsafeMemory.copyMemory(long, Object, long, int)</Message>
    </Method>
    <SourceLine classname="net.openhft.chronicle.core.UnsafeMemory" primary="true" start="522" end="522" startBytecode="77" endBytecode="77" sourcefile="UnsafeMemory.java" sourcepath="net/openhft/chronicle/core/UnsafeMemory.java">
      <Message>At UnsafeMemory.java:[line 522]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="BC_UNCONFIRMED_CAST" priority="3" rank="20" abbrev="BC" category="STYLE" instanceHash="2462aabea12bde1a2f10b934b9e3332a" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Unchecked/unconfirmed cast</ShortMessage>
    <LongMessage>Unchecked/unconfirmed cast from java.nio.ByteBuffer to sun.nio.ch.DirectBuffer in net.openhft.chronicle.core.cleaner.impl.reflect.ReflectionBasedByteBufferCleanerService.clean(ByteBuffer)</LongMessage>
    <Class classname="net.openhft.chronicle.core.cleaner.impl.reflect.ReflectionBasedByteBufferCleanerService" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.cleaner.impl.reflect.ReflectionBasedByteBufferCleanerService" start="30" end="83" sourcefile="ReflectionBasedByteBufferCleanerService.java" sourcepath="net/openhft/chronicle/core/cleaner/impl/reflect/ReflectionBasedByteBufferCleanerService.java">
        <Message>At ReflectionBasedByteBufferCleanerService.java:[lines 30-83]</Message>
      </SourceLine>
      <Message>In class net.openhft.chronicle.core.cleaner.impl.reflect.ReflectionBasedByteBufferCleanerService</Message>
    </Class>
    <Method classname="net.openhft.chronicle.core.cleaner.impl.reflect.ReflectionBasedByteBufferCleanerService" name="clean" signature="(Ljava/nio/ByteBuffer;)V" isStatic="false" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.cleaner.impl.reflect.ReflectionBasedByteBufferCleanerService" start="65" end="79" startBytecode="0" endBytecode="33" sourcefile="ReflectionBasedByteBufferCleanerService.java" sourcepath="net/openhft/chronicle/core/cleaner/impl/reflect/ReflectionBasedByteBufferCleanerService.java"/>
      <Message>In method net.openhft.chronicle.core.cleaner.impl.reflect.ReflectionBasedByteBufferCleanerService.clean(ByteBuffer)</Message>
    </Method>
    <Type descriptor="Ljava/nio/ByteBuffer;" role="TYPE_FOUND">
      <SourceLine classname="java.nio.ByteBuffer" start="267" end="2261" sourcefile="ByteBuffer.java" sourcepath="java/nio/ByteBuffer.java">
        <Message>At ByteBuffer.java:[lines 267-2261]</Message>
      </SourceLine>
      <Message>Actual type java.nio.ByteBuffer</Message>
    </Type>
    <Type descriptor="Lsun/nio/ch/DirectBuffer;" role="TYPE_EXPECTED">
      <SourceLine classname="sun.nio.ch.DirectBuffer" sourcefile="DirectBuffer.java" sourcepath="sun/nio/ch/DirectBuffer.java">
        <Message>In DirectBuffer.java</Message>
      </SourceLine>
      <Message>Expected sun.nio.ch.DirectBuffer</Message>
    </Type>
    <LocalVariable name="buffer" register="1" pc="56" role="LOCAL_VARIABLE_VALUE_OF">
      <Message>Value loaded from buffer</Message>
    </LocalVariable>
    <SourceLine classname="net.openhft.chronicle.core.cleaner.impl.reflect.ReflectionBasedByteBufferCleanerService" primary="true" start="73" end="73" startBytecode="57" endBytecode="57" sourcefile="ReflectionBasedByteBufferCleanerService.java" sourcepath="net/openhft/chronicle/core/cleaner/impl/reflect/ReflectionBasedByteBufferCleanerService.java">
      <Message>At ReflectionBasedByteBufferCleanerService.java:[line 73]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="URF_UNREAD_FIELD" priority="3" rank="20" abbrev="UrF" category="PERFORMANCE" instanceHash="ef71e27e39a689e5ff4742b2f84bd72e" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Unread field</ShortMessage>
    <LongMessage>Unread field: net.openhft.chronicle.core.cooler.CoolerTester.blackhole</LongMessage>
    <Class classname="net.openhft.chronicle.core.cooler.CoolerTester" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.cooler.CoolerTester" start="32" end="163" sourcefile="CoolerTester.java" sourcepath="net/openhft/chronicle/core/cooler/CoolerTester.java">
        <Message>At CoolerTester.java:[lines 32-163]</Message>
      </SourceLine>
      <Message>In class net.openhft.chronicle.core.cooler.CoolerTester</Message>
    </Class>
    <Field classname="net.openhft.chronicle.core.cooler.CoolerTester" name="blackhole" signature="Ljava/lang/Object;" isStatic="true" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.cooler.CoolerTester" sourcefile="CoolerTester.java" sourcepath="net/openhft/chronicle/core/cooler/CoolerTester.java">
        <Message>In CoolerTester.java</Message>
      </SourceLine>
      <Message>Field net.openhft.chronicle.core.cooler.CoolerTester.blackhole</Message>
    </Field>
    <SourceLine classname="net.openhft.chronicle.core.cooler.CoolerTester" primary="true" start="76" end="76" startBytecode="16" endBytecode="16" sourcefile="CoolerTester.java" sourcepath="net/openhft/chronicle/core/cooler/CoolerTester.java">
      <Message>At CoolerTester.java:[line 76]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="ST_WRITE_TO_STATIC_FROM_INSTANCE_METHOD" priority="3" rank="20" abbrev="ST" category="STYLE" instanceHash="1431c6bf82adee258a5c739335cf8869" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Write to static field from instance method</ShortMessage>
    <LongMessage>Write to static field net.openhft.chronicle.core.cooler.CpuCoolers.blackhole from instance method net.openhft.chronicle.core.cooler.CpuCoolers$19.disturb()</LongMessage>
    <Class classname="net.openhft.chronicle.core.cooler.CpuCoolers$19" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.cooler.CpuCoolers$19" start="141" end="150" sourcefile="CpuCoolers.java" sourcepath="net/openhft/chronicle/core/cooler/CpuCoolers.java">
        <Message>At CpuCoolers.java:[lines 141-150]</Message>
      </SourceLine>
      <Message>In class net.openhft.chronicle.core.cooler.CpuCoolers$19</Message>
    </Class>
    <Method classname="net.openhft.chronicle.core.cooler.CpuCoolers$19" name="disturb" signature="()V" isStatic="false" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.cooler.CpuCoolers$19" start="144" end="150" startBytecode="0" endBytecode="150" sourcefile="CpuCoolers.java" sourcepath="net/openhft/chronicle/core/cooler/CpuCoolers.java"/>
      <Message>In method net.openhft.chronicle.core.cooler.CpuCoolers$19.disturb()</Message>
    </Method>
    <Field classname="net.openhft.chronicle.core.cooler.CpuCoolers" name="blackhole" signature="Ljava/lang/Object;" isStatic="true" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.cooler.CpuCoolers" sourcefile="CpuCoolers.java" sourcepath="net/openhft/chronicle/core/cooler/CpuCoolers.java">
        <Message>In CpuCoolers.java</Message>
      </SourceLine>
      <Message>Field net.openhft.chronicle.core.cooler.CpuCoolers.blackhole</Message>
    </Field>
    <SourceLine classname="net.openhft.chronicle.core.cooler.CpuCoolers$19" primary="true" start="149" end="149" startBytecode="51" endBytecode="51" sourcefile="CpuCoolers.java" sourcepath="net/openhft/chronicle/core/cooler/CpuCoolers.java">
      <Message>At CpuCoolers.java:[line 149]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="REC_CATCH_EXCEPTION" priority="3" rank="20" abbrev="REC" category="STYLE" instanceHash="27fad01395fd536348c0bae8d93ddcfe" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="396">
    <ShortMessage>Exception is caught when Exception is not thrown</ShortMessage>
    <LongMessage>Exception is caught when Exception is not thrown in net.openhft.chronicle.core.internal.pom.InternalPomProperties.create(String, String)</LongMessage>
    <Class classname="net.openhft.chronicle.core.internal.pom.InternalPomProperties" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.internal.pom.InternalPomProperties" start="10" end="40" sourcefile="InternalPomProperties.java" sourcepath="net/openhft/chronicle/core/internal/pom/InternalPomProperties.java">
        <Message>At InternalPomProperties.java:[lines 10-40]</Message>
      </SourceLine>
      <Message>In class net.openhft.chronicle.core.internal.pom.InternalPomProperties</Message>
    </Class>
    <Method classname="net.openhft.chronicle.core.internal.pom.InternalPomProperties" name="create" signature="(Ljava/lang/String;Ljava/lang/String;)Ljava/util/Properties;" isStatic="true" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.internal.pom.InternalPomProperties" start="16" end="28" startBytecode="0" endBytecode="417" sourcefile="InternalPomProperties.java" sourcepath="net/openhft/chronicle/core/internal/pom/InternalPomProperties.java"/>
      <Message>In method net.openhft.chronicle.core.internal.pom.InternalPomProperties.create(String, String)</Message>
    </Method>
    <SourceLine classname="net.openhft.chronicle.core.internal.pom.InternalPomProperties" primary="true" start="24" end="24" startBytecode="126" endBytecode="126" sourcefile="InternalPomProperties.java" sourcepath="net/openhft/chronicle/core/internal/pom/InternalPomProperties.java">
      <Message>At InternalPomProperties.java:[line 24]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="1b7567420a3268c4d74e7dd841ffd1f5" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>net.openhft.chronicle.core.io.AbstractCloseable.createdHere() may expose internal representation by returning AbstractCloseable.createdHere</LongMessage>
    <Class classname="net.openhft.chronicle.core.io.AbstractCloseable" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.io.AbstractCloseable" start="35" end="285" sourcefile="AbstractCloseable.java" sourcepath="net/openhft/chronicle/core/io/AbstractCloseable.java">
        <Message>At AbstractCloseable.java:[lines 35-285]</Message>
      </SourceLine>
      <Message>In class net.openhft.chronicle.core.io.AbstractCloseable</Message>
    </Class>
    <Method classname="net.openhft.chronicle.core.io.AbstractCloseable" name="createdHere" signature="()Lnet/openhft/chronicle/core/StackTrace;" isStatic="false" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.io.AbstractCloseable" start="131" end="131" startBytecode="0" endBytecode="46" sourcefile="AbstractCloseable.java" sourcepath="net/openhft/chronicle/core/io/AbstractCloseable.java"/>
      <Message>In method net.openhft.chronicle.core.io.AbstractCloseable.createdHere()</Message>
    </Method>
    <Field classname="net.openhft.chronicle.core.io.AbstractCloseable" name="createdHere" signature="Lnet/openhft/chronicle/core/StackTrace;" isStatic="false" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.io.AbstractCloseable" sourcefile="AbstractCloseable.java" sourcepath="net/openhft/chronicle/core/io/AbstractCloseable.java">
        <Message>In AbstractCloseable.java</Message>
      </SourceLine>
      <Message>Field net.openhft.chronicle.core.io.AbstractCloseable.createdHere</Message>
    </Field>
    <SourceLine classname="net.openhft.chronicle.core.io.AbstractCloseable" primary="true" start="131" end="131" startBytecode="4" endBytecode="4" sourcefile="AbstractCloseable.java" sourcepath="net/openhft/chronicle/core/io/AbstractCloseable.java">
      <Message>At AbstractCloseable.java:[line 131]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="MC_OVERRIDABLE_METHOD_CALL_IN_CONSTRUCTOR" priority="3" rank="20" abbrev="MC" category="MALICIOUS_CODE" instanceHash="59552afae09252d9a752bd21605ef128" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>An overridable method is called from a constructor</ShortMessage>
    <LongMessage>Overridable method add is called from constructor new net.openhft.chronicle.core.io.AbstractCloseable().</LongMessage>
    <Class classname="net.openhft.chronicle.core.io.AbstractCloseable" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.io.AbstractCloseable" start="35" end="285" sourcefile="AbstractCloseable.java" sourcepath="net/openhft/chronicle/core/io/AbstractCloseable.java">
        <Message>At AbstractCloseable.java:[lines 35-285]</Message>
      </SourceLine>
      <Message>In class net.openhft.chronicle.core.io.AbstractCloseable</Message>
    </Class>
    <Method classname="net.openhft.chronicle.core.io.AbstractCloseable" name="&lt;init&gt;" signature="()V" isStatic="false" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.io.AbstractCloseable" start="58" end="64" startBytecode="0" endBytecode="208" sourcefile="AbstractCloseable.java" sourcepath="net/openhft/chronicle/core/io/AbstractCloseable.java"/>
      <Message>In method new net.openhft.chronicle.core.io.AbstractCloseable()</Message>
    </Method>
    <String value="add">
      <Message>Value add</Message>
    </String>
    <SourceLine classname="net.openhft.chronicle.core.io.AbstractCloseable" primary="true" start="63" end="63" startBytecode="65" endBytecode="65" sourcefile="AbstractCloseable.java" sourcepath="net/openhft/chronicle/core/io/AbstractCloseable.java">
      <Message>At AbstractCloseable.java:[line 63]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="MC_OVERRIDABLE_METHOD_CALL_IN_CONSTRUCTOR" priority="3" rank="20" abbrev="MC" category="MALICIOUS_CODE" instanceHash="fa8b34207c8dcf8ea62220d0ec9aabf" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>An overridable method is called from a constructor</ShortMessage>
    <LongMessage>Overridable method add is called from constructor new net.openhft.chronicle.core.io.AbstractCloseableReferenceCounted().</LongMessage>
    <Class classname="net.openhft.chronicle.core.io.AbstractCloseableReferenceCounted" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.io.AbstractCloseableReferenceCounted" start="10" end="86" sourcefile="AbstractCloseableReferenceCounted.java" sourcepath="net/openhft/chronicle/core/io/AbstractCloseableReferenceCounted.java">
        <Message>At AbstractCloseableReferenceCounted.java:[lines 10-86]</Message>
      </SourceLine>
      <Message>In class net.openhft.chronicle.core.io.AbstractCloseableReferenceCounted</Message>
    </Class>
    <Method classname="net.openhft.chronicle.core.io.AbstractCloseableReferenceCounted" name="&lt;init&gt;" signature="()V" isStatic="false" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.io.AbstractCloseableReferenceCounted" start="18" end="22" startBytecode="0" endBytecode="127" sourcefile="AbstractCloseableReferenceCounted.java" sourcepath="net/openhft/chronicle/core/io/AbstractCloseableReferenceCounted.java"/>
      <Message>In method new net.openhft.chronicle.core.io.AbstractCloseableReferenceCounted()</Message>
    </Method>
    <String value="add">
      <Message>Value add</Message>
    </String>
    <SourceLine classname="net.openhft.chronicle.core.io.AbstractCloseableReferenceCounted" primary="true" start="21" end="21" startBytecode="14" endBytecode="14" sourcefile="AbstractCloseableReferenceCounted.java" sourcepath="net/openhft/chronicle/core/io/AbstractCloseableReferenceCounted.java">
      <Message>At AbstractCloseableReferenceCounted.java:[line 21]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="ICAST_IDIV_CAST_TO_DOUBLE" priority="2" rank="17" abbrev="ICAST" category="STYLE" instanceHash="1abb14ed40544ef833d2a9389edddfcb" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="192">
    <ShortMessage>Integral division result cast to double or float</ShortMessage>
    <LongMessage>Integral division result cast to double or float in net.openhft.chronicle.core.io.AbstractReferenceCounted.inThreadPerformRelease()</LongMessage>
    <Class classname="net.openhft.chronicle.core.io.AbstractReferenceCounted" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.io.AbstractReferenceCounted" start="16" end="179" sourcefile="AbstractReferenceCounted.java" sourcepath="net/openhft/chronicle/core/io/AbstractReferenceCounted.java">
        <Message>At AbstractReferenceCounted.java:[lines 16-179]</Message>
      </SourceLine>
      <Message>In class net.openhft.chronicle.core.io.AbstractReferenceCounted</Message>
    </Class>
    <Method classname="net.openhft.chronicle.core.io.AbstractReferenceCounted" name="inThreadPerformRelease" signature="()V" isStatic="false" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.io.AbstractReferenceCounted" start="101" end="106" startBytecode="0" endBytecode="160" sourcefile="AbstractReferenceCounted.java" sourcepath="net/openhft/chronicle/core/io/AbstractReferenceCounted.java"/>
      <Message>In method net.openhft.chronicle.core.io.AbstractReferenceCounted.inThreadPerformRelease()</Message>
    </Method>
    <SourceLine classname="net.openhft.chronicle.core.io.AbstractReferenceCounted" primary="true" start="105" end="105" startBytecode="46" endBytecode="46" sourcefile="AbstractReferenceCounted.java" sourcepath="net/openhft/chronicle/core/io/AbstractReferenceCounted.java">
      <Message>At AbstractReferenceCounted.java:[line 105]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="MC_OVERRIDABLE_METHOD_CALL_IN_CONSTRUCTOR" priority="3" rank="20" abbrev="MC" category="MALICIOUS_CODE" instanceHash="fca04402f5d120c3b3cf960a189a4db1" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>An overridable method is called from a constructor</ShortMessage>
    <LongMessage>Overridable method add is called from constructor new net.openhft.chronicle.core.io.AbstractReferenceCounted(boolean).</LongMessage>
    <Class classname="net.openhft.chronicle.core.io.AbstractReferenceCounted" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.io.AbstractReferenceCounted" start="16" end="179" sourcefile="AbstractReferenceCounted.java" sourcepath="net/openhft/chronicle/core/io/AbstractReferenceCounted.java">
        <Message>At AbstractReferenceCounted.java:[lines 16-179]</Message>
      </SourceLine>
      <Message>In class net.openhft.chronicle.core.io.AbstractReferenceCounted</Message>
    </Class>
    <Method classname="net.openhft.chronicle.core.io.AbstractReferenceCounted" name="&lt;init&gt;" signature="(Z)V" isStatic="false" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.io.AbstractReferenceCounted" start="27" end="37" startBytecode="0" endBytecode="233" sourcefile="AbstractReferenceCounted.java" sourcepath="net/openhft/chronicle/core/io/AbstractReferenceCounted.java"/>
      <Message>In method new net.openhft.chronicle.core.io.AbstractReferenceCounted(boolean)</Message>
    </Method>
    <String value="add">
      <Message>Value add</Message>
    </String>
    <SourceLine classname="net.openhft.chronicle.core.io.AbstractReferenceCounted" primary="true" start="36" end="36" startBytecode="77" endBytecode="77" sourcefile="AbstractReferenceCounted.java" sourcepath="net/openhft/chronicle/core/io/AbstractReferenceCounted.java">
      <Message>At AbstractReferenceCounted.java:[line 36]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="MC_OVERRIDABLE_METHOD_CALL_IN_CONSTRUCTOR" priority="3" rank="20" abbrev="MC" category="MALICIOUS_CODE" instanceHash="6b62d543ca8c6515fcd4369142c1d7de" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>An overridable method is called from a constructor</ShortMessage>
    <LongMessage>Overridable method backgroundPerformRelease is called from constructor new net.openhft.chronicle.core.io.AbstractReferenceCounted(boolean).</LongMessage>
    <Class classname="net.openhft.chronicle.core.io.AbstractReferenceCounted" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.io.AbstractReferenceCounted" start="16" end="179" sourcefile="AbstractReferenceCounted.java" sourcepath="net/openhft/chronicle/core/io/AbstractReferenceCounted.java">
        <Message>At AbstractReferenceCounted.java:[lines 16-179]</Message>
      </SourceLine>
      <Message>In class net.openhft.chronicle.core.io.AbstractReferenceCounted</Message>
    </Class>
    <Method classname="net.openhft.chronicle.core.io.AbstractReferenceCounted" name="&lt;init&gt;" signature="(Z)V" isStatic="false" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.io.AbstractReferenceCounted" start="27" end="37" startBytecode="0" endBytecode="233" sourcefile="AbstractReferenceCounted.java" sourcepath="net/openhft/chronicle/core/io/AbstractReferenceCounted.java"/>
      <Message>In method new net.openhft.chronicle.core.io.AbstractReferenceCounted(boolean)</Message>
    </Method>
    <String value="backgroundPerformRelease">
      <Message>Value backgroundPerformRelease</Message>
    </String>
    <SourceLine classname="net.openhft.chronicle.core.io.AbstractReferenceCounted" primary="true" start="28" end="28" startBytecode="18" endBytecode="18" sourcefile="AbstractReferenceCounted.java" sourcepath="net/openhft/chronicle/core/io/AbstractReferenceCounted.java">
      <Message>At AbstractReferenceCounted.java:[line 28]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="MC_OVERRIDABLE_METHOD_CALL_IN_CONSTRUCTOR" priority="3" rank="20" abbrev="MC" category="MALICIOUS_CODE" instanceHash="4a849d4315ca61f2e23dad4739881611" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>An overridable method is called from a constructor</ShortMessage>
    <LongMessage>Overridable method inThreadPerformRelease is called from constructor new net.openhft.chronicle.core.io.AbstractReferenceCounted(boolean).</LongMessage>
    <Class classname="net.openhft.chronicle.core.io.AbstractReferenceCounted" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.io.AbstractReferenceCounted" start="16" end="179" sourcefile="AbstractReferenceCounted.java" sourcepath="net/openhft/chronicle/core/io/AbstractReferenceCounted.java">
        <Message>At AbstractReferenceCounted.java:[lines 16-179]</Message>
      </SourceLine>
      <Message>In class net.openhft.chronicle.core.io.AbstractReferenceCounted</Message>
    </Class>
    <Method classname="net.openhft.chronicle.core.io.AbstractReferenceCounted" name="&lt;init&gt;" signature="(Z)V" isStatic="false" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.io.AbstractReferenceCounted" start="27" end="37" startBytecode="0" endBytecode="233" sourcefile="AbstractReferenceCounted.java" sourcepath="net/openhft/chronicle/core/io/AbstractReferenceCounted.java"/>
      <Message>In method new net.openhft.chronicle.core.io.AbstractReferenceCounted(boolean)</Message>
    </Method>
    <String value="inThreadPerformRelease">
      <Message>Value inThreadPerformRelease</Message>
    </String>
    <SourceLine classname="net.openhft.chronicle.core.io.AbstractReferenceCounted" primary="true" start="28" end="28" startBytecode="27" endBytecode="27" sourcefile="AbstractReferenceCounted.java" sourcepath="net/openhft/chronicle/core/io/AbstractReferenceCounted.java">
      <Message>At AbstractReferenceCounted.java:[line 28]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="MC_OVERRIDABLE_METHOD_CALL_IN_CONSTRUCTOR" priority="3" rank="20" abbrev="MC" category="MALICIOUS_CODE" instanceHash="63842783eb6b5e0f2d6e21e5f0fee9dd" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>An overridable method is called from a constructor</ShortMessage>
    <LongMessage>Overridable method performReleaseInBackground is called from constructor new net.openhft.chronicle.core.io.AbstractReferenceCounted(boolean).</LongMessage>
    <Class classname="net.openhft.chronicle.core.io.AbstractReferenceCounted" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.io.AbstractReferenceCounted" start="16" end="179" sourcefile="AbstractReferenceCounted.java" sourcepath="net/openhft/chronicle/core/io/AbstractReferenceCounted.java">
        <Message>At AbstractReferenceCounted.java:[lines 16-179]</Message>
      </SourceLine>
      <Message>In class net.openhft.chronicle.core.io.AbstractReferenceCounted</Message>
    </Class>
    <Method classname="net.openhft.chronicle.core.io.AbstractReferenceCounted" name="&lt;init&gt;" signature="(Z)V" isStatic="false" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.io.AbstractReferenceCounted" start="27" end="37" startBytecode="0" endBytecode="233" sourcefile="AbstractReferenceCounted.java" sourcepath="net/openhft/chronicle/core/io/AbstractReferenceCounted.java"/>
      <Message>In method new net.openhft.chronicle.core.io.AbstractReferenceCounted(boolean)</Message>
    </Method>
    <String value="performReleaseInBackground">
      <Message>Value performReleaseInBackground</Message>
    </String>
    <SourceLine classname="net.openhft.chronicle.core.io.AbstractReferenceCounted" primary="true" start="28" end="28" startBytecode="11" endBytecode="11" sourcefile="AbstractReferenceCounted.java" sourcepath="net/openhft/chronicle/core/io/AbstractReferenceCounted.java">
      <Message>At AbstractReferenceCounted.java:[line 28]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="MC_OVERRIDABLE_METHOD_CALL_IN_CONSTRUCTOR" priority="3" rank="20" abbrev="MC" category="MALICIOUS_CODE" instanceHash="752368a716a6e0c4006da0241cae5ebc" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>An overridable method is called from a constructor</ShortMessage>
    <LongMessage>Overridable method referenceName is called from constructor new net.openhft.chronicle.core.io.AbstractReferenceCounted(boolean).</LongMessage>
    <Class classname="net.openhft.chronicle.core.io.AbstractReferenceCounted" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.io.AbstractReferenceCounted" start="16" end="179" sourcefile="AbstractReferenceCounted.java" sourcepath="net/openhft/chronicle/core/io/AbstractReferenceCounted.java">
        <Message>At AbstractReferenceCounted.java:[lines 16-179]</Message>
      </SourceLine>
      <Message>In class net.openhft.chronicle.core.io.AbstractReferenceCounted</Message>
    </Class>
    <Method classname="net.openhft.chronicle.core.io.AbstractReferenceCounted" name="&lt;init&gt;" signature="(Z)V" isStatic="false" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.io.AbstractReferenceCounted" start="27" end="37" startBytecode="0" endBytecode="233" sourcefile="AbstractReferenceCounted.java" sourcepath="net/openhft/chronicle/core/io/AbstractReferenceCounted.java"/>
      <Message>In method new net.openhft.chronicle.core.io.AbstractReferenceCounted(boolean)</Message>
    </Method>
    <String value="referenceName">
      <Message>Value referenceName</Message>
    </String>
    <SourceLine classname="net.openhft.chronicle.core.io.AbstractReferenceCounted" primary="true" start="32" end="32" startBytecode="50" endBytecode="50" sourcefile="AbstractReferenceCounted.java" sourcepath="net/openhft/chronicle/core/io/AbstractReferenceCounted.java">
      <Message>At AbstractReferenceCounted.java:[line 32]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="NM_SAME_SIMPLE_NAME_AS_INTERFACE" priority="2" rank="16" abbrev="Nm" category="BAD_PRACTICE" instanceHash="9f3fca56cd142b6b2d3ca6ad85726a5d" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Class names shouldn&apos;t shadow simple name of implemented interface</ShortMessage>
    <LongMessage>The class name net.openhft.chronicle.core.io.Closeable shadows the simple name of implemented interface java.io.Closeable</LongMessage>
    <Class classname="net.openhft.chronicle.core.io.Closeable" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.io.Closeable" start="30" end="64" sourcefile="Closeable.java" sourcepath="net/openhft/chronicle/core/io/Closeable.java">
        <Message>At Closeable.java:[lines 30-64]</Message>
      </SourceLine>
      <Message>In class net.openhft.chronicle.core.io.Closeable</Message>
    </Class>
    <Class classname="java.io.Closeable">
      <SourceLine classname="java.io.Closeable" sourcefile="Closeable.java" sourcepath="java/io/Closeable.java">
        <Message>In Closeable.java</Message>
      </SourceLine>
      <Message>In class java.io.Closeable</Message>
    </Class>
    <SourceLine classname="net.openhft.chronicle.core.io.Closeable" start="30" end="64" sourcefile="Closeable.java" sourcepath="net/openhft/chronicle/core/io/Closeable.java" synthetic="true">
      <Message>At Closeable.java:[lines 30-64]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="OS_OPEN_STREAM_EXCEPTION_PATH" priority="3" rank="19" abbrev="OS" category="BAD_PRACTICE" instanceHash="aece45b30062d0f9b976c7ab5a3f2830" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Method may fail to close stream on exception</ShortMessage>
    <LongMessage>net.openhft.chronicle.core.io.IOTools.writeFile(String, byte[]) may fail to close stream on exception</LongMessage>
    <Class classname="net.openhft.chronicle.core.io.IOTools" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.io.IOTools" start="46" end="295" sourcefile="IOTools.java" sourcepath="net/openhft/chronicle/core/io/IOTools.java">
        <Message>At IOTools.java:[lines 46-295]</Message>
      </SourceLine>
      <Message>In class net.openhft.chronicle.core.io.IOTools</Message>
    </Class>
    <Method classname="net.openhft.chronicle.core.io.IOTools" name="writeFile" signature="(Ljava/lang/String;[B)V" isStatic="true" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.io.IOTools" start="200" end="207" startBytecode="0" endBytecode="60" sourcefile="IOTools.java" sourcepath="net/openhft/chronicle/core/io/IOTools.java"/>
      <Message>In method net.openhft.chronicle.core.io.IOTools.writeFile(String, byte[])</Message>
    </Method>
    <Type descriptor="Ljava/io/OutputStream;" role="TYPE_CLOSEIT">
      <SourceLine classname="java.io.OutputStream" start="52" end="198" sourcefile="OutputStream.java" sourcepath="java/io/OutputStream.java">
        <Message>At OutputStream.java:[lines 52-198]</Message>
      </SourceLine>
      <Message>Need to close java.io.OutputStream </Message>
    </Type>
    <SourceLine classname="net.openhft.chronicle.core.io.IOTools" primary="true" start="203" end="203" startBytecode="23" endBytecode="23" sourcefile="IOTools.java" sourcepath="net/openhft/chronicle/core/io/IOTools.java">
      <Message>At IOTools.java:[line 203]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="RV_RETURN_VALUE_IGNORED_BAD_PRACTICE" priority="2" rank="16" abbrev="RV" category="BAD_PRACTICE" instanceHash="1878e3c3f0bab103f41c2e9ce95b827c" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="253">
    <ShortMessage>Method ignores exceptional return value</ShortMessage>
    <LongMessage>Exceptional return value of java.io.File.mkdir() ignored in net.openhft.chronicle.core.io.IOTools.createTempDirectory(String)</LongMessage>
    <Class classname="net.openhft.chronicle.core.io.IOTools" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.io.IOTools" start="46" end="295" sourcefile="IOTools.java" sourcepath="net/openhft/chronicle/core/io/IOTools.java">
        <Message>At IOTools.java:[lines 46-295]</Message>
      </SourceLine>
      <Message>In class net.openhft.chronicle.core.io.IOTools</Message>
    </Class>
    <Method classname="net.openhft.chronicle.core.io.IOTools" name="createTempDirectory" signature="(Ljava/lang/String;)Ljava/nio/file/Path;" isStatic="true" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.io.IOTools" start="250" end="251" startBytecode="0" endBytecode="103" sourcefile="IOTools.java" sourcepath="net/openhft/chronicle/core/io/IOTools.java"/>
      <Message>In method net.openhft.chronicle.core.io.IOTools.createTempDirectory(String)</Message>
    </Method>
    <Method classname="java.io.File" name="mkdir" signature="()Z" isStatic="false" role="METHOD_CALLED">
      <SourceLine classname="java.io.File" start="1372" end="1379" startBytecode="0" endBytecode="119" sourcefile="File.java" sourcepath="java/io/File.java"/>
      <Message>Called method java.io.File.mkdir()</Message>
    </Method>
    <SourceLine classname="net.openhft.chronicle.core.io.IOTools" primary="true" start="250" end="250" startBytecode="10" endBytecode="10" sourcefile="IOTools.java" sourcepath="net/openhft/chronicle/core/io/IOTools.java">
      <Message>At IOTools.java:[line 250]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="6f63001014acda151f9cdce8b9e046c1" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>net.openhft.chronicle.core.io.TracingReferenceCounted.createdHere() may expose internal representation by returning TracingReferenceCounted.createdHere</LongMessage>
    <Class classname="net.openhft.chronicle.core.io.TracingReferenceCounted" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.io.TracingReferenceCounted" start="18" end="234" sourcefile="TracingReferenceCounted.java" sourcepath="net/openhft/chronicle/core/io/TracingReferenceCounted.java">
        <Message>At TracingReferenceCounted.java:[lines 18-234]</Message>
      </SourceLine>
      <Message>In class net.openhft.chronicle.core.io.TracingReferenceCounted</Message>
    </Class>
    <Method classname="net.openhft.chronicle.core.io.TracingReferenceCounted" name="createdHere" signature="()Lnet/openhft/chronicle/core/StackTrace;" isStatic="false" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.io.TracingReferenceCounted" start="48" end="48" startBytecode="0" endBytecode="46" sourcefile="TracingReferenceCounted.java" sourcepath="net/openhft/chronicle/core/io/TracingReferenceCounted.java"/>
      <Message>In method net.openhft.chronicle.core.io.TracingReferenceCounted.createdHere()</Message>
    </Method>
    <Field classname="net.openhft.chronicle.core.io.TracingReferenceCounted" name="createdHere" signature="Lnet/openhft/chronicle/core/StackTrace;" isStatic="false" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.io.TracingReferenceCounted" sourcefile="TracingReferenceCounted.java" sourcepath="net/openhft/chronicle/core/io/TracingReferenceCounted.java">
        <Message>In TracingReferenceCounted.java</Message>
      </SourceLine>
      <Message>Field net.openhft.chronicle.core.io.TracingReferenceCounted.createdHere</Message>
    </Field>
    <SourceLine classname="net.openhft.chronicle.core.io.TracingReferenceCounted" primary="true" start="48" end="48" startBytecode="4" endBytecode="4" sourcefile="TracingReferenceCounted.java" sourcepath="net/openhft/chronicle/core/io/TracingReferenceCounted.java">
      <Message>At TracingReferenceCounted.java:[line 48]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DCN_NULLPOINTER_EXCEPTION" priority="2" rank="17" abbrev="DCN" category="STYLE" instanceHash="4d9ac453685c6bf81a6510f93b1748ea" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>NullPointerException caught</ShortMessage>
    <LongMessage>Do not catch NullPointerException like in net.openhft.chronicle.core.io.UnsafeCloseable.addAtomicLong(long)</LongMessage>
    <Class classname="net.openhft.chronicle.core.io.UnsafeCloseable" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.io.UnsafeCloseable" start="6" end="104" sourcefile="UnsafeCloseable.java" sourcepath="net/openhft/chronicle/core/io/UnsafeCloseable.java">
        <Message>At UnsafeCloseable.java:[lines 6-104]</Message>
      </SourceLine>
      <Message>In class net.openhft.chronicle.core.io.UnsafeCloseable</Message>
    </Class>
    <Method classname="net.openhft.chronicle.core.io.UnsafeCloseable" name="addAtomicLong" signature="(J)J" isStatic="false" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.io.UnsafeCloseable" start="86" end="89" startBytecode="0" endBytecode="106" sourcefile="UnsafeCloseable.java" sourcepath="net/openhft/chronicle/core/io/UnsafeCloseable.java"/>
      <Message>In method net.openhft.chronicle.core.io.UnsafeCloseable.addAtomicLong(long)</Message>
    </Method>
    <SourceLine classname="net.openhft.chronicle.core.io.UnsafeCloseable" primary="true" start="87" end="87" startBytecode="6" endBytecode="6" sourcefile="UnsafeCloseable.java" sourcepath="net/openhft/chronicle/core/io/UnsafeCloseable.java">
      <Message>At UnsafeCloseable.java:[line 87]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DCN_NULLPOINTER_EXCEPTION" priority="2" rank="17" abbrev="DCN" category="STYLE" instanceHash="4bf6318f5e297e6c56430e99b91a3678" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>NullPointerException caught</ShortMessage>
    <LongMessage>Do not catch NullPointerException like in net.openhft.chronicle.core.io.UnsafeCloseable.addLong(long)</LongMessage>
    <Class classname="net.openhft.chronicle.core.io.UnsafeCloseable" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.io.UnsafeCloseable" start="6" end="104" sourcefile="UnsafeCloseable.java" sourcepath="net/openhft/chronicle/core/io/UnsafeCloseable.java">
        <Message>At UnsafeCloseable.java:[lines 6-104]</Message>
      </SourceLine>
      <Message>In class net.openhft.chronicle.core.io.UnsafeCloseable</Message>
    </Class>
    <Method classname="net.openhft.chronicle.core.io.UnsafeCloseable" name="addLong" signature="(J)J" isStatic="false" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.io.UnsafeCloseable" start="77" end="80" startBytecode="0" endBytecode="116" sourcefile="UnsafeCloseable.java" sourcepath="net/openhft/chronicle/core/io/UnsafeCloseable.java"/>
      <Message>In method net.openhft.chronicle.core.io.UnsafeCloseable.addLong(long)</Message>
    </Method>
    <SourceLine classname="net.openhft.chronicle.core.io.UnsafeCloseable" primary="true" start="78" end="78" startBytecode="16" endBytecode="16" sourcefile="UnsafeCloseable.java" sourcepath="net/openhft/chronicle/core/io/UnsafeCloseable.java">
      <Message>At UnsafeCloseable.java:[line 78]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DCN_NULLPOINTER_EXCEPTION" priority="2" rank="17" abbrev="DCN" category="STYLE" instanceHash="b3f1d96be080c29703dffaf0d732d68e" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>NullPointerException caught</ShortMessage>
    <LongMessage>Do not catch NullPointerException like in net.openhft.chronicle.core.io.UnsafeCloseable.compareAndSwapLong(long, long)</LongMessage>
    <Class classname="net.openhft.chronicle.core.io.UnsafeCloseable" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.io.UnsafeCloseable" start="6" end="104" sourcefile="UnsafeCloseable.java" sourcepath="net/openhft/chronicle/core/io/UnsafeCloseable.java">
        <Message>At UnsafeCloseable.java:[lines 6-104]</Message>
      </SourceLine>
      <Message>In class net.openhft.chronicle.core.io.UnsafeCloseable</Message>
    </Class>
    <Method classname="net.openhft.chronicle.core.io.UnsafeCloseable" name="compareAndSwapLong" signature="(JJ)Z" isStatic="false" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.io.UnsafeCloseable" start="95" end="98" startBytecode="0" endBytecode="127" sourcefile="UnsafeCloseable.java" sourcepath="net/openhft/chronicle/core/io/UnsafeCloseable.java"/>
      <Message>In method net.openhft.chronicle.core.io.UnsafeCloseable.compareAndSwapLong(long, long)</Message>
    </Method>
    <SourceLine classname="net.openhft.chronicle.core.io.UnsafeCloseable" primary="true" start="96" end="96" startBytecode="15" endBytecode="15" sourcefile="UnsafeCloseable.java" sourcepath="net/openhft/chronicle/core/io/UnsafeCloseable.java">
      <Message>At UnsafeCloseable.java:[line 96]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DCN_NULLPOINTER_EXCEPTION" priority="2" rank="17" abbrev="DCN" category="STYLE" instanceHash="22a900bc67676ad0045caa1e37810f5c" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>NullPointerException caught</ShortMessage>
    <LongMessage>Do not catch NullPointerException like in net.openhft.chronicle.core.io.UnsafeCloseable.getLong()</LongMessage>
    <Class classname="net.openhft.chronicle.core.io.UnsafeCloseable" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.io.UnsafeCloseable" start="6" end="104" sourcefile="UnsafeCloseable.java" sourcepath="net/openhft/chronicle/core/io/UnsafeCloseable.java">
        <Message>At UnsafeCloseable.java:[lines 6-104]</Message>
      </SourceLine>
      <Message>In class net.openhft.chronicle.core.io.UnsafeCloseable</Message>
    </Class>
    <Method classname="net.openhft.chronicle.core.io.UnsafeCloseable" name="getLong" signature="()J" isStatic="false" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.io.UnsafeCloseable" start="22" end="25" startBytecode="0" endBytecode="102" sourcefile="UnsafeCloseable.java" sourcepath="net/openhft/chronicle/core/io/UnsafeCloseable.java"/>
      <Message>In method net.openhft.chronicle.core.io.UnsafeCloseable.getLong()</Message>
    </Method>
    <SourceLine classname="net.openhft.chronicle.core.io.UnsafeCloseable" primary="true" start="23" end="23" startBytecode="12" endBytecode="12" sourcefile="UnsafeCloseable.java" sourcepath="net/openhft/chronicle/core/io/UnsafeCloseable.java">
      <Message>At UnsafeCloseable.java:[line 23]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DCN_NULLPOINTER_EXCEPTION" priority="2" rank="17" abbrev="DCN" category="STYLE" instanceHash="ba9d48befb8c2cb7f510e1389fe48d0a" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>NullPointerException caught</ShortMessage>
    <LongMessage>Do not catch NullPointerException like in net.openhft.chronicle.core.io.UnsafeCloseable.getVolatileLong()</LongMessage>
    <Class classname="net.openhft.chronicle.core.io.UnsafeCloseable" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.io.UnsafeCloseable" start="6" end="104" sourcefile="UnsafeCloseable.java" sourcepath="net/openhft/chronicle/core/io/UnsafeCloseable.java">
        <Message>At UnsafeCloseable.java:[lines 6-104]</Message>
      </SourceLine>
      <Message>In class net.openhft.chronicle.core.io.UnsafeCloseable</Message>
    </Class>
    <Method classname="net.openhft.chronicle.core.io.UnsafeCloseable" name="getVolatileLong" signature="()J" isStatic="false" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.io.UnsafeCloseable" start="40" end="43" startBytecode="0" endBytecode="103" sourcefile="UnsafeCloseable.java" sourcepath="net/openhft/chronicle/core/io/UnsafeCloseable.java"/>
      <Message>In method net.openhft.chronicle.core.io.UnsafeCloseable.getVolatileLong()</Message>
    </Method>
    <SourceLine classname="net.openhft.chronicle.core.io.UnsafeCloseable" primary="true" start="41" end="41" startBytecode="13" endBytecode="13" sourcefile="UnsafeCloseable.java" sourcepath="net/openhft/chronicle/core/io/UnsafeCloseable.java">
      <Message>At UnsafeCloseable.java:[line 41]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DCN_NULLPOINTER_EXCEPTION" priority="2" rank="17" abbrev="DCN" category="STYLE" instanceHash="31e09497e04b40312cd2496f24f6d330" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>NullPointerException caught</ShortMessage>
    <LongMessage>Do not catch NullPointerException like in net.openhft.chronicle.core.io.UnsafeCloseable.setLong(long)</LongMessage>
    <Class classname="net.openhft.chronicle.core.io.UnsafeCloseable" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.io.UnsafeCloseable" start="6" end="104" sourcefile="UnsafeCloseable.java" sourcepath="net/openhft/chronicle/core/io/UnsafeCloseable.java">
        <Message>At UnsafeCloseable.java:[lines 6-104]</Message>
      </SourceLine>
      <Message>In class net.openhft.chronicle.core.io.UnsafeCloseable</Message>
    </Class>
    <Method classname="net.openhft.chronicle.core.io.UnsafeCloseable" name="setLong" signature="(J)V" isStatic="false" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.io.UnsafeCloseable" start="31" end="36" startBytecode="0" endBytecode="125" sourcefile="UnsafeCloseable.java" sourcepath="net/openhft/chronicle/core/io/UnsafeCloseable.java"/>
      <Message>In method net.openhft.chronicle.core.io.UnsafeCloseable.setLong(long)</Message>
    </Method>
    <SourceLine classname="net.openhft.chronicle.core.io.UnsafeCloseable" primary="true" start="32" end="32" startBytecode="15" endBytecode="15" sourcefile="UnsafeCloseable.java" sourcepath="net/openhft/chronicle/core/io/UnsafeCloseable.java">
      <Message>At UnsafeCloseable.java:[line 32]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DCN_NULLPOINTER_EXCEPTION" priority="2" rank="17" abbrev="DCN" category="STYLE" instanceHash="3c6d8b7cf95951f12cb72f083c07f117" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>NullPointerException caught</ShortMessage>
    <LongMessage>Do not catch NullPointerException like in net.openhft.chronicle.core.io.UnsafeCloseable.setOrderedLong(long)</LongMessage>
    <Class classname="net.openhft.chronicle.core.io.UnsafeCloseable" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.io.UnsafeCloseable" start="6" end="104" sourcefile="UnsafeCloseable.java" sourcepath="net/openhft/chronicle/core/io/UnsafeCloseable.java">
        <Message>At UnsafeCloseable.java:[lines 6-104]</Message>
      </SourceLine>
      <Message>In class net.openhft.chronicle.core.io.UnsafeCloseable</Message>
    </Class>
    <Method classname="net.openhft.chronicle.core.io.UnsafeCloseable" name="setOrderedLong" signature="(J)V" isStatic="false" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.io.UnsafeCloseable" start="68" end="73" startBytecode="0" endBytecode="126" sourcefile="UnsafeCloseable.java" sourcepath="net/openhft/chronicle/core/io/UnsafeCloseable.java"/>
      <Message>In method net.openhft.chronicle.core.io.UnsafeCloseable.setOrderedLong(long)</Message>
    </Method>
    <SourceLine classname="net.openhft.chronicle.core.io.UnsafeCloseable" primary="true" start="69" end="69" startBytecode="16" endBytecode="16" sourcefile="UnsafeCloseable.java" sourcepath="net/openhft/chronicle/core/io/UnsafeCloseable.java">
      <Message>At UnsafeCloseable.java:[line 69]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DCN_NULLPOINTER_EXCEPTION" priority="2" rank="17" abbrev="DCN" category="STYLE" instanceHash="6aa8e7899dabeabd6feb96af47bfd589" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>NullPointerException caught</ShortMessage>
    <LongMessage>Do not catch NullPointerException like in net.openhft.chronicle.core.io.UnsafeCloseable.setVolatileLong(long)</LongMessage>
    <Class classname="net.openhft.chronicle.core.io.UnsafeCloseable" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.io.UnsafeCloseable" start="6" end="104" sourcefile="UnsafeCloseable.java" sourcepath="net/openhft/chronicle/core/io/UnsafeCloseable.java">
        <Message>At UnsafeCloseable.java:[lines 6-104]</Message>
      </SourceLine>
      <Message>In class net.openhft.chronicle.core.io.UnsafeCloseable</Message>
    </Class>
    <Method classname="net.openhft.chronicle.core.io.UnsafeCloseable" name="setVolatileLong" signature="(J)V" isStatic="false" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.io.UnsafeCloseable" start="49" end="54" startBytecode="0" endBytecode="126" sourcefile="UnsafeCloseable.java" sourcepath="net/openhft/chronicle/core/io/UnsafeCloseable.java"/>
      <Message>In method net.openhft.chronicle.core.io.UnsafeCloseable.setVolatileLong(long)</Message>
    </Method>
    <SourceLine classname="net.openhft.chronicle.core.io.UnsafeCloseable" primary="true" start="50" end="50" startBytecode="16" endBytecode="16" sourcefile="UnsafeCloseable.java" sourcepath="net/openhft/chronicle/core/io/UnsafeCloseable.java">
      <Message>At UnsafeCloseable.java:[line 50]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="a6f0c795d5d94e62c076603cd9ebbd1d" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>new net.openhft.chronicle.core.onoes.RecordingExceptionHandler(LogLevel, Map, boolean) may expose internal representation by storing an externally mutable object into RecordingExceptionHandler.exceptionKeyCountMap</LongMessage>
    <Class classname="net.openhft.chronicle.core.onoes.RecordingExceptionHandler" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.onoes.RecordingExceptionHandler" start="32" end="49" sourcefile="RecordingExceptionHandler.java" sourcepath="net/openhft/chronicle/core/onoes/RecordingExceptionHandler.java">
        <Message>At RecordingExceptionHandler.java:[lines 32-49]</Message>
      </SourceLine>
      <Message>In class net.openhft.chronicle.core.onoes.RecordingExceptionHandler</Message>
    </Class>
    <Method classname="net.openhft.chronicle.core.onoes.RecordingExceptionHandler" name="&lt;init&gt;" signature="(Lnet/openhft/chronicle/core/onoes/LogLevel;Ljava/util/Map;Z)V" isStatic="false" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.onoes.RecordingExceptionHandler" start="32" end="36" startBytecode="0" endBytecode="125" sourcefile="RecordingExceptionHandler.java" sourcepath="net/openhft/chronicle/core/onoes/RecordingExceptionHandler.java"/>
      <Message>In method new net.openhft.chronicle.core.onoes.RecordingExceptionHandler(LogLevel, Map, boolean)</Message>
    </Method>
    <Field classname="net.openhft.chronicle.core.onoes.RecordingExceptionHandler" name="exceptionKeyCountMap" signature="Ljava/util/Map;" isStatic="false" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.onoes.RecordingExceptionHandler" sourcefile="RecordingExceptionHandler.java" sourcepath="net/openhft/chronicle/core/onoes/RecordingExceptionHandler.java">
        <Message>In RecordingExceptionHandler.java</Message>
      </SourceLine>
      <Message>Field net.openhft.chronicle.core.onoes.RecordingExceptionHandler.exceptionKeyCountMap</Message>
    </Field>
    <LocalVariable name="exceptionKeyCountMap" register="2" pc="11" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named exceptionKeyCountMap</Message>
    </LocalVariable>
    <SourceLine classname="net.openhft.chronicle.core.onoes.RecordingExceptionHandler" primary="true" start="34" end="34" startBytecode="11" endBytecode="11" sourcefile="RecordingExceptionHandler.java" sourcepath="net/openhft/chronicle/core/onoes/RecordingExceptionHandler.java">
      <Message>At RecordingExceptionHandler.java:[line 34]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DM_EXIT" priority="2" rank="16" abbrev="Dm" category="BAD_PRACTICE" instanceHash="31f3f66fe639bdf976c1fb9e0f36c884" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="382">
    <ShortMessage>Method invokes System.exit(...)</ShortMessage>
    <LongMessage>net.openhft.chronicle.core.onoes.Slf4jExceptionHandler$1.on(Class, String, Throwable) invokes System.exit(...), which shuts down the entire virtual machine</LongMessage>
    <Class classname="net.openhft.chronicle.core.onoes.Slf4jExceptionHandler$1" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.onoes.Slf4jExceptionHandler$1" start="30" end="37" sourcefile="Slf4jExceptionHandler.java" sourcepath="net/openhft/chronicle/core/onoes/Slf4jExceptionHandler.java">
        <Message>At Slf4jExceptionHandler.java:[lines 30-37]</Message>
      </SourceLine>
      <Message>In class net.openhft.chronicle.core.onoes.Slf4jExceptionHandler$1</Message>
    </Class>
    <Method classname="net.openhft.chronicle.core.onoes.Slf4jExceptionHandler$1" name="on" signature="(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Throwable;)V" isStatic="false" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.onoes.Slf4jExceptionHandler$1" start="33" end="37" startBytecode="0" endBytecode="132" sourcefile="Slf4jExceptionHandler.java" sourcepath="net/openhft/chronicle/core/onoes/Slf4jExceptionHandler.java"/>
      <Message>In method net.openhft.chronicle.core.onoes.Slf4jExceptionHandler$1.on(Class, String, Throwable)</Message>
    </Method>
    <SourceLine classname="net.openhft.chronicle.core.onoes.Slf4jExceptionHandler$1" primary="true" start="35" end="35" startBytecode="36" endBytecode="36" sourcefile="Slf4jExceptionHandler.java" sourcepath="net/openhft/chronicle/core/onoes/Slf4jExceptionHandler.java">
      <Message>At Slf4jExceptionHandler.java:[line 35]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="MC_OVERRIDABLE_METHOD_CALL_IN_CONSTRUCTOR" priority="3" rank="20" abbrev="MC" category="MALICIOUS_CODE" instanceHash="bbe855d0defd8eb6e3252e700a9a8a50" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>An overridable method is called from a constructor</ShortMessage>
    <LongMessage>Overridable method resetThreadLocalHandler is called from constructor new net.openhft.chronicle.core.onoes.ThreadLocalisedExceptionHandler(Slf4jExceptionHandler).</LongMessage>
    <Class classname="net.openhft.chronicle.core.onoes.ThreadLocalisedExceptionHandler" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.onoes.ThreadLocalisedExceptionHandler" start="24" end="77" sourcefile="ThreadLocalisedExceptionHandler.java" sourcepath="net/openhft/chronicle/core/onoes/ThreadLocalisedExceptionHandler.java">
        <Message>At ThreadLocalisedExceptionHandler.java:[lines 24-77]</Message>
      </SourceLine>
      <Message>In class net.openhft.chronicle.core.onoes.ThreadLocalisedExceptionHandler</Message>
    </Class>
    <Method classname="net.openhft.chronicle.core.onoes.ThreadLocalisedExceptionHandler" name="&lt;init&gt;" signature="(Lnet/openhft/chronicle/core/onoes/Slf4jExceptionHandler;)V" isStatic="false" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.onoes.ThreadLocalisedExceptionHandler" start="24" end="27" startBytecode="0" endBytecode="77" sourcefile="ThreadLocalisedExceptionHandler.java" sourcepath="net/openhft/chronicle/core/onoes/ThreadLocalisedExceptionHandler.java"/>
      <Message>In method new net.openhft.chronicle.core.onoes.ThreadLocalisedExceptionHandler(Slf4jExceptionHandler)</Message>
    </Method>
    <String value="resetThreadLocalHandler">
      <Message>Value resetThreadLocalHandler</Message>
    </String>
    <SourceLine classname="net.openhft.chronicle.core.onoes.ThreadLocalisedExceptionHandler" primary="true" start="26" end="26" startBytecode="10" endBytecode="10" sourcefile="ThreadLocalisedExceptionHandler.java" sourcepath="net/openhft/chronicle/core/onoes/ThreadLocalisedExceptionHandler.java">
      <Message>At ThreadLocalisedExceptionHandler.java:[line 26]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="AA_ASSERTION_OF_ARGUMENTS" priority="3" rank="19" abbrev="AA" category="BAD_PRACTICE" instanceHash="a2b9c38d82e209244afefffa51f15195" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Assertion is used to validate an argument of a public method</ShortMessage>
    <LongMessage>Assertion validates method argument at new net.openhft.chronicle.core.onoes.WebExceptionHandler(String, ExceptionHandler). If assertions are disabled, there won&apos;t be any argument validation.</LongMessage>
    <Class classname="net.openhft.chronicle.core.onoes.WebExceptionHandler" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.onoes.WebExceptionHandler" start="33" end="80" sourcefile="WebExceptionHandler.java" sourcepath="net/openhft/chronicle/core/onoes/WebExceptionHandler.java">
        <Message>At WebExceptionHandler.java:[lines 33-80]</Message>
      </SourceLine>
      <Message>In class net.openhft.chronicle.core.onoes.WebExceptionHandler</Message>
    </Class>
    <Method classname="net.openhft.chronicle.core.onoes.WebExceptionHandler" name="&lt;init&gt;" signature="(Ljava/lang/String;Lnet/openhft/chronicle/core/onoes/ExceptionHandler;)V" isStatic="false" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.onoes.WebExceptionHandler" start="40" end="51" startBytecode="0" endBytecode="277" sourcefile="WebExceptionHandler.java" sourcepath="net/openhft/chronicle/core/onoes/WebExceptionHandler.java"/>
      <Message>In method new net.openhft.chronicle.core.onoes.WebExceptionHandler(String, ExceptionHandler)</Message>
    </Method>
    <SourceLine classname="net.openhft.chronicle.core.onoes.WebExceptionHandler" primary="true" start="41" end="41" startBytecode="22" endBytecode="22" sourcefile="WebExceptionHandler.java" sourcepath="net/openhft/chronicle/core/onoes/WebExceptionHandler.java">
      <Message>At WebExceptionHandler.java:[line 41]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="CT_CONSTRUCTOR_THROW" priority="2" rank="16" abbrev="CT" category="BAD_PRACTICE" instanceHash="a5622c20a48c262dc8751ef28543d502" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Be wary of letting constructors throw exceptions.</ShortMessage>
    <LongMessage>Exception thrown in class net.openhft.chronicle.core.onoes.WebExceptionHandler at new net.openhft.chronicle.core.onoes.WebExceptionHandler(String, ExceptionHandler) will leave the constructor. The object under construction remains partially initialized and may be vulnerable to Finalizer attacks.</LongMessage>
    <Class classname="net.openhft.chronicle.core.onoes.WebExceptionHandler" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.onoes.WebExceptionHandler" start="33" end="80" sourcefile="WebExceptionHandler.java" sourcepath="net/openhft/chronicle/core/onoes/WebExceptionHandler.java">
        <Message>At WebExceptionHandler.java:[lines 33-80]</Message>
      </SourceLine>
      <Message>In class net.openhft.chronicle.core.onoes.WebExceptionHandler</Message>
    </Class>
    <Method classname="net.openhft.chronicle.core.onoes.WebExceptionHandler" name="&lt;init&gt;" signature="(Ljava/lang/String;Lnet/openhft/chronicle/core/onoes/ExceptionHandler;)V" isStatic="false" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.onoes.WebExceptionHandler" start="40" end="51" startBytecode="0" endBytecode="277" sourcefile="WebExceptionHandler.java" sourcepath="net/openhft/chronicle/core/onoes/WebExceptionHandler.java"/>
      <Message>In method new net.openhft.chronicle.core.onoes.WebExceptionHandler(String, ExceptionHandler)</Message>
    </Method>
    <SourceLine classname="net.openhft.chronicle.core.onoes.WebExceptionHandler" primary="true" start="41" end="41" startBytecode="32" endBytecode="32" sourcefile="WebExceptionHandler.java" sourcepath="net/openhft/chronicle/core/onoes/WebExceptionHandler.java">
      <Message>At WebExceptionHandler.java:[line 41]</Message>
    </SourceLine>
    <SourceLine classname="net.openhft.chronicle.core.onoes.WebExceptionHandler" start="41" end="41" startBytecode="32" endBytecode="32" sourcefile="WebExceptionHandler.java" sourcepath="net/openhft/chronicle/core/onoes/WebExceptionHandler.java">
      <Message>At WebExceptionHandler.java:[line 41]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="OBL_UNSATISFIED_OBLIGATION" priority="2" rank="20" abbrev="OBL" category="EXPERIMENTAL" instanceHash="219748d517ddf3e5c32e5cd1cfadd2ff" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Method may fail to clean up stream or resource</ShortMessage>
    <LongMessage>new net.openhft.chronicle.core.onoes.WebExceptionHandler(String, ExceptionHandler) may fail to clean up java.io.InputStream</LongMessage>
    <Class classname="net.openhft.chronicle.core.onoes.WebExceptionHandler" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.onoes.WebExceptionHandler" start="33" end="80" sourcefile="WebExceptionHandler.java" sourcepath="net/openhft/chronicle/core/onoes/WebExceptionHandler.java">
        <Message>At WebExceptionHandler.java:[lines 33-80]</Message>
      </SourceLine>
      <Message>In class net.openhft.chronicle.core.onoes.WebExceptionHandler</Message>
    </Class>
    <Method classname="net.openhft.chronicle.core.onoes.WebExceptionHandler" name="&lt;init&gt;" signature="(Ljava/lang/String;Lnet/openhft/chronicle/core/onoes/ExceptionHandler;)V" isStatic="false" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.onoes.WebExceptionHandler" start="40" end="51" startBytecode="0" endBytecode="277" sourcefile="WebExceptionHandler.java" sourcepath="net/openhft/chronicle/core/onoes/WebExceptionHandler.java"/>
      <Message>In method new net.openhft.chronicle.core.onoes.WebExceptionHandler(String, ExceptionHandler)</Message>
    </Method>
    <Class classname="java.io.InputStream" role="CLASS_REFTYPE">
      <SourceLine classname="java.io.InputStream" start="61" end="786" sourcefile="InputStream.java" sourcepath="java/io/InputStream.java">
        <Message>At InputStream.java:[lines 61-786]</Message>
      </SourceLine>
      <Message>Reference type java.io.InputStream</Message>
    </Class>
    <Int value="1" role="INT_OBLIGATIONS_REMAINING">
      <Message>1 instances of obligation remaining</Message>
    </Int>
    <SourceLine classname="net.openhft.chronicle.core.onoes.WebExceptionHandler" primary="true" start="43" end="43" startBytecode="41" endBytecode="41" sourcefile="WebExceptionHandler.java" sourcepath="net/openhft/chronicle/core/onoes/WebExceptionHandler.java" role="SOURCE_LINE_OBLIGATION_CREATED">
      <Message>Obligation to clean up resource created at WebExceptionHandler.java:[line 43] is not discharged</Message>
    </SourceLine>
    <SourceLine classname="net.openhft.chronicle.core.onoes.WebExceptionHandler" start="45" end="45" startBytecode="45" endBytecode="45" sourcefile="WebExceptionHandler.java" sourcepath="net/openhft/chronicle/core/onoes/WebExceptionHandler.java" role="SOURCE_LINE_PATH_CONTINUES">
      <Message>Path continues at WebExceptionHandler.java:[line 45]</Message>
    </SourceLine>
    <SourceLine classname="net.openhft.chronicle.core.onoes.WebExceptionHandler" start="46" end="46" startBytecode="49" endBytecode="49" sourcefile="WebExceptionHandler.java" sourcepath="net/openhft/chronicle/core/onoes/WebExceptionHandler.java" role="SOURCE_LINE_PATH_CONTINUES">
      <Message>Path continues at WebExceptionHandler.java:[line 46]</Message>
    </SourceLine>
    <SourceLine classname="net.openhft.chronicle.core.onoes.WebExceptionHandler" start="49" end="49" startBytecode="57" endBytecode="57" sourcefile="WebExceptionHandler.java" sourcepath="net/openhft/chronicle/core/onoes/WebExceptionHandler.java" role="SOURCE_LINE_PATH_CONTINUES">
      <Message>Path continues at WebExceptionHandler.java:[line 49]</Message>
    </SourceLine>
    <SourceLine classname="net.openhft.chronicle.core.onoes.WebExceptionHandler" start="50" end="50" startBytecode="93" endBytecode="93" sourcefile="WebExceptionHandler.java" sourcepath="net/openhft/chronicle/core/onoes/WebExceptionHandler.java" role="SOURCE_LINE_PATH_CONTINUES">
      <Message>Path continues at WebExceptionHandler.java:[line 50]</Message>
    </SourceLine>
    <SourceLine classname="net.openhft.chronicle.core.onoes.WebExceptionHandler" start="51" end="51" startBytecode="108" endBytecode="108" sourcefile="WebExceptionHandler.java" sourcepath="net/openhft/chronicle/core/onoes/WebExceptionHandler.java" role="SOURCE_LINE_PATH_CONTINUES">
      <Message>Path continues at WebExceptionHandler.java:[line 51]</Message>
    </SourceLine>
    <String value="{InputStream x 1}" role="STRING_REMAINING_OBLIGATIONS">
      <Message>Remaining obligations: {InputStream x 1}</Message>
    </String>
  </BugInstance>
  <BugInstance type="REC_CATCH_EXCEPTION" priority="3" rank="20" abbrev="REC" category="STYLE" instanceHash="7aae4814a3a8aaef6408e48021fbc62a" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="396">
    <ShortMessage>Exception is caught when Exception is not thrown</ShortMessage>
    <LongMessage>Exception is caught when Exception is not thrown in net.openhft.chronicle.core.onoes.WebExceptionHandler.on(Class, String, Throwable)</LongMessage>
    <Class classname="net.openhft.chronicle.core.onoes.WebExceptionHandler" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.onoes.WebExceptionHandler" start="33" end="80" sourcefile="WebExceptionHandler.java" sourcepath="net/openhft/chronicle/core/onoes/WebExceptionHandler.java">
        <Message>At WebExceptionHandler.java:[lines 33-80]</Message>
      </SourceLine>
      <Message>In class net.openhft.chronicle.core.onoes.WebExceptionHandler</Message>
    </Class>
    <Method classname="net.openhft.chronicle.core.onoes.WebExceptionHandler" name="on" signature="(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Throwable;)V" isStatic="false" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.onoes.WebExceptionHandler" start="55" end="80" startBytecode="0" endBytecode="483" sourcefile="WebExceptionHandler.java" sourcepath="net/openhft/chronicle/core/onoes/WebExceptionHandler.java"/>
      <Message>In method net.openhft.chronicle.core.onoes.WebExceptionHandler.on(Class, String, Throwable)</Message>
    </Method>
    <SourceLine classname="net.openhft.chronicle.core.onoes.WebExceptionHandler" primary="true" start="77" end="77" startBytecode="217" endBytecode="217" sourcefile="WebExceptionHandler.java" sourcepath="net/openhft/chronicle/core/onoes/WebExceptionHandler.java">
      <Message>At WebExceptionHandler.java:[line 77]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="CT_CONSTRUCTOR_THROW" priority="2" rank="16" abbrev="CT" category="BAD_PRACTICE" instanceHash="ded9e6225c53d3930beb1c5d4f6461c1" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Be wary of letting constructors throw exceptions.</ShortMessage>
    <LongMessage>Exception thrown in class net.openhft.chronicle.core.pool.DynamicEnumClass at new net.openhft.chronicle.core.pool.DynamicEnumClass(Class) will leave the constructor. The object under construction remains partially initialized and may be vulnerable to Finalizer attacks.</LongMessage>
    <Class classname="net.openhft.chronicle.core.pool.DynamicEnumClass" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.pool.DynamicEnumClass" start="30" end="120" sourcefile="DynamicEnumClass.java" sourcepath="net/openhft/chronicle/core/pool/DynamicEnumClass.java">
        <Message>At DynamicEnumClass.java:[lines 30-120]</Message>
      </SourceLine>
      <Message>In class net.openhft.chronicle.core.pool.DynamicEnumClass</Message>
    </Class>
    <Method classname="net.openhft.chronicle.core.pool.DynamicEnumClass" name="&lt;init&gt;" signature="(Ljava/lang/Class;)V" isStatic="false" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.pool.DynamicEnumClass" start="39" end="47" startBytecode="0" endBytecode="364" sourcefile="DynamicEnumClass.java" sourcepath="net/openhft/chronicle/core/pool/DynamicEnumClass.java"/>
      <Message>In method new net.openhft.chronicle.core.pool.DynamicEnumClass(Class)</Message>
    </Method>
    <SourceLine classname="net.openhft.chronicle.core.pool.DynamicEnumClass" primary="true" start="36" end="36" startBytecode="37" endBytecode="37" sourcefile="DynamicEnumClass.java" sourcepath="net/openhft/chronicle/core/pool/DynamicEnumClass.java">
      <Message>At DynamicEnumClass.java:[line 36]</Message>
    </SourceLine>
    <SourceLine classname="net.openhft.chronicle.core.pool.DynamicEnumClass" start="36" end="36" startBytecode="37" endBytecode="37" sourcefile="DynamicEnumClass.java" sourcepath="net/openhft/chronicle/core/pool/DynamicEnumClass.java">
      <Message>At DynamicEnumClass.java:[line 36]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="c7d21f162a3bb3cf36ddb972434a339" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>net.openhft.chronicle.core.pool.DynamicEnumClass.asArray() may expose internal representation by returning DynamicEnumClass.values</LongMessage>
    <Class classname="net.openhft.chronicle.core.pool.DynamicEnumClass" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.pool.DynamicEnumClass" start="30" end="120" sourcefile="DynamicEnumClass.java" sourcepath="net/openhft/chronicle/core/pool/DynamicEnumClass.java">
        <Message>At DynamicEnumClass.java:[lines 30-120]</Message>
      </SourceLine>
      <Message>In class net.openhft.chronicle.core.pool.DynamicEnumClass</Message>
    </Class>
    <Method classname="net.openhft.chronicle.core.pool.DynamicEnumClass" name="asArray" signature="()[Lnet/openhft/chronicle/core/util/CoreDynamicEnum;" isStatic="false" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.pool.DynamicEnumClass" start="106" end="108" startBytecode="0" endBytecode="128" sourcefile="DynamicEnumClass.java" sourcepath="net/openhft/chronicle/core/pool/DynamicEnumClass.java"/>
      <Message>In method net.openhft.chronicle.core.pool.DynamicEnumClass.asArray()</Message>
    </Method>
    <Field classname="net.openhft.chronicle.core.pool.DynamicEnumClass" name="values" signature="[Lnet/openhft/chronicle/core/util/CoreDynamicEnum;" isStatic="false" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.pool.DynamicEnumClass" sourcefile="DynamicEnumClass.java" sourcepath="net/openhft/chronicle/core/pool/DynamicEnumClass.java">
        <Message>In DynamicEnumClass.java</Message>
      </SourceLine>
      <Message>Field net.openhft.chronicle.core.pool.DynamicEnumClass.values</Message>
    </Field>
    <SourceLine classname="net.openhft.chronicle.core.pool.DynamicEnumClass" primary="true" start="107" end="107" startBytecode="11" endBytecode="11" sourcefile="DynamicEnumClass.java" sourcepath="net/openhft/chronicle/core/pool/DynamicEnumClass.java">
      <Message>At DynamicEnumClass.java:[line 107]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="REC_CATCH_EXCEPTION" priority="3" rank="20" abbrev="REC" category="STYLE" instanceHash="c17a9e95ffe7c7b18f3ddec6e27fe919" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="396">
    <ShortMessage>Exception is caught when Exception is not thrown</ShortMessage>
    <LongMessage>Exception is caught when Exception is not thrown in net.openhft.chronicle.core.pool.DynamicEnumClass.create(String)</LongMessage>
    <Class classname="net.openhft.chronicle.core.pool.DynamicEnumClass" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.pool.DynamicEnumClass" start="30" end="120" sourcefile="DynamicEnumClass.java" sourcepath="net/openhft/chronicle/core/pool/DynamicEnumClass.java">
        <Message>At DynamicEnumClass.java:[lines 30-120]</Message>
      </SourceLine>
      <Message>In class net.openhft.chronicle.core.pool.DynamicEnumClass</Message>
    </Class>
    <Method classname="net.openhft.chronicle.core.pool.DynamicEnumClass" name="create" signature="(Ljava/lang/String;)Lnet/openhft/chronicle/core/util/CoreDynamicEnum;" isStatic="false" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.pool.DynamicEnumClass" start="79" end="89" startBytecode="0" endBytecode="249" sourcefile="DynamicEnumClass.java" sourcepath="net/openhft/chronicle/core/pool/DynamicEnumClass.java"/>
      <Message>In method net.openhft.chronicle.core.pool.DynamicEnumClass.create(String)</Message>
    </Method>
    <SourceLine classname="net.openhft.chronicle.core.pool.DynamicEnumClass" primary="true" start="88" end="88" startBytecode="70" endBytecode="70" sourcefile="DynamicEnumClass.java" sourcepath="net/openhft/chronicle/core/pool/DynamicEnumClass.java">
      <Message>At DynamicEnumClass.java:[line 88]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="CT_CONSTRUCTOR_THROW" priority="2" rank="16" abbrev="CT" category="BAD_PRACTICE" instanceHash="4430942a8d2aedcaaf8d5caab30af14b" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Be wary of letting constructors throw exceptions.</ShortMessage>
    <LongMessage>Exception thrown in class net.openhft.chronicle.core.pool.ParsingCache at new net.openhft.chronicle.core.pool.ParsingCache(int, Function) will leave the constructor. The object under construction remains partially initialized and may be vulnerable to Finalizer attacks.</LongMessage>
    <Class classname="net.openhft.chronicle.core.pool.ParsingCache" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.pool.ParsingCache" start="34" end="69" sourcefile="ParsingCache.java" sourcepath="net/openhft/chronicle/core/pool/ParsingCache.java">
        <Message>At ParsingCache.java:[lines 34-69]</Message>
      </SourceLine>
      <Message>In class net.openhft.chronicle.core.pool.ParsingCache</Message>
    </Class>
    <Method classname="net.openhft.chronicle.core.pool.ParsingCache" name="&lt;init&gt;" signature="(ILjava/util/function/Function;)V" isStatic="false" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.pool.ParsingCache" start="36" end="42" startBytecode="0" endBytecode="174" sourcefile="ParsingCache.java" sourcepath="net/openhft/chronicle/core/pool/ParsingCache.java"/>
      <Message>In method new net.openhft.chronicle.core.pool.ParsingCache(int, Function)</Message>
    </Method>
    <SourceLine classname="net.openhft.chronicle.core.pool.ParsingCache" primary="true" start="42" end="42" startBytecode="69" endBytecode="69" sourcefile="ParsingCache.java" sourcepath="net/openhft/chronicle/core/pool/ParsingCache.java">
      <Message>At ParsingCache.java:[line 42]</Message>
    </SourceLine>
    <SourceLine classname="net.openhft.chronicle.core.pool.ParsingCache" start="42" end="42" startBytecode="69" endBytecode="69" sourcefile="ParsingCache.java" sourcepath="net/openhft/chronicle/core/pool/ParsingCache.java">
      <Message>At ParsingCache.java:[line 42]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="c539f87082f87e8f20132ebe9720ec39" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>net.openhft.chronicle.core.pool.StaticEnumClass.asArray() may expose internal representation by returning StaticEnumClass.values</LongMessage>
    <Class classname="net.openhft.chronicle.core.pool.StaticEnumClass" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.pool.StaticEnumClass" start="27" end="62" sourcefile="StaticEnumClass.java" sourcepath="net/openhft/chronicle/core/pool/StaticEnumClass.java">
        <Message>At StaticEnumClass.java:[lines 27-62]</Message>
      </SourceLine>
      <Message>In class net.openhft.chronicle.core.pool.StaticEnumClass</Message>
    </Class>
    <Method classname="net.openhft.chronicle.core.pool.StaticEnumClass" name="asArray" signature="()[Ljava/lang/Enum;" isStatic="false" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.pool.StaticEnumClass" start="52" end="52" startBytecode="0" endBytecode="64" sourcefile="StaticEnumClass.java" sourcepath="net/openhft/chronicle/core/pool/StaticEnumClass.java"/>
      <Message>In method net.openhft.chronicle.core.pool.StaticEnumClass.asArray()</Message>
    </Method>
    <Field classname="net.openhft.chronicle.core.pool.StaticEnumClass" name="values" signature="[Ljava/lang/Enum;" isStatic="false" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.pool.StaticEnumClass" sourcefile="StaticEnumClass.java" sourcepath="net/openhft/chronicle/core/pool/StaticEnumClass.java">
        <Message>In StaticEnumClass.java</Message>
      </SourceLine>
      <Message>Field net.openhft.chronicle.core.pool.StaticEnumClass.values</Message>
    </Field>
    <SourceLine classname="net.openhft.chronicle.core.pool.StaticEnumClass" primary="true" start="52" end="52" startBytecode="4" endBytecode="4" sourcefile="StaticEnumClass.java" sourcepath="net/openhft/chronicle/core/pool/StaticEnumClass.java">
      <Message>At StaticEnumClass.java:[line 52]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="CT_CONSTRUCTOR_THROW" priority="2" rank="16" abbrev="CT" category="BAD_PRACTICE" instanceHash="81ba4e4dd93aba887721f0756dcad54a" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Be wary of letting constructors throw exceptions.</ShortMessage>
    <LongMessage>Exception thrown in class net.openhft.chronicle.core.pool.StringInterner at new net.openhft.chronicle.core.pool.StringInterner(int) will leave the constructor. The object under construction remains partially initialized and may be vulnerable to Finalizer attacks.</LongMessage>
    <Class classname="net.openhft.chronicle.core.pool.StringInterner" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.pool.StringInterner" start="46" end="81" sourcefile="StringInterner.java" sourcepath="net/openhft/chronicle/core/pool/StringInterner.java">
        <Message>At StringInterner.java:[lines 46-81]</Message>
      </SourceLine>
      <Message>In class net.openhft.chronicle.core.pool.StringInterner</Message>
    </Class>
    <Method classname="net.openhft.chronicle.core.pool.StringInterner" name="&lt;init&gt;" signature="(I)V" isStatic="false" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.pool.StringInterner" start="48" end="53" startBytecode="0" endBytecode="127" sourcefile="StringInterner.java" sourcepath="net/openhft/chronicle/core/pool/StringInterner.java"/>
      <Message>In method new net.openhft.chronicle.core.pool.StringInterner(int)</Message>
    </Method>
    <SourceLine classname="net.openhft.chronicle.core.pool.StringInterner" primary="true" start="49" end="49" startBytecode="10" endBytecode="10" sourcefile="StringInterner.java" sourcepath="net/openhft/chronicle/core/pool/StringInterner.java">
      <Message>At StringInterner.java:[line 49]</Message>
    </SourceLine>
    <SourceLine classname="net.openhft.chronicle.core.pool.StringInterner" start="49" end="49" startBytecode="10" endBytecode="10" sourcefile="StringInterner.java" sourcepath="net/openhft/chronicle/core/pool/StringInterner.java">
      <Message>At StringInterner.java:[line 49]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="MS_EXPOSE_REP" priority="2" rank="18" abbrev="MS" category="MALICIOUS_CODE" instanceHash="78b8dfea361e2570cf564af504ff19b8" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="218">
    <ShortMessage>Public static method may expose internal representation by returning a mutable object or array</ShortMessage>
    <LongMessage>Public static net.openhft.chronicle.core.threads.InvalidEventHandlerException.reusable() may expose internal representation by returning InvalidEventHandlerException.STATIC</LongMessage>
    <Class classname="net.openhft.chronicle.core.threads.InvalidEventHandlerException" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.threads.InvalidEventHandlerException" start="23" end="48" sourcefile="InvalidEventHandlerException.java" sourcepath="net/openhft/chronicle/core/threads/InvalidEventHandlerException.java">
        <Message>At InvalidEventHandlerException.java:[lines 23-48]</Message>
      </SourceLine>
      <Message>In class net.openhft.chronicle.core.threads.InvalidEventHandlerException</Message>
    </Class>
    <Method classname="net.openhft.chronicle.core.threads.InvalidEventHandlerException" name="reusable" signature="()Lnet/openhft/chronicle/core/threads/InvalidEventHandlerException;" isStatic="true" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.threads.InvalidEventHandlerException" start="48" end="48" startBytecode="0" endBytecode="27" sourcefile="InvalidEventHandlerException.java" sourcepath="net/openhft/chronicle/core/threads/InvalidEventHandlerException.java"/>
      <Message>In method net.openhft.chronicle.core.threads.InvalidEventHandlerException.reusable()</Message>
    </Method>
    <Field classname="net.openhft.chronicle.core.threads.InvalidEventHandlerException" name="STATIC" signature="Lnet/openhft/chronicle/core/threads/InvalidEventHandlerException;" isStatic="true" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.threads.InvalidEventHandlerException" sourcefile="InvalidEventHandlerException.java" sourcepath="net/openhft/chronicle/core/threads/InvalidEventHandlerException.java">
        <Message>In InvalidEventHandlerException.java</Message>
      </SourceLine>
      <Message>Field net.openhft.chronicle.core.threads.InvalidEventHandlerException.STATIC</Message>
    </Field>
    <SourceLine classname="net.openhft.chronicle.core.threads.InvalidEventHandlerException" primary="true" start="48" end="48" startBytecode="3" endBytecode="3" sourcefile="InvalidEventHandlerException.java" sourcepath="net/openhft/chronicle/core/threads/InvalidEventHandlerException.java">
      <Message>At InvalidEventHandlerException.java:[line 48]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="7d9e7d3c1071559e8187248e27d89f69" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>net.openhft.chronicle.core.threads.StackSampler.thread(Thread) may expose internal representation by storing an externally mutable object into StackSampler.thread</LongMessage>
    <Class classname="net.openhft.chronicle.core.threads.StackSampler" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.threads.StackSampler" start="31" end="67" sourcefile="StackSampler.java" sourcepath="net/openhft/chronicle/core/threads/StackSampler.java">
        <Message>At StackSampler.java:[lines 31-67]</Message>
      </SourceLine>
      <Message>In class net.openhft.chronicle.core.threads.StackSampler</Message>
    </Class>
    <Method classname="net.openhft.chronicle.core.threads.StackSampler" name="thread" signature="(Ljava/lang/Thread;)V" isStatic="false" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.threads.StackSampler" start="59" end="60" startBytecode="0" endBytecode="61" sourcefile="StackSampler.java" sourcepath="net/openhft/chronicle/core/threads/StackSampler.java"/>
      <Message>In method net.openhft.chronicle.core.threads.StackSampler.thread(Thread)</Message>
    </Method>
    <Field classname="net.openhft.chronicle.core.threads.StackSampler" name="thread" signature="Ljava/lang/Thread;" isStatic="false" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.threads.StackSampler" sourcefile="StackSampler.java" sourcepath="net/openhft/chronicle/core/threads/StackSampler.java">
        <Message>In StackSampler.java</Message>
      </SourceLine>
      <Message>Field net.openhft.chronicle.core.threads.StackSampler.thread</Message>
    </Field>
    <LocalVariable name="thread" register="1" pc="2" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named thread</Message>
    </LocalVariable>
    <SourceLine classname="net.openhft.chronicle.core.threads.StackSampler" primary="true" start="59" end="59" startBytecode="2" endBytecode="2" sourcefile="StackSampler.java" sourcepath="net/openhft/chronicle/core/threads/StackSampler.java">
      <Message>At StackSampler.java:[line 59]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="MC_OVERRIDABLE_METHOD_CALL_IN_CONSTRUCTOR" priority="3" rank="20" abbrev="MC" category="MALICIOUS_CODE" instanceHash="9412ab762f0331363b63355e7811b23b" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>An overridable method is called from a constructor</ShortMessage>
    <LongMessage>Overridable method sampling is called from constructor new net.openhft.chronicle.core.threads.StackSampler().</LongMessage>
    <Class classname="net.openhft.chronicle.core.threads.StackSampler" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.threads.StackSampler" start="31" end="67" sourcefile="StackSampler.java" sourcepath="net/openhft/chronicle/core/threads/StackSampler.java">
        <Message>At StackSampler.java:[lines 31-67]</Message>
      </SourceLine>
      <Message>In class net.openhft.chronicle.core.threads.StackSampler</Message>
    </Class>
    <Method classname="net.openhft.chronicle.core.threads.StackSampler" name="&lt;init&gt;" signature="()V" isStatic="false" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.threads.StackSampler" start="36" end="40" startBytecode="0" endBytecode="114" sourcefile="StackSampler.java" sourcepath="net/openhft/chronicle/core/threads/StackSampler.java"/>
      <Message>In method new net.openhft.chronicle.core.threads.StackSampler()</Message>
    </Method>
    <String value="sampling">
      <Message>Value sampling</Message>
    </String>
    <SourceLine classname="net.openhft.chronicle.core.threads.StackSampler" primary="true" start="37" end="37" startBytecode="20" endBytecode="20" sourcefile="StackSampler.java" sourcepath="net/openhft/chronicle/core/threads/StackSampler.java">
      <Message>At StackSampler.java:[line 37]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="SC_START_IN_CTOR" priority="3" rank="17" abbrev="SC" category="MT_CORRECTNESS" instanceHash="3888cb7627220e66695544c4edcc606a" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Constructor invokes Thread.start()</ShortMessage>
    <LongMessage>new net.openhft.chronicle.core.threads.StackSampler() invokes Thread.start()</LongMessage>
    <Class classname="net.openhft.chronicle.core.threads.StackSampler" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.threads.StackSampler" start="31" end="67" sourcefile="StackSampler.java" sourcepath="net/openhft/chronicle/core/threads/StackSampler.java">
        <Message>At StackSampler.java:[lines 31-67]</Message>
      </SourceLine>
      <Message>In class net.openhft.chronicle.core.threads.StackSampler</Message>
    </Class>
    <Method classname="net.openhft.chronicle.core.threads.StackSampler" name="&lt;init&gt;" signature="()V" isStatic="false" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.threads.StackSampler" start="36" end="40" startBytecode="0" endBytecode="114" sourcefile="StackSampler.java" sourcepath="net/openhft/chronicle/core/threads/StackSampler.java"/>
      <Message>In method new net.openhft.chronicle.core.threads.StackSampler()</Message>
    </Method>
    <Method classname="java.lang.Thread" name="start" signature="()V" isStatic="false" role="METHOD_CALLED">
      <SourceLine classname="java.lang.Thread" start="792" end="814" startBytecode="0" endBytecode="250" sourcefile="Thread.java" sourcepath="java/lang/Thread.java"/>
      <Message>Called method Thread.start()</Message>
    </Method>
    <SourceLine classname="net.openhft.chronicle.core.threads.StackSampler" primary="true" start="39" end="39" startBytecode="45" endBytecode="45" sourcefile="StackSampler.java" sourcepath="net/openhft/chronicle/core/threads/StackSampler.java">
      <Message>At StackSampler.java:[line 39]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="VO_VOLATILE_REFERENCE_TO_ARRAY" priority="3" rank="17" abbrev="VO" category="MT_CORRECTNESS" instanceHash="5eae4e421c5e7faac405a42783a85bc6" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>A volatile reference to an array doesn&apos;t treat the array elements as volatile</ShortMessage>
    <LongMessage>net.openhft.chronicle.core.threads.StackSampler.stack is a volatile reference to an array; the array elements are non-volatile</LongMessage>
    <Class classname="net.openhft.chronicle.core.threads.StackSampler" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.threads.StackSampler" start="31" end="67" sourcefile="StackSampler.java" sourcepath="net/openhft/chronicle/core/threads/StackSampler.java">
        <Message>At StackSampler.java:[lines 31-67]</Message>
      </SourceLine>
      <Message>In class net.openhft.chronicle.core.threads.StackSampler</Message>
    </Class>
    <Field classname="net.openhft.chronicle.core.threads.StackSampler" name="stack" signature="[Ljava/lang/StackTraceElement;" isStatic="false" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.threads.StackSampler" sourcefile="StackSampler.java" sourcepath="net/openhft/chronicle/core/threads/StackSampler.java">
        <Message>In StackSampler.java</Message>
      </SourceLine>
      <Message>Field net.openhft.chronicle.core.threads.StackSampler.stack</Message>
    </Field>
    <SourceLine classname="net.openhft.chronicle.core.threads.StackSampler" sourcefile="StackSampler.java" sourcepath="net/openhft/chronicle/core/threads/StackSampler.java" synthetic="true">
      <Message>In StackSampler.java</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="CN_IDIOM_NO_SUPER_CALL" priority="2" rank="16" abbrev="CN" category="BAD_PRACTICE" instanceHash="77adc6d74836b5cc27f9486e81634b88" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="580">
    <ShortMessage>clone method does not call super.clone()</ShortMessage>
    <LongMessage>net.openhft.chronicle.core.threads.ThreadLocalProperties.clone() does not call super.clone()</LongMessage>
    <Class classname="net.openhft.chronicle.core.threads.ThreadLocalProperties" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.threads.ThreadLocalProperties" start="12" end="174" sourcefile="ThreadLocalProperties.java" sourcepath="net/openhft/chronicle/core/threads/ThreadLocalProperties.java">
        <Message>At ThreadLocalProperties.java:[lines 12-174]</Message>
      </SourceLine>
      <Message>In class net.openhft.chronicle.core.threads.ThreadLocalProperties</Message>
    </Class>
    <Method classname="net.openhft.chronicle.core.threads.ThreadLocalProperties" name="clone" signature="()Ljava/lang/Object;" isStatic="false" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.threads.ThreadLocalProperties" start="86" end="86" startBytecode="0" endBytecode="55" sourcefile="ThreadLocalProperties.java" sourcepath="net/openhft/chronicle/core/threads/ThreadLocalProperties.java"/>
      <Message>In method net.openhft.chronicle.core.threads.ThreadLocalProperties.clone()</Message>
    </Method>
    <SourceLine classname="net.openhft.chronicle.core.threads.ThreadLocalProperties" start="86" end="86" startBytecode="0" endBytecode="55" sourcefile="ThreadLocalProperties.java" sourcepath="net/openhft/chronicle/core/threads/ThreadLocalProperties.java" synthetic="true">
      <Message>At ThreadLocalProperties.java:[line 86]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="SE_BAD_FIELD" priority="2" rank="16" abbrev="Se" category="BAD_PRACTICE" instanceHash="185e14054f9a5d9e2ec1f37ffa569e5b" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Non-transient non-serializable instance field in serializable class</ShortMessage>
    <LongMessage>Class net.openhft.chronicle.core.threads.ThreadLocalProperties defines non-transient non-serializable instance field tl</LongMessage>
    <Class classname="net.openhft.chronicle.core.threads.ThreadLocalProperties" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.threads.ThreadLocalProperties" start="12" end="174" sourcefile="ThreadLocalProperties.java" sourcepath="net/openhft/chronicle/core/threads/ThreadLocalProperties.java">
        <Message>At ThreadLocalProperties.java:[lines 12-174]</Message>
      </SourceLine>
      <Message>In class net.openhft.chronicle.core.threads.ThreadLocalProperties</Message>
    </Class>
    <Field classname="net.openhft.chronicle.core.threads.ThreadLocalProperties" name="tl" signature="Ljava/lang/ThreadLocal;" isStatic="false" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.threads.ThreadLocalProperties" sourcefile="ThreadLocalProperties.java" sourcepath="net/openhft/chronicle/core/threads/ThreadLocalProperties.java">
        <Message>In ThreadLocalProperties.java</Message>
      </SourceLine>
      <Message>Field net.openhft.chronicle.core.threads.ThreadLocalProperties.tl</Message>
    </Field>
    <Type descriptor="Ljava/lang/ThreadLocal;" role="TYPE_FOUND" typeParameters="&lt;java.util.Properties&gt;">
      <SourceLine classname="java.lang.ThreadLocal" start="87" end="288" sourcefile="ThreadLocal.java" sourcepath="java/lang/ThreadLocal.java">
        <Message>At ThreadLocal.java:[lines 87-288]</Message>
      </SourceLine>
      <Message>Actual type ThreadLocal&lt;java.util.Properties&gt;</Message>
    </Type>
    <SourceLine classname="net.openhft.chronicle.core.threads.ThreadLocalProperties" sourcefile="ThreadLocalProperties.java" sourcepath="net/openhft/chronicle/core/threads/ThreadLocalProperties.java" synthetic="true">
      <Message>In ThreadLocalProperties.java</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="SE_NO_SERIALVERSIONID" priority="3" rank="19" abbrev="SnVI" category="BAD_PRACTICE" instanceHash="f498357c6340414a342ed6fabf2860f3" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Class is Serializable, but doesn&apos;t define serialVersionUID</ShortMessage>
    <LongMessage>net.openhft.chronicle.core.threads.ThreadLocalProperties is Serializable; consider declaring a serialVersionUID</LongMessage>
    <Class classname="net.openhft.chronicle.core.threads.ThreadLocalProperties" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.threads.ThreadLocalProperties" start="12" end="174" sourcefile="ThreadLocalProperties.java" sourcepath="net/openhft/chronicle/core/threads/ThreadLocalProperties.java">
        <Message>At ThreadLocalProperties.java:[lines 12-174]</Message>
      </SourceLine>
      <Message>In class net.openhft.chronicle.core.threads.ThreadLocalProperties</Message>
    </Class>
    <SourceLine classname="net.openhft.chronicle.core.threads.ThreadLocalProperties" start="12" end="174" sourcefile="ThreadLocalProperties.java" sourcepath="net/openhft/chronicle/core/threads/ThreadLocalProperties.java" synthetic="true">
      <Message>At ThreadLocalProperties.java:[lines 12-174]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="d0281f5efa63f875ec31ac24cd6250b9" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>new net.openhft.chronicle.core.threads.Timer(EventLoop) may expose internal representation by storing an externally mutable object into Timer.eventLoop</LongMessage>
    <Class classname="net.openhft.chronicle.core.threads.Timer" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.threads.Timer" start="35" end="58" sourcefile="Timer.java" sourcepath="net/openhft/chronicle/core/threads/Timer.java">
        <Message>At Timer.java:[lines 35-58]</Message>
      </SourceLine>
      <Message>In class net.openhft.chronicle.core.threads.Timer</Message>
    </Class>
    <Method classname="net.openhft.chronicle.core.threads.Timer" name="&lt;init&gt;" signature="(Lnet/openhft/chronicle/core/threads/EventLoop;)V" isStatic="false" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.threads.Timer" start="35" end="37" startBytecode="0" endBytecode="69" sourcefile="Timer.java" sourcepath="net/openhft/chronicle/core/threads/Timer.java"/>
      <Message>In method new net.openhft.chronicle.core.threads.Timer(EventLoop)</Message>
    </Method>
    <Field classname="net.openhft.chronicle.core.threads.Timer" name="eventLoop" signature="Lnet/openhft/chronicle/core/threads/EventLoop;" isStatic="false" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.threads.Timer" sourcefile="Timer.java" sourcepath="net/openhft/chronicle/core/threads/Timer.java">
        <Message>In Timer.java</Message>
      </SourceLine>
      <Message>Field net.openhft.chronicle.core.threads.Timer.eventLoop</Message>
    </Field>
    <LocalVariable name="eventLoop" register="1" pc="6" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named eventLoop</Message>
    </LocalVariable>
    <SourceLine classname="net.openhft.chronicle.core.threads.Timer" primary="true" start="36" end="36" startBytecode="6" endBytecode="6" sourcefile="Timer.java" sourcepath="net/openhft/chronicle/core/threads/Timer.java">
      <Message>At Timer.java:[line 36]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="SE_NO_SERIALVERSIONID" priority="3" rank="19" abbrev="SnVI" category="BAD_PRACTICE" instanceHash="ead75d46a50714ae6f0685e4395b267" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Class is Serializable, but doesn&apos;t define serialVersionUID</ShortMessage>
    <LongMessage>net.openhft.chronicle.core.time.SetTimeProvider is Serializable; consider declaring a serialVersionUID</LongMessage>
    <Class classname="net.openhft.chronicle.core.time.SetTimeProvider" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.time.SetTimeProvider" start="35" end="154" sourcefile="SetTimeProvider.java" sourcepath="net/openhft/chronicle/core/time/SetTimeProvider.java">
        <Message>At SetTimeProvider.java:[lines 35-154]</Message>
      </SourceLine>
      <Message>In class net.openhft.chronicle.core.time.SetTimeProvider</Message>
    </Class>
    <SourceLine classname="net.openhft.chronicle.core.time.SetTimeProvider" start="35" end="154" sourcefile="SetTimeProvider.java" sourcepath="net/openhft/chronicle/core/time/SetTimeProvider.java" synthetic="true">
      <Message>At SetTimeProvider.java:[lines 35-154]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="MS_SHOULD_BE_FINAL" priority="3" rank="20" abbrev="MS" category="MALICIOUS_CODE" instanceHash="658d05d4231f6221178e8cc366d343ee" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="218">
    <ShortMessage>Field isn&apos;t final but should be</ShortMessage>
    <LongMessage>net.openhft.chronicle.core.time.SystemTimeProvider.CLOCK isn&apos;t final but should be</LongMessage>
    <Class classname="net.openhft.chronicle.core.time.SystemTimeProvider" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.time.SystemTimeProvider" start="25" end="88" sourcefile="SystemTimeProvider.java" sourcepath="net/openhft/chronicle/core/time/SystemTimeProvider.java">
        <Message>At SystemTimeProvider.java:[lines 25-88]</Message>
      </SourceLine>
      <Message>In class net.openhft.chronicle.core.time.SystemTimeProvider</Message>
    </Class>
    <Field classname="net.openhft.chronicle.core.time.SystemTimeProvider" name="CLOCK" signature="Lnet/openhft/chronicle/core/time/TimeProvider;" isStatic="true" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.time.SystemTimeProvider" sourcefile="SystemTimeProvider.java" sourcepath="net/openhft/chronicle/core/time/SystemTimeProvider.java">
        <Message>In SystemTimeProvider.java</Message>
      </SourceLine>
      <Message>Field net.openhft.chronicle.core.time.SystemTimeProvider.CLOCK</Message>
    </Field>
    <SourceLine classname="net.openhft.chronicle.core.time.SystemTimeProvider" primary="true" start="30" end="30" startBytecode="29" endBytecode="29" sourcefile="SystemTimeProvider.java" sourcepath="net/openhft/chronicle/core/time/SystemTimeProvider.java">
      <Message>At SystemTimeProvider.java:[line 30]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DLS_DEAD_LOCAL_STORE" priority="2" rank="17" abbrev="DLS" category="STYLE" instanceHash="5a57112781509f3da70e8c1397cb9ee3" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="563">
    <ShortMessage>Dead store to local variable</ShortMessage>
    <LongMessage>Dead store to defaultMethod in new net.openhft.chronicle.core.util.AbstractInvocationHandler(Supplier)</LongMessage>
    <Class classname="net.openhft.chronicle.core.util.AbstractInvocationHandler" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.util.AbstractInvocationHandler" start="34" end="113" sourcefile="AbstractInvocationHandler.java" sourcepath="net/openhft/chronicle/core/util/AbstractInvocationHandler.java">
        <Message>At AbstractInvocationHandler.java:[lines 34-113]</Message>
      </SourceLine>
      <Message>In class net.openhft.chronicle.core.util.AbstractInvocationHandler</Message>
    </Class>
    <Method classname="net.openhft.chronicle.core.util.AbstractInvocationHandler" name="&lt;init&gt;" signature="(Ljava/util/function/Supplier;)V" isStatic="false" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.util.AbstractInvocationHandler" start="42" end="47" startBytecode="0" endBytecode="10" sourcefile="AbstractInvocationHandler.java" sourcepath="net/openhft/chronicle/core/util/AbstractInvocationHandler.java"/>
      <Message>In method new net.openhft.chronicle.core.util.AbstractInvocationHandler(Supplier)</Message>
    </Method>
    <LocalVariable name="defaultMethod" register="3" pc="24" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named defaultMethod</Message>
    </LocalVariable>
    <SourceLine classname="net.openhft.chronicle.core.util.AbstractInvocationHandler" primary="true" start="46" end="46" startBytecode="23" endBytecode="23" sourcefile="AbstractInvocationHandler.java" sourcepath="net/openhft/chronicle/core/util/AbstractInvocationHandler.java">
      <Message>At AbstractInvocationHandler.java:[line 46]</Message>
    </SourceLine>
    <Property name="edu.umd.cs.findbugs.detect.DeadLocalStoreProperty.LOCAL_NAME" value="defaultMethod"/>
    <Property name="edu.umd.cs.findbugs.detect.DeadLocalStoreProperty.NO_LOADS" value="true"/>
  </BugInstance>
  <BugInstance type="DLS_DEAD_LOCAL_STORE" priority="2" rank="17" abbrev="DLS" category="STYLE" instanceHash="61e8f9772cf2afee24b1e996331ff3bd" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="563">
    <ShortMessage>Dead store to local variable</ShortMessage>
    <LongMessage>Dead store to proxyToLambda in new net.openhft.chronicle.core.util.AbstractInvocationHandler(Supplier)</LongMessage>
    <Class classname="net.openhft.chronicle.core.util.AbstractInvocationHandler" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.util.AbstractInvocationHandler" start="34" end="113" sourcefile="AbstractInvocationHandler.java" sourcepath="net/openhft/chronicle/core/util/AbstractInvocationHandler.java">
        <Message>At AbstractInvocationHandler.java:[lines 34-113]</Message>
      </SourceLine>
      <Message>In class net.openhft.chronicle.core.util.AbstractInvocationHandler</Message>
    </Class>
    <Method classname="net.openhft.chronicle.core.util.AbstractInvocationHandler" name="&lt;init&gt;" signature="(Ljava/util/function/Supplier;)V" isStatic="false" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.util.AbstractInvocationHandler" start="42" end="47" startBytecode="0" endBytecode="10" sourcefile="AbstractInvocationHandler.java" sourcepath="net/openhft/chronicle/core/util/AbstractInvocationHandler.java"/>
      <Message>In method new net.openhft.chronicle.core.util.AbstractInvocationHandler(Supplier)</Message>
    </Method>
    <LocalVariable name="proxyToLambda" register="2" pc="14" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named proxyToLambda</Message>
    </LocalVariable>
    <SourceLine classname="net.openhft.chronicle.core.util.AbstractInvocationHandler" primary="true" start="44" end="44" startBytecode="13" endBytecode="13" sourcefile="AbstractInvocationHandler.java" sourcepath="net/openhft/chronicle/core/util/AbstractInvocationHandler.java">
      <Message>At AbstractInvocationHandler.java:[line 44]</Message>
    </SourceLine>
    <Property name="edu.umd.cs.findbugs.detect.DeadLocalStoreProperty.LOCAL_NAME" value="proxyToLambda"/>
    <Property name="edu.umd.cs.findbugs.detect.DeadLocalStoreProperty.NO_LOADS" value="true"/>
  </BugInstance>
  <BugInstance type="REC_CATCH_EXCEPTION" priority="3" rank="20" abbrev="REC" category="STYLE" instanceHash="8246e508ed66876b232ed851cc725a87" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="396">
    <ShortMessage>Exception is caught when Exception is not thrown</ShortMessage>
    <LongMessage>Exception is caught when Exception is not thrown in net.openhft.chronicle.core.util.AbstractInvocationHandler.acquireLookup(Class)</LongMessage>
    <Class classname="net.openhft.chronicle.core.util.AbstractInvocationHandler" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.util.AbstractInvocationHandler" start="34" end="113" sourcefile="AbstractInvocationHandler.java" sourcepath="net/openhft/chronicle/core/util/AbstractInvocationHandler.java">
        <Message>At AbstractInvocationHandler.java:[lines 34-113]</Message>
      </SourceLine>
      <Message>In class net.openhft.chronicle.core.util.AbstractInvocationHandler</Message>
    </Class>
    <Method classname="net.openhft.chronicle.core.util.AbstractInvocationHandler" name="acquireLookup" signature="(Ljava/lang/Class;)Ljava/lang/invoke/MethodHandles$Lookup;" isStatic="true" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.util.AbstractInvocationHandler" start="52" end="67" startBytecode="0" endBytecode="292" sourcefile="AbstractInvocationHandler.java" sourcepath="net/openhft/chronicle/core/util/AbstractInvocationHandler.java"/>
      <Message>In method net.openhft.chronicle.core.util.AbstractInvocationHandler.acquireLookup(Class)</Message>
    </Method>
    <SourceLine classname="net.openhft.chronicle.core.util.AbstractInvocationHandler" primary="true" start="65" end="65" startBytecode="77" endBytecode="77" sourcefile="AbstractInvocationHandler.java" sourcepath="net/openhft/chronicle/core/util/AbstractInvocationHandler.java">
      <Message>At AbstractInvocationHandler.java:[line 65]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP" priority="2" rank="18" abbrev="EI" category="MALICIOUS_CODE" instanceHash="aeb67d6c33e65c0dfa208888cb9b03fc" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage>
    <LongMessage>net.openhft.chronicle.core.util.Histogram.sampleCount() may expose internal representation by returning Histogram.sampleCount</LongMessage>
    <Class classname="net.openhft.chronicle.core.util.Histogram" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.util.Histogram" start="31" end="329" sourcefile="Histogram.java" sourcepath="net/openhft/chronicle/core/util/Histogram.java">
        <Message>At Histogram.java:[lines 31-329]</Message>
      </SourceLine>
      <Message>In class net.openhft.chronicle.core.util.Histogram</Message>
    </Class>
    <Method classname="net.openhft.chronicle.core.util.Histogram" name="sampleCount" signature="()[I" isStatic="false" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.util.Histogram" start="145" end="145" startBytecode="0" endBytecode="46" sourcefile="Histogram.java" sourcepath="net/openhft/chronicle/core/util/Histogram.java"/>
      <Message>In method net.openhft.chronicle.core.util.Histogram.sampleCount()</Message>
    </Method>
    <Field classname="net.openhft.chronicle.core.util.Histogram" name="sampleCount" signature="[I" isStatic="false" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.util.Histogram" sourcefile="Histogram.java" sourcepath="net/openhft/chronicle/core/util/Histogram.java">
        <Message>In Histogram.java</Message>
      </SourceLine>
      <Message>Field net.openhft.chronicle.core.util.Histogram.sampleCount</Message>
    </Field>
    <SourceLine classname="net.openhft.chronicle.core.util.Histogram" primary="true" start="145" end="145" startBytecode="4" endBytecode="4" sourcefile="Histogram.java" sourcepath="net/openhft/chronicle/core/util/Histogram.java">
      <Message>At Histogram.java:[line 145]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="HE_EQUALS_USE_HASHCODE" priority="1" rank="14" abbrev="HE" category="BAD_PRACTICE" instanceHash="44ad09487f5929dd208b8d820324db61" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Class defines equals() and uses Object.hashCode()</ShortMessage>
    <LongMessage>net.openhft.chronicle.core.util.Histogram defines equals and uses Object.hashCode()</LongMessage>
    <Class classname="net.openhft.chronicle.core.util.Histogram" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.util.Histogram" start="31" end="329" sourcefile="Histogram.java" sourcepath="net/openhft/chronicle/core/util/Histogram.java">
        <Message>At Histogram.java:[lines 31-329]</Message>
      </SourceLine>
      <Message>In class net.openhft.chronicle.core.util.Histogram</Message>
    </Class>
    <Method classname="net.openhft.chronicle.core.util.Histogram" name="equals" signature="(Ljava/lang/Object;)Z" isStatic="false" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.util.Histogram" start="89" end="101" startBytecode="0" endBytecode="264" sourcefile="Histogram.java" sourcepath="net/openhft/chronicle/core/util/Histogram.java"/>
      <Message>In method net.openhft.chronicle.core.util.Histogram.equals(Object)</Message>
    </Method>
    <SourceLine classname="net.openhft.chronicle.core.util.Histogram" start="89" end="101" startBytecode="0" endBytecode="264" sourcefile="Histogram.java" sourcepath="net/openhft/chronicle/core/util/Histogram.java" synthetic="true">
      <Message>At Histogram.java:[lines 89-101]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DM_CONVERT_CASE" priority="3" rank="20" abbrev="Dm" category="I18N" instanceHash="402f2947edd874f550edbdcb7cec7562" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Consider using Locale parameterized version of invoked method</ShortMessage>
    <LongMessage>Use of non-localized String.toUpperCase() or String.toLowerCase() in net.openhft.chronicle.core.util.ObjectUtils.caseIgnoreLookup(Class)</LongMessage>
    <Class classname="net.openhft.chronicle.core.util.ObjectUtils" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.util.ObjectUtils" start="42" end="604" sourcefile="ObjectUtils.java" sourcepath="net/openhft/chronicle/core/util/ObjectUtils.java">
        <Message>At ObjectUtils.java:[lines 42-604]</Message>
      </SourceLine>
      <Message>In class net.openhft.chronicle.core.util.ObjectUtils</Message>
    </Class>
    <Method classname="net.openhft.chronicle.core.util.ObjectUtils" name="caseIgnoreLookup" signature="(Ljava/lang/Class;)Ljava/util/Map;" isStatic="true" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.util.ObjectUtils" start="199" end="204" startBytecode="0" endBytecode="240" sourcefile="ObjectUtils.java" sourcepath="net/openhft/chronicle/core/util/ObjectUtils.java"/>
      <Message>In method net.openhft.chronicle.core.util.ObjectUtils.caseIgnoreLookup(Class)</Message>
    </Method>
    <SourceLine classname="net.openhft.chronicle.core.util.ObjectUtils" primary="true" start="202" end="202" startBytecode="47" endBytecode="47" sourcefile="ObjectUtils.java" sourcepath="net/openhft/chronicle/core/util/ObjectUtils.java">
      <Message>At ObjectUtils.java:[line 202]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="NP_BOOLEAN_RETURN_NULL" priority="2" rank="14" abbrev="NP" category="BAD_PRACTICE" instanceHash="475aea2522fee212e0311810771f22b6" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="476">
    <ShortMessage>Method with Boolean return type returns explicit null</ShortMessage>
    <LongMessage>net.openhft.chronicle.core.util.ObjectUtils.toBoolean(String) has Boolean return type and returns explicit null</LongMessage>
    <Class classname="net.openhft.chronicle.core.util.ObjectUtils" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.util.ObjectUtils" start="42" end="604" sourcefile="ObjectUtils.java" sourcepath="net/openhft/chronicle/core/util/ObjectUtils.java">
        <Message>At ObjectUtils.java:[lines 42-604]</Message>
      </SourceLine>
      <Message>In class net.openhft.chronicle.core.util.ObjectUtils</Message>
    </Class>
    <Method classname="net.openhft.chronicle.core.util.ObjectUtils" name="toBoolean" signature="(Ljava/lang/String;)Ljava/lang/Boolean;" isStatic="true" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.util.ObjectUtils" start="467" end="477" startBytecode="0" endBytecode="173" sourcefile="ObjectUtils.java" sourcepath="net/openhft/chronicle/core/util/ObjectUtils.java"/>
      <Message>In method net.openhft.chronicle.core.util.ObjectUtils.toBoolean(String)</Message>
    </Method>
    <SourceLine classname="net.openhft.chronicle.core.util.ObjectUtils" primary="true" start="468" end="468" startBytecode="5" endBytecode="5" sourcefile="ObjectUtils.java" sourcepath="net/openhft/chronicle/core/util/ObjectUtils.java">
      <Message>At ObjectUtils.java:[line 468]</Message>
    </SourceLine>
    <SourceLine classname="net.openhft.chronicle.core.util.ObjectUtils" start="475" end="475" startBytecode="41" endBytecode="41" sourcefile="ObjectUtils.java" sourcepath="net/openhft/chronicle/core/util/ObjectUtils.java" role="SOURCE_LINE_ANOTHER_INSTANCE">
      <Message>Another occurrence at ObjectUtils.java:[line 475]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="NP_NONNULL_RETURN_VIOLATION" priority="1" rank="6" abbrev="NP" category="CORRECTNESS" instanceHash="9ce5f7a91a019314659b043276d82bfb" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="476">
    <ShortMessage>Method may return null, but is declared @Nonnull</ShortMessage>
    <LongMessage>net.openhft.chronicle.core.util.ObjectUtils.toBoolean(String) may return null, but is declared @Nonnull</LongMessage>
    <Class classname="net.openhft.chronicle.core.util.ObjectUtils" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.util.ObjectUtils" start="42" end="604" sourcefile="ObjectUtils.java" sourcepath="net/openhft/chronicle/core/util/ObjectUtils.java">
        <Message>At ObjectUtils.java:[lines 42-604]</Message>
      </SourceLine>
      <Message>In class net.openhft.chronicle.core.util.ObjectUtils</Message>
    </Class>
    <Method classname="net.openhft.chronicle.core.util.ObjectUtils" name="toBoolean" signature="(Ljava/lang/String;)Ljava/lang/Boolean;" isStatic="true" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.util.ObjectUtils" start="467" end="477" startBytecode="0" endBytecode="173" sourcefile="ObjectUtils.java" sourcepath="net/openhft/chronicle/core/util/ObjectUtils.java"/>
      <Message>In method net.openhft.chronicle.core.util.ObjectUtils.toBoolean(String)</Message>
    </Method>
    <SourceLine classname="net.openhft.chronicle.core.util.ObjectUtils" primary="true" start="468" end="468" startBytecode="5" endBytecode="5" sourcefile="ObjectUtils.java" sourcepath="net/openhft/chronicle/core/util/ObjectUtils.java">
      <Message>At ObjectUtils.java:[line 468]</Message>
    </SourceLine>
    <SourceLine classname="net.openhft.chronicle.core.util.ObjectUtils" start="475" end="475" startBytecode="41" endBytecode="41" sourcefile="ObjectUtils.java" sourcepath="net/openhft/chronicle/core/util/ObjectUtils.java" role="SOURCE_LINE_ANOTHER_INSTANCE">
      <Message>Another occurrence at ObjectUtils.java:[line 475]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="REC_CATCH_EXCEPTION" priority="3" rank="20" abbrev="REC" category="STYLE" instanceHash="12eb1081c2fb438aa0bb66422766b24e" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="396">
    <ShortMessage>Exception is caught when Exception is not thrown</ShortMessage>
    <LongMessage>Exception is caught when Exception is not thrown in net.openhft.chronicle.core.util.ObjectUtils.supplierForClass(Class)</LongMessage>
    <Class classname="net.openhft.chronicle.core.util.ObjectUtils" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.util.ObjectUtils" start="42" end="604" sourcefile="ObjectUtils.java" sourcepath="net/openhft/chronicle/core/util/ObjectUtils.java">
        <Message>At ObjectUtils.java:[lines 42-604]</Message>
      </SourceLine>
      <Message>In class net.openhft.chronicle.core.util.ObjectUtils</Message>
    </Class>
    <Method classname="net.openhft.chronicle.core.util.ObjectUtils" name="supplierForClass" signature="(Ljava/lang/Class;)Ljava/util/function/Supplier;" isStatic="true" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.util.ObjectUtils" start="88" end="116" startBytecode="0" endBytecode="313" sourcefile="ObjectUtils.java" sourcepath="net/openhft/chronicle/core/util/ObjectUtils.java"/>
      <Message>In method net.openhft.chronicle.core.util.ObjectUtils.supplierForClass(Class)</Message>
    </Method>
    <SourceLine classname="net.openhft.chronicle.core.util.ObjectUtils" primary="true" start="115" end="115" startBytecode="145" endBytecode="145" sourcefile="ObjectUtils.java" sourcepath="net/openhft/chronicle/core/util/ObjectUtils.java">
      <Message>At ObjectUtils.java:[line 115]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DE_MIGHT_IGNORE" priority="3" rank="19" abbrev="DE" category="BAD_PRACTICE" instanceHash="d97011c9bac867e35f0b392d301e8b4b" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="391">
    <ShortMessage>Method might ignore exception</ShortMessage>
    <LongMessage>net.openhft.chronicle.core.util.StringUtils.&lt;static initializer for StringUtils&gt;() might ignore java.lang.Exception</LongMessage>
    <Class classname="net.openhft.chronicle.core.util.StringUtils" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.util.StringUtils" start="32" end="562" sourcefile="StringUtils.java" sourcepath="net/openhft/chronicle/core/util/StringUtils.java">
        <Message>At StringUtils.java:[lines 32-562]</Message>
      </SourceLine>
      <Message>In class net.openhft.chronicle.core.util.StringUtils</Message>
    </Class>
    <Method classname="net.openhft.chronicle.core.util.StringUtils" name="&lt;clinit&gt;" signature="()V" isStatic="true" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.util.StringUtils" start="32" end="91" startBytecode="0" endBytecode="677" sourcefile="StringUtils.java" sourcepath="net/openhft/chronicle/core/util/StringUtils.java"/>
      <Message>In method net.openhft.chronicle.core.util.StringUtils.&lt;static initializer for StringUtils&gt;()</Message>
    </Method>
    <Class classname="java.lang.Exception" role="CLASS_EXCEPTION">
      <SourceLine classname="java.lang.Exception" start="55" end="124" sourcefile="Exception.java" sourcepath="java/lang/Exception.java">
        <Message>At Exception.java:[lines 55-124]</Message>
      </SourceLine>
      <Message>Exception class java.lang.Exception</Message>
    </Class>
    <SourceLine classname="net.openhft.chronicle.core.util.StringUtils" primary="true" start="60" end="60" startBytecode="119" endBytecode="119" sourcefile="StringUtils.java" sourcepath="net/openhft/chronicle/core/util/StringUtils.java">
      <Message>At StringUtils.java:[line 60]</Message>
    </SourceLine>
    <SourceLine classname="net.openhft.chronicle.core.util.StringUtils" primary="true" start="60" end="60" startBytecode="119" endBytecode="119" sourcefile="StringUtils.java" sourcepath="net/openhft/chronicle/core/util/StringUtils.java">
      <Message>At StringUtils.java:[line 60]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DM_STRING_VOID_CTOR" priority="2" rank="18" abbrev="Dm" category="PERFORMANCE" instanceHash="21a003b496f39b79f3595261dc3eafef" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Method invokes inefficient new String() constructor</ShortMessage>
    <LongMessage>net.openhft.chronicle.core.util.StringUtils.newString(char[]) invokes inefficient new String() constructor</LongMessage>
    <Class classname="net.openhft.chronicle.core.util.StringUtils" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.util.StringUtils" start="32" end="562" sourcefile="StringUtils.java" sourcepath="net/openhft/chronicle/core/util/StringUtils.java">
        <Message>At StringUtils.java:[lines 32-562]</Message>
      </SourceLine>
      <Message>In class net.openhft.chronicle.core.util.StringUtils</Message>
    </Class>
    <Method classname="net.openhft.chronicle.core.util.StringUtils" name="newString" signature="([C)Ljava/lang/String;" isStatic="true" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.util.StringUtils" start="235" end="246" startBytecode="0" endBytecode="209" sourcefile="StringUtils.java" sourcepath="net/openhft/chronicle/core/util/StringUtils.java"/>
      <Message>In method net.openhft.chronicle.core.util.StringUtils.newString(char[])</Message>
    </Method>
    <SourceLine classname="net.openhft.chronicle.core.util.StringUtils" primary="true" start="239" end="239" startBytecode="19" endBytecode="19" sourcefile="StringUtils.java" sourcepath="net/openhft/chronicle/core/util/StringUtils.java">
      <Message>At StringUtils.java:[line 239]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DM_STRING_VOID_CTOR" priority="2" rank="18" abbrev="Dm" category="PERFORMANCE" instanceHash="5c64b628200d87e67579bec97951b33f" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Method invokes inefficient new String() constructor</ShortMessage>
    <LongMessage>net.openhft.chronicle.core.util.StringUtils.newStringFromBytes(byte[]) invokes inefficient new String() constructor</LongMessage>
    <Class classname="net.openhft.chronicle.core.util.StringUtils" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.util.StringUtils" start="32" end="562" sourcefile="StringUtils.java" sourcepath="net/openhft/chronicle/core/util/StringUtils.java">
        <Message>At StringUtils.java:[lines 32-562]</Message>
      </SourceLine>
      <Message>In class net.openhft.chronicle.core.util.StringUtils</Message>
    </Class>
    <Method classname="net.openhft.chronicle.core.util.StringUtils" name="newStringFromBytes" signature="([B)Ljava/lang/String;" isStatic="true" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.util.StringUtils" start="253" end="260" startBytecode="0" endBytecode="166" sourcefile="StringUtils.java" sourcepath="net/openhft/chronicle/core/util/StringUtils.java"/>
      <Message>In method net.openhft.chronicle.core.util.StringUtils.newStringFromBytes(byte[])</Message>
    </Method>
    <SourceLine classname="net.openhft.chronicle.core.util.StringUtils" primary="true" start="255" end="255" startBytecode="7" endBytecode="7" sourcefile="StringUtils.java" sourcepath="net/openhft/chronicle/core/util/StringUtils.java">
      <Message>At StringUtils.java:[line 255]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="REC_CATCH_EXCEPTION" priority="3" rank="20" abbrev="REC" category="STYLE" instanceHash="8a2dbb46526453c0f5a2076c97e1e174" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="396">
    <ShortMessage>Exception is caught when Exception is not thrown</ShortMessage>
    <LongMessage>Exception is caught when Exception is not thrown in net.openhft.chronicle.core.util.StringUtils.&lt;static initializer for StringUtils&gt;()</LongMessage>
    <Class classname="net.openhft.chronicle.core.util.StringUtils" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.util.StringUtils" start="32" end="562" sourcefile="StringUtils.java" sourcepath="net/openhft/chronicle/core/util/StringUtils.java">
        <Message>At StringUtils.java:[lines 32-562]</Message>
      </SourceLine>
      <Message>In class net.openhft.chronicle.core.util.StringUtils</Message>
    </Class>
    <Method classname="net.openhft.chronicle.core.util.StringUtils" name="&lt;clinit&gt;" signature="()V" isStatic="true" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.util.StringUtils" start="32" end="91" startBytecode="0" endBytecode="677" sourcefile="StringUtils.java" sourcepath="net/openhft/chronicle/core/util/StringUtils.java"/>
      <Message>In method net.openhft.chronicle.core.util.StringUtils.&lt;static initializer for StringUtils&gt;()</Message>
    </Method>
    <SourceLine classname="net.openhft.chronicle.core.util.StringUtils" primary="true" start="51" end="51" startBytecode="80" endBytecode="80" sourcefile="StringUtils.java" sourcepath="net/openhft/chronicle/core/util/StringUtils.java">
      <Message>At StringUtils.java:[line 51]</Message>
    </SourceLine>
    <SourceLine classname="net.openhft.chronicle.core.util.StringUtils" start="60" end="60" startBytecode="119" endBytecode="119" sourcefile="StringUtils.java" sourcepath="net/openhft/chronicle/core/util/StringUtils.java" role="SOURCE_LINE_ANOTHER_INSTANCE">
      <Message>Another occurrence at StringUtils.java:[line 60]</Message>
    </SourceLine>
    <SourceLine classname="net.openhft.chronicle.core.util.StringUtils" start="88" end="88" startBytecode="254" endBytecode="254" sourcefile="StringUtils.java" sourcepath="net/openhft/chronicle/core/util/StringUtils.java" role="SOURCE_LINE_ANOTHER_INSTANCE">
      <Message>Another occurrence at StringUtils.java:[line 88]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="REC_CATCH_EXCEPTION" priority="3" rank="20" abbrev="REC" category="STYLE" instanceHash="7ca1ba2d9b46449fb3f87e6b77270463" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="396">
    <ShortMessage>Exception is caught when Exception is not thrown</ShortMessage>
    <LongMessage>Exception is caught when Exception is not thrown in net.openhft.chronicle.core.util.StringUtils.newString(char[])</LongMessage>
    <Class classname="net.openhft.chronicle.core.util.StringUtils" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.util.StringUtils" start="32" end="562" sourcefile="StringUtils.java" sourcepath="net/openhft/chronicle/core/util/StringUtils.java">
        <Message>At StringUtils.java:[lines 32-562]</Message>
      </SourceLine>
      <Message>In class net.openhft.chronicle.core.util.StringUtils</Message>
    </Class>
    <Method classname="net.openhft.chronicle.core.util.StringUtils" name="newString" signature="([C)Ljava/lang/String;" isStatic="true" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.util.StringUtils" start="235" end="246" startBytecode="0" endBytecode="209" sourcefile="StringUtils.java" sourcepath="net/openhft/chronicle/core/util/StringUtils.java"/>
      <Message>In method net.openhft.chronicle.core.util.StringUtils.newString(char[])</Message>
    </Method>
    <SourceLine classname="net.openhft.chronicle.core.util.StringUtils" primary="true" start="245" end="245" startBytecode="57" endBytecode="57" sourcefile="StringUtils.java" sourcepath="net/openhft/chronicle/core/util/StringUtils.java">
      <Message>At StringUtils.java:[line 245]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="SF_SWITCH_NO_DEFAULT" priority="2" rank="19" abbrev="SF" category="STYLE" instanceHash="d9c505255db4d0aaf9b6d607166a0b4c" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Switch statement found where default case is missing</ShortMessage>
    <LongMessage>Switch statement found in net.openhft.chronicle.core.util.StringUtils.parseDouble(CharSequence) where default case is missing</LongMessage>
    <Class classname="net.openhft.chronicle.core.util.StringUtils" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.util.StringUtils" start="32" end="562" sourcefile="StringUtils.java" sourcepath="net/openhft/chronicle/core/util/StringUtils.java">
        <Message>At StringUtils.java:[lines 32-562]</Message>
      </SourceLine>
      <Message>In class net.openhft.chronicle.core.util.StringUtils</Message>
    </Class>
    <Method classname="net.openhft.chronicle.core.util.StringUtils" name="parseDouble" signature="(Ljava/lang/CharSequence;)D" isStatic="true" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.util.StringUtils" start="274" end="319" startBytecode="0" endBytecode="476" sourcefile="StringUtils.java" sourcepath="net/openhft/chronicle/core/util/StringUtils.java"/>
      <Message>In method net.openhft.chronicle.core.util.StringUtils.parseDouble(CharSequence)</Message>
    </Method>
    <SourceLine classname="net.openhft.chronicle.core.util.StringUtils" primary="true" start="281" end="296" startBytecode="25" endBytecode="125" sourcefile="StringUtils.java" sourcepath="net/openhft/chronicle/core/util/StringUtils.java">
      <Message>At StringUtils.java:[lines 281-296]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="EI_EXPOSE_REP2" priority="2" rank="18" abbrev="EI2" category="MALICIOUS_CODE" instanceHash="bfebff98de89c9f8ddd76edfb4a56ad3" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="374">
    <ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage>
    <LongMessage>new net.openhft.chronicle.core.util.ThreadIndexAssigner(IntArrayValues) may expose internal representation by storing an externally mutable object into ThreadIndexAssigner.values</LongMessage>
    <Class classname="net.openhft.chronicle.core.util.ThreadIndexAssigner" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.util.ThreadIndexAssigner" start="12" end="45" sourcefile="ThreadIndexAssigner.java" sourcepath="net/openhft/chronicle/core/util/ThreadIndexAssigner.java">
        <Message>At ThreadIndexAssigner.java:[lines 12-45]</Message>
      </SourceLine>
      <Message>In class net.openhft.chronicle.core.util.ThreadIndexAssigner</Message>
    </Class>
    <Method classname="net.openhft.chronicle.core.util.ThreadIndexAssigner" name="&lt;init&gt;" signature="(Lnet/openhft/chronicle/core/values/IntArrayValues;)V" isStatic="false" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.util.ThreadIndexAssigner" start="12" end="14" startBytecode="0" endBytecode="69" sourcefile="ThreadIndexAssigner.java" sourcepath="net/openhft/chronicle/core/util/ThreadIndexAssigner.java"/>
      <Message>In method new net.openhft.chronicle.core.util.ThreadIndexAssigner(IntArrayValues)</Message>
    </Method>
    <Field classname="net.openhft.chronicle.core.util.ThreadIndexAssigner" name="values" signature="Lnet/openhft/chronicle/core/values/IntArrayValues;" isStatic="false" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.util.ThreadIndexAssigner" sourcefile="ThreadIndexAssigner.java" sourcepath="net/openhft/chronicle/core/util/ThreadIndexAssigner.java">
        <Message>In ThreadIndexAssigner.java</Message>
      </SourceLine>
      <Message>Field net.openhft.chronicle.core.util.ThreadIndexAssigner.values</Message>
    </Field>
    <LocalVariable name="values" register="1" pc="6" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named values</Message>
    </LocalVariable>
    <SourceLine classname="net.openhft.chronicle.core.util.ThreadIndexAssigner" primary="true" start="13" end="13" startBytecode="6" endBytecode="6" sourcefile="ThreadIndexAssigner.java" sourcepath="net/openhft/chronicle/core/util/ThreadIndexAssigner.java">
      <Message>At ThreadIndexAssigner.java:[line 13]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="IT_NO_SUCH_ELEMENT" priority="3" rank="19" abbrev="It" category="BAD_PRACTICE" instanceHash="69626fd187e1f322c455b4f56841ea32" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Iterator next() method cannot throw NoSuchElementException</ShortMessage>
    <LongMessage>net.openhft.chronicle.core.util.WeakIdentityHashMap$2$1.next() cannot throw NoSuchElementException</LongMessage>
    <Class classname="net.openhft.chronicle.core.util.WeakIdentityHashMap$2$1" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.util.WeakIdentityHashMap$2$1" start="104" end="117" sourcefile="WeakIdentityHashMap.java" sourcepath="net/openhft/chronicle/core/util/WeakIdentityHashMap.java">
        <Message>At WeakIdentityHashMap.java:[lines 104-117]</Message>
      </SourceLine>
      <Message>In class net.openhft.chronicle.core.util.WeakIdentityHashMap$2$1</Message>
    </Class>
    <Method classname="net.openhft.chronicle.core.util.WeakIdentityHashMap$2$1" name="next" signature="()Ljava/util/Map$Entry;" isStatic="false" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.util.WeakIdentityHashMap$2$1" start="117" end="117" startBytecode="0" endBytecode="68" sourcefile="WeakIdentityHashMap.java" sourcepath="net/openhft/chronicle/core/util/WeakIdentityHashMap.java"/>
      <Message>In method net.openhft.chronicle.core.util.WeakIdentityHashMap$2$1.next()</Message>
    </Method>
    <SourceLine classname="net.openhft.chronicle.core.util.WeakIdentityHashMap$2$1" start="117" end="117" startBytecode="0" endBytecode="68" sourcefile="WeakIdentityHashMap.java" sourcepath="net/openhft/chronicle/core/util/WeakIdentityHashMap.java" synthetic="true">
      <Message>At WeakIdentityHashMap.java:[line 117]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="CT_CONSTRUCTOR_THROW" priority="2" rank="16" abbrev="CT" category="BAD_PRACTICE" instanceHash="ce0b8a267ef06a586cc16dd291f4b21" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Be wary of letting constructors throw exceptions.</ShortMessage>
    <LongMessage>Exception thrown in class net.openhft.chronicle.core.watcher.FileSystemWatcher at new net.openhft.chronicle.core.watcher.FileSystemWatcher() will leave the constructor. The object under construction remains partially initialized and may be vulnerable to Finalizer attacks.</LongMessage>
    <Class classname="net.openhft.chronicle.core.watcher.FileSystemWatcher" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.watcher.FileSystemWatcher" start="38" end="202" sourcefile="FileSystemWatcher.java" sourcepath="net/openhft/chronicle/core/watcher/FileSystemWatcher.java">
        <Message>At FileSystemWatcher.java:[lines 38-202]</Message>
      </SourceLine>
      <Message>In class net.openhft.chronicle.core.watcher.FileSystemWatcher</Message>
    </Class>
    <Method classname="net.openhft.chronicle.core.watcher.FileSystemWatcher" name="&lt;init&gt;" signature="()V" isStatic="false" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.watcher.FileSystemWatcher" start="46" end="48" startBytecode="0" endBytecode="156" sourcefile="FileSystemWatcher.java" sourcepath="net/openhft/chronicle/core/watcher/FileSystemWatcher.java"/>
      <Message>In method new net.openhft.chronicle.core.watcher.FileSystemWatcher()</Message>
    </Method>
    <SourceLine classname="net.openhft.chronicle.core.watcher.FileSystemWatcher" primary="true" start="38" end="38" startBytecode="4" endBytecode="4" sourcefile="FileSystemWatcher.java" sourcepath="net/openhft/chronicle/core/watcher/FileSystemWatcher.java">
      <Message>At FileSystemWatcher.java:[line 38]</Message>
    </SourceLine>
    <SourceLine classname="net.openhft.chronicle.core.watcher.FileSystemWatcher" start="38" end="38" startBytecode="4" endBytecode="4" sourcefile="FileSystemWatcher.java" sourcepath="net/openhft/chronicle/core/watcher/FileSystemWatcher.java">
      <Message>At FileSystemWatcher.java:[line 38]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="MC_OVERRIDABLE_METHOD_CALL_IN_CONSTRUCTOR" priority="3" rank="20" abbrev="MC" category="MALICIOUS_CODE" instanceHash="dc0f182d17e63753d6154b058d507f0c" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>An overridable method is called from a constructor</ShortMessage>
    <LongMessage>Overridable method run is called from constructor new net.openhft.chronicle.core.watcher.FileSystemWatcher().</LongMessage>
    <Class classname="net.openhft.chronicle.core.watcher.FileSystemWatcher" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.watcher.FileSystemWatcher" start="38" end="202" sourcefile="FileSystemWatcher.java" sourcepath="net/openhft/chronicle/core/watcher/FileSystemWatcher.java">
        <Message>At FileSystemWatcher.java:[lines 38-202]</Message>
      </SourceLine>
      <Message>In class net.openhft.chronicle.core.watcher.FileSystemWatcher</Message>
    </Class>
    <Method classname="net.openhft.chronicle.core.watcher.FileSystemWatcher" name="&lt;init&gt;" signature="()V" isStatic="false" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.watcher.FileSystemWatcher" start="46" end="48" startBytecode="0" endBytecode="156" sourcefile="FileSystemWatcher.java" sourcepath="net/openhft/chronicle/core/watcher/FileSystemWatcher.java"/>
      <Message>In method new net.openhft.chronicle.core.watcher.FileSystemWatcher()</Message>
    </Method>
    <String value="run">
      <Message>Value run</Message>
    </String>
    <SourceLine classname="net.openhft.chronicle.core.watcher.FileSystemWatcher" primary="true" start="44" end="44" startBytecode="59" endBytecode="59" sourcefile="FileSystemWatcher.java" sourcepath="net/openhft/chronicle/core/watcher/FileSystemWatcher.java">
      <Message>At FileSystemWatcher.java:[line 44]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="CT_CONSTRUCTOR_THROW" priority="2" rank="16" abbrev="CT" category="BAD_PRACTICE" instanceHash="24d498a27204f072f5c181399e5e17f" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Be wary of letting constructors throw exceptions.</ShortMessage>
    <LongMessage>Exception thrown in class net.openhft.chronicle.core.watcher.JMXFileManager at new net.openhft.chronicle.core.watcher.JMXFileManager(String, String) will leave the constructor. The object under construction remains partially initialized and may be vulnerable to Finalizer attacks.</LongMessage>
    <Class classname="net.openhft.chronicle.core.watcher.JMXFileManager" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.watcher.JMXFileManager" start="26" end="72" sourcefile="JMXFileManager.java" sourcepath="net/openhft/chronicle/core/watcher/JMXFileManager.java">
        <Message>At JMXFileManager.java:[lines 26-72]</Message>
      </SourceLine>
      <Message>In class net.openhft.chronicle.core.watcher.JMXFileManager</Message>
    </Class>
    <Method classname="net.openhft.chronicle.core.watcher.JMXFileManager" name="&lt;init&gt;" signature="(Ljava/lang/String;Ljava/lang/String;)V" isStatic="false" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.watcher.JMXFileManager" start="30" end="38" startBytecode="0" endBytecode="212" sourcefile="JMXFileManager.java" sourcepath="net/openhft/chronicle/core/watcher/JMXFileManager.java"/>
      <Message>In method new net.openhft.chronicle.core.watcher.JMXFileManager(String, String)</Message>
    </Method>
    <SourceLine classname="net.openhft.chronicle.core.watcher.JMXFileManager" primary="true" start="36" end="36" startBytecode="75" endBytecode="75" sourcefile="JMXFileManager.java" sourcepath="net/openhft/chronicle/core/watcher/JMXFileManager.java">
      <Message>At JMXFileManager.java:[line 36]</Message>
    </SourceLine>
    <SourceLine classname="net.openhft.chronicle.core.watcher.JMXFileManager" start="36" end="36" startBytecode="75" endBytecode="75" sourcefile="JMXFileManager.java" sourcepath="net/openhft/chronicle/core/watcher/JMXFileManager.java">
      <Message>At JMXFileManager.java:[line 36]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="MC_OVERRIDABLE_METHOD_CALL_IN_CONSTRUCTOR" priority="3" rank="20" abbrev="MC" category="MALICIOUS_CODE" instanceHash="dfcb92619b759b99ac5b432849300808" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>An overridable method is called from a constructor</ShortMessage>
    <LongMessage>Overridable method jmxPath is called from constructor new net.openhft.chronicle.core.watcher.JMXFileManager(String, String).</LongMessage>
    <Class classname="net.openhft.chronicle.core.watcher.JMXFileManager" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.watcher.JMXFileManager" start="26" end="72" sourcefile="JMXFileManager.java" sourcepath="net/openhft/chronicle/core/watcher/JMXFileManager.java">
        <Message>At JMXFileManager.java:[lines 26-72]</Message>
      </SourceLine>
      <Message>In class net.openhft.chronicle.core.watcher.JMXFileManager</Message>
    </Class>
    <Method classname="net.openhft.chronicle.core.watcher.JMXFileManager" name="&lt;init&gt;" signature="(Ljava/lang/String;Ljava/lang/String;)V" isStatic="false" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.watcher.JMXFileManager" start="30" end="38" startBytecode="0" endBytecode="212" sourcefile="JMXFileManager.java" sourcepath="net/openhft/chronicle/core/watcher/JMXFileManager.java"/>
      <Message>In method new net.openhft.chronicle.core.watcher.JMXFileManager(String, String)</Message>
    </Method>
    <String value="jmxPath">
      <Message>Value jmxPath</Message>
    </String>
    <SourceLine classname="net.openhft.chronicle.core.watcher.JMXFileManager" primary="true" start="34" end="34" startBytecode="27" endBytecode="27" sourcefile="JMXFileManager.java" sourcepath="net/openhft/chronicle/core/watcher/JMXFileManager.java">
      <Message>At JMXFileManager.java:[line 34]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="MC_OVERRIDABLE_METHOD_CALL_IN_CONSTRUCTOR" priority="3" rank="20" abbrev="MC" category="MALICIOUS_CODE" instanceHash="19c5cea54d4f76de7b19f7d948573cdd" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>An overridable method is called from a constructor</ShortMessage>
    <LongMessage>Overridable method type is called from constructor new net.openhft.chronicle.core.watcher.JMXFileManager(String, String).</LongMessage>
    <Class classname="net.openhft.chronicle.core.watcher.JMXFileManager" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.watcher.JMXFileManager" start="26" end="72" sourcefile="JMXFileManager.java" sourcepath="net/openhft/chronicle/core/watcher/JMXFileManager.java">
        <Message>At JMXFileManager.java:[lines 26-72]</Message>
      </SourceLine>
      <Message>In class net.openhft.chronicle.core.watcher.JMXFileManager</Message>
    </Class>
    <Method classname="net.openhft.chronicle.core.watcher.JMXFileManager" name="&lt;init&gt;" signature="(Ljava/lang/String;Ljava/lang/String;)V" isStatic="false" primary="true">
      <SourceLine classname="net.openhft.chronicle.core.watcher.JMXFileManager" start="30" end="38" startBytecode="0" endBytecode="212" sourcefile="JMXFileManager.java" sourcepath="net/openhft/chronicle/core/watcher/JMXFileManager.java"/>
      <Message>In method new net.openhft.chronicle.core.watcher.JMXFileManager(String, String)</Message>
    </Method>
    <String value="type">
      <Message>Value type</Message>
    </String>
    <SourceLine classname="net.openhft.chronicle.core.watcher.JMXFileManager" primary="true" start="34" end="34" startBytecode="39" endBytecode="39" sourcefile="JMXFileManager.java" sourcepath="net/openhft/chronicle/core/watcher/JMXFileManager.java">
      <Message>At JMXFileManager.java:[line 34]</Message>
    </SourceLine>
  </BugInstance>
  <BugCategory category="BAD_PRACTICE">
    <Description>Bad practice</Description>
  </BugCategory>
  <BugCategory category="MALICIOUS_CODE">
    <Description>Malicious code vulnerability</Description>
  </BugCategory>
  <BugCategory category="PERFORMANCE">
    <Description>Performance</Description>
  </BugCategory>
  <BugCategory category="CORRECTNESS">
    <Description>Correctness</Description>
  </BugCategory>
  <BugCategory category="STYLE">
    <Description>Dodgy code</Description>
  </BugCategory>
  <BugCategory category="EXPERIMENTAL">
    <Description>Experimental</Description>
  </BugCategory>
  <BugCategory category="MT_CORRECTNESS">
    <Description>Multithreaded correctness</Description>
  </BugCategory>
  <BugCategory category="I18N">
    <Description>Internationalization</Description>
  </BugCategory>
  <BugPattern type="DLS_DEAD_LOCAL_STORE" abbrev="DLS" category="STYLE">
    <ShortDescription>Dead store to local variable</ShortDescription>
    <Details><![CDATA[

<p>
This instruction assigns a value to a local variable,
but the value is not read or used in any subsequent instruction.
Often, this indicates an error, because the value computed is never
used.
</p>
<p>
Note that Sun's javac compiler often generates dead stores for
final local variables. Because SpotBugs is a bytecode-based tool,
there is no easy way to eliminate these false positives.
</p>

    ]]></Details>
  </BugPattern>
  <BugPattern type="ICAST_IDIV_CAST_TO_DOUBLE" abbrev="ICAST" category="STYLE">
    <ShortDescription>Integral division result cast to double or float</ShortDescription>
    <Details><![CDATA[

<p>
This code casts the result of an integral division (e.g., int or long division)
operation to double or float.
Doing division on integers truncates the result
to the integer value closest to zero. The fact that the result
was cast to double suggests that this precision should have been retained.
What was probably meant was to cast one or both of the operands to
double <em>before</em> performing the division.  Here is an example:
</p>
<pre><code>int x = 2;
int y = 5;
// Wrong: yields result 0.0
double value1 = x / y;

// Right: yields result 0.4
double value2 = x / (double) y;
</code></pre>

    ]]></Details>
  </BugPattern>
  <BugPattern type="CN_IDIOM_NO_SUPER_CALL" abbrev="CN" category="BAD_PRACTICE">
    <ShortDescription>clone method does not call super.clone()</ShortDescription>
    <Details><![CDATA[

<p> This non-final class defines a clone() method that does not call super.clone().
If this class ("<i>A</i>") is extended by a subclass ("<i>B</i>"),
and the subclass <i>B</i> calls super.clone(), then it is likely that
<i>B</i>'s clone() method will return an object of type <i>A</i>,
which violates the standard contract for clone().</p>

<p> If all clone() methods call super.clone(), then they are guaranteed
to use Object.clone(), which always returns an object of the correct type.</p>

    ]]></Details>
  </BugPattern>
  <BugPattern type="NM_SAME_SIMPLE_NAME_AS_INTERFACE" abbrev="Nm" category="BAD_PRACTICE">
    <ShortDescription>Class names shouldn&apos;t shadow simple name of implemented interface</ShortDescription>
    <Details><![CDATA[

  <p> This class/interface has a simple name that is identical to that of an implemented/extended interface, except
that the interface is in a different package (e.g., <code>alpha.Foo</code> extends <code>beta.Foo</code>).
This can be exceptionally confusing, create lots of situations in which you have to look at import statements
to resolve references and creates many
opportunities to accidentally define methods that do not override methods in their superclasses.
</p>

    ]]></Details>
  </BugPattern>
  <BugPattern type="EI_EXPOSE_REP2" abbrev="EI2" category="MALICIOUS_CODE" cweid="374">
    <ShortDescription>May expose internal representation by incorporating reference to mutable object</ShortDescription>
    <Details><![CDATA[

  <p> This code stores a reference to an externally mutable object into the
  internal representation of the object.&nbsp;
   If instances
   are accessed by untrusted code, and unchecked changes to
   the mutable object would compromise security or other
   important properties, you will need to do something different.
  Storing a copy of the object is better approach in many situations.</p>

    ]]></Details>
  </BugPattern>
  <BugPattern type="VO_VOLATILE_REFERENCE_TO_ARRAY" abbrev="VO" category="MT_CORRECTNESS">
    <ShortDescription>A volatile reference to an array doesn&apos;t treat the array elements as volatile</ShortDescription>
    <Details><![CDATA[

<p>This declares a volatile reference to an array, which might not be what
you want. With a volatile reference to an array, reads and writes of
the reference to the array are treated as volatile, but the array elements
are non-volatile. To get volatile array elements, you will need to use
one of the atomic array classes in java.util.concurrent (provided
in Java 5.0).</p>

    ]]></Details>
  </BugPattern>
  <BugPattern type="SC_START_IN_CTOR" abbrev="SC" category="MT_CORRECTNESS">
    <ShortDescription>Constructor invokes Thread.start()</ShortDescription>
    <Details><![CDATA[

  <p> The constructor starts a thread. This is likely to be wrong if
   the class is ever extended/subclassed, since the thread will be started
   before the subclass constructor is started.</p>

    ]]></Details>
  </BugPattern>
  <BugPattern type="NP_NONNULL_RETURN_VIOLATION" abbrev="NP" category="CORRECTNESS">
    <ShortDescription>Method may return null, but is declared @Nonnull</ShortDescription>
    <Details><![CDATA[
      
      <p>
      This method may return a null value, but the method (or a superclass method
      which it overrides) is declared to return @Nonnull.
      </p>
      
   ]]></Details>
  </BugPattern>
  <BugPattern type="MS_SHOULD_BE_FINAL" abbrev="MS" category="MALICIOUS_CODE">
    <ShortDescription>Field isn&apos;t final but should be</ShortDescription>
    <Details><![CDATA[

   <p>
This <code>public static</code> or <code>protected static</code> field is not final, and
could be changed by malicious code or
        by accident from another package.
        The field could be made final to avoid
        this vulnerability.</p>

    ]]></Details>
  </BugPattern>
  <BugPattern type="ICAST_INTEGER_MULTIPLY_CAST_TO_LONG" abbrev="ICAST" category="STYLE">
    <ShortDescription>Result of integer multiplication cast to long</ShortDescription>
    <Details><![CDATA[

<p>
This code performs integer multiply and then converts the result to a long,
as in:</p>
<pre><code>long convertDaysToMilliseconds(int days) { return 1000*3600*24*days; }
</code></pre>
<p>
If the multiplication is done using long arithmetic, you can avoid
the possibility that the result will overflow. For example, you
could fix the above code to:</p>
<pre><code>long convertDaysToMilliseconds(int days) { return 1000L*3600*24*days; }
</code></pre>
<p>
or
</p>
<pre><code>static final long MILLISECONDS_PER_DAY = 24L*3600*1000;
long convertDaysToMilliseconds(int days) { return days * MILLISECONDS_PER_DAY; }
</code></pre>

    ]]></Details>
  </BugPattern>
  <BugPattern type="URF_UNREAD_FIELD" abbrev="UrF" category="PERFORMANCE">
    <ShortDescription>Unread field</ShortDescription>
    <Details><![CDATA[

  <p> This field is never read.&nbsp; Consider removing it from the class.</p>

    ]]></Details>
  </BugPattern>
  <BugPattern type="BC_UNCONFIRMED_CAST" abbrev="BC" category="STYLE">
    <ShortDescription>Unchecked/unconfirmed cast</ShortDescription>
    <Details><![CDATA[

<p>
This cast is unchecked, and not all instances of the type casted from can be cast to
the type it is being cast to. Check that your program logic ensures that this
cast will not fail.
</p>

    ]]></Details>
  </BugPattern>
  <BugPattern type="REC_CATCH_EXCEPTION" abbrev="REC" category="STYLE" cweid="396">
    <ShortDescription>Exception is caught when Exception is not thrown</ShortDescription>
    <Details><![CDATA[
  
  <p>
  This method uses a try-catch block that catches Exception objects, but Exception is not
  thrown within the try block, and RuntimeException is not explicitly caught.  It is a common bug pattern to
  say try { ... } catch (Exception e) { something } as a shorthand for catching a number of types of exception
  each of whose catch blocks is identical, but this construct also accidentally catches RuntimeException as well,
  masking potential bugs.
  </p>
  <p>A better approach is to either explicitly catch the specific exceptions that are thrown,
  or to explicitly catch RuntimeException exception, rethrow it, and then catch all non-Runtime Exceptions, as shown below:</p>
<pre><code>try {
    ...
} catch (RuntimeException e) {
    throw e;
} catch (Exception e) {
    ... deal with all non-runtime exceptions ...
}
</code></pre>
  
     ]]></Details>
  </BugPattern>
  <BugPattern type="OBL_UNSATISFIED_OBLIGATION" abbrev="OBL" category="EXPERIMENTAL">
    <ShortDescription>Method may fail to clean up stream or resource</ShortDescription>
    <Details><![CDATA[
          
          <p>
          This method may fail to clean up (close, dispose of) a stream,
          database object, or other
          resource requiring an explicit cleanup operation.
          </p>

          <p>
          In general, if a method opens a stream or other resource,
          the method should use a try/finally block to ensure that
          the stream or resource is cleaned up before the method
          returns.
          </p>

          <p>
          This bug pattern is essentially the same as the
          OS_OPEN_STREAM and ODR_OPEN_DATABASE_RESOURCE
          bug patterns, but is based on a different
          (and hopefully better) static analysis technique.
          We are interested is getting feedback about the
          usefulness of this bug pattern.
          For sending feedback, check:
          </p>
          <ul>
            <li><a href="https://github.com/spotbugs/spotbugs/blob/master/.github/CONTRIBUTING.md">contributing guideline</a></li>
            <li><a href="https://github.com/spotbugs/discuss/issues?q=">mailinglist</a></li>
          </ul>

          <p>
          In particular,
          the false-positive suppression heuristics for this
          bug pattern have not been extensively tuned, so
          reports about false positives are helpful to us.
          </p>

          <p>
          See Weimer and Necula, <i>Finding and Preventing Run-Time Error Handling Mistakes</i>
          (<a href="https://people.eecs.berkeley.edu/~necula/Papers/rte_oopsla04.pdf">PDF</a>),
          for a description of the analysis technique.
          </p>
          
      ]]></Details>
  </BugPattern>
  <BugPattern type="MS_EXPOSE_REP" abbrev="MS" category="MALICIOUS_CODE">
    <ShortDescription>Public static method may expose internal representation by returning a mutable object or array</ShortDescription>
    <Details><![CDATA[

  <p> A public static method returns a reference to a mutable object or
   an array that is part of the static state of the class.
   Any code that calls this method can freely modify
   the underlying array.
   One fix is to return a copy of the array.</p>

    ]]></Details>
  </BugPattern>
  <BugPattern type="NP_BOOLEAN_RETURN_NULL" abbrev="NP" category="BAD_PRACTICE">
    <ShortDescription>Method with Boolean return type returns explicit null</ShortDescription>
    <Details><![CDATA[
       
       <p>
    A method that returns either Boolean.TRUE, Boolean.FALSE or null is an accident waiting to happen.
    This method can be invoked as though it returned a value of type boolean, and
    the compiler will insert automatic unboxing of the Boolean value. If a null value is returned,
    this will result in a NullPointerException.
       </p>
       
       ]]></Details>
  </BugPattern>
  <BugPattern type="RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE" abbrev="RCN" category="STYLE">
    <ShortDescription>Redundant nullcheck of value known to be non-null</ShortDescription>
    <Details><![CDATA[

<p> This method contains a redundant check of a known non-null value against
the constant null.</p>

    ]]></Details>
  </BugPattern>
  <BugPattern type="AA_ASSERTION_OF_ARGUMENTS" abbrev="AA" category="BAD_PRACTICE">
    <ShortDescription>Assertion is used to validate an argument of a public method</ShortDescription>
    <Details><![CDATA[
      
        <p>Asssertions must not be used to validate arguments of public methods because the validations are
        not performed if assertions are disabled.</p>

        <p>
        See SEI CERT rule <a href="https://wiki.sei.cmu.edu/confluence/display/java/MET01-J.+Never+use+assertions+to+validate+method+arguments">MET01-J. Never use assertions to validate method arguments</a>
        for more information.
        </p>
        
    ]]></Details>
  </BugPattern>
  <BugPattern type="ST_WRITE_TO_STATIC_FROM_INSTANCE_METHOD" abbrev="ST" category="STYLE">
    <ShortDescription>Write to static field from instance method</ShortDescription>
    <Details><![CDATA[

  <p> This instance method writes to a static field. This is tricky to get
correct if multiple instances are being manipulated,
and generally bad practice.
</p>

    ]]></Details>
  </BugPattern>
  <BugPattern type="DMI_RANDOM_USED_ONLY_ONCE" abbrev="DMI" category="BAD_PRACTICE">
    <ShortDescription>Random object created and used only once</ShortDescription>
    <Details><![CDATA[

<p> This code creates a java.util.Random object, uses it to generate one random number, and then discards
the Random object. This produces mediocre quality random numbers and is inefficient.
If possible, rewrite the code so that the Random object is created once and saved, and each time a new random number
is required invoke a method on the existing Random object to obtain it.
</p>

<p>If it is important that the generated Random numbers not be guessable, you <em>must</em> not create a new Random for each random
number; the values are too easily guessable. You should strongly consider using a java.security.SecureRandom instead
(and avoid allocating a new SecureRandom for each random number needed).
</p>

    ]]></Details>
  </BugPattern>
  <BugPattern type="EI_EXPOSE_REP" abbrev="EI" category="MALICIOUS_CODE" cweid="374">
    <ShortDescription>May expose internal representation by returning reference to mutable object</ShortDescription>
    <Details><![CDATA[

  <p> Returning a reference to a mutable object value stored in one of the object's fields
  exposes the internal representation of the object.&nbsp;
   If instances
   are accessed by untrusted code, and unchecked changes to
   the mutable object would compromise security or other
   important properties, you will need to do something different.
  Returning a new copy of the object is better approach in many situations.</p>

    ]]></Details>
  </BugPattern>
  <BugPattern type="DM_STRING_VOID_CTOR" abbrev="Dm" category="PERFORMANCE">
    <ShortDescription>Method invokes inefficient new String() constructor</ShortDescription>
    <Details><![CDATA[

  <p> Creating a new <code>java.lang.String</code> object using the
  no-argument constructor wastes memory because the object so created will
  be functionally indistinguishable from the empty string constant
  <code>""</code>.&nbsp; Java guarantees that identical string constants
  will be represented by the same <code>String</code> object.&nbsp; Therefore,
  you should just use the empty string constant directly.</p>

    ]]></Details>
  </BugPattern>
  <BugPattern type="DM_DEFAULT_ENCODING" abbrev="Dm" category="I18N">
    <ShortDescription>Reliance on default encoding</ShortDescription>
    <Details><![CDATA[

<p> Found a call to a method which will perform a byte to String (or String to byte) conversion,
and will assume that the default platform encoding is suitable. This will cause the application
behavior to vary between platforms. Use an alternative API and specify a charset name or Charset
object explicitly.</p>

      ]]></Details>
  </BugPattern>
  <BugPattern type="SE_BAD_FIELD" abbrev="Se" category="BAD_PRACTICE">
    <ShortDescription>Non-transient non-serializable instance field in serializable class</ShortDescription>
    <Details><![CDATA[

<p> This Serializable class defines a non-primitive instance field which is neither transient,
Serializable, or <code>java.lang.Object</code>, and does not appear to implement
the <code>Externalizable</code> interface or the
<code>readObject()</code> and <code>writeObject()</code> methods.&nbsp;
Objects of this class will not be deserialized correctly if a non-Serializable
object is stored in this field.</p>

    ]]></Details>
  </BugPattern>
  <BugPattern type="SF_SWITCH_NO_DEFAULT" abbrev="SF" category="STYLE">
    <ShortDescription>Switch statement found where default case is missing</ShortDescription>
    <Details><![CDATA[

  <p> This method contains a switch statement where default case is missing.
  Usually you need to provide a default case.</p>
  <p>Because the analysis only looks at the generated bytecode, this warning can be incorrect triggered if
the default case is at the end of the switch statement and the switch statement doesn't contain break statements for other
cases.

    ]]></Details>
  </BugPattern>
  <BugPattern type="DP_DO_INSIDE_DO_PRIVILEGED" abbrev="DP" category="MALICIOUS_CODE">
    <ShortDescription>Method invoked that should be only be invoked inside a doPrivileged block</ShortDescription>
    <Details><![CDATA[

  <p> This code invokes a method that requires a security permission check.
  If this code will be granted security permissions, but might be invoked by code that does not
  have security permissions, then the invocation needs to occur inside a doPrivileged block.</p>

    ]]></Details>
  </BugPattern>
  <BugPattern type="DCN_NULLPOINTER_EXCEPTION" abbrev="DCN" category="STYLE">
    <ShortDescription>NullPointerException caught</ShortDescription>
    <Details><![CDATA[
   
<p>
According to SEI Cert rule <a href="https://wiki.sei.cmu.edu/confluence/display/java/ERR08-J.+Do+not+catch+NullPointerException+or+any+of+its+ancestors">ERR08-J</a> NullPointerException should not be caught. Handling NullPointerException is considered an inferior alternative to null-checking.
<p>
This non-compliant code catches a NullPointerException to see if an incoming parameter is null:
</p>
<pre><code>
boolean hasSpace(String m) {
  try {
    String ms[] = m.split(" ");
    return names.length != 1;
  } catch (NullPointerException e) {
    return false;
  }
}
</code></pre>
<p>
A compliant solution would use a null-check as in the following example:
</p>
<pre><code>
boolean hasSpace(String m) {
    if (m == null) return false;
    String ms[] = m.split(" ");
    return names.length != 1;
}
</code></pre>
    
     ]]></Details>
  </BugPattern>
  <BugPattern type="IT_NO_SUCH_ELEMENT" abbrev="It" category="BAD_PRACTICE">
    <ShortDescription>Iterator next() method cannot throw NoSuchElementException</ShortDescription>
    <Details><![CDATA[

  <p> This class implements the <code>java.util.Iterator</code> interface.&nbsp;
  However, its <code>next()</code> method is not capable of throwing
  <code>java.util.NoSuchElementException</code>.&nbsp; The <code>next()</code>
  method should be changed so it throws <code>NoSuchElementException</code>
  if is called when there are no more elements to return.</p>

    ]]></Details>
  </BugPattern>
  <BugPattern type="CT_CONSTRUCTOR_THROW" abbrev="CT" category="BAD_PRACTICE">
    <ShortDescription>Be wary of letting constructors throw exceptions.</ShortDescription>
    <Details><![CDATA[
      
            <p>Classes that throw exceptions in their constructors are vulnerable to Finalizer attacks</p>

            <p>A finalizer attack can be prevented, by declaring the class final, using an empty finalizer declared as final, or by a clever use of a private constructor.</p>

            <p>See <a href="https://wiki.sei.cmu.edu/confluence/display/java/OBJ11-J.+Be+wary+of+letting+constructors+throw+exceptions"><code>SEI CERT Rule OBJ-11</code></a>
            for more information.
            </p>
            
    ]]></Details>
  </BugPattern>
  <BugPattern type="DM_GC" abbrev="Dm" category="PERFORMANCE">
    <ShortDescription>Explicit garbage collection; extremely dubious except in benchmarking code</ShortDescription>
    <Details><![CDATA[

  <p> Code explicitly invokes garbage collection.
  Except for specific use in benchmarking, this is very dubious.</p>
  <p>In the past, situations where people have explicitly invoked
  the garbage collector in routines such as close or finalize methods
  has led to huge performance black holes. Garbage collection
   can be expensive. Any situation that forces hundreds or thousands
   of garbage collections will bring the machine to a crawl.</p>

    ]]></Details>
  </BugPattern>
  <BugPattern type="OS_OPEN_STREAM_EXCEPTION_PATH" abbrev="OS" category="BAD_PRACTICE">
    <ShortDescription>Method may fail to close stream on exception</ShortDescription>
    <Details><![CDATA[

<p> The method creates an IO stream object, does not assign it to any
fields, pass it to other methods, or return it, and does not appear to close
it on all possible exception paths out of the method.&nbsp;
This may result in a file descriptor leak.&nbsp; It is generally a good
idea to use a <code>finally</code> block to ensure that streams are
closed.</p>

    ]]></Details>
  </BugPattern>
  <BugPattern type="MC_OVERRIDABLE_METHOD_CALL_IN_CONSTRUCTOR" abbrev="MC" category="MALICIOUS_CODE">
    <ShortDescription>An overridable method is called from a constructor</ShortDescription>
    <Details><![CDATA[
      <p>
      Calling an overridable method during in a constructor may result in the use of uninitialized data. It may also
      leak the this reference of the partially constructed object. Only static, final or private methods should be
      invoked from a constructor.</p>
      <p>
      See SEI CERT rule <a href="https://wiki.sei.cmu.edu/confluence/display/java/MET05-J.+Ensure+that+constructors+do+not+call+overridable+methods">MET05-J. Ensure that constructors do not call overridable methods</a>.
      </p>
    ]]></Details>
  </BugPattern>
  <BugPattern type="DE_MIGHT_IGNORE" abbrev="DE" category="BAD_PRACTICE">
    <ShortDescription>Method might ignore exception</ShortDescription>
    <Details><![CDATA[

  <p> This method might ignore an exception.&nbsp; In general, exceptions
  should be handled or reported in some way, or they should be thrown
  out of the method.</p>

    ]]></Details>
  </BugPattern>
  <BugPattern type="HE_EQUALS_USE_HASHCODE" abbrev="HE" category="BAD_PRACTICE">
    <ShortDescription>Class defines equals() and uses Object.hashCode()</ShortDescription>
    <Details><![CDATA[

  <p> This class overrides <code>equals(Object)</code>, but does not
  override <code>hashCode()</code>, and inherits the implementation of
  <code>hashCode()</code> from <code>java.lang.Object</code> (which returns
  the identity hash code, an arbitrary value assigned to the object
  by the VM).&nbsp; Therefore, the class is very likely to violate the
  invariant that equal objects must have equal hashcodes.</p>

<p>If you don't think instances of this class will ever be inserted into a HashMap/HashTable,
the recommended <code>hashCode</code> implementation to use is:</p>
<pre><code>public int hashCode() {
    assert false : "hashCode not designed";
    return 42; // any arbitrary constant will do
}
</code></pre>

    ]]></Details>
  </BugPattern>
  <BugPattern type="DM_EXIT" abbrev="Dm" category="BAD_PRACTICE" cweid="382">
    <ShortDescription>Method invokes System.exit(...)</ShortDescription>
    <Details><![CDATA[

  <p> Invoking System.exit shuts down the entire Java virtual machine. This
   should only been done when it is appropriate. Such calls make it
   hard or impossible for your code to be invoked by other code.
   Consider throwing a RuntimeException instead.</p>

    ]]></Details>
  </BugPattern>
  <BugPattern type="UC_USELESS_VOID_METHOD" abbrev="UC" category="STYLE">
    <ShortDescription>Useless non-empty void method</ShortDescription>
    <Details><![CDATA[

<p>Our analysis shows that this non-empty void method does not actually perform any useful work.
Please check it: probably there's a mistake in its code or its body can be fully removed.
</p>
<p>We are trying to reduce the false positives as much as possible, but in some cases this warning might be wrong.
Common false-positive cases include:</p>
<ul>
<li>The method is intended to trigger loading of some class which may have a side effect.</li>
<li>The method is intended to implicitly throw some obscure exception.</li>
</ul>

    ]]></Details>
  </BugPattern>
  <BugPattern type="SE_NO_SERIALVERSIONID" abbrev="SnVI" category="BAD_PRACTICE">
    <ShortDescription>Class is Serializable, but doesn&apos;t define serialVersionUID</ShortDescription>
    <Details><![CDATA[

  <p> This class implements the <code>Serializable</code> interface, but does
  not define a <code>serialVersionUID</code> field.&nbsp;
  A change as simple as adding a reference to a .class object
    will add synthetic fields to the class,
   which will unfortunately change the implicit
   serialVersionUID (e.g., adding a reference to <code>String.class</code>
   will generate a static field <code>class$java$lang$String</code>).
   Also, different source code to bytecode compilers may use different
   naming conventions for synthetic variables generated for
   references to class objects or inner classes.
   To ensure interoperability of Serializable across versions,
   consider adding an explicit serialVersionUID.</p>

    ]]></Details>
  </BugPattern>
  <BugPattern type="OS_OPEN_STREAM" abbrev="OS" category="BAD_PRACTICE">
    <ShortDescription>Method may fail to close stream</ShortDescription>
    <Details><![CDATA[

<p> The method creates an IO stream object, does not assign it to any
fields, pass it to other methods that might close it,
or return it, and does not appear to close
the stream on all paths out of the method.&nbsp; This may result in
a file descriptor leak.&nbsp; It is generally a good
idea to use a <code>finally</code> block to ensure that streams are
closed.</p>

    ]]></Details>
  </BugPattern>
  <BugPattern type="DM_CONVERT_CASE" abbrev="Dm" category="I18N">
    <ShortDescription>Consider using Locale parameterized version of invoked method</ShortDescription>
    <Details><![CDATA[

  <p> A String is being converted to upper or lowercase, using the platform's default encoding. This may
      result in improper conversions when used with international characters. Use the </p>
      <ul>
    <li>String.toUpperCase( Locale l )</li>
    <li>String.toLowerCase( Locale l )</li>
    </ul>
      <p>versions instead.</p>

    ]]></Details>
  </BugPattern>
  <BugPattern type="RV_RETURN_VALUE_IGNORED_BAD_PRACTICE" abbrev="RV" category="BAD_PRACTICE" cweid="253">
    <ShortDescription>Method ignores exceptional return value</ShortDescription>
    <Details><![CDATA[

   <p> This method returns a value that is not checked. The return value should be checked
since it can indicate an unusual or unexpected function execution. For
example, the <code>File.delete()</code> method returns false
if the file could not be successfully deleted (rather than
throwing an Exception).
If you don't check the result, you won't notice if the method invocation
signals unexpected behavior by returning an atypical return value.
</p>

    ]]></Details>
  </BugPattern>
  <BugCode abbrev="BC">
    <Description>Bad casts of object references</Description>
  </BugCode>
  <BugCode abbrev="DE" cweid="391">
    <Description>Dropped or ignored exception</Description>
  </BugCode>
  <BugCode abbrev="NP" cweid="476">
    <Description>Null pointer dereference</Description>
  </BugCode>
  <BugCode abbrev="RV" cweid="440">
    <Description>Bad use of return value from method</Description>
  </BugCode>
  <BugCode abbrev="SnVI">
    <Description>Serializable class with no Version ID</Description>
  </BugCode>
  <BugCode abbrev="DLS" cweid="563">
    <Description>Dead local store</Description>
  </BugCode>
  <BugCode abbrev="It">
    <Description>Incorrect definition of Iterator</Description>
  </BugCode>
  <BugCode abbrev="DP">
    <Description>Use doPrivileged</Description>
  </BugCode>
  <BugCode abbrev="UC">
    <Description>Useless code</Description>
  </BugCode>
  <BugCode abbrev="EI2">
    <Description>Storing reference to mutable object</Description>
  </BugCode>
  <BugCode abbrev="SC">
    <Description>Constructor invokes Thread.start()</Description>
  </BugCode>
  <BugCode abbrev="SF">
    <Description>Switch case falls through</Description>
  </BugCode>
  <BugCode abbrev="MC">
    <Description>Dangerous call to overridable method</Description>
  </BugCode>
  <BugCode abbrev="OBL">
    <Description>Unsatisfied obligation to clean up stream or resource</Description>
  </BugCode>
  <BugCode abbrev="Nm">
    <Description>Confusing method name</Description>
  </BugCode>
  <BugCode abbrev="AA">
    <Description>Misuse of assertions for checking arguments of public methods</Description>
  </BugCode>
  <BugCode abbrev="DMI" cweid="440">
    <Description>Dubious method invocation</Description>
  </BugCode>
  <BugCode abbrev="ST">
    <Description>Misuse of static fields</Description>
  </BugCode>
  <BugCode abbrev="OS">
    <Description>Stream not closed on all paths</Description>
  </BugCode>
  <BugCode abbrev="EI">
    <Description>Method returning array may expose internal representation</Description>
  </BugCode>
  <BugCode abbrev="MS" cweid="218">
    <Description>Mutable static field</Description>
  </BugCode>
  <BugCode abbrev="UrF">
    <Description>Unread field</Description>
  </BugCode>
  <BugCode abbrev="Dm">
    <Description>Dubious method used</Description>
  </BugCode>
  <BugCode abbrev="CN" cweid="580">
    <Description>Bad implementation of cloneable idiom</Description>
  </BugCode>
  <BugCode abbrev="ICAST" cweid="192">
    <Description>Casting from integer values</Description>
  </BugCode>
  <BugCode abbrev="DCN">
    <Description>Don&apos;t Catch NullPointer Exception</Description>
  </BugCode>
  <BugCode abbrev="CT">
    <Description>Constructor throws</Description>
  </BugCode>
  <BugCode abbrev="REC">
    <Description>RuntimeException capture</Description>
  </BugCode>
  <BugCode abbrev="Se">
    <Description>Incorrect definition of Serializable class</Description>
  </BugCode>
  <BugCode abbrev="VO">
    <Description>Use of volatile</Description>
  </BugCode>
  <BugCode abbrev="RCN" cweid="476">
    <Description>Redundant comparison to null</Description>
  </BugCode>
  <BugCode abbrev="HE">
    <Description>Equal objects must have equal hashcodes</Description>
  </BugCode>
  <Errors errors="0" missingClasses="4">
    <MissingClass>net.openhft.affinity.Affinity</MissingClass>
    <MissingClass>org.slf4j.Logger</MissingClass>
    <MissingClass>org.slf4j.LoggerFactory</MissingClass>
    <MissingClass>sun.misc.Cleaner</MissingClass>
  </Errors>
  <FindBugsSummary timestamp="Sat, 11 Nov 2023 15:46:30 +0900" total_classes="238" referenced_classes="612" total_bugs="96" total_size="7665" num_packages="22" java_version="17.0.8" vm_version="17.0.8+9-LTS-211" cpu_seconds="1.78" clock_seconds="6.30" peak_mbytes="313.28" alloc_mbytes="3984.00" gc_seconds="0.10" priority_3="41" priority_2="45" priority_1="10">
    <FileStats path="net/openhft/chronicle/core/ClassLocal.java" bugCount="0" size="10"/>
    <FileStats path="net/openhft/chronicle/core/ClassMetrics.java" bugCount="0" size="21"/>
    <FileStats path="net/openhft/chronicle/core/CleaningRandomAccessFile.java" bugCount="2" size="11" bugHash="d55a262772bb89791c97a22b46c7e121"/>
    <FileStats path="net/openhft/chronicle/core/FlakyTestRunner.java" bugCount="1" size="31" bugHash="68af9d1b5380ebeed596a37160fbc703"/>
    <FileStats path="net/openhft/chronicle/core/Jvm.java" bugCount="12" size="696" bugHash="058853251fb501e77b4a4f2831b508cc"/>
    <FileStats path="net/openhft/chronicle/core/LicenceCheck.java" bugCount="1" size="33" bugHash="0b0b470d397acad91a0f5a2c47cb1e7e"/>
    <FileStats path="net/openhft/chronicle/core/Maths.java" bugCount="1" size="222" bugHash="05cfb1cb14d46a4771bf47ba51775de4"/>
    <FileStats path="net/openhft/chronicle/core/Memory.java" bugCount="0" size="83"/>
    <FileStats path="net/openhft/chronicle/core/Mocker.java" bugCount="0" size="59"/>
    <FileStats path="net/openhft/chronicle/core/OS.java" bugCount="6" size="288" bugHash="d73c507e5a425c51c9553231c9c84616"/>
    <FileStats path="net/openhft/chronicle/core/StackTrace.java" bugCount="0" size="19"/>
    <FileStats path="net/openhft/chronicle/core/UnresolvedType.java" bugCount="0" size="12"/>
    <FileStats path="net/openhft/chronicle/core/UnsafeMemory.java" bugCount="2" size="573" bugHash="7cf9c9ca646c2aec2f43744e74bdec9a"/>
    <FileStats path="net/openhft/chronicle/core/analytics/AnalyticsFacade.java" bugCount="0" size="39"/>
    <FileStats path="net/openhft/chronicle/core/annotation/DontChain.java" bugCount="0" size="1"/>
    <FileStats path="net/openhft/chronicle/core/annotation/ForceInline.java" bugCount="0" size="1"/>
    <FileStats path="net/openhft/chronicle/core/annotation/HotMethod.java" bugCount="0" size="2"/>
    <FileStats path="net/openhft/chronicle/core/annotation/Java9.java" bugCount="0" size="1"/>
    <FileStats path="net/openhft/chronicle/core/annotation/PackageLocal.java" bugCount="0" size="1"/>
    <FileStats path="net/openhft/chronicle/core/annotation/RequiredForClient.java" bugCount="0" size="2"/>
    <FileStats path="net/openhft/chronicle/core/annotation/SingleThreaded.java" bugCount="0" size="1"/>
    <FileStats path="net/openhft/chronicle/core/annotation/TargetMajorVersion.java" bugCount="0" size="5"/>
    <FileStats path="net/openhft/chronicle/core/annotation/UsedViaReflection.java" bugCount="0" size="1"/>
    <FileStats path="net/openhft/chronicle/core/announcer/Announcer.java" bugCount="0" size="15"/>
    <FileStats path="net/openhft/chronicle/core/cleaner/CleanerServiceLocator.java" bugCount="0" size="36"/>
    <FileStats path="net/openhft/chronicle/core/cleaner/impl/jdk8/Jdk8ByteBufferCleanerService.java" bugCount="0" size="9"/>
    <FileStats path="net/openhft/chronicle/core/cleaner/impl/jdk9/Jdk9ByteBufferCleanerService.java" bugCount="0" size="21"/>
    <FileStats path="net/openhft/chronicle/core/cleaner/impl/reflect/ReflectionBasedByteBufferCleanerService.java" bugCount="1" size="39" bugHash="3160d43c1142236b650642d94d4e407d"/>
    <FileStats path="net/openhft/chronicle/core/cleaner/spi/ByteBufferCleanerService.java" bugCount="0" size="16"/>
    <FileStats path="net/openhft/chronicle/core/cooler/CoolerTester.java" bugCount="1" size="107" bugHash="e65135198bd82975f32f97c96e0fff04"/>
    <FileStats path="net/openhft/chronicle/core/cooler/CpuCooler.java" bugCount="0" size="2"/>
    <FileStats path="net/openhft/chronicle/core/cooler/CpuCoolers.java" bugCount="1" size="198" bugHash="af893d4dfb4a4cfe373abad4017273b7"/>
    <FileStats path="net/openhft/chronicle/core/internal/analytics/MuteAnalytics.java" bugCount="0" size="15"/>
    <FileStats path="net/openhft/chronicle/core/internal/analytics/MuteBuilder.java" bugCount="0" size="36"/>
    <FileStats path="net/openhft/chronicle/core/internal/analytics/ReflectionUtil.java" bugCount="0" size="60"/>
    <FileStats path="net/openhft/chronicle/core/internal/analytics/ReflectiveAnalytics.java" bugCount="0" size="13"/>
    <FileStats path="net/openhft/chronicle/core/internal/analytics/ReflectiveBuilder.java" bugCount="0" size="54"/>
    <FileStats path="net/openhft/chronicle/core/internal/analytics/StandardMaps.java" bugCount="0" size="76"/>
    <FileStats path="net/openhft/chronicle/core/internal/announcer/InternalAnnouncer.java" bugCount="0" size="72"/>
    <FileStats path="net/openhft/chronicle/core/internal/pom/InternalPomProperties.java" bugCount="1" size="27" bugHash="ab529cf2fceaa11c7a658dc74fb58bba"/>
    <FileStats path="net/openhft/chronicle/core/io/AbstractCloseable.java" bugCount="2" size="164" bugHash="2c78ef7a36e3cdd5ae5d9cad0602a492"/>
    <FileStats path="net/openhft/chronicle/core/io/AbstractCloseableReferenceCounted.java" bugCount="1" size="56" bugHash="6cb0dbfbe08ba7b86aca05e6e496e590"/>
    <FileStats path="net/openhft/chronicle/core/io/AbstractReferenceCounted.java" bugCount="6" size="115" bugHash="20e2d49377914bd661a40f9be9f86a02"/>
    <FileStats path="net/openhft/chronicle/core/io/BackgroundResourceReleaser.java" bugCount="0" size="69"/>
    <FileStats path="net/openhft/chronicle/core/io/Closeable.java" bugCount="1" size="25" bugHash="f39f95504cd180758c441659d743f5e3"/>
    <FileStats path="net/openhft/chronicle/core/io/CloseableTracer.java" bugCount="0" size="2"/>
    <FileStats path="net/openhft/chronicle/core/io/ClosedIllegalStateException.java" bugCount="0" size="7"/>
    <FileStats path="net/openhft/chronicle/core/io/ClosedState.java" bugCount="0" size="2"/>
    <FileStats path="net/openhft/chronicle/core/io/DualReferenceCounted.java" bugCount="0" size="81"/>
    <FileStats path="net/openhft/chronicle/core/io/IORuntimeException.java" bugCount="0" size="10"/>
    <FileStats path="net/openhft/chronicle/core/io/IOTools.java" bugCount="2" size="179" bugHash="8f3c900415b1a12f68f31b58fb0a78ff"/>
    <FileStats path="net/openhft/chronicle/core/io/MonitorReferenceCounted.java" bugCount="0" size="1"/>
    <FileStats path="net/openhft/chronicle/core/io/QueryCloseable.java" bugCount="0" size="8"/>
    <FileStats path="net/openhft/chronicle/core/io/QueryCloseables.java" bugCount="0" size="16"/>
    <FileStats path="net/openhft/chronicle/core/io/ReferenceCounted.java" bugCount="0" size="14"/>
    <FileStats path="net/openhft/chronicle/core/io/ReferenceCountedTracer.java" bugCount="0" size="14"/>
    <FileStats path="net/openhft/chronicle/core/io/ReferenceOwner.java" bugCount="0" size="10"/>
    <FileStats path="net/openhft/chronicle/core/io/Resettable.java" bugCount="0" size="2"/>
    <FileStats path="net/openhft/chronicle/core/io/SimpleCloseable.java" bugCount="0" size="15"/>
    <FileStats path="net/openhft/chronicle/core/io/TracingReferenceCounted.java" bugCount="1" size="154" bugHash="cc4479c0f1c48dd6dd593b30db13c0b9"/>
    <FileStats path="net/openhft/chronicle/core/io/UnsafeCloseable.java" bugCount="8" size="67" bugHash="53b3b2d4764050961a1f0a9ed0437a8a"/>
    <FileStats path="net/openhft/chronicle/core/io/UnsafeText.java" bugCount="0" size="196"/>
    <FileStats path="net/openhft/chronicle/core/io/VanillaReferenceCounted.java" bugCount="0" size="82"/>
    <FileStats path="net/openhft/chronicle/core/io/VanillaReferenceOwner.java" bugCount="0" size="12"/>
    <FileStats path="net/openhft/chronicle/core/onoes/ChainedExceptionHandler.java" bugCount="0" size="10"/>
    <FileStats path="net/openhft/chronicle/core/onoes/ExceptionHandler.java" bugCount="0" size="16"/>
    <FileStats path="net/openhft/chronicle/core/onoes/ExceptionKey.java" bugCount="0" size="31"/>
    <FileStats path="net/openhft/chronicle/core/onoes/GoogleExceptionHandler.java" bugCount="0" size="7"/>
    <FileStats path="net/openhft/chronicle/core/onoes/LogLevel.java" bugCount="0" size="17"/>
    <FileStats path="net/openhft/chronicle/core/onoes/NullExceptionHandler.java" bugCount="0" size="17"/>
    <FileStats path="net/openhft/chronicle/core/onoes/PrintExceptionHandler.java" bugCount="0" size="40"/>
    <FileStats path="net/openhft/chronicle/core/onoes/RecordingExceptionHandler.java" bugCount="1" size="21" bugHash="87f715a8de46db47fdd9154c574a9528"/>
    <FileStats path="net/openhft/chronicle/core/onoes/Slf4jExceptionHandler.java" bugCount="1" size="68" bugHash="ecece3b1de8fcc983accf826893945c3"/>
    <FileStats path="net/openhft/chronicle/core/onoes/StackoverflowExceptionHandler.java" bugCount="0" size="7"/>
    <FileStats path="net/openhft/chronicle/core/onoes/ThreadLocalisedExceptionHandler.java" bugCount="1" size="41" bugHash="edd2bc9e7d8f0f4610eaefac0b2b027e"/>
    <FileStats path="net/openhft/chronicle/core/onoes/WebExceptionHandler.java" bugCount="4" size="41" bugHash="3b08970d2f5ad7b7ba38891a69fcd091"/>
    <FileStats path="net/openhft/chronicle/core/pom/PomProperties.java" bugCount="0" size="7"/>
    <FileStats path="net/openhft/chronicle/core/pool/ClassAliasPool.java" bugCount="0" size="178"/>
    <FileStats path="net/openhft/chronicle/core/pool/ClassLookup.java" bugCount="0" size="13"/>
    <FileStats path="net/openhft/chronicle/core/pool/DynamicEnumClass.java" bugCount="3" size="63" bugHash="0b9f9908b38a510c69e3e27f62e0a65f"/>
    <FileStats path="net/openhft/chronicle/core/pool/EnumCache.java" bugCount="0" size="23"/>
    <FileStats path="net/openhft/chronicle/core/pool/EnumInterner.java" bugCount="0" size="30"/>
    <FileStats path="net/openhft/chronicle/core/pool/ParsingCache.java" bugCount="1" size="43" bugHash="ca18d4653bc54122019a9b028e696e44"/>
    <FileStats path="net/openhft/chronicle/core/pool/StaticEnumClass.java" bugCount="1" size="22" bugHash="a8e918a4adc2e73c93d9c558d4cc5b5e"/>
    <FileStats path="net/openhft/chronicle/core/pool/StringBuilderPool.java" bugCount="0" size="11"/>
    <FileStats path="net/openhft/chronicle/core/pool/StringInterner.java" bugCount="1" size="34" bugHash="27572f00d2704c755f959d0206048ca9"/>
    <FileStats path="net/openhft/chronicle/core/threads/CleaningThread.java" bugCount="0" size="46"/>
    <FileStats path="net/openhft/chronicle/core/threads/CleaningThreadLocal.java" bugCount="0" size="35"/>
    <FileStats path="net/openhft/chronicle/core/threads/EventHandler.java" bugCount="0" size="9"/>
    <FileStats path="net/openhft/chronicle/core/threads/EventLoop.java" bugCount="0" size="12"/>
    <FileStats path="net/openhft/chronicle/core/threads/HandlerPriority.java" bugCount="0" size="36"/>
    <FileStats path="net/openhft/chronicle/core/threads/InvalidEventHandlerException.java" bugCount="1" size="26" bugHash="43936f6c93b81c5b547ef81471eb1417"/>
    <FileStats path="net/openhft/chronicle/core/threads/JitterSampler.java" bugCount="0" size="58"/>
    <FileStats path="net/openhft/chronicle/core/threads/MonitorProfileAnalyserMain.java" bugCount="0" size="83"/>
    <FileStats path="net/openhft/chronicle/core/threads/OnDemandEventLoop.java" bugCount="0" size="47"/>
    <FileStats path="net/openhft/chronicle/core/threads/StackSampler.java" bugCount="4" size="33" bugHash="bbacf73f9d1faf4d6342da98f227a7e8"/>
    <FileStats path="net/openhft/chronicle/core/threads/ThreadDump.java" bugCount="0" size="68"/>
    <FileStats path="net/openhft/chronicle/core/threads/ThreadHints.java" bugCount="0" size="7"/>
    <FileStats path="net/openhft/chronicle/core/threads/ThreadLocalHelper.java" bugCount="0" size="31"/>
    <FileStats path="net/openhft/chronicle/core/threads/ThreadLocalProperties.java" bugCount="3" size="82" bugHash="a9059dfd98d6c0618e709f3968f85add"/>
    <FileStats path="net/openhft/chronicle/core/threads/Timer.java" bugCount="1" size="56" bugHash="6909deff1c5a3977c3e4c69b7f65d70a"/>
    <FileStats path="net/openhft/chronicle/core/threads/VanillaEventHandler.java" bugCount="0" size="2"/>
    <FileStats path="net/openhft/chronicle/core/time/Differencer.java" bugCount="0" size="2"/>
    <FileStats path="net/openhft/chronicle/core/time/LongTime.java" bugCount="0" size="61"/>
    <FileStats path="net/openhft/chronicle/core/time/RunningMinimum.java" bugCount="0" size="26"/>
    <FileStats path="net/openhft/chronicle/core/time/SetTimeProvider.java" bugCount="1" size="56" bugHash="3a11e1b040841ae4e1c4f015864b0c95"/>
    <FileStats path="net/openhft/chronicle/core/time/SystemTimeProvider.java" bugCount="1" size="47" bugHash="9655644385285d1597a49569addd0432"/>
    <FileStats path="net/openhft/chronicle/core/time/TimeProvider.java" bugCount="0" size="16"/>
    <FileStats path="net/openhft/chronicle/core/time/UniqueMicroTimeProvider.java" bugCount="0" size="44"/>
    <FileStats path="net/openhft/chronicle/core/time/VanillaDifferencer.java" bugCount="0" size="5"/>
    <FileStats path="net/openhft/chronicle/core/util/AbstractInvocationHandler.java" bugCount="3" size="50" bugHash="b0572763bbe8f07d221115f53920fbea"/>
    <FileStats path="net/openhft/chronicle/core/util/Annotations.java" bugCount="0" size="29"/>
    <FileStats path="net/openhft/chronicle/core/util/BooleanConsumer.java" bugCount="0" size="9"/>
    <FileStats path="net/openhft/chronicle/core/util/Builder.java" bugCount="0" size="4"/>
    <FileStats path="net/openhft/chronicle/core/util/ByteBuffers.java" bugCount="0" size="21"/>
    <FileStats path="net/openhft/chronicle/core/util/ByteConsumer.java" bugCount="0" size="9"/>
    <FileStats path="net/openhft/chronicle/core/util/CharConsumer.java" bugCount="0" size="9"/>
    <FileStats path="net/openhft/chronicle/core/util/CharSequenceComparator.java" bugCount="0" size="22"/>
    <FileStats path="net/openhft/chronicle/core/util/CharToBooleanFunction.java" bugCount="0" size="2"/>
    <FileStats path="net/openhft/chronicle/core/util/CoreDynamicEnum.java" bugCount="0" size="3"/>
    <FileStats path="net/openhft/chronicle/core/util/FloatConsumer.java" bugCount="0" size="9"/>
    <FileStats path="net/openhft/chronicle/core/util/Histogram.java" bugCount="2" size="215" bugHash="a3188229ca694a6c29917ee17f7302a6"/>
    <FileStats path="net/openhft/chronicle/core/util/InvocationTargetRuntimeException.java" bugCount="0" size="4"/>
    <FileStats path="net/openhft/chronicle/core/util/NanoSampler.java" bugCount="0" size="2"/>
    <FileStats path="net/openhft/chronicle/core/util/ObjBooleanConsumer.java" bugCount="0" size="2"/>
    <FileStats path="net/openhft/chronicle/core/util/ObjByteConsumer.java" bugCount="0" size="2"/>
    <FileStats path="net/openhft/chronicle/core/util/ObjCharConsumer.java" bugCount="0" size="2"/>
    <FileStats path="net/openhft/chronicle/core/util/ObjFloatConsumer.java" bugCount="0" size="2"/>
    <FileStats path="net/openhft/chronicle/core/util/ObjShortConsumer.java" bugCount="0" size="2"/>
    <FileStats path="net/openhft/chronicle/core/util/ObjectUtils.java" bugCount="4" size="404" bugHash="eef2e734f0cea7218407f892951085f2"/>
    <FileStats path="net/openhft/chronicle/core/util/ReadResolvable.java" bugCount="0" size="6"/>
    <FileStats path="net/openhft/chronicle/core/util/SerializableBiFunction.java" bugCount="0" size="1"/>
    <FileStats path="net/openhft/chronicle/core/util/SerializableConsumer.java" bugCount="0" size="1"/>
    <FileStats path="net/openhft/chronicle/core/util/SerializableFunction.java" bugCount="0" size="1"/>
    <FileStats path="net/openhft/chronicle/core/util/SerializablePredicate.java" bugCount="0" size="1"/>
    <FileStats path="net/openhft/chronicle/core/util/SerializableUpdater.java" bugCount="0" size="1"/>
    <FileStats path="net/openhft/chronicle/core/util/SerializableUpdaterWithArg.java" bugCount="0" size="2"/>
    <FileStats path="net/openhft/chronicle/core/util/ShortConsumer.java" bugCount="0" size="9"/>
    <FileStats path="net/openhft/chronicle/core/util/SimpleCleaner.java" bugCount="0" size="16"/>
    <FileStats path="net/openhft/chronicle/core/util/StringUtils.java" bugCount="6" size="352" bugHash="10317b813de8f594075b28a0f9239d55"/>
    <FileStats path="net/openhft/chronicle/core/util/ThreadIndexAssigner.java" bugCount="1" size="28" bugHash="f1da5fd99e6a0c7a05ed10d9ce3f8e24"/>
    <FileStats path="net/openhft/chronicle/core/util/ThrowingBiConsumer.java" bugCount="0" size="10"/>
    <FileStats path="net/openhft/chronicle/core/util/ThrowingBiFunction.java" bugCount="0" size="8"/>
    <FileStats path="net/openhft/chronicle/core/util/ThrowingCallable.java" bugCount="0" size="2"/>
    <FileStats path="net/openhft/chronicle/core/util/ThrowingConsumer.java" bugCount="0" size="10"/>
    <FileStats path="net/openhft/chronicle/core/util/ThrowingConsumerNonCapturing.java" bugCount="0" size="2"/>
    <FileStats path="net/openhft/chronicle/core/util/ThrowingFunction.java" bugCount="0" size="8"/>
    <FileStats path="net/openhft/chronicle/core/util/ThrowingRunnable.java" bugCount="0" size="2"/>
    <FileStats path="net/openhft/chronicle/core/util/ThrowingSupplier.java" bugCount="0" size="8"/>
    <FileStats path="net/openhft/chronicle/core/util/ThrowingTriFunction.java" bugCount="0" size="2"/>
    <FileStats path="net/openhft/chronicle/core/util/Time.java" bugCount="0" size="20"/>
    <FileStats path="net/openhft/chronicle/core/util/URIEncoder.java" bugCount="0" size="28"/>
    <FileStats path="net/openhft/chronicle/core/util/Updater.java" bugCount="0" size="5"/>
    <FileStats path="net/openhft/chronicle/core/util/WeakIdentityHashMap.java" bugCount="1" size="103" bugHash="ee884eaf6c770f1f96786e12516a6ae4"/>
    <FileStats path="net/openhft/chronicle/core/values/BooleanValue.java" bugCount="0" size="3"/>
    <FileStats path="net/openhft/chronicle/core/values/ByteValue.java" bugCount="0" size="4"/>
    <FileStats path="net/openhft/chronicle/core/values/CharValue.java" bugCount="0" size="3"/>
    <FileStats path="net/openhft/chronicle/core/values/DoubleValue.java" bugCount="0" size="7"/>
    <FileStats path="net/openhft/chronicle/core/values/FloatValue.java" bugCount="0" size="7"/>
    <FileStats path="net/openhft/chronicle/core/values/IntArrayValues.java" bugCount="0" size="13"/>
    <FileStats path="net/openhft/chronicle/core/values/IntValue.java" bugCount="0" size="8"/>
    <FileStats path="net/openhft/chronicle/core/values/LongArrayValues.java" bugCount="0" size="16"/>
    <FileStats path="net/openhft/chronicle/core/values/LongValue.java" bugCount="0" size="29"/>
    <FileStats path="net/openhft/chronicle/core/values/MaxBytes.java" bugCount="0" size="2"/>
    <FileStats path="net/openhft/chronicle/core/values/ShortValue.java" bugCount="0" size="4"/>
    <FileStats path="net/openhft/chronicle/core/values/StringValue.java" bugCount="0" size="4"/>
    <FileStats path="net/openhft/chronicle/core/values/TwoLongValue.java" bugCount="0" size="43"/>
    <FileStats path="net/openhft/chronicle/core/watcher/ClassifyingWatcherListener.java" bugCount="0" size="28"/>
    <FileStats path="net/openhft/chronicle/core/watcher/FileClassifier.java" bugCount="0" size="2"/>
    <FileStats path="net/openhft/chronicle/core/watcher/FileManager.java" bugCount="0" size="3"/>
    <FileStats path="net/openhft/chronicle/core/watcher/FileSystemWatcher.java" bugCount="2" size="150" bugHash="e37e0fea566a3289f4b9c91e9df83be3"/>
    <FileStats path="net/openhft/chronicle/core/watcher/JMXFileManager.java" bugCount="3" size="36" bugHash="2c95a20787ffbebc6e815b7386945936"/>
    <FileStats path="net/openhft/chronicle/core/watcher/JMXFileManagerMBean.java" bugCount="0" size="3"/>
    <FileStats path="net/openhft/chronicle/core/watcher/PlainFileClassifier.java" bugCount="0" size="8"/>
    <FileStats path="net/openhft/chronicle/core/watcher/PlainFileManager.java" bugCount="0" size="21"/>
    <FileStats path="net/openhft/chronicle/core/watcher/PlainFileManagerMBean.java" bugCount="0" size="3"/>
    <FileStats path="net/openhft/chronicle/core/watcher/WatcherListener.java" bugCount="0" size="3"/>
    <PackageStats package="net.openhft.chronicle.core" total_bugs="25" total_types="22" total_size="2058" priority_3="9" priority_2="8" priority_1="8">
      <ClassStats class="net.openhft.chronicle.core.ClassLocal" sourceFile="ClassLocal.java" interface="false" size="10" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.ClassMetrics" sourceFile="ClassMetrics.java" interface="false" size="21" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.CleaningRandomAccessFile" sourceFile="CleaningRandomAccessFile.java" interface="false" size="11" bugs="2" priority_2="2"/>
      <ClassStats class="net.openhft.chronicle.core.FlakyTestRunner" sourceFile="FlakyTestRunner.java" interface="false" size="29" bugs="1" priority_1="1"/>
      <ClassStats class="net.openhft.chronicle.core.FlakyTestRunner$RunnableThrows" sourceFile="FlakyTestRunner.java" interface="true" size="2" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.Jvm" sourceFile="Jvm.java" interface="false" size="638" bugs="11" priority_3="6" priority_2="3" priority_1="2"/>
      <ClassStats class="net.openhft.chronicle.core.Jvm$1" sourceFile="Jvm.java" interface="false" size="12" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.Jvm$ChainedSignalHandler" sourceFile="Jvm.java" interface="false" size="14" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.Jvm$CommonInterruptible" sourceFile="Jvm.java" interface="false" size="23" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.Jvm$Safepoint" sourceFile="Jvm.java" interface="false" size="9" bugs="1" priority_2="1"/>
      <ClassStats class="net.openhft.chronicle.core.LicenceCheck" sourceFile="LicenceCheck.java" interface="true" size="33" bugs="1" priority_1="1"/>
      <ClassStats class="net.openhft.chronicle.core.Maths" sourceFile="Maths.java" interface="false" size="222" bugs="1" priority_1="1"/>
      <ClassStats class="net.openhft.chronicle.core.Memory" sourceFile="Memory.java" interface="true" size="83" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.Mocker" sourceFile="Mocker.java" interface="false" size="44" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.Mocker$1" sourceFile="Mocker.java" interface="false" size="10" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.Mocker$2" sourceFile="Mocker.java" interface="false" size="5" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.OS" sourceFile="OS.java" interface="false" size="267" bugs="5" priority_3="1" priority_2="1" priority_1="3"/>
      <ClassStats class="net.openhft.chronicle.core.OS$Unmapper" sourceFile="OS.java" interface="false" size="21" bugs="1" priority_3="1"/>
      <ClassStats class="net.openhft.chronicle.core.StackTrace" sourceFile="StackTrace.java" interface="false" size="19" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.UnresolvedType" sourceFile="UnresolvedType.java" interface="false" size="12" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.UnsafeMemory" sourceFile="UnsafeMemory.java" interface="false" size="403" bugs="2" priority_3="1" priority_2="1"/>
      <ClassStats class="net.openhft.chronicle.core.UnsafeMemory$ARMMemory" sourceFile="UnsafeMemory.java" interface="false" size="170" bugs="0"/>
    </PackageStats>
    <PackageStats package="net.openhft.chronicle.core.analytics" total_bugs="0" total_types="2" total_size="39">
      <ClassStats class="net.openhft.chronicle.core.analytics.AnalyticsFacade" sourceFile="AnalyticsFacade.java" interface="true" size="29" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.analytics.AnalyticsFacade$Builder" sourceFile="AnalyticsFacade.java" interface="true" size="10" bugs="0"/>
    </PackageStats>
    <PackageStats package="net.openhft.chronicle.core.annotation" total_bugs="0" total_types="9" total_size="15">
      <ClassStats class="net.openhft.chronicle.core.annotation.DontChain" sourceFile="DontChain.java" interface="true" size="1" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.annotation.ForceInline" sourceFile="ForceInline.java" interface="true" size="1" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.annotation.HotMethod" sourceFile="HotMethod.java" interface="true" size="2" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.annotation.Java9" sourceFile="Java9.java" interface="true" size="1" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.annotation.PackageLocal" sourceFile="PackageLocal.java" interface="true" size="1" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.annotation.RequiredForClient" sourceFile="RequiredForClient.java" interface="true" size="2" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.annotation.SingleThreaded" sourceFile="SingleThreaded.java" interface="true" size="1" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.annotation.TargetMajorVersion" sourceFile="TargetMajorVersion.java" interface="true" size="5" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.annotation.UsedViaReflection" sourceFile="UsedViaReflection.java" interface="true" size="1" bugs="0"/>
    </PackageStats>
    <PackageStats package="net.openhft.chronicle.core.announcer" total_bugs="0" total_types="1" total_size="15">
      <ClassStats class="net.openhft.chronicle.core.announcer.Announcer" sourceFile="Announcer.java" interface="false" size="15" bugs="0"/>
    </PackageStats>
    <PackageStats package="net.openhft.chronicle.core.cleaner" total_bugs="0" total_types="1" total_size="36">
      <ClassStats class="net.openhft.chronicle.core.cleaner.CleanerServiceLocator" sourceFile="CleanerServiceLocator.java" interface="false" size="36" bugs="0"/>
    </PackageStats>
    <PackageStats package="net.openhft.chronicle.core.cleaner.impl.jdk8" total_bugs="0" total_types="1" total_size="9">
      <ClassStats class="net.openhft.chronicle.core.cleaner.impl.jdk8.Jdk8ByteBufferCleanerService" sourceFile="Jdk8ByteBufferCleanerService.java" interface="false" size="9" bugs="0"/>
    </PackageStats>
    <PackageStats package="net.openhft.chronicle.core.cleaner.impl.jdk9" total_bugs="0" total_types="1" total_size="21">
      <ClassStats class="net.openhft.chronicle.core.cleaner.impl.jdk9.Jdk9ByteBufferCleanerService" sourceFile="Jdk9ByteBufferCleanerService.java" interface="false" size="21" bugs="0"/>
    </PackageStats>
    <PackageStats package="net.openhft.chronicle.core.cleaner.impl.reflect" total_bugs="1" total_types="1" total_size="39" priority_3="1">
      <ClassStats class="net.openhft.chronicle.core.cleaner.impl.reflect.ReflectionBasedByteBufferCleanerService" sourceFile="ReflectionBasedByteBufferCleanerService.java" interface="false" size="39" bugs="1" priority_3="1"/>
    </PackageStats>
    <PackageStats package="net.openhft.chronicle.core.cleaner.spi" total_bugs="0" total_types="2" total_size="16">
      <ClassStats class="net.openhft.chronicle.core.cleaner.spi.ByteBufferCleanerService" sourceFile="ByteBufferCleanerService.java" interface="true" size="3" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.cleaner.spi.ByteBufferCleanerService$Impact" sourceFile="ByteBufferCleanerService.java" interface="false" size="13" bugs="0"/>
    </PackageStats>
    <PackageStats package="net.openhft.chronicle.core.cooler" total_bugs="2" total_types="24" total_size="307" priority_3="2">
      <ClassStats class="net.openhft.chronicle.core.cooler.CoolerTester" sourceFile="CoolerTester.java" interface="false" size="107" bugs="1" priority_3="1"/>
      <ClassStats class="net.openhft.chronicle.core.cooler.CpuCooler" sourceFile="CpuCooler.java" interface="true" size="2" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.cooler.CpuCoolers" sourceFile="CpuCoolers.java" interface="false" size="59" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.cooler.CpuCoolers$1" sourceFile="CpuCoolers.java" interface="false" size="6" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.cooler.CpuCoolers$10" sourceFile="CpuCoolers.java" interface="false" size="6" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.cooler.CpuCoolers$11" sourceFile="CpuCoolers.java" interface="false" size="6" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.cooler.CpuCoolers$12" sourceFile="CpuCoolers.java" interface="false" size="6" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.cooler.CpuCoolers$13" sourceFile="CpuCoolers.java" interface="false" size="6" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.cooler.CpuCoolers$14" sourceFile="CpuCoolers.java" interface="false" size="6" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.cooler.CpuCoolers$15" sourceFile="CpuCoolers.java" interface="false" size="6" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.cooler.CpuCoolers$16" sourceFile="CpuCoolers.java" interface="false" size="6" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.cooler.CpuCoolers$17" sourceFile="CpuCoolers.java" interface="false" size="6" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.cooler.CpuCoolers$18" sourceFile="CpuCoolers.java" interface="false" size="8" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.cooler.CpuCoolers$19" sourceFile="CpuCoolers.java" interface="false" size="11" bugs="1" priority_3="1"/>
      <ClassStats class="net.openhft.chronicle.core.cooler.CpuCoolers$2" sourceFile="CpuCoolers.java" interface="false" size="6" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.cooler.CpuCoolers$20" sourceFile="CpuCoolers.java" interface="false" size="10" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.cooler.CpuCoolers$21" sourceFile="CpuCoolers.java" interface="false" size="8" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.cooler.CpuCoolers$3" sourceFile="CpuCoolers.java" interface="false" size="6" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.cooler.CpuCoolers$4" sourceFile="CpuCoolers.java" interface="false" size="6" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.cooler.CpuCoolers$5" sourceFile="CpuCoolers.java" interface="false" size="6" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.cooler.CpuCoolers$6" sourceFile="CpuCoolers.java" interface="false" size="6" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.cooler.CpuCoolers$7" sourceFile="CpuCoolers.java" interface="false" size="6" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.cooler.CpuCoolers$8" sourceFile="CpuCoolers.java" interface="false" size="6" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.cooler.CpuCoolers$9" sourceFile="CpuCoolers.java" interface="false" size="6" bugs="0"/>
    </PackageStats>
    <PackageStats package="net.openhft.chronicle.core.internal.analytics" total_bugs="0" total_types="7" total_size="254">
      <ClassStats class="net.openhft.chronicle.core.internal.analytics.MuteAnalytics" sourceFile="MuteAnalytics.java" interface="false" size="15" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.internal.analytics.MuteBuilder" sourceFile="MuteBuilder.java" interface="false" size="36" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.internal.analytics.ReflectionUtil" sourceFile="ReflectionUtil.java" interface="false" size="40" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.internal.analytics.ReflectionUtil$ReflectiveInvocationHandler" sourceFile="ReflectionUtil.java" interface="false" size="20" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.internal.analytics.ReflectiveAnalytics" sourceFile="ReflectiveAnalytics.java" interface="false" size="13" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.internal.analytics.ReflectiveBuilder" sourceFile="ReflectiveBuilder.java" interface="false" size="54" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.internal.analytics.StandardMaps" sourceFile="StandardMaps.java" interface="false" size="76" bugs="0"/>
    </PackageStats>
    <PackageStats package="net.openhft.chronicle.core.internal.announcer" total_bugs="0" total_types="1" total_size="72">
      <ClassStats class="net.openhft.chronicle.core.internal.announcer.InternalAnnouncer" sourceFile="InternalAnnouncer.java" interface="false" size="72" bugs="0"/>
    </PackageStats>
    <PackageStats package="net.openhft.chronicle.core.internal.pom" total_bugs="1" total_types="1" total_size="27" priority_3="1">
      <ClassStats class="net.openhft.chronicle.core.internal.pom.InternalPomProperties" sourceFile="InternalPomProperties.java" interface="false" size="27" bugs="1" priority_3="1"/>
    </PackageStats>
    <PackageStats package="net.openhft.chronicle.core.io" total_bugs="21" total_types="25" total_size="1301" priority_3="8" priority_2="13">
      <ClassStats class="net.openhft.chronicle.core.io.AbstractCloseable" sourceFile="AbstractCloseable.java" interface="false" size="164" bugs="2" priority_3="1" priority_2="1"/>
      <ClassStats class="net.openhft.chronicle.core.io.AbstractCloseableReferenceCounted" sourceFile="AbstractCloseableReferenceCounted.java" interface="false" size="56" bugs="1" priority_3="1"/>
      <ClassStats class="net.openhft.chronicle.core.io.AbstractReferenceCounted" sourceFile="AbstractReferenceCounted.java" interface="false" size="115" bugs="6" priority_3="5" priority_2="1"/>
      <ClassStats class="net.openhft.chronicle.core.io.BackgroundResourceReleaser" sourceFile="BackgroundResourceReleaser.java" interface="false" size="69" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.io.Closeable" sourceFile="Closeable.java" interface="true" size="25" bugs="1" priority_2="1"/>
      <ClassStats class="net.openhft.chronicle.core.io.CloseableTracer" sourceFile="CloseableTracer.java" interface="true" size="2" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.io.ClosedIllegalStateException" sourceFile="ClosedIllegalStateException.java" interface="false" size="7" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.io.ClosedState" sourceFile="ClosedState.java" interface="true" size="2" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.io.DualReferenceCounted" sourceFile="DualReferenceCounted.java" interface="false" size="81" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.io.IORuntimeException" sourceFile="IORuntimeException.java" interface="false" size="10" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.io.IOTools" sourceFile="IOTools.java" interface="false" size="179" bugs="2" priority_3="1" priority_2="1"/>
      <ClassStats class="net.openhft.chronicle.core.io.MonitorReferenceCounted" sourceFile="MonitorReferenceCounted.java" interface="true" size="1" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.io.QueryCloseable" sourceFile="QueryCloseable.java" interface="true" size="8" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.io.QueryCloseables" sourceFile="QueryCloseables.java" interface="false" size="11" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.io.QueryCloseables$1" sourceFile="QueryCloseables.java" interface="false" size="5" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.io.ReferenceCounted" sourceFile="ReferenceCounted.java" interface="true" size="14" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.io.ReferenceCountedTracer" sourceFile="ReferenceCountedTracer.java" interface="true" size="14" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.io.ReferenceOwner" sourceFile="ReferenceOwner.java" interface="true" size="10" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.io.Resettable" sourceFile="Resettable.java" interface="true" size="2" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.io.SimpleCloseable" sourceFile="SimpleCloseable.java" interface="false" size="15" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.io.TracingReferenceCounted" sourceFile="TracingReferenceCounted.java" interface="false" size="154" bugs="1" priority_2="1"/>
      <ClassStats class="net.openhft.chronicle.core.io.UnsafeCloseable" sourceFile="UnsafeCloseable.java" interface="false" size="67" bugs="8" priority_2="8"/>
      <ClassStats class="net.openhft.chronicle.core.io.UnsafeText" sourceFile="UnsafeText.java" interface="false" size="196" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.io.VanillaReferenceCounted" sourceFile="VanillaReferenceCounted.java" interface="false" size="82" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.io.VanillaReferenceOwner" sourceFile="VanillaReferenceOwner.java" interface="false" size="12" bugs="0"/>
    </PackageStats>
    <PackageStats package="net.openhft.chronicle.core.onoes" total_bugs="7" total_types="20" total_size="316" priority_3="3" priority_2="4">
      <ClassStats class="net.openhft.chronicle.core.onoes.ChainedExceptionHandler" sourceFile="ChainedExceptionHandler.java" interface="false" size="10" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.onoes.ExceptionHandler" sourceFile="ExceptionHandler.java" interface="true" size="16" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.onoes.ExceptionKey" sourceFile="ExceptionKey.java" interface="false" size="31" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.onoes.GoogleExceptionHandler" sourceFile="GoogleExceptionHandler.java" interface="false" size="7" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.onoes.LogLevel" sourceFile="LogLevel.java" interface="false" size="17" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.onoes.NullExceptionHandler" sourceFile="NullExceptionHandler.java" interface="false" size="10" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.onoes.NullExceptionHandler$1" sourceFile="NullExceptionHandler.java" interface="false" size="7" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.onoes.PrintExceptionHandler" sourceFile="PrintExceptionHandler.java" interface="false" size="28" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.onoes.PrintExceptionHandler$1" sourceFile="PrintExceptionHandler.java" interface="false" size="6" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.onoes.PrintExceptionHandler$2" sourceFile="PrintExceptionHandler.java" interface="false" size="6" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.onoes.RecordingExceptionHandler" sourceFile="RecordingExceptionHandler.java" interface="false" size="21" bugs="1" priority_2="1"/>
      <ClassStats class="net.openhft.chronicle.core.onoes.Slf4jExceptionHandler" sourceFile="Slf4jExceptionHandler.java" interface="false" size="34" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.onoes.Slf4jExceptionHandler$1" sourceFile="Slf4jExceptionHandler.java" interface="false" size="8" bugs="1" priority_2="1"/>
      <ClassStats class="net.openhft.chronicle.core.onoes.Slf4jExceptionHandler$2" sourceFile="Slf4jExceptionHandler.java" interface="false" size="6" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.onoes.Slf4jExceptionHandler$3" sourceFile="Slf4jExceptionHandler.java" interface="false" size="6" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.onoes.Slf4jExceptionHandler$4" sourceFile="Slf4jExceptionHandler.java" interface="false" size="6" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.onoes.Slf4jExceptionHandler$5" sourceFile="Slf4jExceptionHandler.java" interface="false" size="8" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.onoes.StackoverflowExceptionHandler" sourceFile="StackoverflowExceptionHandler.java" interface="false" size="7" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.onoes.ThreadLocalisedExceptionHandler" sourceFile="ThreadLocalisedExceptionHandler.java" interface="false" size="41" bugs="1" priority_3="1"/>
      <ClassStats class="net.openhft.chronicle.core.onoes.WebExceptionHandler" sourceFile="WebExceptionHandler.java" interface="false" size="41" bugs="4" priority_3="2" priority_2="2"/>
    </PackageStats>
    <PackageStats package="net.openhft.chronicle.core.pom" total_bugs="0" total_types="1" total_size="7">
      <ClassStats class="net.openhft.chronicle.core.pom.PomProperties" sourceFile="PomProperties.java" interface="false" size="7" bugs="0"/>
    </PackageStats>
    <PackageStats package="net.openhft.chronicle.core.pool" total_bugs="6" total_types="11" total_size="417" priority_3="1" priority_2="5">
      <ClassStats class="net.openhft.chronicle.core.pool.ClassAliasPool" sourceFile="ClassAliasPool.java" interface="false" size="141" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.pool.ClassAliasPool$CAPKey" sourceFile="ClassAliasPool.java" interface="false" size="37" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.pool.ClassLookup" sourceFile="ClassLookup.java" interface="true" size="13" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.pool.DynamicEnumClass" sourceFile="DynamicEnumClass.java" interface="false" size="63" bugs="3" priority_3="1" priority_2="2"/>
      <ClassStats class="net.openhft.chronicle.core.pool.EnumCache" sourceFile="EnumCache.java" interface="false" size="23" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.pool.EnumInterner" sourceFile="EnumInterner.java" interface="false" size="30" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.pool.ParsingCache" sourceFile="ParsingCache.java" interface="false" size="35" bugs="1" priority_2="1"/>
      <ClassStats class="net.openhft.chronicle.core.pool.ParsingCache$ParsedData" sourceFile="ParsingCache.java" interface="false" size="8" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.pool.StaticEnumClass" sourceFile="StaticEnumClass.java" interface="false" size="22" bugs="1" priority_2="1"/>
      <ClassStats class="net.openhft.chronicle.core.pool.StringBuilderPool" sourceFile="StringBuilderPool.java" interface="false" size="11" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.pool.StringInterner" sourceFile="StringInterner.java" interface="false" size="34" bugs="1" priority_2="1"/>
    </PackageStats>
    <PackageStats package="net.openhft.chronicle.core.threads" total_bugs="9" total_types="21" total_size="631" priority_3="4" priority_2="5">
      <ClassStats class="net.openhft.chronicle.core.threads.CleaningThread" sourceFile="CleaningThread.java" interface="false" size="46" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.threads.CleaningThreadLocal" sourceFile="CleaningThreadLocal.java" interface="false" size="35" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.threads.EventHandler" sourceFile="EventHandler.java" interface="true" size="9" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.threads.EventLoop" sourceFile="EventLoop.java" interface="true" size="12" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.threads.HandlerPriority" sourceFile="HandlerPriority.java" interface="false" size="26" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.threads.HandlerPriority$1" sourceFile="HandlerPriority.java" interface="false" size="5" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.threads.HandlerPriority$2" sourceFile="HandlerPriority.java" interface="false" size="5" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.threads.InvalidEventHandlerException" sourceFile="InvalidEventHandlerException.java" interface="false" size="15" bugs="1" priority_2="1"/>
      <ClassStats class="net.openhft.chronicle.core.threads.InvalidEventHandlerException$ReusableInvalidEventHandlerException" sourceFile="InvalidEventHandlerException.java" interface="false" size="11" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.threads.JitterSampler" sourceFile="JitterSampler.java" interface="false" size="58" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.threads.MonitorProfileAnalyserMain" sourceFile="MonitorProfileAnalyserMain.java" interface="false" size="83" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.threads.OnDemandEventLoop" sourceFile="OnDemandEventLoop.java" interface="false" size="47" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.threads.StackSampler" sourceFile="StackSampler.java" interface="false" size="33" bugs="4" priority_3="3" priority_2="1"/>
      <ClassStats class="net.openhft.chronicle.core.threads.ThreadDump" sourceFile="ThreadDump.java" interface="false" size="68" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.threads.ThreadHints" sourceFile="ThreadHints.java" interface="false" size="7" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.threads.ThreadLocalHelper" sourceFile="ThreadLocalHelper.java" interface="false" size="31" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.threads.ThreadLocalProperties" sourceFile="ThreadLocalProperties.java" interface="false" size="82" bugs="3" priority_3="1" priority_2="2"/>
      <ClassStats class="net.openhft.chronicle.core.threads.Timer" sourceFile="Timer.java" interface="false" size="15" bugs="1" priority_2="1"/>
      <ClassStats class="net.openhft.chronicle.core.threads.Timer$1" sourceFile="Timer.java" interface="false" size="1" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.threads.Timer$ScheduledEventHandler" sourceFile="Timer.java" interface="false" size="40" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.threads.VanillaEventHandler" sourceFile="VanillaEventHandler.java" interface="true" size="2" bugs="0"/>
    </PackageStats>
    <PackageStats package="net.openhft.chronicle.core.time" total_bugs="2" total_types="9" total_size="257" priority_3="2">
      <ClassStats class="net.openhft.chronicle.core.time.Differencer" sourceFile="Differencer.java" interface="true" size="2" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.time.LongTime" sourceFile="LongTime.java" interface="false" size="61" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.time.RunningMinimum" sourceFile="RunningMinimum.java" interface="false" size="26" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.time.SetTimeProvider" sourceFile="SetTimeProvider.java" interface="false" size="56" bugs="1" priority_3="1"/>
      <ClassStats class="net.openhft.chronicle.core.time.SystemTimeProvider" sourceFile="SystemTimeProvider.java" interface="false" size="47" bugs="1" priority_3="1"/>
      <ClassStats class="net.openhft.chronicle.core.time.TimeProvider" sourceFile="TimeProvider.java" interface="true" size="12" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.time.TimeProvider$1" sourceFile="TimeProvider.java" interface="false" size="4" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.time.UniqueMicroTimeProvider" sourceFile="UniqueMicroTimeProvider.java" interface="false" size="44" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.time.VanillaDifferencer" sourceFile="VanillaDifferencer.java" interface="false" size="5" bugs="0"/>
    </PackageStats>
    <PackageStats package="net.openhft.chronicle.core.util" total_bugs="17" total_types="54" total_size="1428" priority_3="7" priority_2="8" priority_1="2">
      <ClassStats class="net.openhft.chronicle.core.util.AbstractInvocationHandler" sourceFile="AbstractInvocationHandler.java" interface="false" size="50" bugs="3" priority_3="1" priority_2="2"/>
      <ClassStats class="net.openhft.chronicle.core.util.Annotations" sourceFile="Annotations.java" interface="false" size="29" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.util.BooleanConsumer" sourceFile="BooleanConsumer.java" interface="true" size="9" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.util.Builder" sourceFile="Builder.java" interface="true" size="4" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.util.ByteBuffers" sourceFile="ByteBuffers.java" interface="false" size="21" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.util.ByteConsumer" sourceFile="ByteConsumer.java" interface="true" size="9" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.util.CharConsumer" sourceFile="CharConsumer.java" interface="true" size="9" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.util.CharSequenceComparator" sourceFile="CharSequenceComparator.java" interface="false" size="22" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.util.CharToBooleanFunction" sourceFile="CharToBooleanFunction.java" interface="true" size="2" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.util.CoreDynamicEnum" sourceFile="CoreDynamicEnum.java" interface="true" size="3" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.util.FloatConsumer" sourceFile="FloatConsumer.java" interface="true" size="9" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.util.Histogram" sourceFile="Histogram.java" interface="false" size="215" bugs="2" priority_2="1" priority_1="1"/>
      <ClassStats class="net.openhft.chronicle.core.util.InvocationTargetRuntimeException" sourceFile="InvocationTargetRuntimeException.java" interface="false" size="4" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.util.NanoSampler" sourceFile="NanoSampler.java" interface="true" size="2" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.util.ObjBooleanConsumer" sourceFile="ObjBooleanConsumer.java" interface="true" size="2" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.util.ObjByteConsumer" sourceFile="ObjByteConsumer.java" interface="true" size="2" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.util.ObjCharConsumer" sourceFile="ObjCharConsumer.java" interface="true" size="2" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.util.ObjFloatConsumer" sourceFile="ObjFloatConsumer.java" interface="true" size="2" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.util.ObjShortConsumer" sourceFile="ObjShortConsumer.java" interface="true" size="2" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.util.ObjectUtils" sourceFile="ObjectUtils.java" interface="false" size="344" bugs="4" priority_3="2" priority_2="1" priority_1="1"/>
      <ClassStats class="net.openhft.chronicle.core.util.ObjectUtils$1" sourceFile="ObjectUtils.java" interface="false" size="13" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.util.ObjectUtils$2" sourceFile="ObjectUtils.java" interface="false" size="8" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.util.ObjectUtils$ConversionFunction" sourceFile="ObjectUtils.java" interface="false" size="28" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.util.ObjectUtils$Immutability" sourceFile="ObjectUtils.java" interface="false" size="11" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.util.ReadResolvable" sourceFile="ReadResolvable.java" interface="true" size="6" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.util.SerializableBiFunction" sourceFile="SerializableBiFunction.java" interface="true" size="1" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.util.SerializableConsumer" sourceFile="SerializableConsumer.java" interface="true" size="1" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.util.SerializableFunction" sourceFile="SerializableFunction.java" interface="true" size="1" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.util.SerializablePredicate" sourceFile="SerializablePredicate.java" interface="true" size="1" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.util.SerializableUpdater" sourceFile="SerializableUpdater.java" interface="true" size="1" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.util.SerializableUpdaterWithArg" sourceFile="SerializableUpdaterWithArg.java" interface="true" size="2" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.util.ShortConsumer" sourceFile="ShortConsumer.java" interface="true" size="9" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.util.SimpleCleaner" sourceFile="SimpleCleaner.java" interface="false" size="16" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.util.StringUtils" sourceFile="StringUtils.java" interface="false" size="352" bugs="6" priority_3="3" priority_2="3"/>
      <ClassStats class="net.openhft.chronicle.core.util.ThreadIndexAssigner" sourceFile="ThreadIndexAssigner.java" interface="false" size="28" bugs="1" priority_2="1"/>
      <ClassStats class="net.openhft.chronicle.core.util.ThrowingBiConsumer" sourceFile="ThrowingBiConsumer.java" interface="true" size="10" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.util.ThrowingBiFunction" sourceFile="ThrowingBiFunction.java" interface="true" size="8" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.util.ThrowingCallable" sourceFile="ThrowingCallable.java" interface="true" size="2" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.util.ThrowingConsumer" sourceFile="ThrowingConsumer.java" interface="true" size="10" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.util.ThrowingConsumerNonCapturing" sourceFile="ThrowingConsumerNonCapturing.java" interface="true" size="2" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.util.ThrowingFunction" sourceFile="ThrowingFunction.java" interface="true" size="8" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.util.ThrowingRunnable" sourceFile="ThrowingRunnable.java" interface="true" size="2" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.util.ThrowingSupplier" sourceFile="ThrowingSupplier.java" interface="true" size="8" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.util.ThrowingTriFunction" sourceFile="ThrowingTriFunction.java" interface="true" size="2" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.util.Time" sourceFile="Time.java" interface="false" size="20" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.util.URIEncoder" sourceFile="URIEncoder.java" interface="false" size="28" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.util.Updater" sourceFile="Updater.java" interface="true" size="5" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.util.WeakIdentityHashMap" sourceFile="WeakIdentityHashMap.java" interface="false" size="26" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.util.WeakIdentityHashMap$1" sourceFile="WeakIdentityHashMap.java" interface="false" size="8" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.util.WeakIdentityHashMap$1$1" sourceFile="WeakIdentityHashMap.java" interface="false" size="21" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.util.WeakIdentityHashMap$2" sourceFile="WeakIdentityHashMap.java" interface="false" size="9" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.util.WeakIdentityHashMap$2$1" sourceFile="WeakIdentityHashMap.java" interface="false" size="13" bugs="1" priority_3="1"/>
      <ClassStats class="net.openhft.chronicle.core.util.WeakIdentityHashMap$2$1$1" sourceFile="WeakIdentityHashMap.java" interface="false" size="12" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.util.WeakIdentityHashMap$WeakKey" sourceFile="WeakIdentityHashMap.java" interface="false" size="14" bugs="0"/>
    </PackageStats>
    <PackageStats package="net.openhft.chronicle.core.values" total_bugs="0" total_types="13" total_size="143">
      <ClassStats class="net.openhft.chronicle.core.values.BooleanValue" sourceFile="BooleanValue.java" interface="true" size="3" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.values.ByteValue" sourceFile="ByteValue.java" interface="true" size="4" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.values.CharValue" sourceFile="CharValue.java" interface="true" size="3" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.values.DoubleValue" sourceFile="DoubleValue.java" interface="true" size="7" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.values.FloatValue" sourceFile="FloatValue.java" interface="true" size="7" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.values.IntArrayValues" sourceFile="IntArrayValues.java" interface="true" size="13" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.values.IntValue" sourceFile="IntValue.java" interface="true" size="8" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.values.LongArrayValues" sourceFile="LongArrayValues.java" interface="true" size="16" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.values.LongValue" sourceFile="LongValue.java" interface="true" size="29" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.values.MaxBytes" sourceFile="MaxBytes.java" interface="true" size="2" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.values.ShortValue" sourceFile="ShortValue.java" interface="true" size="4" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.values.StringValue" sourceFile="StringValue.java" interface="true" size="4" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.values.TwoLongValue" sourceFile="TwoLongValue.java" interface="true" size="43" bugs="0"/>
    </PackageStats>
    <PackageStats package="net.openhft.chronicle.core.watcher" total_bugs="5" total_types="11" total_size="257" priority_3="3" priority_2="2">
      <ClassStats class="net.openhft.chronicle.core.watcher.ClassifyingWatcherListener" sourceFile="ClassifyingWatcherListener.java" interface="false" size="28" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.watcher.FileClassifier" sourceFile="FileClassifier.java" interface="true" size="2" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.watcher.FileManager" sourceFile="FileManager.java" interface="true" size="3" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.watcher.FileSystemWatcher" sourceFile="FileSystemWatcher.java" interface="false" size="140" bugs="2" priority_3="1" priority_2="1"/>
      <ClassStats class="net.openhft.chronicle.core.watcher.FileSystemWatcher$PathInfo" sourceFile="FileSystemWatcher.java" interface="false" size="10" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.watcher.JMXFileManager" sourceFile="JMXFileManager.java" interface="false" size="36" bugs="3" priority_3="2" priority_2="1"/>
      <ClassStats class="net.openhft.chronicle.core.watcher.JMXFileManagerMBean" sourceFile="JMXFileManagerMBean.java" interface="true" size="3" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.watcher.PlainFileClassifier" sourceFile="PlainFileClassifier.java" interface="false" size="8" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.watcher.PlainFileManager" sourceFile="PlainFileManager.java" interface="false" size="21" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.watcher.PlainFileManagerMBean" sourceFile="PlainFileManagerMBean.java" interface="true" size="3" bugs="0"/>
      <ClassStats class="net.openhft.chronicle.core.watcher.WatcherListener" sourceFile="WatcherListener.java" interface="true" size="3" bugs="0"/>
    </PackageStats>
    <FindBugsProfile>
      <ClassProfile name="edu.umd.cs.findbugs.classfile.engine.ClassInfoAnalysisEngine" totalMilliseconds="460" invocations="1874" avgMicrosecondsPerInvocation="245" maxMicrosecondsPerInvocation="36958" standardDeviationMicrosecondsPerInvocation="1028"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.FieldItemSummary" totalMilliseconds="278" invocations="612" avgMicrosecondsPerInvocation="455" maxMicrosecondsPerInvocation="28331" standardDeviationMicrosecondsPerInvocation="1462"/>
      <ClassProfile name="edu.umd.cs.findbugs.classfile.engine.bcel.TypeDataflowFactory" totalMilliseconds="262" invocations="1468" avgMicrosecondsPerInvocation="179" maxMicrosecondsPerInvocation="34987" standardDeviationMicrosecondsPerInvocation="1126"/>
      <ClassProfile name="edu.umd.cs.findbugs.classfile.engine.bcel.IsNullValueDataflowFactory" totalMilliseconds="259" invocations="1401" avgMicrosecondsPerInvocation="184" maxMicrosecondsPerInvocation="19740" standardDeviationMicrosecondsPerInvocation="834"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.FindNoSideEffectMethods" totalMilliseconds="232" invocations="612" avgMicrosecondsPerInvocation="380" maxMicrosecondsPerInvocation="8526" standardDeviationMicrosecondsPerInvocation="770"/>
      <ClassProfile name="edu.umd.cs.findbugs.classfile.engine.bcel.ValueNumberDataflowFactory" totalMilliseconds="212" invocations="1477" avgMicrosecondsPerInvocation="143" maxMicrosecondsPerInvocation="29318" standardDeviationMicrosecondsPerInvocation="835"/>
      <ClassProfile name="edu.umd.cs.findbugs.classfile.engine.bcel.CFGFactory" totalMilliseconds="182" invocations="1401" avgMicrosecondsPerInvocation="130" maxMicrosecondsPerInvocation="38132" standardDeviationMicrosecondsPerInvocation="1073"/>
      <ClassProfile name="edu.umd.cs.findbugs.ba.npe.NullDerefAndRedundantComparisonFinder" totalMilliseconds="181" invocations="1391" avgMicrosecondsPerInvocation="130" maxMicrosecondsPerInvocation="11283" standardDeviationMicrosecondsPerInvocation="404"/>
      <ClassProfile name="edu.umd.cs.findbugs.OpcodeStack$JumpInfoFactory" totalMilliseconds="180" invocations="2469" avgMicrosecondsPerInvocation="73" maxMicrosecondsPerInvocation="2184" standardDeviationMicrosecondsPerInvocation="147"/>
      <ClassProfile name="edu.umd.cs.findbugs.classfile.engine.bcel.UnconditionalValueDerefDataflowFactory" totalMilliseconds="166" invocations="1396" avgMicrosecondsPerInvocation="119" maxMicrosecondsPerInvocation="6858" standardDeviationMicrosecondsPerInvocation="365"/>
      <ClassProfile name="edu.umd.cs.findbugs.classfile.engine.bcel.JavaClassAnalysisEngine" totalMilliseconds="139" invocations="723" avgMicrosecondsPerInvocation="192" maxMicrosecondsPerInvocation="60109" standardDeviationMicrosecondsPerInvocation="2243"/>
      <ClassProfile name="edu.umd.cs.findbugs.classfile.engine.bcel.MethodGenFactory" totalMilliseconds="120" invocations="1649" avgMicrosecondsPerInvocation="73" maxMicrosecondsPerInvocation="46051" standardDeviationMicrosecondsPerInvocation="1154"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.FindRefComparison$SpecialTypeAnalysis" totalMilliseconds="116" invocations="1250" avgMicrosecondsPerInvocation="92" maxMicrosecondsPerInvocation="7491" standardDeviationMicrosecondsPerInvocation="270"/>
      <ClassProfile name="edu.umd.cs.findbugs.classfile.engine.ClassDataAnalysisEngine" totalMilliseconds="105" invocations="1881" avgMicrosecondsPerInvocation="56" maxMicrosecondsPerInvocation="9935" standardDeviationMicrosecondsPerInvocation="327"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.NoteDirectlyRelevantTypeQualifiers" totalMilliseconds="102" invocations="612" avgMicrosecondsPerInvocation="168" maxMicrosecondsPerInvocation="10323" standardDeviationMicrosecondsPerInvocation="583"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.EqualsOperandShouldHaveClassCompatibleWithThis" totalMilliseconds="77" invocations="612" avgMicrosecondsPerInvocation="126" maxMicrosecondsPerInvocation="46559" standardDeviationMicrosecondsPerInvocation="1882"/>
      <ClassProfile name="edu.umd.cs.findbugs.classfile.engine.bcel.ConstantDataflowFactory" totalMilliseconds="74" invocations="1401" avgMicrosecondsPerInvocation="53" maxMicrosecondsPerInvocation="7040" standardDeviationMicrosecondsPerInvocation="241"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.OverridingEqualsNotSymmetrical" totalMilliseconds="74" invocations="612" avgMicrosecondsPerInvocation="121" maxMicrosecondsPerInvocation="27035" standardDeviationMicrosecondsPerInvocation="1101"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.FunctionsThatMightBeMistakenForProcedures" totalMilliseconds="74" invocations="612" avgMicrosecondsPerInvocation="120" maxMicrosecondsPerInvocation="7552" standardDeviationMicrosecondsPerInvocation="483"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.BuildObligationPolicyDatabase" totalMilliseconds="62" invocations="612" avgMicrosecondsPerInvocation="101" maxMicrosecondsPerInvocation="6949" standardDeviationMicrosecondsPerInvocation="326"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.CalledMethods" totalMilliseconds="57" invocations="612" avgMicrosecondsPerInvocation="94" maxMicrosecondsPerInvocation="1828" standardDeviationMicrosecondsPerInvocation="190"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.ConstructorThrow" totalMilliseconds="56" invocations="238" avgMicrosecondsPerInvocation="238" maxMicrosecondsPerInvocation="10028" standardDeviationMicrosecondsPerInvocation="857"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.FindOpenStream" totalMilliseconds="52" invocations="238" avgMicrosecondsPerInvocation="221" maxMicrosecondsPerInvocation="21213" standardDeviationMicrosecondsPerInvocation="1519"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.CheckRelaxingNullnessAnnotation" totalMilliseconds="51" invocations="238" avgMicrosecondsPerInvocation="214" maxMicrosecondsPerInvocation="19899" standardDeviationMicrosecondsPerInvocation="1332"/>
      <ClassProfile name="edu.umd.cs.findbugs.ba.npe.TypeQualifierNullnessAnnotationDatabase" totalMilliseconds="50" invocations="22247" avgMicrosecondsPerInvocation="2" maxMicrosecondsPerInvocation="5803" standardDeviationMicrosecondsPerInvocation="43"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.ExplicitSerialization" totalMilliseconds="46" invocations="612" avgMicrosecondsPerInvocation="76" maxMicrosecondsPerInvocation="8097" standardDeviationMicrosecondsPerInvocation="502"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.UnreadFields" totalMilliseconds="43" invocations="238" avgMicrosecondsPerInvocation="184" maxMicrosecondsPerInvocation="4149" standardDeviationMicrosecondsPerInvocation="368"/>
      <ClassProfile name="edu.umd.cs.findbugs.util.TopologicalSort" totalMilliseconds="41" invocations="1766" avgMicrosecondsPerInvocation="23" maxMicrosecondsPerInvocation="2086" standardDeviationMicrosecondsPerInvocation="71"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.BuildStringPassthruGraph" totalMilliseconds="41" invocations="612" avgMicrosecondsPerInvocation="67" maxMicrosecondsPerInvocation="2860" standardDeviationMicrosecondsPerInvocation="188"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.FindInconsistentSync2" totalMilliseconds="39" invocations="238" avgMicrosecondsPerInvocation="165" maxMicrosecondsPerInvocation="10889" standardDeviationMicrosecondsPerInvocation="749"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.FindDeadLocalStores" totalMilliseconds="38" invocations="238" avgMicrosecondsPerInvocation="160" maxMicrosecondsPerInvocation="3789" standardDeviationMicrosecondsPerInvocation="475"/>
      <ClassProfile name="edu.umd.cs.findbugs.classfile.engine.bcel.LiveLocalStoreDataflowFactory" totalMilliseconds="37" invocations="1321" avgMicrosecondsPerInvocation="28" maxMicrosecondsPerInvocation="2753" standardDeviationMicrosecondsPerInvocation="111"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.ReflectiveClasses" totalMilliseconds="36" invocations="612" avgMicrosecondsPerInvocation="58" maxMicrosecondsPerInvocation="1511" standardDeviationMicrosecondsPerInvocation="133"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.FindUselessObjects" totalMilliseconds="35" invocations="238" avgMicrosecondsPerInvocation="150" maxMicrosecondsPerInvocation="7731" standardDeviationMicrosecondsPerInvocation="581"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.FindBadCast2" totalMilliseconds="33" invocations="238" avgMicrosecondsPerInvocation="141" maxMicrosecondsPerInvocation="11065" standardDeviationMicrosecondsPerInvocation="762"/>
      <ClassProfile name="edu.umd.cs.findbugs.classfile.engine.bcel.ValueRangeAnalysisFactory" totalMilliseconds="33" invocations="1649" avgMicrosecondsPerInvocation="20" maxMicrosecondsPerInvocation="5920" standardDeviationMicrosecondsPerInvocation="204"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.LoadOfKnownNullValue" totalMilliseconds="32" invocations="238" avgMicrosecondsPerInvocation="136" maxMicrosecondsPerInvocation="3076" standardDeviationMicrosecondsPerInvocation="330"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.DumbMethods" totalMilliseconds="30" invocations="238" avgMicrosecondsPerInvocation="127" maxMicrosecondsPerInvocation="2659" standardDeviationMicrosecondsPerInvocation="268"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.MethodReturnCheck" totalMilliseconds="28" invocations="238" avgMicrosecondsPerInvocation="120" maxMicrosecondsPerInvocation="2443" standardDeviationMicrosecondsPerInvocation="286"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.FindRefComparison" totalMilliseconds="28" invocations="238" avgMicrosecondsPerInvocation="120" maxMicrosecondsPerInvocation="2066" standardDeviationMicrosecondsPerInvocation="264"/>
    </FindBugsProfile>
  </FindBugsSummary>
  <ClassFeatures></ClassFeatures>
  <History></History>
</BugCollection>
